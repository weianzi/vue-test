(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["earth"],{"1d3e":function(e,t,r){"use strict";var n=r("784e"),i=r.n(n);i.a},"1f1c":function(e,t,r){"use strict";r.r(t);var n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"chart-earch",attrs:{id:"chartEarch"}})},i=[];function a(e){return a="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function o(e){return o="function"===typeof Symbol&&"symbol"===a(Symbol.iterator)?function(e){return a(e)}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":a(e)},o(e)}r("96cf");var s=r("3040"),l=r("313e"),u=r.n(l),c=(r("7cb2"),r("c54d"),r("e5f8")),h=c.map((function(e){return[e[0],e[1],1]})),d={mounted:function(){var e=Object(s["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:this.initChart();case 1:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),beforeDestroy:function(){this.chart&&(this.chart.dispose(),this.chart=null)},methods:{initChart:function(){var e=document.getElementById("chartEarch"),t=u.a.init(e),r=document.createElement("canvas"),n=u.a.init(r,null,{width:4096,height:2048});n.setOption({visualMap:{show:!1,min:0,max:2e3,inRange:{}},series:[{type:"map",map:"world",top:0,left:0,right:0,bottom:0,boundingCoords:[[-180,90],[180,-90]],label:{show:!1},itemStyle:{borderColor:"#89a9d7",areaColor:"transparent"},emphasis:{label:{show:!1,color:"#fff",fontSize:22},itemStyle:{areaColor:"transparent",borderColor:"#fff"}},data:[]}]});var i={title:{x:"center",y:"70",textStyle:{color:"#f7f7f7"}},globe:{baseTexture:n,displacementScale:.9,light:{ambient:{intensity:1},main:{intensity:.5}},viewControl:{autoRotate:!0,autoRotateAfterStill:1,autoRotateDirection:"ccw",autoRotateSpeed:20,rotateSensitivity:[1,0],zoomSensitivity:0,distance:300}},series:{type:"scatter3D",coordinateSystem:"globe",symbolSize:1,itemStyle:{color:"rgba(137, 169, 215, .3)"},emphasis:{label:{show:!1},itemStyle:{areaColor:"transparent",borderColor:"#fff"}},data:h}};i&&"object"===o(i)&&t.setOption(i,!0),n.on("click",this.handleChartsItem)},handleChartsItem:function(e){console.log(e),e.target}}},f=d,p=(r("1d3e"),r("2877")),m=Object(p["a"])(f,n,i,!1,null,null,null);t["default"]=m.exports},"784e":function(e,t,r){},"7cb2":function(e,t,r){(function(t,n){e.exports=n(r("313e"))})(0,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=106)}([function(t,r){t.exports=e},function(e,t,r){"use strict";var n=r(40),i=r(52),a=r(5),o=r(4),s=r(8),l=r(19),u=r(35),c=r(15),h=r(0),d=r.n(h),f=r(36),p=r(60),m=r.n(p),g=r(61),_=r(124),v=r(125),y=r(129),x=r(130),T=r(2),b=r(132),w=r(43),E=r(76),S=r(133),M=r(134),A=r(135),N=r(136),C=r(41),L=r(37),P=r(26),D=r(3),O=r(137),R=r(56),I=r(138),F=r(139),B=r(140),U=r(9),z=r(74),G=r(54),H=r(18),k=r(59),V=r(141),W=r(146),j=r(71),X=r(147),q=r(148),Z=r(149),Y=r(150),K=r(151),Q=r(152);function J(e){return!e||"none"===e}function $(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof Image}function ee(e){return e.getZr&&e.setOption}d.a.util.extend(u["a"].prototype,V["a"]),s["a"].import(W["a"]),s["a"].import(j["a"]),s["a"].import(X["a"]),s["a"].import(q["a"]),s["a"].import(Z["a"]),s["a"].import(Y["a"]),s["a"].import(K["a"]),s["a"].import(Q["a"]);var te=f["a"].prototype.addToScene,re=f["a"].prototype.removeFromScene;f["a"].prototype.addToScene=function(e){if(te.call(this,e),this.__zr){var t=this.__zr;e.traverse((function(e){e.__zr=t,e.addAnimatorsToZr&&e.addAnimatorsToZr(t)}))}},f["a"].prototype.removeFromScene=function(e){re.call(this,e),e.traverse((function(e){var t=e.__zr;e.__zr=null,t&&e.removeAnimatorsFromZr&&e.removeAnimatorsFromZr(t)}))},l["a"].prototype.setTextureImage=function(e,t,r,n){if(this.shader){var i,a=r.getZr(),o=this;return o.autoUpdateTextureStatus=!1,o.disableTexture(e),J(t)||(i=ne.loadTexture(t,r,n,(function(t){o.enableTexture(e),a&&a.refresh()})),o.set(e,i)),i}};var ne={};ne.Renderer=i["a"],ne.Node=u["a"],ne.Mesh=n["a"],ne.Shader=s["a"],ne.Material=l["a"],ne.Texture=o["a"],ne.Texture2D=a["a"],ne.Geometry=c["a"],ne.SphereGeometry=b["a"],ne.PlaneGeometry=w["a"],ne.CubeGeometry=E["a"],ne.AmbientLight=S["a"],ne.DirectionalLight=M["a"],ne.PointLight=A["a"],ne.SpotLight=N["a"],ne.PerspectiveCamera=C["a"],ne.OrthographicCamera=L["a"],ne.Vector2=P["a"],ne.Vector3=D["a"],ne.Vector4=O["a"],ne.Quaternion=R["a"],ne.Matrix2=I["a"],ne.Matrix2d=F["a"],ne.Matrix3=B["a"],ne.Matrix4=U["a"],ne.Plane=z["a"],ne.Ray=G["a"],ne.BoundingBox=H["a"],ne.Frustum=k["a"];var ie=g["a"].createBlank("rgba(255,255,255,0)").image;function ae(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function oe(e){if((e.wrapS===o["a"].REPEAT||e.wrapT===o["a"].REPEAT)&&e.image){var t=ae(e.width),r=ae(e.height);if(t!==e.width||r!==e.height){var n=document.createElement("canvas");n.width=t,n.height=r;var i=n.getContext("2d");i.drawImage(e.image,0,0,t,r),e.image=n}}}ne.loadTexture=function(e,t,r,n){"function"===typeof r&&(n=r,r={}),r=r||{};for(var i=Object.keys(r).sort(),a="",o=0;o<i.length;o++)a+=i[o]+"_"+r[i[o]]+"_";var s=t.__textureCache=t.__textureCache||new m.a(20);if(ee(e)){var l=e.__textureid__,u=s.get(a+l);if(u)u.texture.surface.setECharts(e),n&&n(u.texture);else{var c=new _["a"](e);c.onupdate=function(){t.getZr().refresh()},u={texture:c.getTexture()};for(o=0;o<i.length;o++)u.texture[i[o]]=r[i[o]];l=e.__textureid__||"__ecgl_ec__"+u.texture.__uid__,e.__textureid__=l,s.put(a+l,u),n&&n(u.texture)}return u.texture}if($(e)){l=e.__textureid__,u=s.get(a+l);if(!u){u={texture:new ne.Texture2D({image:e})};for(o=0;o<i.length;o++)u.texture[i[o]]=r[i[o]];l=e.__textureid__||"__ecgl_image__"+u.texture.__uid__,e.__textureid__=l,s.put(a+l,u),oe(u.texture),n&&n(u.texture)}return u.texture}u=s.get(a+e);if(u)u.callbacks?u.callbacks.push(n):n&&n(u.texture);else if(e.match(/.hdr$|^data:application\/octet-stream/)){u={callbacks:[n]};var h=g["a"].loadTexture(e,{exposure:r.exposure,fileType:"hdr"},(function(){h.dirty(),u.callbacks.forEach((function(e){e&&e(h)})),u.callbacks=null}));u.texture=h,s.put(a+e,u)}else{for(h=new ne.Texture2D({image:new Image}),o=0;o<i.length;o++)h[i[o]]=r[i[o]];u={texture:h,callbacks:[n]};var d=h.image;d.onload=function(){h.image=d,oe(h),h.dirty(),u.callbacks.forEach((function(e){e&&e(h)})),u.callbacks=null},d.src=e,h.image=ie,s.put(a+e,u)}return u.texture},ne.createAmbientCubemap=function(e,t,r,n){e=e||{};var i=e.texture,a=T["a"].firstNotNull(e.exposure,1),o=new v["a"]({intensity:T["a"].firstNotNull(e.specularIntensity,1)}),s=new y["a"]({intensity:T["a"].firstNotNull(e.diffuseIntensity,1),coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]});return o.cubemap=ne.loadTexture(i,r,{exposure:a},(function(){o.cubemap.flipY=!1;var e=Date.now();o.prefilter(t,32);var r=Date.now()-e;console.log("Prefilter environment map: "+r+"ms"),s.coefficients=x["a"].projectEnvironmentMap(t,o.cubemap,{lod:1}),n&&n()})),{specular:o,diffuse:s}},ne.createBlankTexture=g["a"].createBlank,ne.isImage=$,ne.additiveBlend=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)},ne.parseColor=function(e,t){return e instanceof Array?(t||(t=[]),t[0]=e[0],t[1]=e[1],t[2]=e[2],e.length>3?t[3]=e[3]:t[3]=1,t):(t=d.a.color.parse(e||"#000",t)||[0,0,0,0],t[0]/=255,t[1]/=255,t[2]/=255,t)},ne.directionFromAlphaBeta=function(e,t){var r=e/180*Math.PI+Math.PI/2,n=-t/180*Math.PI+Math.PI/2,i=[],a=Math.sin(r);return i[0]=a*Math.cos(n),i[1]=-Math.cos(r),i[2]=a*Math.sin(n),i},ne.getShadowResolution=function(e){var t=1024;switch(e){case"low":t=512;break;case"medium":break;case"high":t=2048;break;case"ultra":t=4096;break}return t},ne.COMMON_SHADERS=["lambert","color","realistic","hatching"],ne.createShader=function(e){var t=s["a"].source(e+".vertex"),r=s["a"].source(e+".fragment");t||console.error("Vertex shader of '%s' not exits",e),r||console.error("Fragment shader of '%s' not exits",e);var n=new s["a"](t,r);return n.name=e,n},ne.createMaterial=function(e,t){t instanceof Array||(t=[t]);var r=ne.createShader(e),n=new l["a"]({shader:r});return t.forEach((function(e){"string"===typeof e&&n.define(e)})),n},ne.setMaterialFromModel=function(e,t,r,n){t.autoUpdateTextureStatus=!1;var i=r.getModel(e+"Material"),a=i.get("detailTexture"),o=T["a"].firstNotNull(i.get("textureTiling"),1),s=T["a"].firstNotNull(i.get("textureOffset"),0);"number"===typeof o&&(o=[o,o]),"number"===typeof s&&(s=[s,s]);var l=o[0]>1||o[1]>1?ne.Texture.REPEAT:ne.Texture.CLAMP_TO_EDGE,u={anisotropic:8,wrapS:l,wrapT:l};if("realistic"===e){var c=i.get("roughness"),h=i.get("metalness");null!=h?isNaN(h)&&(t.setTextureImage("metalnessMap",h,n,u),h=T["a"].firstNotNull(i.get("metalnessAdjust"),.5)):h=0,null!=c?isNaN(c)&&(t.setTextureImage("roughnessMap",c,n,u),c=T["a"].firstNotNull(i.get("roughnessAdjust"),.5)):c=.5;var d=i.get("normalTexture");t.setTextureImage("detailMap",a,n,u),t.setTextureImage("normalMap",d,n,u),t.set({roughness:c,metalness:h,detailUvRepeat:o,detailUvOffset:s})}else if("lambert"===e)t.setTextureImage("detailMap",a,n,u),t.set({detailUvRepeat:o,detailUvOffset:s});else if("color"===e)t.setTextureImage("detailMap",a,n,u),t.set({detailUvRepeat:o,detailUvOffset:s});else if("hatching"===e){var f=i.get("hatchingTextures")||[];f.length<6&&console.error("Invalid hatchingTextures.");for(var p=0;p<6;p++)t.setTextureImage("hatch"+(p+1),f[p],n,{anisotropic:8,wrapS:ne.Texture.REPEAT,wrapT:ne.Texture.REPEAT});t.set({detailUvRepeat:o,detailUvOffset:s})}},ne.updateVertexAnimation=function(e,t,r,n){var i=n.get("animation"),a=n.get("animationDurationUpdate"),o=n.get("animationEasingUpdate"),s=r.shadowDepthMaterial;if(i&&t&&a>0&&t.geometry.vertexCount===r.geometry.vertexCount){r.material.define("vertex","VERTEX_ANIMATION"),r.ignorePreZ=!0,s&&s.define("vertex","VERTEX_ANIMATION");for(var l=0;l<e.length;l++)r.geometry.attributes[e[l][0]].value=t.geometry.attributes[e[l][1]].value;r.geometry.dirty(),r.__percent=0,r.material.set("percent",0),r.stopAnimation(),r.animate().when(a,{__percent:1}).during((function(){r.material.set("percent",r.__percent),s&&s.set("percent",r.__percent)})).done((function(){r.ignorePreZ=!1,r.material.undefine("vertex","VERTEX_ANIMATION"),s&&s.undefine("vertex","VERTEX_ANIMATION")})).start(o)}else r.material.undefine("vertex","VERTEX_ANIMATION"),s&&s.undefine("vertex","VERTEX_ANIMATION")},t["a"]=ne},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a={firstNotNull:function(){for(var e=0,t=arguments.length;e<t;e++)if(null!=arguments[e])return arguments[e]},queryDataIndex:function(e,t){return null!=t.dataIndexInside?t.dataIndexInside:null!=t.dataIndex?i.a.util.isArray(t.dataIndex)?i.a.util.map(t.dataIndex,(function(t){return e.indexOfRawIndex(t)})):e.indexOfRawIndex(t.dataIndex):null!=t.name?i.a.util.isArray(t.name)?i.a.util.map(t.name,(function(t){return e.indexOfName(t)})):e.indexOfName(t.name):void 0}};t["a"]=a},function(e,t,r){"use strict";var n=r(12),i=function(e,t,r){e=e||0,t=t||0,r=r||0,this.array=n["a"].fromValues(e,t,r),this._dirty=!0};i.prototype={constructor:i,add:function(e){return n["a"].add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,r){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this._dirty=!0,this},clone:function(){return new i(this.x,this.y,this.z)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return n["a"].cross(this.array,e.array,t.array),this._dirty=!0,this},dist:function(e){return n["a"].dist(this.array,e.array)},distance:function(e){return n["a"].distance(this.array,e.array)},div:function(e){return n["a"].div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return n["a"].divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return n["a"].dot(this.array,e.array)},len:function(){return n["a"].len(this.array)},length:function(){return n["a"].length(this.array)},lerp:function(e,t,r){return n["a"].lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return n["a"].min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return n["a"].max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return n["a"].negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return n["a"].normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return n["a"].random(this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return n["a"].scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return n["a"].sqrDist(this.array,e.array)},squaredDistance:function(e){return n["a"].squaredDistance(this.array,e.array)},sqrLen:function(){return n["a"].sqrLen(this.array)},squaredLength:function(){return n["a"].squaredLength(this.array)},sub:function(e){return n["a"].sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return n["a"].subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return n["a"].transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return n["a"].transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return n["a"].transformQuat(this.array,this.array,e.array),this._dirty=!0,this},applyProjection:function(e){var t=this.array;if(e=e.array,0===e[15]){var r=-1/t[2];t[0]=e[0]*t[0]*r,t[1]=e[5]*t[1]*r,t[2]=(e[10]*t[2]+e[14])*r}else t[0]=e[0]*t[0]+e[12],t[1]=e[5]*t[1]+e[13],t[2]=e[10]*t[2]+e[14];return this._dirty=!0,this},eulerFromQuat:function(e,t){i.eulerFromQuat(this,e,t)},eulerFromMat3:function(e,t){i.eulerFromMat3(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var a=Object.defineProperty;if(a){var o=i.prototype;a(o,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),a(o,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),a(o,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}})}function s(e,t,r){return e<t?t:e>r?r:e}i.add=function(e,t,r){return n["a"].add(e.array,t.array,r.array),e._dirty=!0,e},i.set=function(e,t,r,i){n["a"].set(e.array,t,r,i),e._dirty=!0},i.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},i.cross=function(e,t,r){return n["a"].cross(e.array,t.array,r.array),e._dirty=!0,e},i.dist=function(e,t){return n["a"].distance(e.array,t.array)},i.distance=i.dist,i.div=function(e,t,r){return n["a"].divide(e.array,t.array,r.array),e._dirty=!0,e},i.divide=i.div,i.dot=function(e,t){return n["a"].dot(e.array,t.array)},i.len=function(e){return n["a"].length(e.array)},i.lerp=function(e,t,r,i){return n["a"].lerp(e.array,t.array,r.array,i),e._dirty=!0,e},i.min=function(e,t,r){return n["a"].min(e.array,t.array,r.array),e._dirty=!0,e},i.max=function(e,t,r){return n["a"].max(e.array,t.array,r.array),e._dirty=!0,e},i.mul=function(e,t,r){return n["a"].multiply(e.array,t.array,r.array),e._dirty=!0,e},i.multiply=i.mul,i.negate=function(e,t){return n["a"].negate(e.array,t.array),e._dirty=!0,e},i.normalize=function(e,t){return n["a"].normalize(e.array,t.array),e._dirty=!0,e},i.random=function(e,t){return n["a"].random(e.array,t),e._dirty=!0,e},i.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r),e._dirty=!0,e},i.scaleAndAdd=function(e,t,r,i){return n["a"].scaleAndAdd(e.array,t.array,r.array,i),e._dirty=!0,e},i.sqrDist=function(e,t){return n["a"].sqrDist(e.array,t.array)},i.squaredDistance=i.sqrDist,i.sqrLen=function(e){return n["a"].sqrLen(e.array)},i.squaredLength=i.sqrLen,i.sub=function(e,t,r){return n["a"].subtract(e.array,t.array,r.array),e._dirty=!0,e},i.subtract=i.sub,i.transformMat3=function(e,t,r){return n["a"].transformMat3(e.array,t.array,r.array),e._dirty=!0,e},i.transformMat4=function(e,t,r){return n["a"].transformMat4(e.array,t.array,r.array),e._dirty=!0,e},i.transformQuat=function(e,t,r){return n["a"].transformQuat(e.array,t.array,r.array),e._dirty=!0,e};var l=Math.atan2,u=Math.asin,c=Math.abs;i.eulerFromQuat=function(e,t,r){e._dirty=!0,t=t.array;var n=e.array,i=t[0],a=t[1],o=t[2],c=t[3],h=i*i,d=a*a,f=o*o,p=c*c;r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=l(2*(i*c-a*o),p-h-d+f),n[1]=u(s(2*(i*o+a*c),-1,1)),n[2]=l(2*(o*c-i*a),p+h-d-f);break;case"YXZ":n[0]=u(s(2*(i*c-a*o),-1,1)),n[1]=l(2*(i*o+a*c),p-h-d+f),n[2]=l(2*(i*a+o*c),p-h+d-f);break;case"ZXY":n[0]=u(s(2*(i*c+a*o),-1,1)),n[1]=l(2*(a*c-o*i),p-h-d+f),n[2]=l(2*(o*c-i*a),p-h+d-f);break;case"ZYX":n[0]=l(2*(i*c+o*a),p-h-d+f),n[1]=u(s(2*(a*c-i*o),-1,1)),n[2]=l(2*(i*a+o*c),p+h-d-f);break;case"YZX":n[0]=l(2*(i*c-o*a),p-h+d-f),n[1]=l(2*(a*c-i*o),p+h-d-f),n[2]=u(s(2*(i*a+o*c),-1,1));break;case"XZY":n[0]=l(2*(i*c+a*o),p-h+d-f),n[1]=l(2*(i*o+a*c),p+h-d-f),n[2]=u(s(2*(o*c-i*a),-1,1));break;default:console.warn("Unkown order: "+r)}return e},i.eulerFromMat3=function(e,t,r){var n=t.array,i=n[0],a=n[3],o=n[6],h=n[1],d=n[4],f=n[7],p=n[2],m=n[5],g=n[8],_=e.array;r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":_[1]=u(s(o,-1,1)),c(o)<.99999?(_[0]=l(-f,g),_[2]=l(-a,i)):(_[0]=l(m,d),_[2]=0);break;case"YXZ":_[0]=u(-s(f,-1,1)),c(f)<.99999?(_[1]=l(o,g),_[2]=l(h,d)):(_[1]=l(-p,i),_[2]=0);break;case"ZXY":_[0]=u(s(m,-1,1)),c(m)<.99999?(_[1]=l(-p,g),_[2]=l(-a,d)):(_[1]=0,_[2]=l(h,i));break;case"ZYX":_[1]=u(-s(p,-1,1)),c(p)<.99999?(_[0]=l(m,g),_[2]=l(h,i)):(_[0]=0,_[2]=l(-a,d));break;case"YZX":_[2]=u(s(h,-1,1)),c(h)<.99999?(_[0]=l(-f,d),_[1]=l(-p,i)):(_[0]=0,_[1]=l(o,g));break;case"XZY":_[2]=u(-s(a,-1,1)),c(a)<.99999?(_[0]=l(m,d),_[1]=l(o,i)):(_[0]=l(-f,g),_[1]=0);break;default:console.warn("Unkown order: "+r)}return e._dirty=!0,e},Object.defineProperties(i,{POSITIVE_X:{get:function(){return new i(1,0,0)}},NEGATIVE_X:{get:function(){return new i(-1,0,0)}},POSITIVE_Y:{get:function(){return new i(0,1,0)}},NEGATIVE_Y:{get:function(){return new i(0,-1,0)}},POSITIVE_Z:{get:function(){return new i(0,0,1)}},NEGATIVE_Z:{get:function(){return new i(0,0,-1)}},UP:{get:function(){return new i(0,1,0)}},ZERO:{get:function(){return new i}}}),t["a"]=i},function(e,t,r){"use strict";var n=r(7),i=r(11),a=r(57),o=n["a"].extend({width:512,height:512,type:i["a"].UNSIGNED_BYTE,format:i["a"].RGBA,wrapS:i["a"].REPEAT,wrapT:i["a"].REPEAT,minFilter:i["a"].LINEAR_MIPMAP_LINEAR,magFilter:i["a"].LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,sRGB:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1,__used:0},(function(){this._cache=new a["a"]}),{getWebGLTexture:function(e){var t=e.gl,r=this._cache;return r.use(e.__uid__),r.miss("webgl_texture")&&r.put("webgl_texture",t.createTexture()),this.dynamic?this.update(e):r.isDirty()&&(this.update(e),r.fresh()),r.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(e){},updateCommon:function(e){var t=e.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this.format===i["a"].DEPTH_COMPONENT&&(this.useMipmap=!1);var r=e.getGLExtension("EXT_sRGB");this.format!==o.SRGB||r||(this.format=o.RGB),this.format!==o.SRGB_ALPHA||r||(this.format=o.RGBA),this.NPOT=!this.isPowerOfTwo()},getAvailableWrapS:function(){return this.NPOT?i["a"].CLAMP_TO_EDGE:this.wrapS},getAvailableWrapT:function(){return this.NPOT?i["a"].CLAMP_TO_EDGE:this.wrapT},getAvailableMinFilter:function(){var e=this.minFilter;return this.NPOT||!this.useMipmap?e===i["a"].NEAREST_MIPMAP_NEAREST||e===i["a"].NEAREST_MIPMAP_LINEAR?i["a"].NEAREST:e===i["a"].LINEAR_MIPMAP_LINEAR||e===i["a"].LINEAR_MIPMAP_NEAREST?i["a"].LINEAR:e:e},getAvailableMagFilter:function(){return this.magFilter},nextHighestPowerOfTwo:function(e){--e;for(var t=1;t<32;t<<=1)e|=e>>t;return e+1},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("webgl_texture");r&&e.gl.deleteTexture(r),t.deleteContext(e.__uid__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(o.prototype,"width",{get:function(){return this._width},set:function(e){this._width=e}}),Object.defineProperty(o.prototype,"height",{get:function(){return this._height},set:function(e){this._height=e}}),o.BYTE=i["a"].BYTE,o.UNSIGNED_BYTE=i["a"].UNSIGNED_BYTE,o.SHORT=i["a"].SHORT,o.UNSIGNED_SHORT=i["a"].UNSIGNED_SHORT,o.INT=i["a"].INT,o.UNSIGNED_INT=i["a"].UNSIGNED_INT,o.FLOAT=i["a"].FLOAT,o.HALF_FLOAT=36193,o.UNSIGNED_INT_24_8_WEBGL=34042,o.DEPTH_COMPONENT=i["a"].DEPTH_COMPONENT,o.DEPTH_STENCIL=i["a"].DEPTH_STENCIL,o.ALPHA=i["a"].ALPHA,o.RGB=i["a"].RGB,o.RGBA=i["a"].RGBA,o.LUMINANCE=i["a"].LUMINANCE,o.LUMINANCE_ALPHA=i["a"].LUMINANCE_ALPHA,o.SRGB=35904,o.SRGB_ALPHA=35906,o.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,o.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,o.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,o.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,o.NEAREST=i["a"].NEAREST,o.LINEAR=i["a"].LINEAR,o.NEAREST_MIPMAP_NEAREST=i["a"].NEAREST_MIPMAP_NEAREST,o.LINEAR_MIPMAP_NEAREST=i["a"].LINEAR_MIPMAP_NEAREST,o.NEAREST_MIPMAP_LINEAR=i["a"].NEAREST_MIPMAP_LINEAR,o.LINEAR_MIPMAP_LINEAR=i["a"].LINEAR_MIPMAP_LINEAR,o.REPEAT=i["a"].REPEAT,o.CLAMP_TO_EDGE=i["a"].CLAMP_TO_EDGE,o.MIRRORED_REPEAT=i["a"].MIRRORED_REPEAT,t["a"]=o},function(e,t,r){"use strict";var n=r(4),i=r(11),a=r(14),o=r(73),s=o["a"].isPowerOfTwo;function l(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function u(e,t){var r=l(e.width),n=l(e.height);t=t||document.createElement("canvas"),t.width=r,t.height=n;var i=t.getContext("2d");return i.drawImage(e.image,0,0,r,n),t}var c=n["a"].extend((function(){return{image:null,pixels:null,mipmaps:[],convertToPOT:!1}}),{textureType:"texture2D",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,a=this.type,o=!(!this.convertToPOT||this.mipmaps.length||!this.image||this.wrapS!==n["a"].REPEAT&&this.wrapT!==n["a"].REPEAT||!this.NPOT);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,o?this.wrapS:this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,o?this.wrapT:this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,o?this.magFilter:this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,o?this.minFilter:this.getAvailableMinFilter());var s=e.getGLExtension("EXT_texture_filter_anisotropic");if(s&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,s.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===a){var l=e.getGLExtension("OES_texture_half_float");l||(a=i["a"].FLOAT)}if(this.mipmaps.length)for(var u=this.width,c=this.height,h=0;h<this.mipmaps.length;h++){var d=this.mipmaps[h];this._updateTextureData(t,d,h,u,c,r,a,!1),u/=2,c/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,a,o),!this.useMipmap||this.NPOT&&!o||t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(e,t,r,i,a,o,s,l){if(t.image){var c=t.image;l&&(this._potCanvas=u(this,this._potCanvas),c=this._potCanvas),e.texImage2D(e.TEXTURE_2D,r,o,o,s,c)}else o<=n["a"].COMPRESSED_RGBA_S3TC_DXT5_EXT&&o>=n["a"].COMPRESSED_RGB_S3TC_DXT1_EXT?e.compressedTexImage2D(e.TEXTURE_2D,r,o,i,a,0,t.pixels):e.texImage2D(e.TEXTURE_2D,r,o,i,a,0,o,s,t.pixels)},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){return s(this.width)&&s(this.height)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},load:function(e,t){var r=a["a"].createImage();t&&(r.crossOrigin=t);var n=this;return r.onload=function(){n.dirty(),n.trigger("success",n),r.onload=null},r.onerror=function(){n.trigger("error",n),r.onerror=null},r.src=e,this.image=r,this}});Object.defineProperty(c.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(e){this.image?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(c.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(e){this.image?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}}),t["a"]=c},function(e,t,r){"use strict";var n=r(161);t["a"]=n["a"]},function(e,t,r){"use strict";var n=r(110),i=r(53),a=r(23),o=function(){this.__uid__=a["a"].genGUID()};o.__initializers__=[function(e){a["a"].extend(this,e)}],a["a"].extend(o,n["a"]),a["a"].extend(o.prototype,i["a"]),t["a"]=o},function(e,t,r){"use strict";var n=r(23),i=r(14),a=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\s\S]*?);/g,o=/attribute\s+(float|int|vec2|vec3|vec4)\s+([\s\S]*?);/g,s=/#define\s+(\w+)?(\s+[\d-.]+)?\s*;?\s*\n/g,l={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"};function u(e){for(var t=[],r=0;r<e;r++)t[r]=0;return t}var c={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return u(2)},vec3:function(){return u(3)},vec4:function(){return u(4)},ivec2:function(){return u(2)},ivec3:function(){return u(3)},ivec4:function(){return u(4)},mat2:function(){return u(4)},mat3:function(){return u(9)},mat4:function(){return u(16)},array:function(){return[]}},h=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],d=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],f=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],p={vec4:4,vec3:3,vec2:2,float:1},m={},g={};function _(e,t){var r="vertex:"+e+"fragment:"+t;if(m[r])return m[r];var i=n["a"].genGUID();return m[r]=i,g[i]={vertex:e,fragment:t},i}function v(e){return e.replace(/[ \t]*\/\/.*\n/g,"").replace(/[ \t]*\/\*[\s\S]*?\*\//g,"")}function y(){console.error("Wrong uniform/attributes syntax")}function x(e,t){for(var r=/[,=\(\):]/,n=t.replace(/:\s*\[\s*(.*)\s*\]/g,"="+e+"($1)").replace(/\s+/g,"").split(/(?=[,=\(\):])/g),a=[],o=0;o<n.length;o++)n[o].match(r)?a.push(n[o].charAt(0),n[o].slice(1)):a.push(n[o]);n=a;var s,l=0,u=1,c=2,p=3,m=4,g=5,_=l,v={},x=null;function T(e){e||y();var t=e.match(/\[(.*?)\]/);s=e.replace(/\[(.*?)\]/,""),v[s]={},t&&(v[s].isArray=!0,v[s].arraySize=t[1])}T(n[0]);for(o=1;o<n.length;o++){var b=n[o];if(b)if("="!==b)if(":"!==b)if(","!==b)if(")"!==b)if("("!==b)if(b.indexOf("vec")>=0){if(_!==u&&_!==m){y();break}_=c,x=[]}else if(_!==u)if(_!==m)T(b),_=l;else{var w=b;h.indexOf(w)>=0||d.indexOf(w)>=0||f.indexOf(w)>=0?v[s].semantic=w:"ignore"===w||"unconfigurable"===w?v[s].ignore=!0:v[s].value="bool"===e?"true"===w:parseFloat(w)}else v[s].value="bool"===e?"true"===b:parseFloat(b),x=null;else{if(_!==c){y();break}if(!(x instanceof Array)){y();break}x.push(+n[++o])}else v[s].value=new i["a"].Float32Array(x),x=null,_=g;else if(_===c){if(!(x instanceof Array)){y();break}x.push(+n[++o])}else _=g;else _=m;else{if(_!==l&&_!==p){y();break}_=u}}return v}function T(e,t){"object"===typeof e&&(t=e.fragment,e=e.vertex),e=v(e),t=v(t),this._shaderID=_(e,t),this._vertexCode=T.parseImport(e),this._fragmentCode=T.parseImport(t),this.attributeSemantics={},this.matrixSemantics={},this.uniformSemantics={},this.matrixSemanticKeys=[],this.uniformTemplates={},this.attributes={},this.textures={},this.vertexDefines={},this.fragmentDefines={},this._parseAttributes(),this._parseUniforms(),this._parseDefines()}T.prototype={constructor:T,createUniforms:function(){var e={};for(var t in this.uniformTemplates){var r=this.uniformTemplates[t];e[t]={type:r.type,value:r.value()}}return e},_parseImport:function(){this._vertexCode=T.parseImport(this.vertex),this._fragmentCode=T.parseImport(this.fragment)},_addSemanticUniform:function(e,t,r){if(h.indexOf(r)>=0)this.attributeSemantics[r]={symbol:e,type:t};else if(f.indexOf(r)>=0){var n=!1,i=r;r.match(/TRANSPOSE$/)&&(n=!0,i=r.slice(0,-9)),this.matrixSemantics[r]={symbol:e,type:t,isTranspose:n,semanticNoTranspose:i}}else d.indexOf(r)>=0&&(this.uniformSemantics[r]={symbol:e,type:t})},_addMaterialUniform:function(e,t,r,n,i,a){a[e]={type:r,value:i?c["array"]:n||c[t],semantic:null}},_parseUniforms:function(){var e={},t=this,r="vertex";function n(e){return null!=e?function(){return e}:null}function i(i,a,o){var s=x(a,o),u=[];for(var c in s){var h=s[c],d=h.semantic,f=c,p=l[a],m=n(s[c].value);s[c].isArray&&(f+="["+s[c].arraySize+"]",p+="v"),u.push(f),t._uniformList.push(c),h.ignore||("sampler2D"!==a&&"samplerCube"!==a||(t.textures[c]={shaderType:r,type:a}),d?t._addSemanticUniform(c,p,d):t._addMaterialUniform(c,a,p,m,s[c].isArray,e))}return u.length>0?"uniform "+a+" "+u.join(",")+";\n":""}this._uniformList=[],this._vertexCode=this._vertexCode.replace(a,i),r="fragment",this._fragmentCode=this._fragmentCode.replace(a,i),t.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=e},_parseAttributes:function(){var e={},t=this;function r(r,n,i){var a=x(n,i),o=p[n]||1,s=[];for(var l in a){var u=a[l].semantic;if(e[l]={type:"float",size:o,semantic:u||null},u){if(h.indexOf(u)<0)throw new Error('Unkown semantic "'+u+'"');t.attributeSemantics[u]={symbol:l,type:n}}s.push(l)}return"attribute "+n+" "+s.join(",")+";\n"}this._vertexCode=this._vertexCode.replace(o,r),this.attributes=e},_parseDefines:function(){var e=this,t="vertex";function r(r,n,i){var a="vertex"===t?e.vertexDefines:e.fragmentDefines;return a[n]||(a[n]="false"!==i&&("true"===i||(i?isNaN(parseFloat(i))?i.trim():parseFloat(i):null))),""}this._vertexCode=this._vertexCode.replace(s,r),t="fragment",this._fragmentCode=this._fragmentCode.replace(s,r)},clone:function(){var e=g[this._shaderID],t=new T(e.vertex,e.fragment);return t}},Object.defineProperty&&(Object.defineProperty(T.prototype,"shaderID",{get:function(){return this._shaderID}}),Object.defineProperty(T.prototype,"vertex",{get:function(){return this._vertexCode}}),Object.defineProperty(T.prototype,"fragment",{get:function(){return this._fragmentCode}}),Object.defineProperty(T.prototype,"uniforms",{get:function(){return this._uniformList}}));var b=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;T.parseImport=function(e){return e=e.replace(b,(function(e,t,r){e=T.source(r);return e?T.parseImport(e):(console.error('Shader chunk "'+r+'" not existed in library'),"")})),e};var w=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;T["import"]=function(e){e.replace(w,(function(e,t,r,n){n=n.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(n){var i,a=r.split("."),o=T.codes,s=0;while(s<a.length-1)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=n}return n}))},T.codes={},T.source=function(e){var t=e.split("."),r=T.codes,n=0;while(r&&n<t.length){var i=t[n++];r=r[i]}return"string"!==typeof r?(console.error('Shader "'+e+'" not existed in library'),""):r},t["a"]=T},function(e,t,r){"use strict";var n=r(21),i=r(12),a=r(55),o=r(34),s=r(3),l=function(){this._axisX=new s["a"],this._axisY=new s["a"],this._axisZ=new s["a"],this.array=n["a"].create(),this._dirty=!0};l.prototype={constructor:l,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return n["a"].adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return(new l).copy(this)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return n["a"].determinant(this.array)},fromQuat:function(e){return n["a"].fromQuat(this.array,e.array),this._dirty=!0,this},fromRotationTranslation:function(e,t){return n["a"].fromRotationTranslation(this.array,e.array,t.array),this._dirty=!0,this},fromMat2d:function(e){return l.fromMat2d(this,e),this},frustum:function(e,t,r,i,a,o){return n["a"].frustum(this.array,e,t,r,i,a,o),this._dirty=!0,this},identity:function(){return n["a"].identity(this.array),this._dirty=!0,this},invert:function(){return n["a"].invert(this.array,this.array),this._dirty=!0,this},lookAt:function(e,t,r){return n["a"].lookAt(this.array,e.array,t.array,r.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return n["a"].mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return n["a"].multiply(this.array,e.array,this.array),this._dirty=!0,this},ortho:function(e,t,r,i,a,o){return n["a"].ortho(this.array,e,t,r,i,a,o),this._dirty=!0,this},perspective:function(e,t,r,i){return n["a"].perspective(this.array,e,t,r,i),this._dirty=!0,this},rotate:function(e,t){return n["a"].rotate(this.array,this.array,e,t.array),this._dirty=!0,this},rotateX:function(e){return n["a"].rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return n["a"].rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return n["a"].rotateZ(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return n["a"].translate(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return n["a"].transpose(this.array,this.array),this._dirty=!0,this},decomposeMatrix:function(){var e=i["a"].create(),t=i["a"].create(),r=i["a"].create(),n=o["a"].create();return function(s,l,u){var c=this.array;i["a"].set(e,c[0],c[1],c[2]),i["a"].set(t,c[4],c[5],c[6]),i["a"].set(r,c[8],c[9],c[10]);var h=i["a"].length(e),d=i["a"].length(t),f=i["a"].length(r),p=this.determinant();p<0&&(h=-h),s&&s.set(h,d,f),u.set(c[12],c[13],c[14]),o["a"].fromMat4(n,c),n[0]/=h,n[1]/=h,n[2]/=h,n[3]/=d,n[4]/=d,n[5]/=d,n[6]/=f,n[7]/=f,n[8]/=f,a["a"].fromMat3(l.array,n),a["a"].normalize(l.array,l.array),l._dirty=!0,u._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var u=Object.defineProperty;if(u){var c=l.prototype;u(c,"z",{get:function(){var e=this.array;return this._axisZ.set(e[8],e[9],e[10]),this._axisZ},set:function(e){var t=this.array;e=e.array,t[8]=e[0],t[9]=e[1],t[10]=e[2],this._dirty=!0}}),u(c,"y",{get:function(){var e=this.array;return this._axisY.set(e[4],e[5],e[6]),this._axisY},set:function(e){var t=this.array;e=e.array,t[4]=e[0],t[5]=e[1],t[6]=e[2],this._dirty=!0}}),u(c,"x",{get:function(){var e=this.array;return this._axisX.set(e[0],e[1],e[2]),this._axisX},set:function(e){var t=this.array;e=e.array,t[0]=e[0],t[1]=e[1],t[2]=e[2],this._dirty=!0}})}l.adjoint=function(e,t){return n["a"].adjoint(e.array,t.array),e._dirty=!0,e},l.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},l.determinant=function(e){return n["a"].determinant(e.array)},l.identity=function(e){return n["a"].identity(e.array),e._dirty=!0,e},l.ortho=function(e,t,r,i,a,o,s){return n["a"].ortho(e.array,t,r,i,a,o,s),e._dirty=!0,e},l.perspective=function(e,t,r,i,a){return n["a"].perspective(e.array,t,r,i,a),e._dirty=!0,e},l.lookAt=function(e,t,r,i){return n["a"].lookAt(e.array,t.array,r.array,i.array),e._dirty=!0,e},l.invert=function(e,t){return n["a"].invert(e.array,t.array),e._dirty=!0,e},l.mul=function(e,t,r){return n["a"].mul(e.array,t.array,r.array),e._dirty=!0,e},l.multiply=l.mul,l.fromQuat=function(e,t){return n["a"].fromQuat(e.array,t.array),e._dirty=!0,e},l.fromRotationTranslation=function(e,t,r){return n["a"].fromRotationTranslation(e.array,t.array,r.array),e._dirty=!0,e},l.fromMat2d=function(e,t){e._dirty=!0;t=t.array,e=e.array;return e[0]=t[0],e[4]=t[2],e[12]=t[4],e[1]=t[1],e[5]=t[3],e[13]=t[5],e},l.rotate=function(e,t,r,i){return n["a"].rotate(e.array,t.array,r,i.array),e._dirty=!0,e},l.rotateX=function(e,t,r){return n["a"].rotateX(e.array,t.array,r),e._dirty=!0,e},l.rotateY=function(e,t,r){return n["a"].rotateY(e.array,t.array,r),e._dirty=!0,e},l.rotateZ=function(e,t,r){return n["a"].rotateZ(e.array,t.array,r),e._dirty=!0,e},l.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r.array),e._dirty=!0,e},l.transpose=function(e,t){return n["a"].transpose(e.array,t.array),e._dirty=!0,e},l.translate=function(e,t,r){return n["a"].translate(e.array,t.array,r.array),e._dirty=!0,e},t["a"]=l},function(e,t,r){"use strict";var n=r(7),i=r(4),a=(r(27),r(11)),o=r(57),s="framebuffer",l="renderbuffer",u=l+"_width",c=l+"_height",h=l+"_attached",d="depthtexture_attached",f=a["a"].FRAMEBUFFER,p=a["a"].RENDERBUFFER,m=a["a"].DEPTH_ATTACHMENT,g=a["a"].COLOR_ATTACHMENT0,_=n["a"].extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},(function(){this._cache=new o["a"],this._textures={}}),{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(e){if(e.__currentFrameBuffer){if(e.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}e.__currentFrameBuffer=this;var t=e.gl;t.bindFramebuffer(f,this._getFrameBufferGL(e)),this._boundRenderer=e;var r=this._cache;r.put("viewport",e.viewport);var n,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(n=s.texture.width,i=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=n,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?e.setViewport(this.viewport):e.setViewport(0,0,n,i,1);var g=r.get("attached_textures");if(g)for(var o in g)if(!this._textures[o]){var _=g[o];this._doDetach(t,o,_)}if(!r.get(d)&&this.depthBuffer){r.miss(l)&&r.put(l,t.createRenderbuffer());var v=r.get(l);n===r.get(u)&&i===r.get(c)||(t.bindRenderbuffer(p,v),t.renderbufferStorage(p,t.DEPTH_COMPONENT16,n,i),r.put(u,n),r.put(c,i),t.bindRenderbuffer(p,null)),r.get(h)||(t.framebufferRenderbuffer(f,m,p,v),r.put(h,!0))}},unbind:function(e){e.__currentFrameBuffer=null;var t=e.gl;t.bindFramebuffer(f,null),this._boundRenderer=null,this._cache.use(e.__uid__);var r=this._cache.get("viewport");r&&e.setViewport(r),this.updateMipmap(e)},updateMipmap:function(e){var t=e.gl;for(var r in this._textures){var n=this._textures[r];if(n){var o=n.texture;if(!o.NPOT&&o.useMipmap&&o.minFilter===i["a"].LINEAR_MIPMAP_LINEAR){var s="textureCube"===o.textureType?a["a"].TEXTURE_CUBE_MAP:a["a"].TEXTURE_2D;t.bindTexture(s,o.getWebGLTexture(e)),t.generateMipmap(s),t.bindTexture(s,null)}}}},checkStatus:function(e){return e.checkFramebufferStatus(f)},_getFrameBufferGL:function(e){var t=this._cache;return t.use(e.__uid__),t.miss(s)&&t.put(s,e.gl.createFramebuffer()),t.get(s)},attach:function(e,t,r){if(!e.width)throw new Error("The texture attached to color buffer is not a valid.");t=t||g,r=r||a["a"].TEXTURE_2D;var n,i=this._boundRenderer,o=i&&i.gl;if(o){var s=this._cache;s.use(i.__uid__),n=s.get("attached_textures")}var l=this._textures[t];if(!l||l.target!==r||l.texture!==e||!n||null==n[t]){var u=!0;i&&(u=this._doAttach(i,e,t,r),this.viewport||i.setViewport(0,0,e.width,e.height,1)),u&&(this._textures[t]=this._textures[t]||{},this._textures[t].texture=e,this._textures[t].target=r)}},_doAttach:function(e,t,r,n){var i=e.gl,o=t.getWebGLTexture(e),s=this._cache.get("attached_textures");if(s&&s[r]){var u=s[r];if(u.texture===t&&u.target===n)return}r=+r;var c=!0;if(r===m||r===a["a"].DEPTH_STENCIL_ATTACHMENT){var g=e.getGLExtension("WEBGL_depth_texture");if(g||(console.error("Depth texture is not supported by the browser"),c=!1),t.format!==a["a"].DEPTH_COMPONENT&&t.format!==a["a"].DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),c=!1),c){var _=this._cache.get(l);_&&(i.framebufferRenderbuffer(f,m,p,null),i.deleteRenderbuffer(_),this._cache.put(l,!1)),this._cache.put(h,!1),this._cache.put(d,!0)}}return i.framebufferTexture2D(f,r,n,o,0),s||(s={},this._cache.put("attached_textures",s)),s[r]=s[r]||{},s[r].texture=t,s[r].target=n,c},_doDetach:function(e,t,r){e.framebufferTexture2D(f,t,r,null,0);var n=this._cache.get("attached_textures");n&&n[t]&&(n[t]=null),t!==m&&t!==a["a"].DEPTH_STENCIL_ATTACHMENT||this._cache.put(d,!1)},detach:function(e,t){if(this._textures[e]=null,this._boundRenderer){var r=this._cache;r.use(this._boundRenderer.__uid__),this._doDetach(this._boundRenderer.gl,e,t)}},dispose:function(e){var t=e.gl,r=this._cache;r.use(e.__uid__);var n=r.get(l);n&&t.deleteRenderbuffer(n);var i=r.get(s);i&&t.deleteFramebuffer(i),r.deleteContext(e.__uid__),this._textures={}}});_.DEPTH_ATTACHMENT=m,_.COLOR_ATTACHMENT0=g,_.STENCIL_ATTACHMENT=a["a"].STENCIL_ATTACHMENT,_.DEPTH_STENCIL_ATTACHMENT=a["a"].DEPTH_STENCIL_ATTACHMENT,t["a"]=_},function(e,t,r){"use strict";t["a"]={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444}},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](3);return e[0]=0,e[1]=0,e[2]=0,e},clone:function(e){var t=new n["a"](3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},fromValues:function(e,t,r){var i=new n["a"](3);return i[0]=e,i[1]=t,i[2]=r,i},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},set:function(e,t,r,n){return e[0]=t,e[1]=r,e[2]=n,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e},subtract:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e}};i.sub=i.subtract,i.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e},i.mul=i.multiply,i.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e},i.div=i.divide,i.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e},i.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e},i.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e},i.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e},i.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(r*r+n*n+i*i)},i.dist=i.distance,i.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return r*r+n*n+i*i},i.sqrDist=i.squaredDistance,i.length=function(e){var t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)},i.len=i.length,i.squaredLength=function(e){var t=e[0],r=e[1],n=e[2];return t*t+r*r+n*n},i.sqrLen=i.squaredLength,i.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},i.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},i.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=r*r+n*n+i*i;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},i.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},i.cross=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],l=r[2];return e[0]=i*l-a*s,e[1]=a*o-n*l,e[2]=n*s-i*o,e},i.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e},i.random=function(e,t){t=t||1;var r=2*Object(n["c"])()*Math.PI,i=2*Object(n["c"])()-1,a=Math.sqrt(1-i*i)*t;return e[0]=Math.cos(r)*a,e[1]=Math.sin(r)*a,e[2]=i*t,e},i.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[3]*n+r[7]*i+r[11]*a+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*i+r[8]*a+r[12])/o,e[1]=(r[1]*n+r[5]*i+r[9]*a+r[13])/o,e[2]=(r[2]*n+r[6]*i+r[10]*a+r[14])/o,e},i.transformMat3=function(e,t,r){var n=t[0],i=t[1],a=t[2];return e[0]=n*r[0]+i*r[3]+a*r[6],e[1]=n*r[1]+i*r[4]+a*r[7],e[2]=n*r[2]+i*r[5]+a*r[8],e},i.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],l=r[2],u=r[3],c=u*n+s*a-l*i,h=u*i+l*n-o*a,d=u*a+o*i-s*n,f=-o*n-s*i-l*a;return e[0]=c*u+f*-o+h*-l-d*-s,e[1]=h*u+f*-s+d*-o-c*-l,e[2]=d*u+f*-l+c*-s-h*-o,e},i.rotateX=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[0],a[1]=i[1]*Math.cos(n)-i[2]*Math.sin(n),a[2]=i[1]*Math.sin(n)+i[2]*Math.cos(n),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},i.rotateY=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[2]*Math.sin(n)+i[0]*Math.cos(n),a[1]=i[1],a[2]=i[2]*Math.cos(n)-i[0]*Math.sin(n),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},i.rotateZ=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[0]*Math.cos(n)-i[1]*Math.sin(n),a[1]=i[0]*Math.sin(n)+i[1]*Math.cos(n),a[2]=i[2],e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},i.forEach=function(){var e=i.create();return function(t,r,n,i,a,o){var s,l;for(r||(r=3),n||(n=0),l=i?Math.min(i*r+n,t.length):t.length,s=n;s<l;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),i.angle=function(e,t){var r=i.fromValues(e[0],e[1],e[2]),n=i.fromValues(t[0],t[1],t[2]);i.normalize(r,r),i.normalize(n,n);var a=i.dot(r,n);return a>1?0:Math.acos(a)},t["a"]=i},function(e,t){var r={"[object Function]":1,"[object RegExp]":1,"[object Date]":1,"[object Error]":1,"[object CanvasGradient]":1,"[object CanvasPattern]":1,"[object Image]":1,"[object Canvas]":1},n={"[object Int8Array]":1,"[object Uint8Array]":1,"[object Uint8ClampedArray]":1,"[object Int16Array]":1,"[object Uint16Array]":1,"[object Int32Array]":1,"[object Uint32Array]":1,"[object Float32Array]":1,"[object Float64Array]":1},i=Object.prototype.toString,a=Array.prototype,o=a.forEach,s=a.filter,l=a.slice,u=a.map,c=a.reduce,h={};function d(e,t){"createCanvas"===e&&(v=null),h[e]=t}function f(e){if(null==e||"object"!=typeof e)return e;var t=e,a=i.call(e);if("[object Array]"===a){if(!Y(e)){t=[];for(var o=0,s=e.length;o<s;o++)t[o]=f(e[o])}}else if(n[a]){if(!Y(e)){var l=e.constructor;if(e.constructor.from)t=l.from(e);else{t=new l(e.length);for(o=0,s=e.length;o<s;o++)t[o]=f(e[o])}}}else if(!r[a]&&!Y(e)&&!U(e))for(var u in t={},e)e.hasOwnProperty(u)&&(t[u]=f(e[u]));return t}function p(e,t,r){if(!I(t)||!I(e))return r?f(t):e;for(var n in t)if(t.hasOwnProperty(n)){var i=e[n],a=t[n];!I(a)||!I(i)||D(a)||D(i)||U(a)||U(i)||F(a)||F(i)||Y(a)||Y(i)?!r&&n in e||(e[n]=f(t[n],!0)):p(i,a,r)}return e}function m(e,t){for(var r=e[0],n=1,i=e.length;n<i;n++)r=p(r,e[n],t);return r}function g(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e}function _(e,t,r){for(var n in t)t.hasOwnProperty(n)&&(r?null!=t[n]:null==e[n])&&(e[n]=t[n]);return e}var v,y=function(){return h.createCanvas()};function x(){return v||(v=y().getContext("2d")),v}function T(e,t){if(e){if(e.indexOf)return e.indexOf(t);for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r}return-1}function b(e,t){var r=e.prototype;function n(){}for(var i in n.prototype=t.prototype,e.prototype=new n,r)e.prototype[i]=r[i];e.prototype.constructor=e,e.superClass=t}function w(e,t,r){e="prototype"in e?e.prototype:e,t="prototype"in t?t.prototype:t,_(e,t,r)}function E(e){if(e)return"string"!=typeof e&&"number"==typeof e.length}function S(e,t,r){if(e&&t)if(e.forEach&&e.forEach===o)e.forEach(t,r);else if(e.length===+e.length)for(var n=0,i=e.length;n<i;n++)t.call(r,e[n],n,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(r,e[a],a,e)}function M(e,t,r){if(e&&t){if(e.map&&e.map===u)return e.map(t,r);for(var n=[],i=0,a=e.length;i<a;i++)n.push(t.call(r,e[i],i,e));return n}}function A(e,t,r,n){if(e&&t){if(e.reduce&&e.reduce===c)return e.reduce(t,r,n);for(var i=0,a=e.length;i<a;i++)r=t.call(n,r,e[i],i,e);return r}}function N(e,t,r){if(e&&t){if(e.filter&&e.filter===s)return e.filter(t,r);for(var n=[],i=0,a=e.length;i<a;i++)t.call(r,e[i],i,e)&&n.push(e[i]);return n}}function C(e,t,r){if(e&&t)for(var n=0,i=e.length;n<i;n++)if(t.call(r,e[n],n,e))return e[n]}function L(e,t){var r=l.call(arguments,2);return function(){return e.apply(t,r.concat(l.call(arguments)))}}function P(e){var t=l.call(arguments,1);return function(){return e.apply(this,t.concat(l.call(arguments)))}}function D(e){return"[object Array]"===i.call(e)}function O(e){return"function"===typeof e}function R(e){return"[object String]"===i.call(e)}function I(e){var t=typeof e;return"function"===t||!!e&&"object"==t}function F(e){return!!r[i.call(e)]}function B(e){return!!n[i.call(e)]}function U(e){return"object"===typeof e&&"number"===typeof e.nodeType&&"object"===typeof e.ownerDocument}function z(e){return e!==e}function G(e){for(var t=0,r=arguments.length;t<r;t++)if(null!=arguments[t])return arguments[t]}function H(e,t){return null!=e?e:t}function k(e,t,r){return null!=e?e:null!=t?t:r}function V(){return Function.call.apply(l,arguments)}function W(e){if("number"===typeof e)return[e,e,e,e];var t=e.length;return 2===t?[e[0],e[1],e[0],e[1]]:3===t?[e[0],e[1],e[2],e[1]]:e}function j(e,t){if(!e)throw new Error(t)}function X(e){return null==e?null:"function"===typeof e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}h.createCanvas=function(){return document.createElement("canvas")};var q="__ec_primitive__";function Z(e){e[q]=!0}function Y(e){return e[q]}function K(e){var t=D(e),r=this;function n(e,n){t?r.set(e,n):r.set(n,e)}e instanceof K?e.each(n):e&&S(e,n)}function Q(e){return new K(e)}function J(e,t){for(var r=new e.constructor(e.length+t.length),n=0;n<e.length;n++)r[n]=e[n];var i=e.length;for(n=0;n<t.length;n++)r[n+i]=t[n];return r}function $(){}K.prototype={constructor:K,get:function(e){return this.hasOwnProperty(e)?this[e]:null},set:function(e,t){return this[e]=t},each:function(e,t){for(var r in void 0!==t&&(e=L(e,t)),this)this.hasOwnProperty(r)&&e(this[r],r)},removeKey:function(e){delete this[e]}},t.$override=d,t.clone=f,t.merge=p,t.mergeAll=m,t.extend=g,t.defaults=_,t.createCanvas=y,t.getContext=x,t.indexOf=T,t.inherits=b,t.mixin=w,t.isArrayLike=E,t.each=S,t.map=M,t.reduce=A,t.filter=N,t.find=C,t.bind=L,t.curry=P,t.isArray=D,t.isFunction=O,t.isString=R,t.isObject=I,t.isBuiltInObject=F,t.isTypedArray=B,t.isDom=U,t.eqNaN=z,t.retrieve=G,t.retrieve2=H,t.retrieve3=k,t.slice=V,t.normalizeCssArray=W,t.assert=j,t.trim=X,t.setAsPrimitive=Z,t.isPrimitive=Y,t.createHashMap=Q,t.concatArray=J,t.noop=$},function(e,t,r){"use strict";(function(e){var n,i=r(112),a={supportWebGL:function(){if(null==n)try{var e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");if(!t)throw new Error}catch(r){n=!1}return n}};a.Int8Array="undefined"===typeof Int8Array?Array:Int8Array,a.Uint8Array="undefined"===typeof Uint8Array?Array:Uint8Array,a.Uint16Array="undefined"===typeof Uint16Array?Array:Uint16Array,a.Uint32Array="undefined"===typeof Uint32Array?Array:Uint32Array,a.Int16Array="undefined"===typeof Int16Array?Array:Int16Array,a.Float32Array="undefined"===typeof Float32Array?Array:Float32Array,a.Float64Array="undefined"===typeof Float64Array?Array:Float64Array;var o={};"undefined"!==typeof window?o=window:"undefined"!==typeof e&&(o=e),a.requestAnimationFrame=o.requestAnimationFrame||o.msRequestAnimationFrame||o.mozRequestAnimationFrame||o.webkitRequestAnimationFrame||function(e){setTimeout(e,16)},a.createCanvas=function(){return document.createElement("canvas")},a.createImage=function(){return new o.Image},a.request={get:i["a"].get},t["a"]=a}).call(t,r(68))},function(e,t,r){"use strict";var n=r(14),i=r(12),a=r(21),o=r(18),s=r(118),l=i["a"].create,u=i["a"].add,c=i["a"].set,h=s["a"].Attribute,d=s["a"].extend((function(){return{attributes:{position:new h("position","float",3,"POSITION"),texcoord0:new h("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new h("texcoord1","float",2,"TEXCOORD_1"),normal:new h("normal","float",3,"NORMAL"),tangent:new h("tangent","float",4,"TANGENT"),color:new h("color","float",4,"COLOR"),weight:new h("weight","float",3,"WEIGHT"),joint:new h("joint","float",4,"JOINT"),barycentric:new h("barycentric","float",3,null)},boundingBox:null}}),{mainAttribute:"position",updateBoundingBox:function(){var e=this.boundingBox;e||(e=this.boundingBox=new o["a"]);var t=this.attributes.position.value;if(t&&t.length){var r=e.min,n=e.max,a=r.array,s=n.array;i["a"].set(a,t[0],t[1],t[2]),i["a"].set(s,t[0],t[1],t[2]);for(var l=3;l<t.length;){var u=t[l++],c=t[l++],h=t[l++];u<a[0]&&(a[0]=u),c<a[1]&&(a[1]=c),h<a[2]&&(a[2]=h),u>s[0]&&(s[0]=u),c>s[1]&&(s[1]=c),h>s[2]&&(s[2]=h)}r._dirty=!0,n._dirty=!0}},generateVertexNormals:function(){if(this.vertexCount){var e=this.indices,t=this.attributes,r=t.position.value,a=t.normal.value;if(a&&a.length===r.length)for(var o=0;o<a.length;o++)a[o]=0;else a=t.normal.value=new n["a"].Float32Array(r.length);for(var s,u,h,d=l(),f=l(),p=l(),m=l(),g=l(),_=l(),v=e?e.length:this.vertexCount,y=0;y<v;){e?(s=e[y++],u=e[y++],h=e[y++]):(s=y++,u=y++,h=y++),c(d,r[3*s],r[3*s+1],r[3*s+2]),c(f,r[3*u],r[3*u+1],r[3*u+2]),c(p,r[3*h],r[3*h+1],r[3*h+2]),i["a"].sub(m,d,f),i["a"].sub(g,f,p),i["a"].cross(_,m,g);for(o=0;o<3;o++)a[3*s+o]=a[3*s+o]+_[o],a[3*u+o]=a[3*u+o]+_[o],a[3*h+o]=a[3*h+o]+_[o]}for(o=0;o<a.length;)c(_,a[o],a[o+1],a[o+2]),i["a"].normalize(_,_),a[o++]=_[0],a[o++]=_[1],a[o++]=_[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.indices,t=this.attributes,r=t.position.value,n=t.normal.value,a=l(),o=l(),s=l(),u=l(),h=l(),d=l();n||(n=t.normal.value=new Float32Array(r.length));for(var f,p,m,g=e?e.length:this.vertexCount,_=0;_<g;){e?(f=e[_++],p=e[_++],m=e[_++]):(f=_++,p=_++,m=_++),c(a,r[3*f],r[3*f+1],r[3*f+2]),c(o,r[3*p],r[3*p+1],r[3*p+2]),c(s,r[3*m],r[3*m+1],r[3*m+2]),i["a"].sub(u,a,o),i["a"].sub(h,o,s),i["a"].cross(d,u,h),i["a"].normalize(d,d);for(var v=0;v<3;v++)n[3*f+v]=d[v],n[3*p+v]=d[v],n[3*m+v]=d[v]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var e=this.vertexCount,t=this.attributes;t.tangent.value||(t.tangent.value=new Float32Array(4*e));var r=t.texcoord0.value,n=t.position.value,a=t.tangent.value,o=t.normal.value;if(r){for(var s=[],c=[],h=0;h<e;h++)s[h]=[0,0,0],c[h]=[0,0,0];var d,f,p,m=[0,0,0],g=[0,0,0],_=this.indices,v=_?_.length:this.vertexCount;for(h=0;h<v;){_?(d=_[h++],f=_[h++],p=_[h++]):(d=h++,f=h++,p=h++);var y=r[2*d],x=r[2*f],T=r[2*p],b=r[2*d+1],w=r[2*f+1],E=r[2*p+1],S=n[3*d],M=n[3*f],A=n[3*p],N=n[3*d+1],C=n[3*f+1],L=n[3*p+1],P=n[3*d+2],D=n[3*f+2],O=n[3*p+2],R=M-S,I=A-S,F=C-N,B=L-N,U=D-P,z=O-P,G=x-y,H=T-y,k=w-b,V=E-b,W=1/(G*V-k*H);m[0]=(V*R-k*I)*W,m[1]=(V*F-k*B)*W,m[2]=(V*U-k*z)*W,g[0]=(G*I-H*R)*W,g[1]=(G*B-H*F)*W,g[2]=(G*z-H*U)*W,u(s[d],s[d],m),u(s[f],s[f],m),u(s[p],s[p],m),u(c[d],c[d],g),u(c[f],c[f],g),u(c[p],c[p],g)}var j=l(),X=l(),q=l();for(h=0;h<e;h++){q[0]=o[3*h],q[1]=o[3*h+1],q[2]=o[3*h+2];var Z=s[h];i["a"].scale(j,q,i["a"].dot(q,Z)),i["a"].sub(j,Z,j),i["a"].normalize(j,j),i["a"].cross(X,q,Z),a[4*h]=j[0],a[4*h+1]=j[1],a[4*h+2]=j[2],a[4*h+3]=i["a"].dot(X,c[h])<0?-1:1}this.dirty()}else console.warn("Geometry without texcoords can't generate tangents.")}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount&&this.indices){this.indices.length>65535&&(this.indices=new n["a"].Uint32Array(this.indices));for(var e=this.attributes,t=this.indices,r=this.getEnabledAttributes(),i={},a=0;a<r.length;a++){var o=r[a];i[o]=e[o].value,e[o].init(this.indices.length)}for(var s=0,l=0;l<t.length;l++){var u=t[l];for(a=0;a<r.length;a++){o=r[a];for(var c=e[o].value,h=e[o].size,d=0;d<h;d++)c[s*h+d]=i[o][u*h+d]}t[l]=s,s++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.attributes,t=e.barycentric.value,r=this.indices;if(!t||t.length!==3*r.length){t=e.barycentric.value=new Float32Array(3*r.length);for(var n=0;n<(r?r.length:this.vertexCount/3);)for(var i=0;i<3;i++){var a=r?r[n++]:3*n+i;t[3*a+i]=1}this.dirty()}}},applyTransform:function(e){var t=this.attributes,r=t.position.value,n=t.normal.value,o=t.tangent.value;e=e.array;var s=a["a"].create();a["a"].invert(s,e),a["a"].transpose(s,s);var l=i["a"].transformMat4,u=i["a"].forEach;u(r,3,0,null,l,e),n&&u(n,3,0,null,l,s),o&&u(o,4,0,null,l,s),this.boundingBox&&this.updateBoundingBox()},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("chunks");if(r)for(var n=0;n<r.length;n++){for(var i=r[n],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}i.indicesBuffer&&e.gl.deleteBuffer(i.indicesBuffer.buffer)}if(this.__vaoCache){var s=e.getGLExtension("OES_vertex_array_object");for(var l in this.__vaoCache){var u=this.__vaoCache[l].vao;u&&s.deleteVertexArrayOES(u)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});d.STATIC_DRAW=s["a"].STATIC_DRAW,d.DYNAMIC_DRAW=s["a"].DYNAMIC_DRAW,d.STREAM_DRAW=s["a"].STREAM_DRAW,d.AttributeBuffer=s["a"].AttributeBuffer,d.IndicesBuffer=s["a"].IndicesBuffer,d.Attribute=h,t["a"]=d},function(e,t,r){"use strict";var n=r(7),i=r(37),a=r(43),o=r(8),s=r(19),l=r(40),u=r(11),c=r(126);o["a"]["import"](c["a"]);var h=new a["a"],d=new l["a"]({geometry:h,frustumCulling:!1}),f=new i["a"],p=n["a"].extend((function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}}),(function(){var e=new o["a"](o["a"].source("clay.compositor.vertex"),this.fragment),t=new s["a"]({shader:e});t.enableTexturesAll(),this.material=t}),{setUniform:function(e,t){this.material.setUniform(e,t)},getUniform:function(e){var t=this.material.uniforms[e];if(t)return t.value},attachOutput:function(e,t){this.outputs||(this.outputs={}),t=t||u["a"].COLOR_ATTACHMENT0,this.outputs[t]=e},detachOutput:function(e){for(var t in this.outputs)this.outputs[t]===e&&(this.outputs[t]=null)},bind:function(e,t){if(this.outputs)for(var r in this.outputs){var n=this.outputs[r];n&&t.attach(n,r)}t&&t.bind(e)},unbind:function(e,t){t.unbind(e)},render:function(e,t){var r=e.gl;if(t){this.bind(e,t);var n=e.getGLExtension("EXT_draw_buffers");if(n&&this.outputs){var i=[];for(var a in this.outputs)a=+a,a>=r.COLOR_ATTACHMENT0&&a<=r.COLOR_ATTACHMENT0+8&&i.push(a);n.drawBuffersEXT(i)}}this.trigger("beforerender",this,e);var o=this.clearDepth?r.DEPTH_BUFFER_BIT:0;if(r.depthMask(!0),this.clearColor){o|=r.COLOR_BUFFER_BIT,r.colorMask(!0,!0,!0,!0);var s=this.clearColor;Array.isArray(s)&&r.clearColor(s[0],s[1],s[2],s[3])}r.clear(o),this.blendWithPrevious?(r.enable(r.BLEND),this.material.transparent=!0):(r.disable(r.BLEND),this.material.transparent=!1),this.renderQuad(e),this.trigger("afterrender",this,e),t&&this.unbind(e,t)},renderQuad:function(e){d.material=this.material,e.renderPass([d],f)},dispose:function(e){}});t["a"]=p},function(e,t,r){"use strict";t["a"]=function(e,t,r){return{seriesType:e,reset:function(e,t){var r=e.getData(),n=e.visualColorAccessPath.split(".");n[n.length-1]="opacity";var i=e.get(n);function a(e,t){var r=e.getItemModel(t),i=r.get(n,!0);null!=i&&e.setItemVisual(t,"opacity",i)}return r.setVisual("opacity",null==i?1:i),{dataEach:r.hasItemOption?a:null}}}}},function(e,t,r){"use strict";var n=r(3),i=r(12),a=i["a"].set,o=i["a"].copy,s=function(e,t){this.min=e||new n["a"](1/0,1/0,1/0),this.max=t||new n["a"](-1/0,-1/0,-1/0),this.vertices=null};s.prototype={constructor:s,updateFromVertices:function(e){if(e.length>0){var t=this.min,r=this.max,n=t.array,i=r.array;o(n,e[0]),o(i,e[0]);for(var a=1;a<e.length;a++){var s=e[a];s[0]<n[0]&&(n[0]=s[0]),s[1]<n[1]&&(n[1]=s[1]),s[2]<n[2]&&(n[2]=s[2]),s[0]>i[0]&&(i[0]=s[0]),s[1]>i[1]&&(i[1]=s[1]),s[2]>i[2]&&(i[2]=s[2])}t._dirty=!0,r._dirty=!0}},union:function(e){var t=this.min,r=this.max;return i["a"].min(t.array,t.array,e.min.array),i["a"].max(r.array,r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},intersection:function(e){var t=this.min,r=this.max;return i["a"].max(t.array,t.array,e.min.array),i["a"].min(r.array,r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},intersectBoundingBox:function(e){var t=this.min.array,r=this.max.array,n=e.min.array,i=e.max.array;return!(t[0]>i[0]||t[1]>i[1]||t[2]>i[2]||r[0]<n[0]||r[1]<n[1]||r[2]<n[2])},containBoundingBox:function(e){var t=this.min.array,r=this.max.array,n=e.min.array,i=e.max.array;return t[0]<=n[0]&&t[1]<=n[1]&&t[2]<=n[2]&&r[0]>=i[0]&&r[1]>=i[1]&&r[2]>=i[2]},containPoint:function(e){var t=this.min.array,r=this.max.array,n=e.array;return t[0]<=n[0]&&t[1]<=n[1]&&t[2]<=n[2]&&r[0]>=n[0]&&r[1]>=n[1]&&r[2]>=n[2]},isFinite:function(){var e=this.min.array,t=this.max.array;return isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])&&isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])},applyTransform:function(e){this.transformFrom(this,e)},transformFrom:function(){var e=i["a"].create(),t=i["a"].create(),r=i["a"].create(),n=i["a"].create(),a=i["a"].create(),o=i["a"].create();return function(i,s){var l=i.min.array,u=i.max.array,c=s.array;return e[0]=c[0]*l[0],e[1]=c[1]*l[0],e[2]=c[2]*l[0],t[0]=c[0]*u[0],t[1]=c[1]*u[0],t[2]=c[2]*u[0],r[0]=c[4]*l[1],r[1]=c[5]*l[1],r[2]=c[6]*l[1],n[0]=c[4]*u[1],n[1]=c[5]*u[1],n[2]=c[6]*u[1],a[0]=c[8]*l[2],a[1]=c[9]*l[2],a[2]=c[10]*l[2],o[0]=c[8]*u[2],o[1]=c[9]*u[2],o[2]=c[10]*u[2],l=this.min.array,u=this.max.array,l[0]=Math.min(e[0],t[0])+Math.min(r[0],n[0])+Math.min(a[0],o[0])+c[12],l[1]=Math.min(e[1],t[1])+Math.min(r[1],n[1])+Math.min(a[1],o[1])+c[13],l[2]=Math.min(e[2],t[2])+Math.min(r[2],n[2])+Math.min(a[2],o[2])+c[14],u[0]=Math.max(e[0],t[0])+Math.max(r[0],n[0])+Math.max(a[0],o[0])+c[12],u[1]=Math.max(e[1],t[1])+Math.max(r[1],n[1])+Math.max(a[1],o[1])+c[13],u[2]=Math.max(e[2],t[2])+Math.max(r[2],n[2])+Math.max(a[2],o[2])+c[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(e){var t=this.min.array,r=this.max.array,n=e.array,i=t[0],a=t[1],o=t[2],s=r[0],l=r[1],u=t[2],c=r[0],h=r[1],d=r[2];if(1===n[15])t[0]=n[0]*i+n[12],t[1]=n[5]*a+n[13],r[2]=n[10]*o+n[14],r[0]=n[0]*c+n[12],r[1]=n[5]*h+n[13],t[2]=n[10]*d+n[14];else{var f=-1/o;t[0]=n[0]*i*f,t[1]=n[5]*a*f,r[2]=(n[10]*o+n[14])*f,f=-1/u,r[0]=n[0]*s*f,r[1]=n[5]*l*f,f=-1/d,t[2]=(n[10]*d+n[14])*f}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var e=this.vertices;if(!e){e=[];for(var t=0;t<8;t++)e[t]=i["a"].fromValues(0,0,0);this.vertices=e}var r=this.min.array,n=this.max.array;return a(e[0],r[0],r[1],r[2]),a(e[1],r[0],n[1],r[2]),a(e[2],n[0],r[1],r[2]),a(e[3],n[0],n[1],r[2]),a(e[4],r[0],r[1],n[2]),a(e[5],r[0],n[1],n[2]),a(e[6],n[0],r[1],n[2]),a(e[7],n[0],n[1],n[2]),this},copy:function(e){var t=this.min,r=this.max;return o(t.array,e.min.array),o(r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},clone:function(){var e=new s;return e.copy(this),e}},t["a"]=s},function(e,t,r){"use strict";var n=r(7),i=r(23),a=r(113),o=a["a"].parseToFloat,s={};function l(e){var t=Object.keys(e);t.sort();for(var r=[],n=0;n<t.length;n++){var i=t[n],a=e[i];null===a?r.push(i):r.push(i+" "+a.toString())}return r.join("\n")}function u(e,t,r){r.sort();for(var n=[],a=0;a<r.length;a++){var o=r[a];n.push(o)}var u=l(e)+"\n"+l(t)+"\n"+n.join("\n");if(s[u])return s[u];var c=i["a"].genGUID();return s[u]=c,c}var c=n["a"].extend((function(){return{name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,autoUpdateTextureStatus:!0,uniforms:{},vertexDefines:{},fragmentDefines:{},_textureStatus:{},_enabledUniforms:null}}),(function(){this.name||(this.name="MATERIAL_"+this.__uid__),this.shader&&this.attachShader(this.shader,!0)}),{precision:"highp",setUniform:function(e,t){void 0===t&&console.warn('Uniform value "'+e+'" is undefined');var r=this.uniforms[e];r&&("string"===typeof t&&(t=o(t)||t),r.value=t,this.autoUpdateTextureStatus&&"t"===r.type&&(t?this.enableTexture(e):this.disableTexture(e)))},setUniforms:function(e){for(var t in e){var r=e[t];this.setUniform(t,r)}},isUniformEnabled:function(e){return this._enabledUniforms.indexOf(e)>=0},getEnabledUniforms:function(){return this._enabledUniforms},getTextureUniforms:function(){return this._textureUniforms},set:function(e,t){if("object"===typeof e)for(var r in e){var n=e[r];this.setUniform(r,n)}else this.setUniform(e,t)},get:function(e){var t=this.uniforms[e];if(t)return t.value},attachShader:function(e,t){var r=this.uniforms;this.uniforms=e.createUniforms(),this.shader=e;var n=this.uniforms;this._enabledUniforms=Object.keys(n),this._enabledUniforms.sort(),this._textureUniforms=this._enabledUniforms.filter((function(e){var t=this.uniforms[e].type;return"t"===t||"tv"===t}),this);var a=this.vertexDefines,o=this.fragmentDefines;if(this.vertexDefines=i["a"].clone(e.vertexDefines),this.fragmentDefines=i["a"].clone(e.fragmentDefines),t){for(var s in r)n[s]&&(n[s].value=r[s].value);i["a"].defaults(this.vertexDefines,a),i["a"].defaults(this.fragmentDefines,o)}var l={};for(var u in e.textures)l[u]={shaderType:e.textures[u].shaderType,type:e.textures[u].type,enabled:!(!t||!this._textureStatus[u])&&this._textureStatus[u].enabled};this._textureStatus=l,this._programKey=""},clone:function(){var e=new this.constructor({name:this.name,shader:this.shader});for(var t in this.uniforms)e.uniforms[t].value=this.uniforms[t].value;return e.depthTest=this.depthTest,e.depthMask=this.depthMask,e.transparent=this.transparent,e.blend=this.blend,e.vertexDefines=i["a"].clone(this.vertexDefines),e.fragmentDefines=i["a"].clone(this.fragmentDefines),e.enableTexture(this.getEnabledTextures()),e.precision=this.precision,e},define:function(e,t,r){var n=this.vertexDefines,i=this.fragmentDefines;"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<3&&(r=t,t=e,e="both"),r=null!=r?r:null,"vertex"!==e&&"both"!==e||n[t]!==r&&(n[t]=r,this._programKey=""),"fragment"!==e&&"both"!==e||i[t]!==r&&(i[t]=r,"both"!==e&&(this._programKey=""))},undefine:function(e,t){"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<2&&(t=e,e="both"),"vertex"!==e&&"both"!==e||this.isDefined("vertex",t)&&(delete this.vertexDefines[t],this._programKey=""),"fragment"!==e&&"both"!==e||this.isDefined("fragment",t)&&(delete this.fragmentDefines[t],"both"!==e&&(this._programKey=""))},isDefined:function(e,t){switch(e){case"vertex":return void 0!==this.vertexDefines[t];case"fragment":return void 0!==this.fragmentDefines[t]}},getDefine:function(e,t){switch(e){case"vertex":return this.vertexDefines[t];case"fragment":return this.fragmentDefines[t]}},enableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.enableTexture(e[t]);else{var r=this._textureStatus[e];if(r){var n=r.enabled;n||(r.enabled=!0,this._programKey="")}}},enableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!0;this._programKey=""},disableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.disableTexture(e[t]);else{var r=this._textureStatus[e];if(r){var n=!r.enabled;n||(r.enabled=!1,this._programKey="")}}},disableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!1;this._programKey=""},isTextureEnabled:function(e){var t=this._textureStatus;return!!t[e]&&t[e].enabled},getEnabledTextures:function(){var e=[],t=this._textureStatus;for(var r in t)t[r].enabled&&e.push(r);return e},dirtyDefines:function(){this._programKey=""},getProgramKey:function(){return this._programKey||(this._programKey=u(this.vertexDefines,this.fragmentDefines,this.getEnabledTextures())),this._programKey}});t["a"]=c},function(e,t,r){"use strict";r.d(t,"b",(function(){return n})),r.d(t,"a",(function(){return i})),r.d(t,"c",(function(){return a}));var n=1e-6,i=Array,a=Math.random},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},clone:function(e){var t=new n["a"](16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},transpose:function(e,t){if(e===t){var r=t[1],n=t[2],i=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=a,e[11]=t[14],e[12]=i,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},invert:function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],c=t[8],h=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15],v=r*s-n*o,y=r*l-i*o,x=r*u-a*o,T=n*l-i*s,b=n*u-a*s,w=i*u-a*l,E=c*m-h*p,S=c*g-d*p,M=c*_-f*p,A=h*g-d*m,N=h*_-f*m,C=d*_-f*g,L=v*C-y*N+x*A+T*M-b*S+w*E;return L?(L=1/L,e[0]=(s*C-l*N+u*A)*L,e[1]=(i*N-n*C-a*A)*L,e[2]=(m*w-g*b+_*T)*L,e[3]=(d*b-h*w-f*T)*L,e[4]=(l*M-o*C-u*S)*L,e[5]=(r*C-i*M+a*S)*L,e[6]=(g*x-p*w-_*y)*L,e[7]=(c*w-d*x+f*y)*L,e[8]=(o*N-s*M+u*E)*L,e[9]=(n*M-r*N-a*E)*L,e[10]=(p*b-m*x+_*v)*L,e[11]=(h*x-c*b-f*v)*L,e[12]=(s*S-o*A-l*E)*L,e[13]=(r*A-n*S+i*E)*L,e[14]=(m*y-p*T-g*v)*L,e[15]=(c*T-h*y+d*v)*L,e):null},adjoint:function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],c=t[8],h=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15];return e[0]=s*(d*_-f*g)-h*(l*_-u*g)+m*(l*f-u*d),e[1]=-(n*(d*_-f*g)-h*(i*_-a*g)+m*(i*f-a*d)),e[2]=n*(l*_-u*g)-s*(i*_-a*g)+m*(i*u-a*l),e[3]=-(n*(l*f-u*d)-s*(i*f-a*d)+h*(i*u-a*l)),e[4]=-(o*(d*_-f*g)-c*(l*_-u*g)+p*(l*f-u*d)),e[5]=r*(d*_-f*g)-c*(i*_-a*g)+p*(i*f-a*d),e[6]=-(r*(l*_-u*g)-o*(i*_-a*g)+p*(i*u-a*l)),e[7]=r*(l*f-u*d)-o*(i*f-a*d)+c*(i*u-a*l),e[8]=o*(h*_-f*m)-c*(s*_-u*m)+p*(s*f-u*h),e[9]=-(r*(h*_-f*m)-c*(n*_-a*m)+p*(n*f-a*h)),e[10]=r*(s*_-u*m)-o*(n*_-a*m)+p*(n*u-a*s),e[11]=-(r*(s*f-u*h)-o*(n*f-a*h)+c*(n*u-a*s)),e[12]=-(o*(h*g-d*m)-c*(s*g-l*m)+p*(s*d-l*h)),e[13]=r*(h*g-d*m)-c*(n*g-i*m)+p*(n*d-i*h),e[14]=-(r*(s*g-l*m)-o*(n*g-i*m)+p*(n*l-i*s)),e[15]=r*(s*d-l*h)-o*(n*d-i*h)+c*(n*l-i*s),e},determinant:function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15],_=t*o-r*a,v=t*s-n*a,y=t*l-i*a,x=r*s-n*o,T=r*l-i*o,b=n*l-i*s,w=u*p-c*f,E=u*m-h*f,S=u*g-d*f,M=c*m-h*p,A=c*g-d*p,N=h*g-d*m;return _*N-v*A+y*M+x*S-T*E+b*w},multiply:function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],c=t[7],h=t[8],d=t[9],f=t[10],p=t[11],m=t[12],g=t[13],_=t[14],v=t[15],y=r[0],x=r[1],T=r[2],b=r[3];return e[0]=y*n+x*s+T*h+b*m,e[1]=y*i+x*l+T*d+b*g,e[2]=y*a+x*u+T*f+b*_,e[3]=y*o+x*c+T*p+b*v,y=r[4],x=r[5],T=r[6],b=r[7],e[4]=y*n+x*s+T*h+b*m,e[5]=y*i+x*l+T*d+b*g,e[6]=y*a+x*u+T*f+b*_,e[7]=y*o+x*c+T*p+b*v,y=r[8],x=r[9],T=r[10],b=r[11],e[8]=y*n+x*s+T*h+b*m,e[9]=y*i+x*l+T*d+b*g,e[10]=y*a+x*u+T*f+b*_,e[11]=y*o+x*c+T*p+b*v,y=r[12],x=r[13],T=r[14],b=r[15],e[12]=y*n+x*s+T*h+b*m,e[13]=y*i+x*l+T*d+b*g,e[14]=y*a+x*u+T*f+b*_,e[15]=y*o+x*c+T*p+b*v,e},multiplyAffine:function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[4],s=t[5],l=t[6],u=t[8],c=t[9],h=t[10],d=t[12],f=t[13],p=t[14],m=r[0],g=r[1],_=r[2];return e[0]=m*n+g*o+_*u,e[1]=m*i+g*s+_*c,e[2]=m*a+g*l+_*h,m=r[4],g=r[5],_=r[6],e[4]=m*n+g*o+_*u,e[5]=m*i+g*s+_*c,e[6]=m*a+g*l+_*h,m=r[8],g=r[9],_=r[10],e[8]=m*n+g*o+_*u,e[9]=m*i+g*s+_*c,e[10]=m*a+g*l+_*h,m=r[12],g=r[13],_=r[14],e[12]=m*n+g*o+_*u+d,e[13]=m*i+g*s+_*c+f,e[14]=m*a+g*l+_*h+p,e}};i.mul=i.multiply,i.mulAffine=i.multiplyAffine,i.translate=function(e,t,r){var n,i,a,o,s,l,u,c,h,d,f,p,m=r[0],g=r[1],_=r[2];return t===e?(e[12]=t[0]*m+t[4]*g+t[8]*_+t[12],e[13]=t[1]*m+t[5]*g+t[9]*_+t[13],e[14]=t[2]*m+t[6]*g+t[10]*_+t[14],e[15]=t[3]*m+t[7]*g+t[11]*_+t[15]):(n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],c=t[7],h=t[8],d=t[9],f=t[10],p=t[11],e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=u,e[7]=c,e[8]=h,e[9]=d,e[10]=f,e[11]=p,e[12]=n*m+s*g+h*_+t[12],e[13]=i*m+l*g+d*_+t[13],e[14]=a*m+u*g+f*_+t[14],e[15]=o*m+c*g+p*_+t[15]),e},i.scale=function(e,t,r){var n=r[0],i=r[1],a=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},i.rotate=function(e,t,r,i){var a,o,s,l,u,c,h,d,f,p,m,g,_,v,y,x,T,b,w,E,S,M,A,N,C=i[0],L=i[1],P=i[2],D=Math.sqrt(C*C+L*L+P*P);return Math.abs(D)<n["b"]?null:(D=1/D,C*=D,L*=D,P*=D,a=Math.sin(r),o=Math.cos(r),s=1-o,l=t[0],u=t[1],c=t[2],h=t[3],d=t[4],f=t[5],p=t[6],m=t[7],g=t[8],_=t[9],v=t[10],y=t[11],x=C*C*s+o,T=L*C*s+P*a,b=P*C*s-L*a,w=C*L*s-P*a,E=L*L*s+o,S=P*L*s+C*a,M=C*P*s+L*a,A=L*P*s-C*a,N=P*P*s+o,e[0]=l*x+d*T+g*b,e[1]=u*x+f*T+_*b,e[2]=c*x+p*T+v*b,e[3]=h*x+m*T+y*b,e[4]=l*w+d*E+g*S,e[5]=u*w+f*E+_*S,e[6]=c*w+p*E+v*S,e[7]=h*w+m*E+y*S,e[8]=l*M+d*A+g*N,e[9]=u*M+f*A+_*N,e[10]=c*M+p*A+v*N,e[11]=h*M+m*A+y*N,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)},i.rotateX=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[4],o=t[5],s=t[6],l=t[7],u=t[8],c=t[9],h=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*i+u*n,e[5]=o*i+c*n,e[6]=s*i+h*n,e[7]=l*i+d*n,e[8]=u*i-a*n,e[9]=c*i-o*n,e[10]=h*i-s*n,e[11]=d*i-l*n,e},i.rotateY=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],l=t[3],u=t[8],c=t[9],h=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i-u*n,e[1]=o*i-c*n,e[2]=s*i-h*n,e[3]=l*i-d*n,e[8]=a*n+u*i,e[9]=o*n+c*i,e[10]=s*n+h*i,e[11]=l*n+d*i,e},i.rotateZ=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],l=t[3],u=t[4],c=t[5],h=t[6],d=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i+u*n,e[1]=o*i+c*n,e[2]=s*i+h*n,e[3]=l*i+d*n,e[4]=u*i-a*n,e[5]=c*i-o*n,e[6]=h*i-s*n,e[7]=d*i-l*n,e},i.fromRotationTranslation=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=n+n,l=i+i,u=a+a,c=n*s,h=n*l,d=n*u,f=i*l,p=i*u,m=a*u,g=o*s,_=o*l,v=o*u;return e[0]=1-(f+m),e[1]=h+v,e[2]=d-_,e[3]=0,e[4]=h-v,e[5]=1-(c+m),e[6]=p+g,e[7]=0,e[8]=d+_,e[9]=p-g,e[10]=1-(c+f),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e},i.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,l=i+i,u=r*o,c=n*o,h=n*s,d=i*o,f=i*s,p=i*l,m=a*o,g=a*s,_=a*l;return e[0]=1-h-p,e[1]=c+_,e[2]=d-g,e[3]=0,e[4]=c-_,e[5]=1-u-p,e[6]=f+m,e[7]=0,e[8]=d+g,e[9]=f-m,e[10]=1-u-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},i.frustum=function(e,t,r,n,i,a,o){var s=1/(r-t),l=1/(i-n),u=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*l,e[6]=0,e[7]=0,e[8]=(r+t)*s,e[9]=(i+n)*l,e[10]=(o+a)*u,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*u,e[15]=0,e},i.perspective=function(e,t,r,n,i){var a=1/Math.tan(t/2),o=1/(n-i);return e[0]=a/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(i+n)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*i*n*o,e[15]=0,e},i.ortho=function(e,t,r,n,i,a,o){var s=1/(t-r),l=1/(n-i),u=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*u,e[11]=0,e[12]=(t+r)*s,e[13]=(i+n)*l,e[14]=(o+a)*u,e[15]=1,e},i.lookAt=function(e,t,r,a){var o,s,l,u,c,h,d,f,p,m,g=t[0],_=t[1],v=t[2],y=a[0],x=a[1],T=a[2],b=r[0],w=r[1],E=r[2];return Math.abs(g-b)<n["b"]&&Math.abs(_-w)<n["b"]&&Math.abs(v-E)<n["b"]?i.identity(e):(d=g-b,f=_-w,p=v-E,m=1/Math.sqrt(d*d+f*f+p*p),d*=m,f*=m,p*=m,o=x*p-T*f,s=T*d-y*p,l=y*f-x*d,m=Math.sqrt(o*o+s*s+l*l),m?(m=1/m,o*=m,s*=m,l*=m):(o=0,s=0,l=0),u=f*l-p*s,c=p*o-d*l,h=d*s-f*o,m=Math.sqrt(u*u+c*c+h*h),m?(m=1/m,u*=m,c*=m,h*=m):(u=0,c=0,h=0),e[0]=o,e[1]=u,e[2]=d,e[3]=0,e[4]=s,e[5]=c,e[6]=f,e[7]=0,e[8]=l,e[9]=h,e[10]=p,e[11]=0,e[12]=-(o*g+s*_+l*v),e[13]=-(u*g+c*_+h*v),e[14]=-(d*g+f*_+p*v),e[15]=1,e)},i.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))},t["a"]=i},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(36),o=r(174),s=r(41),l=r(37),u=r(9),c=r(3),h=r(26),d=r(53),f=r(176),p=r(200),m=r(49);function g(e){e=e||"perspective",this.layer=null,this.scene=new a["a"],this.rootNode=this.scene,this.viewport={x:0,y:0,width:0,height:0},this.setProjection(e),this._compositor=new f["a"],this._temporalSS=new p["a"],this._shadowMapPass=new o["a"];for(var t=[],r=0,n=0;n<30;n++){for(var i=[],s=0;s<6;s++)i.push(4*Object(m["a"])(r,2)-2),i.push(4*Object(m["a"])(r,3)-2),r++;t.push(i)}this._pcfKernels=t,this.scene.on("beforerender",(function(e,t,r){this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,r)}),this)}g.prototype.setProjection=function(e){var t=this.camera;t&&t.update(),"perspective"===e?this.camera instanceof s["a"]||(this.camera=new s["a"],t&&this.camera.setLocalTransform(t.localTransform)):this.camera instanceof l["a"]||(this.camera=new l["a"],t&&this.camera.setLocalTransform(t.localTransform)),this.camera.near=.1,this.camera.far=2e3},g.prototype.setViewport=function(e,t,r,n,i){this.camera instanceof s["a"]&&(this.camera.aspect=r/n),i=i||1,this.viewport.x=e,this.viewport.y=t,this.viewport.width=r,this.viewport.height=n,this.viewport.devicePixelRatio=i,this._compositor.resize(r*i,n*i),this._temporalSS.resize(r*i,n*i)},g.prototype.containPoint=function(e,t){var r=this.viewport,n=this.layer.renderer.getHeight();return t=n-t,e>=r.x&&t>=r.y&&e<=r.x+r.width&&t<=r.y+r.height};var _=new h["a"];g.prototype.castRay=function(e,t,r){var n=this.layer.renderer,i=n.viewport;return n.viewport=this.viewport,n.screenToNDC(e,t,_),this.camera.castRay(_,r),n.viewport=i,r},g.prototype.prepareRender=function(){this.scene.update(),this.camera.update(),this.scene.updateLights();var e=this.scene.updateRenderList(this.camera);this._needsSortProgressively=!1;for(var t=0;t<e.transparent.length;t++){var r=e.transparent[t],n=r.geometry;n.needsSortVerticesProgressively&&n.needsSortVerticesProgressively()&&(this._needsSortProgressively=!0),n.needsSortTrianglesProgressively&&n.needsSortTrianglesProgressively()&&(this._needsSortProgressively=!0)}this._frame=0,this._temporalSS.resetFrame()},g.prototype.render=function(e,t){this._doRender(e,t,this._frame),this._frame++},g.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively},g.prototype.needsTemporalSS=function(){var e=this._enableTemporalSS;return"auto"===e&&(e=this._enablePostEffect),e},g.prototype.hasDOF=function(){return this._enableDOF},g.prototype.isAccumulateFinished=function(){return this.needsTemporalSS()?this._temporalSS.isFinished():this._frame>30},g.prototype._doRender=function(e,t,r){var n=this.scene,i=this.camera;r=r||0,this._updateTransparent(e,n,i,r),t||(this._shadowMapPass.kernelPCF=this._pcfKernels[0],this._shadowMapPass.render(e,n,i,!0)),this._updateShadowPCFKernel(r);var a=e.clearColor;if(e.gl.clearColor(a[0],a[1],a[2],a[3]),this._enablePostEffect&&(this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,i),this._compositor.updateNormal(e,n,i,this._temporalSS.getFrame())),this._updateSSAO(e,n,i,this._temporalSS.getFrame()),this._enablePostEffect){var o=this._compositor.getSourceFrameBuffer();o.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),e.render(n,i,!0,!0),o.unbind(e),this.needsTemporalSS()&&t?(this._compositor.composite(e,n,i,this._temporalSS.getSourceFrameBuffer(),this._temporalSS.getFrame()),e.setViewport(this.viewport),this._temporalSS.render(e)):(e.setViewport(this.viewport),this._compositor.composite(e,n,i,null,0))}else if(this.needsTemporalSS()&&t){o=this._temporalSS.getSourceFrameBuffer();o.bind(e),e.saveClear(),e.clearBit=e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT,e.render(n,i,!0,!0),e.restoreClear(),o.unbind(e),e.setViewport(this.viewport),this._temporalSS.render(e)}else e.setViewport(this.viewport),e.render(n,i,!0,!0)},g.prototype._updateTransparent=function(e,t,r,n){for(var i=new c["a"],a=new u["a"],o=r.getWorldPosition(),s=t.getRenderList(r).transparent,l=0;l<s.length;l++){var h=s[l],d=h.geometry;u["a"].invert(a,h.worldTransform),c["a"].transformMat4(i,o,a),d.needsSortTriangles&&d.needsSortTriangles()&&d.doSortTriangles(i,n),d.needsSortVertices&&d.needsSortVertices()&&d.doSortVertices(i,n)}},g.prototype._updateSSAO=function(e,t,r){var n=this._enableSSAO&&this._enablePostEffect;n&&this._compositor.updateSSAO(e,t,r,this._temporalSS.getFrame());for(var i=t.getRenderList(r),a=0;a<i.opaque.length;a++){var o=i.opaque[a];o.renderNormal&&o.material[n?"enableTexture":"disableTexture"]("ssaoMap"),n&&o.material.set("ssaoMap",this._compositor.getSSAOTexture())}},g.prototype._updateShadowPCFKernel=function(e){for(var t=this._pcfKernels[e%this._pcfKernels.length],r=this.scene.getRenderList(this.camera),n=r.opaque,i=0;i<n.length;i++)n[i].receiveShadow&&(n[i].material.set("pcfKernel",t),n[i].material.define("fragment","PCF_KERNEL_SIZE",t.length/2))},g.prototype.dispose=function(e){this._compositor.dispose(e.gl),this._temporalSS.dispose(e.gl),this._shadowMapPass.dispose(e)},g.prototype.setPostEffect=function(e,t){var r=this._compositor;this._enablePostEffect=e.get("enable");var n=e.getModel("bloom"),i=e.getModel("edge"),a=e.getModel("DOF",e.getModel("depthOfField")),o=e.getModel("SSAO",e.getModel("screenSpaceAmbientOcclusion")),s=e.getModel("SSR",e.getModel("screenSpaceReflection")),l=e.getModel("FXAA"),u=e.getModel("colorCorrection");n.get("enable")?r.enableBloom():r.disableBloom(),a.get("enable")?r.enableDOF():r.disableDOF(),s.get("enable")?r.enableSSR():r.disableSSR(),u.get("enable")?r.enableColorCorrection():r.disableColorCorrection(),i.get("enable")?r.enableEdge():r.disableEdge(),l.get("enable")?r.enableFXAA():r.disableFXAA(),this._enableDOF=a.get("enable"),this._enableSSAO=o.get("enable"),this._enableSSAO?r.enableSSAO():r.disableSSAO(),r.setBloomIntensity(n.get("intensity")),r.setEdgeColor(i.get("color")),r.setColorLookupTexture(u.get("lookupTexture"),t),r.setExposure(u.get("exposure")),["radius","quality","intensity"].forEach((function(e){r.setSSAOParameter(e,o.get(e))})),["quality","maxRoughness","physical"].forEach((function(e){r.setSSRParameter(e,s.get(e))})),["quality","focalDistance","focalRange","blurRadius","fstop"].forEach((function(e){r.setDOFParameter(e,a.get(e))})),["brightness","contrast","saturation"].forEach((function(e){r.setColorCorrection(e,u.get(e))}))},g.prototype.setDOFFocusOnPoint=function(e){if(this._enablePostEffect){if(e>this.camera.far||e<this.camera.near)return;return this._compositor.setDOFParameter("focalDistance",e),!0}},g.prototype.setTemporalSuperSampling=function(e){this._enableTemporalSS=e.get("enable")},g.prototype.isLinearSpace=function(){return this._enablePostEffect},g.prototype.setRootNode=function(e){if(this.rootNode!==e){for(var t=this.rootNode.children(),r=0;r<t.length;r++)e.add(t[r]);e!==this.scene&&this.scene.add(e),this.rootNode=e}},g.prototype.add=function(e){this.rootNode.add(e)},g.prototype.remove=function(e){this.rootNode.remove(e)},g.prototype.removeAll=function(e){this.rootNode.removeAll(e)},i.a.util.extend(g.prototype,d["a"]),t["a"]=g},function(e,t,r){"use strict";var n=0,i=Array.prototype,a=i.forEach,o={genGUID:function(){return++n},relative2absolute:function(e,t){if(!t||e.match(/^\//))return e;var r=e.split("/"),n=t.split("/"),i=r[0];while("."===i||".."===i)".."===i&&n.pop(),r.shift(),i=r[0];return n.join("/")+"/"+r.join("/")},extend:function(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},defaults:function(e,t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e},extendWithPropList:function(e,t,r){if(t)for(var n=0;n<r.length;n++){var i=r[n];e[i]=t[i]}return e},defaultsWithPropList:function(e,t,r){if(t)for(var n=0;n<r.length;n++){var i=r[n];null==e[i]&&(e[i]=t[i])}return e},each:function(e,t,r){if(e&&t)if(e.forEach&&e.forEach===a)e.forEach(t,r);else if(e.length===+e.length)for(var n=0,i=e.length;n<i;n++)t.call(r,e[n],n,e);else for(var o in e)e.hasOwnProperty(o)&&t.call(r,e[o],o,e)},isObject:function(e){return e===Object(e)},isArray:function(e){return Array.isArray(e)},isArrayLike:function(e){return!!e&&e.length===+e.length},clone:function(e){if(o.isObject(e)){if(o.isArray(e))return e.slice();if(o.isArrayLike(e)){for(var t=new e.constructor(e.length),r=0;r<e.length;r++)t[r]=e[r];return t}return o.extend({},e)}return e}};t["a"]=o},function(e,t,r){"use strict";var n=r(35),i=r(8),a=r(119);i["a"]["import"](a["a"]);var o=n["a"].extend((function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}}),{type:"",clone:function(){var e=n["a"].prototype.clone.call(this);return e.color=Array.prototype.slice.call(this.color),e.intensity=this.intensity,e.castShadow=this.castShadow,e.shadowResolution=this.shadowResolution,e}});t["a"]=o},function(e,t,r){"use strict";var n=r(15),i=r(0),a=r.n(i),o=r(38),s=r(6),l=s["a"].vec3,u=[[0,0],[1,1]],c=n["a"].extend((function(){return{segmentScale:1,dynamic:!0,useNativeLine:!0,attributes:{position:new n["a"].Attribute("position","float",3,"POSITION"),positionPrev:new n["a"].Attribute("positionPrev","float",3),positionNext:new n["a"].Attribute("positionNext","float",3),prevPositionPrev:new n["a"].Attribute("prevPositionPrev","float",3),prevPosition:new n["a"].Attribute("prevPosition","float",3),prevPositionNext:new n["a"].Attribute("prevPositionNext","float",3),offset:new n["a"].Attribute("offset","float",1),color:new n["a"].Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.positionPrev.init(e),t.positionNext.init(e),t.offset.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(this.indices=0===e?null:this.vertexCount>65535?new Uint32Array(3*e):new Uint16Array(3*e))},_getCubicCurveApproxStep:function(e,t,r,n){var i=l.dist(e,t)+l.dist(r,t)+l.dist(n,r),a=1/(i+1)*this.segmentScale;return a},getCubicCurveVertexCount:function(e,t,r,n){var i=this._getCubicCurveApproxStep(e,t,r,n),a=Math.ceil(1/i);return this.useNativeLine?2*a:2*a+2},getCubicCurveTriangleCount:function(e,t,r,n){var i=this._getCubicCurveApproxStep(e,t,r,n),a=Math.ceil(1/i);return this.useNativeLine?0:2*a},getLineVertexCount:function(){return this.getPolylineVertexCount(u)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(u)},getPolylineVertexCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/3}return this.useNativeLine?2*(t-1):2*(t-1)+2},getPolylineTriangleCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/3}return this.useNativeLine?0:2*Math.max(t-1,0)},addCubicCurve:function(e,t,r,n,i,a){null==a&&(a=1);var o=e[0],s=e[1],l=e[2],u=t[0],c=t[1],h=t[2],d=r[0],f=r[1],p=r[2],m=n[0],g=n[1],_=n[2],v=this._getCubicCurveApproxStep(e,t,r,n),y=v*v,x=y*v,T=3*v,b=3*y,w=6*y,E=6*x,S=o-2*u+d,M=s-2*c+f,A=l-2*h+p,N=3*(u-d)-o+m,C=3*(c-f)-s+g,L=3*(h-p)-l+_,P=o,D=s,O=l,R=(u-o)*T+S*b+N*x,I=(c-s)*T+M*b+C*x,F=(h-l)*T+A*b+L*x,B=S*w+N*E,U=M*w+C*E,z=A*w+L*E,G=N*E,H=C*E,k=L*E,V=0,W=0,j=Math.ceil(1/v),X=new Float32Array(3*(j+1)),q=(X=[],0);for(W=0;W<j+1;W++)X[q++]=P,X[q++]=D,X[q++]=O,P+=R,D+=I,O+=F,R+=B,I+=U,F+=z,B+=G,U+=H,z+=k,V+=v,V>1&&(P=R>0?Math.min(P,m):Math.max(P,m),D=I>0?Math.min(D,g):Math.max(D,g),O=F>0?Math.min(O,_):Math.max(O,_));return this.addPolyline(X,i,a)},addLine:function(e,t,r,n){return this.addPolyline([e,t],r,n)},addPolyline:function(e,t,r,n,i){if(e.length){var a="number"!==typeof e[0];if(null==i&&(i=a?e.length:e.length/3),!(i<2)){null==n&&(n=0),null==r&&(r=1),this._itemVertexOffsets.push(this._vertexOffset);a="number"!==typeof e[0];var o,s,l=a?"number"!==typeof t[0]:t.length/4===i,u=this.attributes.position,c=this.attributes.positionPrev,h=this.attributes.positionNext,d=this.attributes.color,f=this.attributes.offset,p=this.indices,m=this._vertexOffset;r=Math.max(r,.01);for(var g=n;g<i;g++){if(a)o=e[g],s=l?t[g]:t;else{var _=3*g;if(o=o||[],o[0]=e[_],o[1]=e[_+1],o[2]=e[_+2],l){var v=4*g;s=s||[],s[0]=t[v],s[1]=t[v+1],s[2]=t[v+2],s[3]=t[v+3]}else s=t}if(this.useNativeLine?g>1&&(u.copy(m,m-1),d.copy(m,m-1),m++):(g<i-1&&(c.set(m+2,o),c.set(m+3,o)),g>0&&(h.set(m-2,o),h.set(m-1,o)),u.set(m,o),u.set(m+1,o),d.set(m,s),d.set(m+1,s),f.set(m,r/2),f.set(m+1,-r/2),m+=2),this.useNativeLine)d.set(m,s),u.set(m,o),m++;else if(g>0){var y=3*this._triangleOffset;p=this.indices;p[y]=m-4,p[y+1]=m-3,p[y+2]=m-2,p[y+3]=m-3,p[y+4]=m-1,p[y+5]=m-2,this._triangleOffset+=2}}if(!this.useNativeLine){var x=this._vertexOffset,T=this._vertexOffset+2*i;c.copy(x,x+2),c.copy(x+1,x+3),h.copy(T-1,T-3),h.copy(T-2,T-4)}return this._vertexOffset=m,this._vertexOffset}}},setItemColor:function(e,t){for(var r=this._itemVertexOffsets[e],n=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,i=r;i<n;i++)this.attributes.color.set(i,t);this.dirty("color")},currentTriangleOffset:function(){return this._triangleOffset},currentVertexOffset:function(){return this._vertexOffset}});a.a.util.defaults(c.prototype,o["a"]),t["a"]=c},function(e,t,r){"use strict";var n=r(70),i=function(e,t){e=e||0,t=t||0,this.array=n["a"].fromValues(e,t),this._dirty=!0};if(i.prototype={constructor:i,add:function(e){return n["a"].add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t){return this.array[0]=e,this.array[1]=t,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this._dirty=!0,this},clone:function(){return new i(this.x,this.y)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return n["a"].cross(e.array,this.array,t.array),e._dirty=!0,this},dist:function(e){return n["a"].dist(this.array,e.array)},distance:function(e){return n["a"].distance(this.array,e.array)},div:function(e){return n["a"].div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return n["a"].divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return n["a"].dot(this.array,e.array)},len:function(){return n["a"].len(this.array)},length:function(){return n["a"].length(this.array)},lerp:function(e,t,r){return n["a"].lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return n["a"].min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return n["a"].max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return n["a"].negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return n["a"].normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return n["a"].random(this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return n["a"].scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return n["a"].sqrDist(this.array,e.array)},squaredDistance:function(e){return n["a"].squaredDistance(this.array,e.array)},sqrLen:function(){return n["a"].sqrLen(this.array)},squaredLength:function(){return n["a"].squaredLength(this.array)},sub:function(e){return n["a"].sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return n["a"].subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat2:function(e){return n["a"].transformMat2(this.array,this.array,e.array),this._dirty=!0,this},transformMat2d:function(e){return n["a"].transformMat2d(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return n["a"].transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return n["a"].transformMat4(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},Object.defineProperty){var a=i.prototype;Object.defineProperty(a,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Object.defineProperty(a,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}})}i.add=function(e,t,r){return n["a"].add(e.array,t.array,r.array),e._dirty=!0,e},i.set=function(e,t,r){return n["a"].set(e.array,t,r),e._dirty=!0,e},i.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},i.cross=function(e,t,r){return n["a"].cross(e.array,t.array,r.array),e._dirty=!0,e},i.dist=function(e,t){return n["a"].distance(e.array,t.array)},i.distance=i.dist,i.div=function(e,t,r){return n["a"].divide(e.array,t.array,r.array),e._dirty=!0,e},i.divide=i.div,i.dot=function(e,t){return n["a"].dot(e.array,t.array)},i.len=function(e){return n["a"].length(e.array)},i.lerp=function(e,t,r,i){return n["a"].lerp(e.array,t.array,r.array,i),e._dirty=!0,e},i.min=function(e,t,r){return n["a"].min(e.array,t.array,r.array),e._dirty=!0,e},i.max=function(e,t,r){return n["a"].max(e.array,t.array,r.array),e._dirty=!0,e},i.mul=function(e,t,r){return n["a"].multiply(e.array,t.array,r.array),e._dirty=!0,e},i.multiply=i.mul,i.negate=function(e,t){return n["a"].negate(e.array,t.array),e._dirty=!0,e},i.normalize=function(e,t){return n["a"].normalize(e.array,t.array),e._dirty=!0,e},i.random=function(e,t){return n["a"].random(e.array,t),e._dirty=!0,e},i.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r),e._dirty=!0,e},i.scaleAndAdd=function(e,t,r,i){return n["a"].scaleAndAdd(e.array,t.array,r.array,i),e._dirty=!0,e},i.sqrDist=function(e,t){return n["a"].sqrDist(e.array,t.array)},i.squaredDistance=i.sqrDist,i.sqrLen=function(e){return n["a"].sqrLen(e.array)},i.squaredLength=i.sqrLen,i.sub=function(e,t,r){return n["a"].subtract(e.array,t.array,r.array),e._dirty=!0,e},i.subtract=i.sub,i.transformMat2=function(e,t,r){return n["a"].transformMat2(e.array,t.array,r.array),e._dirty=!0,e},i.transformMat2d=function(e,t,r){return n["a"].transformMat2d(e.array,t.array,r.array),e._dirty=!0,e},i.transformMat3=function(e,t,r){return n["a"].transformMat3(e.array,t.array,r.array),e._dirty=!0,e},i.transformMat4=function(e,t,r){return n["a"].transformMat4(e.array,t.array,r.array),e._dirty=!0,e},t["a"]=i},function(e,t,r){"use strict";var n=r(4),i=r(11),a=r(23),o=r(73),s=r(14),l=o["a"].isPowerOfTwo,u=["px","nx","py","ny","pz","nz"],c=n["a"].extend((function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}}),{textureType:"textureCube",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,n=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var a=e.getGLExtension("EXT_texture_filter_anisotropic");if(a&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,a.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){var o=e.getGLExtension("OES_texture_half_float");o||(n=i["a"].FLOAT)}if(this.mipmaps.length)for(var s=this.width,l=this.height,u=0;u<this.mipmaps.length;u++){var c=this.mipmaps[u];this._updateTextureData(t,c,u,s,l,r,n),s/=2,l/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,n),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(e,t,r,n,i,a,o){for(var s=0;s<6;s++){var l=u[s],c=t.image&&t.image[l];c?e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,a,o,c):e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,n,i,0,a,o,t.pixels&&t.pixels[l])}},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?l(this.image.px.width)&&l(this.image.px.height):l(this.width)&&l(this.height)},isRenderable:function(){return this.image.px?h(this.image.px)&&h(this.image.nx)&&h(this.image.py)&&h(this.image.ny)&&h(this.image.pz)&&h(this.image.nz):!(!this.width||!this.height)},load:function(e,t){var r=0,n=this;return a["a"].each(e,(function(e,i){var a=s["a"].createImage();t&&(a.crossOrigin=t),a.onload=function(){r--,0===r&&(n.dirty(),n.trigger("success",n)),a.onload=null},a.onerror=function(){r--,a.onerror=null},r++,a.src=e,n.image[i]=a})),this}});function h(e){return"CANVAS"===e.nodeName||"VIDEO"===e.nodeName||e.complete}Object.defineProperty(c.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(c.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}}),t["a"]=c},function(e,t,r){"use strict";t["a"]={defaultOption:{postEffect:{enable:!1,bloom:{enable:!0,intensity:.1},depthOfField:{enable:!1,focalRange:20,focalDistance:50,blurRadius:10,fstop:2.8,quality:"medium"},screenSpaceAmbientOcclusion:{enable:!1,radius:2,quality:"medium",intensity:1},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},edge:{enable:!1},FXAA:{enable:!1}},temporalSuperSampling:{enable:"auto"}}}},function(e,t,r){"use strict";t["a"]={defaultOption:{light:{main:{shadow:!1,shadowQuality:"high",color:"#fff",intensity:1,alpha:0,beta:0},ambient:{color:"#fff",intensity:.2},ambientCubemap:{texture:null,exposure:1,diffuseIntensity:.5,specularIntensity:.5}}}}},function(e,t,r){"use strict";var n=r(1),i=r(42),a=r(0),o=r.n(a);function s(){}s.prototype={constructor:s,setScene:function(e){this._scene=e,this._skybox&&this._skybox.attachScene(this._scene)},initLight:function(e){this._lightRoot=e,this.mainLight=new n["a"].DirectionalLight({shadowBias:.005}),this.ambientLight=new n["a"].AmbientLight,e.add(this.mainLight),e.add(this.ambientLight)},dispose:function(){this._lightRoot&&(this._lightRoot.remove(this.mainLight),this._lightRoot.remove(this.ambientLight))},updateLight:function(e){var t=this.mainLight,r=this.ambientLight,i=e.getModel("light"),a=i.getModel("main"),o=i.getModel("ambient");t.intensity=a.get("intensity"),r.intensity=o.get("intensity"),t.color=n["a"].parseColor(a.get("color")).slice(0,3),r.color=n["a"].parseColor(o.get("color")).slice(0,3);var s=a.get("alpha")||0,l=a.get("beta")||0;t.position.setArray(n["a"].directionFromAlphaBeta(s,l)),t.lookAt(n["a"].Vector3.ZERO),t.castShadow=a.get("shadow"),t.shadowResolution=n["a"].getShadowResolution(a.get("shadowQuality"))},updateAmbientCubemap:function(e,t,r){var i=t.getModel("light.ambientCubemap"),a=i.get("texture");if(a){this._cubemapLightsCache=this._cubemapLightsCache||{};var o=this._cubemapLightsCache[a];if(!o){var s=this;o=this._cubemapLightsCache[a]=n["a"].createAmbientCubemap(i.option,e,r,(function(){s._isSkyboxFromAmbientCubemap&&s._skybox.setEnvironmentMap(o.specular.cubemap),r.getZr().refresh()}))}this._lightRoot.add(o.diffuse),this._lightRoot.add(o.specular),this._currentCubemapLights=o}else this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null)},updateSkybox:function(e,t,r){var a=t.get("environment"),s=this;function l(){return s._skybox=s._skybox||new i["a"],s._skybox}var u=l();if(a&&"none"!==a)if("auto"===a)if(this._isSkyboxFromAmbientCubemap=!0,this._currentCubemapLights){var c=this._currentCubemapLights.specular.cubemap;u.setEnvironmentMap(c),this._scene&&u.attachScene(this._scene),u.material.set("lod",3)}else this._skybox&&this._skybox.detachScene();else if("object"===typeof a&&a.colorStops||"string"===typeof a&&o.a.color.parse(a)){this._isSkyboxFromAmbientCubemap=!1;var h=new n["a"].Texture2D({anisotropic:8,flipY:!1});u.setEnvironmentMap(h);var d=h.image=document.createElement("canvas");d.width=d.height=16;var f=d.getContext("2d"),p=new o.a.graphic.Rect({shape:{x:0,y:0,width:16,height:16},style:{fill:a}});p.brush(f),u.attachScene(this._scene)}else{this._isSkyboxFromAmbientCubemap=!1;h=n["a"].loadTexture(a,r,{anisotropic:8,flipY:!1});u.setEnvironmentMap(h),u.attachScene(this._scene)}else this._skybox&&this._skybox.detachScene(this._scene),this._skybox=null;var m=t.coordinateSystem;if(this._skybox)if(!m||!m.viewGL||"auto"===a||a.match&&a.match(/.hdr$/))this._skybox.material.undefine("fragment","SRGB_DECODE");else{var g=m.viewGL.isLinearSpace()?"define":"undefine";this._skybox.material[g]("fragment","SRGB_DECODE")}}},t["a"]=s},function(e,t,r){"use strict";t["a"]={defaultOption:{shading:null,realisticMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},lambertMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},colorMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},hatchingMaterial:{textureTiling:1,textureOffset:0,paperColor:"#fff"}}}},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a={getFormattedLabel:function(e,t,r,n,a){r=r||"normal";var o=e.getData(n),s=o.getItemModel(t),l=e.getDataParams(t,n);null!=a&&l.value instanceof Array&&(l.value=l.value[a]);var u,c=s.get("normal"===r?["label","formatter"]:["emphasis","label","formatter"]);return null==c&&(c=s.get(["label","formatter"])),"function"===typeof c?(l.status=r,u=c(l)):"string"===typeof c&&(u=i.a.format.formatTpl(c,l)),u},normalizeToArray:function(e){return e instanceof Array?e:null==e?[]:[e]}};t["a"]=a},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e},clone:function(e){var t=new n["a"](4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},fromValues:function(e,t,r,i){var a=new n["a"](4);return a[0]=e,a[1]=t,a[2]=r,a[3]=i,a},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},set:function(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e},subtract:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e}};i.sub=i.subtract,i.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e},i.mul=i.multiply,i.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e},i.div=i.divide,i.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e},i.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e},i.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e},i.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e},i.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(r*r+n*n+i*i+a*a)},i.dist=i.distance,i.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return r*r+n*n+i*i+a*a},i.sqrDist=i.squaredDistance,i.length=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return Math.sqrt(t*t+r*r+n*n+i*i)},i.len=i.length,i.squaredLength=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return t*t+r*r+n*n+i*i},i.sqrLen=i.squaredLength,i.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},i.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},i.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e[3]=t[3]*o),e},i.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},i.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2],s=t[3];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e[3]=s+n*(r[3]-s),e},i.random=function(e,t){return t=t||1,e[0]=Object(n["c"])(),e[1]=Object(n["c"])(),e[2]=Object(n["c"])(),e[3]=Object(n["c"])(),i.normalize(e,e),i.scale(e,e,t),e},i.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3];return e[0]=r[0]*n+r[4]*i+r[8]*a+r[12]*o,e[1]=r[1]*n+r[5]*i+r[9]*a+r[13]*o,e[2]=r[2]*n+r[6]*i+r[10]*a+r[14]*o,e[3]=r[3]*n+r[7]*i+r[11]*a+r[15]*o,e},i.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],l=r[2],u=r[3],c=u*n+s*a-l*i,h=u*i+l*n-o*a,d=u*a+o*i-s*n,f=-o*n-s*i-l*a;return e[0]=c*u+f*-o+h*-l-d*-s,e[1]=h*u+f*-s+d*-o-c*-l,e[2]=d*u+f*-l+c*-s-h*-o,e},i.forEach=function(){var e=i.create();return function(t,r,n,i,a,o){var s,l;for(r||(r=4),n||(n=0),l=i?Math.min(i*r+n,t.length):t.length,s=n;s<l;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}(),t["a"]=i},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},fromMat4:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},clone:function(e){var t=new n["a"](9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},transpose:function(e,t){if(e===t){var r=t[1],n=t[2],i=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=i}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},invert:function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],c=t[8],h=c*o-s*u,d=-c*a+s*l,f=u*a-o*l,p=r*h+n*d+i*f;return p?(p=1/p,e[0]=h*p,e[1]=(-c*n+i*u)*p,e[2]=(s*n-i*o)*p,e[3]=d*p,e[4]=(c*r-i*l)*p,e[5]=(-s*r+i*a)*p,e[6]=f*p,e[7]=(-u*r+n*l)*p,e[8]=(o*r-n*a)*p,e):null},adjoint:function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],c=t[8];return e[0]=o*c-s*u,e[1]=i*u-n*c,e[2]=n*s-i*o,e[3]=s*l-a*c,e[4]=r*c-i*l,e[5]=i*a-r*s,e[6]=a*u-o*l,e[7]=n*l-r*u,e[8]=r*o-n*a,e},determinant:function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8];return t*(u*a-o*l)+r*(-u*i+o*s)+n*(l*i-a*s)},multiply:function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],c=t[7],h=t[8],d=r[0],f=r[1],p=r[2],m=r[3],g=r[4],_=r[5],v=r[6],y=r[7],x=r[8];return e[0]=d*n+f*o+p*u,e[1]=d*i+f*s+p*c,e[2]=d*a+f*l+p*h,e[3]=m*n+g*o+_*u,e[4]=m*i+g*s+_*c,e[5]=m*a+g*l+_*h,e[6]=v*n+y*o+x*u,e[7]=v*i+y*s+x*c,e[8]=v*a+y*l+x*h,e}};i.mul=i.multiply,i.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],c=t[7],h=t[8],d=r[0],f=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=d*n+f*o+u,e[7]=d*i+f*s+c,e[8]=d*a+f*l+h,e},i.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],c=t[7],h=t[8],d=Math.sin(r),f=Math.cos(r);return e[0]=f*n+d*o,e[1]=f*i+d*s,e[2]=f*a+d*l,e[3]=f*o-d*n,e[4]=f*s-d*i,e[5]=f*l-d*a,e[6]=u,e[7]=c,e[8]=h,e},i.scale=function(e,t,r){var n=r[0],i=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=i*t[3],e[4]=i*t[4],e[5]=i*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},i.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},i.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,l=i+i,u=r*o,c=n*o,h=n*s,d=i*o,f=i*s,p=i*l,m=a*o,g=a*s,_=a*l;return e[0]=1-h-p,e[3]=c-_,e[6]=d+g,e[1]=c+_,e[4]=1-u-p,e[7]=f-m,e[2]=d-g,e[5]=f+m,e[8]=1-u-h,e},i.normalFromMat4=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],c=t[8],h=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15],v=r*s-n*o,y=r*l-i*o,x=r*u-a*o,T=n*l-i*s,b=n*u-a*s,w=i*u-a*l,E=c*m-h*p,S=c*g-d*p,M=c*_-f*p,A=h*g-d*m,N=h*_-f*m,C=d*_-f*g,L=v*C-y*N+x*A+T*M-b*S+w*E;return L?(L=1/L,e[0]=(s*C-l*N+u*A)*L,e[1]=(l*M-o*C-u*S)*L,e[2]=(o*N-s*M+u*E)*L,e[3]=(i*N-n*C-a*A)*L,e[4]=(r*C-i*M+a*S)*L,e[5]=(n*M-r*N-a*E)*L,e[6]=(m*w-g*b+_*T)*L,e[7]=(g*x-p*w-_*y)*L,e[8]=(p*b-m*x+_*v)*L,e):null},i.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))},t["a"]=i},function(e,t,r){"use strict";var n=r(7),i=r(3),a=r(56),o=r(9),s=r(21),l=r(18),u=0,c=n["a"].extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},(function(){this.name||(this.name=(this.type||"NODE")+"_"+u++),this.position||(this.position=new i["a"]),this.rotation||(this.rotation=new a["a"]),this.scale||(this.scale=new i["a"](1,1,1)),this.worldTransform=new o["a"],this.localTransform=new o["a"],this._children=[]}),{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(e){var t=this._scene;if(t){var r=t._nodeRepository;delete r[this.name],r[e]=this}this.name=e},add:function(e){var t=e._parent;if(t!==this){t&&t.remove(e),e._parent=this,this._children.push(e);var r=this._scene;r&&r!==e.scene&&e.traverse(this._addSelfToScene,this),e._needsUpdateWorldTransform=!0}},remove:function(e){var t=this._children,r=t.indexOf(e);r<0||(t.splice(r,1),e._parent=null,this._scene&&e.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var e=this._children,t=0;t<e.length;t++)e[t]._parent=null,this._scene&&e[t].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(e){e._scene.removeFromScene(e),e._scene=null},_addSelfToScene:function(e){this._scene.addToScene(e),e._scene=this._scene},isAncestor:function(e){var t=e._parent;while(t){if(t===this)return!0;t=t._parent}return!1},children:function(){return this._children.slice()},childAt:function(e){return this._children[e]},getChildByName:function(e){for(var t=this._children,r=0;r<t.length;r++)if(t[r].name===e)return t[r]},getDescendantByName:function(e){for(var t=this._children,r=0;r<t.length;r++){var n=t[r];if(n.name===e)return n;var i=n.getDescendantByName(e);if(i)return i}},queryNode:function(e){if(e){for(var t=e.split("/"),r=this,n=0;n<t.length;n++){var i=t[n];if(i){for(var a=!1,o=r._children,s=0;s<o.length;s++){var l=o[s];if(l.name===i){r=l,a=!0;break}}if(!a)return}}return r}},getPath:function(e){if(!this._parent)return"/";var t=this._parent,r=this.name;while(t._parent){if(r=t.name+"/"+r,t._parent==e)break;t=t._parent}return!t._parent&&e?null:r},traverse:function(e,t){e.call(t,this);for(var r=this._children,n=0,i=r.length;n<i;n++)r[n].traverse(e,t)},eachChild:function(e,t){for(var r=this._children,n=0,i=r.length;n<i;n++){var a=r[n];e.call(t,a,n)}},setLocalTransform:function(e){s["a"].copy(this.localTransform.array,e.array),this.decomposeLocalTransform()},decomposeLocalTransform:function(e){var t=e?null:this.scale;this.localTransform.decomposeMatrix(t,this.rotation,this.position)},setWorldTransform:function(e){s["a"].copy(this.worldTransform.array,e.array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var e=s["a"].create();return function(t){var r=this.localTransform,n=this.worldTransform;this._parent?(s["a"].invert(e,this._parent.worldTransform.array),s["a"].multiply(r.array,e,n.array)):s["a"].copy(r.array,n.array);var i=t?null:this.scale;r.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var e=this.position,t=this.rotation,r=this.scale;if(this.transformNeedsUpdate()){var n=this.localTransform.array;s["a"].fromRotationTranslation(n,t.array,e.array),s["a"].scale(n,n,r.array),t._dirty=!1,r._dirty=!1,e._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var e=this.localTransform.array,t=this.worldTransform.array;this._parent?s["a"].multiplyAffine(t,this._parent.worldTransform.array,e):s["a"].copy(t,e)},updateWorldTransform:function(){var e=this;while(e&&e.getParent()&&e.getParent().transformNeedsUpdate())e=e.getParent();e.update()},update:function(e){this.autoUpdateLocalTransform?this.updateLocalTransform():e=!0,(e||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),e=!0,this._needsUpdateWorldTransform=!1);for(var t=this._children,r=0,n=t.length;r<n;r++)t[r].update(e)},getBoundingBox:function(){function e(e){return!e.invisible&&e.geometry}var t=new l["a"],r=new o["a"],n=new o["a"];return function(i,a){return a=a||new l["a"],i=i||e,this._parent?o["a"].invert(n,this._parent.worldTransform):o["a"].identity(n),this.traverse((function(e){e.geometry&&e.geometry.boundingBox&&(t.copy(e.geometry.boundingBox),o["a"].multiply(r,n,e.worldTransform),t.applyTransform(r),a.union(t))}),this,e),a}}(),getWorldPosition:function(e){this.transformNeedsUpdate()&&this.updateWorldTransform();var t=this.worldTransform.array;if(e){var r=e.array;return r[0]=t[12],r[1]=t[13],r[2]=t[14],e}return new i["a"](t[12],t[13],t[14])},clone:function(){var e=new this.constructor,t=this._children;e.setName(this.name),e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale);for(var r=0;r<t.length;r++)e.add(t[r].clone());return e},rotateAround:function(){var e=new i["a"],t=new o["a"];return function(r,n,i){e.copy(this.position).subtract(r);var a=this.localTransform;a.identity(),a.translate(r),a.rotate(i,n),t.fromRotationTranslation(this.rotation,e),a.multiply(t),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var e=new o["a"];return function(t,r){e.lookAt(this.position,t,r||this.localTransform.y).invert(),this.setLocalTransform(e),this.target=t}}()});t["a"]=c},function(e,t,r){"use strict";var n=r(35),i=r(24),a=r(58),o=r(18),s=r(23),l=r(21),u=r(69),c=r(9),h=l["a"].create(),d=l["a"].create(),f={};function p(e){var t=[],r=Object.keys(e);r.sort();for(var n=0;n<r.length;n++){var i=r[n];t.push(i+" "+e[i])}var a=t.join("\n");if(f[a])return f[a];var o=s["a"].genGUID();return f[a]=o,o}function m(){this.opaque=[],this.transparent=[],this._opaqueCount=0,this._transparentCount=0}m.prototype.startCount=function(){this._opaqueCount=0,this._transparentCount=0},m.prototype.add=function(e,t){t?this.transparent[this._transparentCount++]=e:this.opaque[this._opaqueCount++]=e},m.prototype.endCount=function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount};var g=n["a"].extend((function(){return{material:null,lights:[],viewBoundingBoxLastFrame:new o["a"],shadowUniforms:{},_cameraList:[],_lightUniforms:{},_previousLightNumber:{},_lightNumber:{},_lightProgramKeys:{},_nodeRepository:{},_renderLists:new u["a"](20)}}),(function(){this._scene=this}),{addToScene:function(e){e instanceof a["a"]?(this._cameraList.length>0&&console.warn("Found multiple camera in one scene. Use the fist one."),this._cameraList.push(e)):e instanceof i["a"]&&this.lights.push(e),e.name&&(this._nodeRepository[e.name]=e)},removeFromScene:function(e){var t;e instanceof a["a"]?(t=this._cameraList.indexOf(e),t>=0&&this._cameraList.splice(t,1)):e instanceof i["a"]&&(t=this.lights.indexOf(e),t>=0&&this.lights.splice(t,1)),e.name&&delete this._nodeRepository[e.name]},getNode:function(e){return this._nodeRepository[e]},setMainCamera:function(e){var t=this._cameraList.indexOf(e);t>=0&&this._cameraList.splice(t,1),this._cameraList.unshift(e)},getMainCamera:function(){return this._cameraList[0]},getLights:function(){return this.lights},updateLights:function(){var e=this.lights;this._previousLightNumber=this._lightNumber;for(var t={},r=0;r<e.length;r++){var n=e[r];if(!n.invisible){var i=n.group;t[i]||(t[i]={}),t[i][n.type]=t[i][n.type]||0,t[i][n.type]++}}for(var a in this._lightNumber=t,t)this._lightProgramKeys[a]=p(t[a]);this._updateLightUniforms()},cloneNode:function(e){var t=e.clone(),r={};function n(e,t){r[e.__uid__]=t;for(var i=0;i<e._children.length;i++){var a=e._children[i],o=t._children[i];n(a,o)}}return n(e,t),t.traverse((function(e){e.skeleton&&(e.skeleton=e.skeleton.clone(r)),e.material&&(e.material=e.material.clone())})),t},updateRenderList:function(e,t){var r=e.__uid__,n=this._renderLists.get(r);n||(n=new m,this._renderLists.put(r,n)),n.startCount(),t&&(this.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),this.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0));var i=this.material&&this.material.transparent||!1;return this._doUpdateRenderList(this,e,i,n,t),n.endCount(),n},getRenderList:function(e){return this._renderLists.get(e.__uid__)},_doUpdateRenderList:function(e,t,r,n,i){if(!e.invisible)for(var a=0;a<e._children.length;a++){var o=e._children[a];if(o.isRenderable()){var s=o.isSkinnedMesh()?h:o.worldTransform.array,u=o.geometry;l["a"].multiplyAffine(d,t.viewMatrix.array,s),(i&&!u.boundingBox||!this.isFrustumCulled(o,t,d))&&n.add(o,o.material.transparent||r)}o._children.length>0&&this._doUpdateRenderList(o,t,r,n,i)}},isFrustumCulled:function(){var e=new o["a"],t=new c["a"];return function(r,n,i){var a=r.boundingBox;if(a||(a=r.skeleton&&r.skeleton.boundingBox?r.skeleton.boundingBox:r.geometry.boundingBox),!a)return!1;if(t.array=i,e.transformFrom(a,t),r.castShadow&&this.viewBoundingBoxLastFrame.union(e),r.frustumCulling){if(!e.intersectBoundingBox(n.frustum.boundingBox))return!0;t.array=n.projectionMatrix.array,e.max.array[2]>0&&e.min.array[2]<0&&(e.max.array[2]=-1e-20),e.applyProjection(t);var o=e.min.array,s=e.max.array;if(s[0]<-1||o[0]>1||s[1]<-1||o[1]>1||s[2]<-1||o[2]>1)return!0}return!1}}(),_updateLightUniforms:function(){var e=this.lights;e.sort(_);var t=this._lightUniforms;for(var r in t)for(var n in t[r])t[r][n].value.length=0;for(var i=0;i<e.length;i++){var a=e[i];if(!a.invisible){r=a.group;for(var n in a.uniformTemplates){var o=a.uniformTemplates[n],s=o.value(a);if(null!=s){t[r]||(t[r]={}),t[r][n]||(t[r][n]={type:"",value:[]});var l=t[r][n];switch(l.type=o.type+"v",o.type){case"1i":case"1f":case"t":l.value.push(s);break;case"2f":case"3f":case"4f":for(var u=0;u<s.length;u++)l.value.push(s[u]);break;default:console.error("Unkown light uniform type "+o.type)}}}}}},getLightGroups:function(){var e=[];for(var t in this._lightNumber)e.push(t);return e},getNumberChangedLightGroups:function(){var e=[];for(var t in this._lightNumber)this.isLightNumberChanged(t)&&e.push(t);return e},isLightNumberChanged:function(e){var t=this._previousLightNumber,r=this._lightNumber;for(var n in r[e]){if(!t[e])return!0;if(r[e][n]!==t[e][n])return!0}for(var n in t[e]){if(!r[e])return!0;if(r[e][n]!==t[e][n])return!0}return!1},getLightsNumbers:function(e){return this._lightNumber[e]},getProgramKey:function(e){return this._lightProgramKeys[e]},setLightUniforms:function(){function e(e,t,r){for(var n in e){var i=e[n];if("tv"===i.type){if(!t.hasUniform(n))continue;for(var a=[],o=0;o<i.value.length;o++){var s=i.value[o],l=t.takeCurrentTextureSlot(r,s);a.push(l)}t.setUniform(r.gl,"1iv",n,a)}else t.setUniform(r.gl,i.type,n,i.value)}}return function(t,r,n){e(this._lightUniforms[r],t,n),e(this.shadowUniforms,t,n)}}(),dispose:function(){this.material=null,this._opaqueList=[],this._transparentList=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});function _(e,t){if(t.castShadow&&!e.castShadow)return!0}t["a"]=g},function(e,t,r){"use strict";var n=r(58),i=n["a"].extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array;this.left=(-1-e[12])/e[0],this.right=(1-e[12])/e[0],this.top=(1-e[13])/e[5],this.bottom=(-1-e[13])/e[5],this.near=-(-1-e[14])/e[10],this.far=-(1-e[14])/e[10]},clone:function(){var e=n["a"].prototype.clone.call(this);return e.left=this.left,e.right=this.right,e.near=this.near,e.far=this.far,e.top=this.top,e.bottom=this.bottom,e}});t["a"]=i},function(e,t,r){"use strict";t["a"]={convertToDynamicArray:function(e){e&&this.resetOffset();var t=this.attributes;for(var r in t)e||!t[r].value?t[r].value=[]:t[r].value=Array.prototype.slice.call(t[r].value);e||!this.indices?this.indices=[]:this.indices=Array.prototype.slice.call(this.indices)},convertToTypedArray:function(){var e=this.attributes;for(var t in e)e[t].value&&e[t].value.length>0?e[t].value=new Float32Array(e[t].value):e[t].value=null;this.indices&&this.indices.length>0&&(this.indices=this.vertexCount>65535?new Uint32Array(this.indices):new Uint16Array(this.indices)),this.dirty()}}},function(e,t,r){"use strict";var n=r(0),i=r.n(n);function a(e,t){var r=[];return i.a.util.each(e.dimensions,(function(n){var i=e.getDimensionInfo(n),a=i.otherDims,o=a[t];null!=o&&!1!==o&&(r[o]=i.name)})),r}t["a"]=function(e,t,r){function n(e){var n=!0,s=[],l=a(o,"tooltip");function u(e,t){var a=o.getDimensionInfo(t);if(a&&!1!==a.otherDims.tooltip){var l=a.type,u=(n?"- "+(a.tooltipName||a.name)+": ":"")+("ordinal"===l?e+"":"time"===l?r?"":i.a.format.formatTime("yyyy/MM/dd hh:mm:ss",e):i.a.format.addCommas(e));u&&s.push(i.a.format.encodeHTML(u))}}return l.length?i.a.util.each(l,(function(e){u(o.get(e,t),e)})):i.a.util.each(e,u),(n?"<br/>":"")+s.join(n?"<br/>":", ")}var o=e.getData(),s=e.getRawValue(t),l=i.a.util.isArray(s)?n(s):i.a.format.encodeHTML(i.a.format.addCommas(s)),u=o.getName(t),c=o.getItemVisual(t,"color");i.a.util.isObject(c)&&c.colorStops&&(c=(c.colorStops[0]||{}).color),c=c||"transparent";var h=i.a.format.getTooltipMarker(c),d=e.name;return"\0-"===d&&(d=""),d=d?i.a.format.encodeHTML(d)+(r?": ":"<br/>"):"",r?h+d+l:d+h+(u?i.a.format.encodeHTML(u)+": "+l:l)}},function(e,t,r){"use strict";var n=r(72),i=r(11),a=n["a"].extend({skeleton:null,joints:null,useSkinMatricesTexture:!1},(function(){this.joints||(this.joints=[])}),{isSkinnedMesh:function(){return!!(this.skeleton&&this.joints&&this.joints.length>0)},clone:function(){var e=n["a"].prototype.clone.call(this);return e.skeleton=this.skeleton,this.joints&&(e.joints=this.joints.slice()),e}});a.POINTS=i["a"].POINTS,a.LINES=i["a"].LINES,a.LINE_LOOP=i["a"].LINE_LOOP,a.LINE_STRIP=i["a"].LINE_STRIP,a.TRIANGLES=i["a"].TRIANGLES,a.TRIANGLE_STRIP=i["a"].TRIANGLE_STRIP,a.TRIANGLE_FAN=i["a"].TRIANGLE_FAN,a.BACK=i["a"].BACK,a.FRONT=i["a"].FRONT,a.FRONT_AND_BACK=i["a"].FRONT_AND_BACK,a.CW=i["a"].CW,a.CCW=i["a"].CCW,t["a"]=a},function(e,t,r){"use strict";var n=r(58),i=n["a"].extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array,t=2*Math.atan(1/e[5]);this.fov=t/Math.PI*180,this.aspect=e[5]/e[0],this.near=e[14]/(e[10]-1),this.far=e[14]/(e[10]+1)},clone:function(){var e=n["a"].prototype.clone.call(this);return e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e}});t["a"]=i},function(e,t,r){"use strict";var n=r(40),i=r(76),a=r(8),o=r(19),s=r(4),l=r(121);a["a"].import(l["a"]);var u=n["a"].extend((function(){var e=new a["a"]({vertex:a["a"].source("clay.skybox.vertex"),fragment:a["a"].source("clay.skybox.fragment")}),t=new o["a"]({shader:e,depthMask:!1});return{scene:null,geometry:new i["a"],material:t,environmentMap:null,culling:!1}}),(function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)}),{attachScene:function(e){this.scene&&this.detachScene(),e.skybox=this,this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&(this.scene.off("beforerender",this._beforeRenderScene),this.scene.skybox=null),this.scene=null},dispose:function(e){this.detachScene(),this.geometry.dispose(e)},setEnvironmentMap:function(e){"texture2D"===e.textureType?(this.material.define("EQUIRECTANGULAR"),e.minFilter=s["a"].LINEAR):this.material.undefine("EQUIRECTANGULAR"),this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(e,t,r){this.renderSkybox(e,r)},renderSkybox:function(e,t){this.position.copy(t.getWorldPosition()),this.update(),e.gl.disable(e.gl.BLEND),this.material.get("lod")>0?this.material.define("fragment","LOD"):this.material.undefine("fragment","LOD"),e.renderPass([this],t)}});t["a"]=u},function(e,t,r){"use strict";var n=r(15),i=r(18),a=n["a"].extend({dynamic:!1,widthSegments:1,heightSegments:1},(function(){this.build()}),{build:function(){for(var e=this.heightSegments,t=this.widthSegments,r=this.attributes,n=[],a=[],o=[],s=[],l=0;l<=e;l++)for(var u=l/e,c=0;c<=t;c++){var h=c/t;if(n.push([2*h-1,2*u-1,0]),a&&a.push([h,u]),o&&o.push([0,0,1]),c<t&&l<e){var d=c+l*(t+1);s.push([d,d+1,d+t+1]),s.push([d+t+1,d+1,d+t+2])}}r.position.fromArray(n),r.texcoord0.fromArray(a),r.normal.fromArray(o),this.initIndicesFromArray(s),this.boundingBox=new i["a"],this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});t["a"]=a},function(e,t,r){"use strict";t["a"]={defaultOption:{viewControl:{projection:"perspective",autoRotate:!1,autoRotateDirection:"cw",autoRotateSpeed:10,autoRotateAfterStill:3,damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,panMouseButton:"middle",rotateMouseButton:"left",distance:150,minDistance:40,maxDistance:400,orthographicSize:150,maxOrthographicSize:400,minOrthographicSize:20,center:[0,0,0],alpha:0,beta:0,minAlpha:-90,maxAlpha:90}},setView:function(e){e=e||{},this.option.viewControl=this.option.viewControl||{},null!=e.alpha&&(this.option.viewControl.alpha=e.alpha),null!=e.beta&&(this.option.viewControl.beta=e.beta),null!=e.distance&&(this.option.viewControl.distance=e.distance),null!=e.center&&(this.option.viewControl.center=e.center)}}},function(e,t,r){"use strict";var n=r(7),i=r(26),a=r(3),o=(r(56),r(2)),s=o["a"].firstNotNull,l={left:0,middle:1,right:2};function u(e){return e instanceof Array||(e=[e,e]),e}var c=n["a"].extend((function(){return{zr:null,viewGL:null,_center:new a["a"],minDistance:.5,maxDistance:1.5,maxOrthographicSize:300,minOrthographicSize:30,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,panMouseButton:"middle",rotateMouseButton:"left",_mode:"rotate",_camera:null,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new i["a"],_panVelocity:new i["a"],_distance:500,_zoomSpeed:0,_stillTimeout:0,_animators:[]}}),(function(){["_mouseDownHandler","_mouseWheelHandler","_mouseMoveHandler","_mouseUpHandler","_pinchHandler","_contextMenuHandler","_update"].forEach((function(e){this[e]=this[e].bind(this)}),this)}),{init:function(){var e=this.zr;e&&(e.on("mousedown",this._mouseDownHandler),e.on("globalout",this._mouseUpHandler),e.on("mousewheel",this._mouseWheelHandler),e.on("pinch",this._pinchHandler),e.animation.on("frame",this._update),e.dom.addEventListener("contextmenu",this._contextMenuHandler))},dispose:function(){var e=this.zr;e&&(e.off("mousedown",this._mouseDownHandler),e.off("mousemove",this._mouseMoveHandler),e.off("mouseup",this._mouseUpHandler),e.off("mousewheel",this._mouseWheelHandler),e.off("pinch",this._pinchHandler),e.off("globalout",this._mouseUpHandler),e.dom.removeEventListener("contextmenu",this._contextMenuHandler),e.animation.off("frame",this._update)),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(e){this._distance=e,this._needsUpdate=!0},getOrthographicSize:function(){return this._orthoSize},setOrthographicSize:function(e){this._orthoSize=e,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(e){e=Math.max(Math.min(this.maxAlpha,e),this.minAlpha),this._theta=e/180*Math.PI,this._needsUpdate=!0},setBeta:function(e){e=Math.max(Math.min(this.maxBeta,e),this.minBeta),this._phi=-e/180*Math.PI,this._needsUpdate=!0},setCenter:function(e){this._center.setArray(e)},setViewGL:function(e){this.viewGL=e},getCamera:function(){return this.viewGL.camera},setFromViewControlModel:function(e,t){t=t||{};var r=t.baseDistance||0,n=t.baseOrthoSize||1,i=e.get("projection");"perspective"!==i&&"orthographic"!==i&&"isometric"!==i&&(console.error("Unkown projection type %s, use perspective projection instead.",i),i="perspective"),this._projection=i,this.viewGL.setProjection(i);var a=e.get("distance")+r,o=e.get("orthographicSize")+n;[["damping",.8],["autoRotate",!1],["autoRotateAfterStill",3],["autoRotateDirection","cw"],["autoRotateSpeed",10],["minDistance",30],["maxDistance",400],["minOrthographicSize",30],["maxOrthographicSize",300],["minAlpha",-90],["maxAlpha",90],["minBeta",-1/0],["maxBeta",1/0],["rotateSensitivity",1],["zoomSensitivity",1],["panSensitivity",1],["panMouseButton","left"],["rotateMouseButton","middle"]].forEach((function(t){this[t[0]]=s(e.get(t[0]),t[1])}),this),this.minDistance+=r,this.maxDistance+=r,this.minOrthographicSize+=n,this.maxOrthographicSize+=n;var l=e.ecModel,u={};["animation","animationDurationUpdate","animationEasingUpdate"].forEach((function(t){u[t]=s(e.get(t),l&&l.get(t))}));var c=s(t.alpha,e.get("alpha"))||0,h=s(t.beta,e.get("beta"))||0,d=s(t.center,e.get("center"))||[0,0,0];u.animation&&u.animationDurationUpdate>0&&this._notFirst?this.animateTo({alpha:c,beta:h,center:d,distance:a,targetOrthographicSize:o,easing:u.animationEasingUpdate,duration:u.animationDurationUpdate}):(this.setDistance(a),this.setAlpha(c),this.setBeta(h),this.setCenter(d),this.setOrthographicSize(o)),this._notFirst=!0,this._validateProperties()},_validateProperties:function(){null==l[this.panMouseButton]&&console.error("Unkown panMouseButton %s. It should be left|middle|right",this.panMouseButton),null==l[this.rotateMouseButton]&&console.error("Unkown rotateMouseButton %s. It should be left|middle|right",this.rotateMouseButton),"cw"!==this.autoRotateDirection&&"ccw"!==this.autoRotateDirection&&console.error("Unkown autoRotateDirection %s. It should be cw|ccw",this.autoRotateDirection)},animateTo:function(e){var t=this.zr,r=this,n={},i={};return null!=e.distance&&(n.distance=this.getDistance(),i.distance=e.distance),null!=e.orthographicSize&&(n.orthographicSize=this.getOrthographicSize(),i.orthographicSize=e.orthographicSize),null!=e.alpha&&(n.alpha=this.getAlpha(),i.alpha=e.alpha),null!=e.beta&&(n.beta=this.getBeta(),i.beta=e.beta),null!=e.center&&(n.center=this.getCenter(),i.center=e.center),this._addAnimator(t.animation.animate(n).when(e.duration||1e3,i).during((function(){null!=n.alpha&&r.setAlpha(n.alpha),null!=n.beta&&r.setBeta(n.beta),null!=n.distance&&r.setDistance(n.distance),null!=n.center&&r.setCenter(n.center),null!=n.orthographicSize&&r.setOrthographicSize(n.orthographicSize),r._needsUpdate=!0}))).start(e.easing||"linear")},stopAllAnimation:function(){for(var e=0;e<this._animators.length;e++)this._animators[e].stop();this._animators.length=0},update:function(){this._needsUpdate=!0,this._update(20)},_isAnimating:function(){return this._animators.length>0},_update:function(e){if(this._rotating){var t=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=t*e/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.1||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(e=Math.min(e,50),this._updateDistanceOrSize(e),this._updatePan(e),this._updateRotate(e),this._updateTransform(),this.getCamera().update(),this.zr&&this.zr.refresh(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(e){var t=this._rotateVelocity;this._phi=t.y*e/20+this._phi,this._theta=t.x*e/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(t,Math.pow(this.damping,e/16))},_updateDistanceOrSize:function(e){"perspective"===this._projection?this._setDistance(this._distance+this._zoomSpeed*e/20):this._setOrthoSize(this._orthoSize+this._zoomSpeed*e/20),this._zoomSpeed*=Math.pow(this.damping,e/16)},_setDistance:function(e){this._distance=Math.max(Math.min(e,this.maxDistance),this.minDistance)},_setOrthoSize:function(e){this._orthoSize=Math.max(Math.min(e,this.maxOrthographicSize),this.minOrthographicSize);var t=this.getCamera(),r=this._orthoSize,n=r/this.viewGL.viewport.height*this.viewGL.viewport.width;t.left=-n/2,t.right=n/2,t.top=r/2,t.bottom=-r/2},_updatePan:function(e){var t=this._panVelocity,r=this._distance,n=this.getCamera(),i=n.worldTransform.y,a=n.worldTransform.x;this._center.scaleAndAdd(a,-t.x*r/200).scaleAndAdd(i,-t.y*r/200),this._vectorDamping(t,0)},_updateTransform:function(){var e=this.getCamera(),t=new a["a"],r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);t.x=i*Math.cos(n),t.y=-Math.cos(r),t.z=i*Math.sin(n),e.position.copy(this._center).scaleAndAdd(t,this._distance),e.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var e=this.autoRotateAfterStill,t=this;!isNaN(e)&&e>0&&(this._stillTimeout=setTimeout((function(){t._rotating=!0}),1e3*e))},_vectorDamping:function(e,t){var r=e.len();r*=t,r<1e-4&&(r=0),e.normalize().scale(r)},_decomposeTransform:function(){if(this.getCamera()){this.getCamera().updateWorldTransform();var e=this.getCamera().worldTransform.z,t=Math.asin(e.y),r=Math.atan2(e.x,e.z);this._theta=t,this._phi=-r,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this.getCamera().aspect?this._setDistance(this.getCamera().position.dist(this._center)):this._setOrthoSize(this.getCamera().top-this.getCamera().bottom)}},_mouseDownHandler:function(e){if(!e.target&&!this._isAnimating()){var t=e.offsetX,r=e.offsetY;this.viewGL&&!this.viewGL.containPoint(t,r)||(this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler),e.event.targetTouches?1===e.event.targetTouches.length&&(this._mode="rotate"):e.event.button===l[this.rotateMouseButton]?this._mode="rotate":e.event.button===l[this.panMouseButton]?this._mode="pan":this._mode="",this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e.offsetX,this._mouseY=e.offsetY)}},_mouseMoveHandler:function(e){if((!e.target||!e.target.__isGLToZRProxy)&&!this._isAnimating()){var t=u(this.panSensitivity),r=u(this.rotateSensitivity);"rotate"===this._mode?(this._rotateVelocity.y=(e.offsetX-this._mouseX)/this.zr.getHeight()*2*r[0],this._rotateVelocity.x=(e.offsetY-this._mouseY)/this.zr.getWidth()*2*r[1]):"pan"===this._mode&&(this._panVelocity.x=(e.offsetX-this._mouseX)/this.zr.getWidth()*t[0]*400,this._panVelocity.y=(-e.offsetY+this._mouseY)/this.zr.getHeight()*t[1]*400),this._mouseX=e.offsetX,this._mouseY=e.offsetY,e.event.preventDefault()}},_mouseWheelHandler:function(e){if(!this._isAnimating()){var t=e.event.wheelDelta||-e.event.detail;this._zoomHandler(e,t)}},_pinchHandler:function(e){this._isAnimating()||(this._zoomHandler(e,e.pinchScale>1?1:-1),this._mode="")},_zoomHandler:function(e,t){if(0!==t){var r,n=e.offsetX,i=e.offsetY;if(!this.viewGL||this.viewGL.containPoint(n,i))r="perspective"===this._projection?Math.max(Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance))/20,.5):Math.max(Math.max(Math.min(this._orthoSize-this.minOrthographicSize,this.maxOrthographicSize-this._orthoSize))/20,.5),this._zoomSpeed=(t>0?-1:1)*r*this.zoomSensitivity,this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),e.event.preventDefault()}},_mouseUpHandler:function(){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_isRightMouseButtonUsed:function(){return"right"===this.rotateMouseButton||"right"===this.panMouseButton},_contextMenuHandler:function(e){this._isRightMouseButtonUsed()&&e.preventDefault()},_addAnimator:function(e){var t=this._animators;return t.push(e),e.done((function(){var r=t.indexOf(e);r>=0&&t.splice(r,1)})),e}});Object.defineProperty(c.prototype,"autoRotate",{get:function(e){return this._autoRotate},set:function(e){this._autoRotate=e,this._rotating=e}}),t["a"]=c},function(e,t,r){"use strict";t["a"]="@export ecgl.lines3D.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position: POSITION;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(position, 1.0);\n v_Color = a_Color;\n}\n\n@end\n\n@export ecgl.lines3D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\n@import clay.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n}\n@end\n\n\n\n@export ecgl.lines3D.clipNear\n\nvec4 clipNear(vec4 p1, vec4 p2) {\n float n = (p1.w - near) / (p1.w - p2.w);\n return vec4(mix(p1.xy, p2.xy, n), -near, near);\n}\n\n@end\n\n@export ecgl.lines3D.expandLine\n#ifdef VERTEX_ANIMATION\n vec4 prevProj = worldViewProjection * vec4(mix(prevPositionPrev, positionPrev, percent), 1.0);\n vec4 currProj = worldViewProjection * vec4(mix(prevPosition, position, percent), 1.0);\n vec4 nextProj = worldViewProjection * vec4(mix(prevPositionNext, positionNext, percent), 1.0);\n#else\n vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);\n vec4 currProj = worldViewProjection * vec4(position, 1.0);\n vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);\n#endif\n\n if (currProj.w < 0.0) {\n if (nextProj.w > 0.0) {\n currProj = clipNear(currProj, nextProj);\n }\n else if (prevProj.w > 0.0) {\n currProj = clipNear(currProj, prevProj);\n }\n }\n\n vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;\n vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;\n vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;\n\n vec2 dir;\n float len = offset;\n if (position == positionPrev) {\n dir = normalize(nextScreen - currScreen);\n }\n else if (position == positionNext) {\n dir = normalize(currScreen - prevScreen);\n }\n else {\n vec2 dirA = normalize(currScreen - prevScreen);\n vec2 dirB = normalize(nextScreen - currScreen);\n\n vec2 tanget = normalize(dirA + dirB);\n\n float miter = 1.0 / max(dot(tanget, dirA), 0.5);\n len *= miter;\n dir = tanget;\n }\n\n dir = vec2(-dir.y, dir.x) * len;\n currScreen += dir;\n\n currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);\n@end\n\n\n@export ecgl.meshLines3D.vertex\n\nattribute vec3 position: POSITION;\nattribute vec3 positionPrev;\nattribute vec3 positionNext;\nattribute float offset;\nattribute vec4 a_Color : COLOR;\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute vec3 prevPositionPrev;\nattribute vec3 prevPositionNext;\nuniform float percent : 1.0;\n#endif\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\nuniform float near : NEAR;\n\nvarying vec4 v_Color;\n\n@import ecgl.common.wireframe.vertexHeader\n\n@import ecgl.lines3D.clipNear\n\nvoid main()\n{\n @import ecgl.lines3D.expandLine\n\n gl_Position = currProj;\n\n v_Color = a_Color;\n\n @import ecgl.common.wireframe.vertexMain\n}\n@end\n\n\n@export ecgl.meshLines3D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n\n @import ecgl.common.wireframe.fragmentMain\n}\n\n@end"},function(e,t,r){var n=r(13),i=r(82),a=r(85),o=a.parsePercent,s=r(171),l=n.each,u=["left","right","top","bottom","width","height"],c=[["width","left","right"],["height","top","bottom"]];function h(e,t,r,n,i){var a=0,o=0;null==n&&(n=1/0),null==i&&(i=1/0);var s=0;t.eachChild((function(l,u){var c,h,d=l.position,f=l.getBoundingRect(),p=t.childAt(u+1),m=p&&p.getBoundingRect();if("horizontal"===e){var g=f.width+(m?-m.x+f.x:0);c=a+g,c>n||l.newline?(a=0,c=g,o+=s+r,s=f.height):s=Math.max(s,f.height)}else{var _=f.height+(m?-m.y+f.y:0);h=o+_,h>i||l.newline?(a+=s+r,o=0,h=_,s=f.width):s=Math.max(s,f.width)}l.newline||(d[0]=a,d[1]=o,"horizontal"===e?a=c+r:o=h+r)}))}var d=h,f=n.curry(h,"vertical"),p=n.curry(h,"horizontal");function m(e,t,r){var n=t.width,i=t.height,a=o(e.x,n),l=o(e.y,i),u=o(e.x2,n),c=o(e.y2,i);return(isNaN(a)||isNaN(parseFloat(e.x)))&&(a=0),(isNaN(u)||isNaN(parseFloat(e.x2)))&&(u=n),(isNaN(l)||isNaN(parseFloat(e.y)))&&(l=0),(isNaN(c)||isNaN(parseFloat(e.y2)))&&(c=i),r=s.normalizeCssArray(r||0),{width:Math.max(u-a-r[1]-r[3],0),height:Math.max(c-l-r[0]-r[2],0)}}function g(e,t,r){r=s.normalizeCssArray(r||0);var n=t.width,a=t.height,l=o(e.left,n),u=o(e.top,a),c=o(e.right,n),h=o(e.bottom,a),d=o(e.width,n),f=o(e.height,a),p=r[2]+r[0],m=r[1]+r[3],g=e.aspect;switch(isNaN(d)&&(d=n-c-m-l),isNaN(f)&&(f=a-h-p-u),null!=g&&(isNaN(d)&&isNaN(f)&&(g>n/a?d=.8*n:f=.8*a),isNaN(d)&&(d=g*f),isNaN(f)&&(f=d/g)),isNaN(l)&&(l=n-c-d-m),isNaN(u)&&(u=a-h-f-p),e.left||e.right){case"center":l=n/2-d/2-r[3];break;case"right":l=n-d-m;break}switch(e.top||e.bottom){case"middle":case"center":u=a/2-f/2-r[0];break;case"bottom":u=a-f-p;break}l=l||0,u=u||0,isNaN(d)&&(d=n-m-l-(c||0)),isNaN(f)&&(f=a-p-u-(h||0));var _=new i(l+r[3],u+r[0],d,f);return _.margin=r,_}function _(e,t,r,a,o){var s=!o||!o.hv||o.hv[0],l=!o||!o.hv||o.hv[1],u=o&&o.boundingMode||"all";if(s||l){var c;if("raw"===u)c="group"===e.type?new i(0,0,+t.width||0,+t.height||0):e.getBoundingRect();else if(c=e.getBoundingRect(),e.needLocalTransform()){var h=e.getLocalTransform();c=c.clone(),c.applyTransform(h)}t=g(n.defaults({width:c.width,height:c.height},t),r,a);var d=e.position,f=s?t.x-c.x:0,p=l?t.y-c.y:0;e.attr("position","raw"===u?[f,p]:[d[0]+f,d[1]+p])}}function v(e,t){return null!=e[c[t][0]]||null!=e[c[t][1]]&&null!=e[c[t][2]]}function y(e,t,r){!n.isObject(r)&&(r={});var i=r.ignoreSize;!n.isArray(i)&&(i=[i,i]);var a=s(c[0],0),o=s(c[1],1);function s(r,n){var a={},o=0,s={},c=0,d=2;if(l(r,(function(t){s[t]=e[t]})),l(r,(function(e){u(t,e)&&(a[e]=s[e]=t[e]),h(a,e)&&o++,h(s,e)&&c++})),i[n])return h(t,r[1])?s[r[2]]=null:h(t,r[2])&&(s[r[1]]=null),s;if(c!==d&&o){if(o>=d)return a;for(var f=0;f<r.length;f++){var p=r[f];if(!u(a,p)&&u(e,p)){a[p]=e[p];break}}return a}return s}function u(e,t){return e.hasOwnProperty(t)}function h(e,t){return null!=e[t]&&"auto"!==e[t]}function d(e,t,r){l(e,(function(e){t[e]=r[e]}))}d(c[0],e,a),d(c[1],e,o)}function x(e){return T({},e)}function T(e,t){return t&&e&&l(u,(function(r){t.hasOwnProperty(r)&&(e[r]=t[r])})),e}t.LOCATION_PARAMS=u,t.HV_NAMES=c,t.box=d,t.vbox=f,t.hbox=p,t.getAvailableSize=m,t.getLayoutRect=g,t.positionElement=_,t.sizeCalculable=v,t.mergeLayoutParam=y,t.getLayoutParams=x,t.copyLayoutParams=T},function(e,t,r){"use strict";var n=r(7),i=n["a"].extend((function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}}),{updateParameter:function(e,t){var r,n,i=this.outputs[e],a=i.parameters,o=i._parametersCopy;if(o||(o=i._parametersCopy={}),a)for(var s in a)"width"!==s&&"height"!==s&&(o[s]=a[s]);return r=a.width instanceof Function?a.width.call(this,t):a.width,n=a.height instanceof Function?a.height.call(this,t):a.height,o.width===r&&o.height===n||this._outputTextures[e]&&this._outputTextures[e].dispose(t.gl),o.width=r,o.height=n,o},setParameter:function(e,t){},getParameter:function(e){},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},render:function(){},getOutput:function(e,t){if(null==t)return t=e,this._outputTextures[t];var r=this.outputs[t];return r?this._rendered?r.outputLastFrame?this._prevOutputTextures[t]:this._outputTextures[t]:this._rendering?(this._prevOutputTextures[t]||(this._prevOutputTextures[t]=this._compositor.allocateTexture(r.parameters||{})),this._prevOutputTextures[t]):(this.render(e),this._outputTextures[t]):void 0},removeReference:function(e){if(this._outputReferences[e]--,0===this._outputReferences[e]){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,r){this.inputLinks[e]={node:t,pin:r},t.outputLinks[r]||(t.outputLinks[r]=[]),t.outputLinks[r].push({node:this,pin:e}),this.pass.material.enableTexture(e)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(e){if(!this._rendering){for(var t in this._rendering=!0,this.inputLinks){var r=this.inputLinks[t];r.node.updateReference(r.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){for(var e in this._rendered=!1,this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}});t["a"]=i},function(e,t,r){"use strict";function n(e,t){var r=0,n=1/t,i=e;while(i>0)r+=n*(i%t),i=Math.floor(i/t),n/=t;return r}t["a"]=n},function(e,t,r){"use strict";var n=r(0),i=r.n(n);t["a"]=function(e,t,r){r=r||e.getSource();var n=t||i.a.getCoordinateSystemDimensions(e.get("coordinateSystem"))||["x","y","z"],a=i.a.helper.createDimensions(r,{dimensionsDefine:r.dimensionsDefine||e.get("dimensions"),encodeDefine:r.encodeDefine||e.get("encode"),coordDimensions:n.map((function(t){var r=e.getReferringComponents(t+"Axis3D")[0];return{type:r&&"category"===r.get("type")?"ordinal":"float",name:t}}))});"cartesian3D"===e.get("coordinateSystem")&&a.forEach((function(t){if(n.indexOf(t.coordDim)>=0){var r=e.getReferringComponents(t.coordDim+"Axis3D")[0];r&&"category"===r.get("type")&&(t.ordinalMeta=r.getOrdinalMeta())}}));var o=i.a.helper.dataStack.enableDataStack(e,a,{byIndex:!0,stackedCoordDimension:"z"}),s=new i.a.List(a,e);return s.setCalculationInfo(o),s.initData(r),s}},function(e,t){function r(e,t,r){return{seriesType:e,performRawSeries:!0,reset:function(e,n,i){var a=e.getData(),o=e.get("symbol")||t,s=e.get("symbolSize"),l=e.get("symbolKeepAspect");if(a.setVisual({legendSymbol:r||o,symbol:o,symbolSize:s,symbolKeepAspect:l}),!n.isSeriesFiltered(e)){var u="function"===typeof s;return{dataEach:a.hasItemOption||u?c:null}}function c(t,r){if("function"===typeof s){var n=e.getRawValue(r),i=e.getDataParams(r);t.setItemVisual(r,"symbolSize",s(n,i))}if(t.hasItemOption){var a=t.getItemModel(r),o=a.getShallow("symbol",!0),l=a.getShallow("symbolSize",!0),u=a.getShallow("symbolKeepAspect",!0);null!=o&&t.setItemVisual(r,"symbol",o),null!=l&&t.setItemVisual(r,"symbolSize",l),null!=u&&t.setItemVisual(r,"symbolKeepAspect",u)}}}}}e.exports=r},function(e,t,r){"use strict";var n=r(7),i=r(111),a=r(11),o=r(14),s=r(19),l=r(26),u=r(115),c=r(8),h=r(71),d=r(21),f=r(12);c["a"]["import"](h["a"]);var p=d["a"].create,m={};function g(e){return e.material}function _(e,t,r){return t.uniforms[r].value}function v(e,t,r,n){return r!==n}function y(e){return!0}function x(){}var T={float:a["a"].FLOAT,byte:a["a"].BYTE,ubyte:a["a"].UNSIGNED_BYTE,short:a["a"].SHORT,ushort:a["a"].UNSIGNED_SHORT};function b(e,t,r){this.availableAttributes=e,this.availableAttributeSymbols=t,this.indicesBuffer=r,this.vao=null}function w(e){var t,r;this.bind=function(e){t||(t=o["a"].createCanvas(),t.width=t.height=1,t.getContext("2d"));var n=e.gl,i=!r;i&&(r=n.createTexture()),n.bindTexture(n.TEXTURE_2D,r),i&&n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)},this.unbind=function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},this.isRenderable=function(){return!0}}var E=n["a"].extend((function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:"undefined"!==typeof window&&window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}}),(function(){this.canvas||(this.canvas=o["a"].createCanvas());var e=this.canvas;try{var t={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),!this.gl)throw new Error;this._glinfo=new i["a"](this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(r){throw"Error creating WebGL Context "+r}this._programMgr=new u["a"](this),this._placeholderTexture=new w(this)}),{resize:function(e,t){var r=this.canvas,n=this.devicePixelRatio;null!=e?(r.style.width=e+"px",r.style.height=t+"px",r.width=e*n,r.height=t*n,this._width=e,this._height=t):(this._width=r.width/n,this._height=r.height/n),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var e=this.viewport;return e.width/e.height},setDevicePixelRatio:function(e){this.devicePixelRatio=e,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(e){return this._glinfo.getExtension(e)},getGLParameter:function(e){return this._glinfo.getParameter(e)},setViewport:function(e,t,r,n,i){if("object"===typeof e){var a=e;e=a.x,t=a.y,r=a.width,n=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(e*i,t*i,r*i,n*i),this.viewport={x:e,y:t,width:r,height:n,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var e=this._clearStack.pop();this.clearColor=e.clearColor,this.clearBit=e.clearBit}},bindSceneRendering:function(e){this._sceneRendering=e},render:function(e,t,r,n){var i=this.gl,a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,l=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||l&&l!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*l,o.y*l,o.width*l,o.height*l)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}if(r||e.update(!1),e.updateLights(),t=t||e.getMainCamera(),t){t.update();var u=e.updateRenderList(t,!0);this._sceneRendering=e;var c=u.opaque,h=u.transparent,m=e.material;e.trigger("beforerender",this,e,t,u),n?(this.renderPreZ(c,e,t),i.depthFunc(i.LEQUAL)):i.depthFunc(i.LESS);for(var g=p(),_=f["a"].create(),v=0;v<h.length;v++){var y=h[v];d["a"].multiplyAffine(g,t.viewMatrix.array,y.worldTransform.array),f["a"].transformMat4(_,y.position.array,g),y.__depth=_[2]}this.renderPass(c,t,{getMaterial:function(e){return m||e.material},sortCompare:this.opaqueSortCompare}),this.renderPass(h,t,{getMaterial:function(e){return m||e.material},sortCompare:this.transparentSortCompare}),e.trigger("afterrender",this,e,t,u),this._sceneRendering=null}else console.error("Can't find camera in the scene.")},getProgram:function(e,t,r){return t=t||e.material,this._programMgr.getProgram(e,t,r)},validateProgram:function(e){if(e.__error){var t=e.__error;if(m[e.__uid__])return;if(m[e.__uid__]=!0,this.throwError)throw new Error(t);this.trigger("error",t)}},updatePrograms:function(e,t,r){var n=r&&r.getMaterial||g;t=t||null;for(var i=0;i<e.length;i++){var a=e[i],o=n.call(this,a);if(i>0){var s=e[i-1],l=s.joints?s.joints.length:0,u=a.joints?a.joints.length:0;if(u===l&&a.material===s.material&&a.lightGroup===s.lightGroup){a.__program=s.__program;continue}}var c=this._programMgr.getProgram(a,o,t);this.validateProgram(c),a.__program=c}},renderPass:function(e,t,r){this.trigger("beforerenderpass",this,e,t,r),r=r||{},r.getMaterial=r.getMaterial||g,r.getUniform=r.getUniform||_,r.isMaterialChanged=r.isMaterialChanged||v,r.beforeRender=r.beforeRender||x,r.afterRender=r.afterRender||x;var n=r.ifRender||y;this.updatePrograms(e,this._sceneRendering,r),r.sortCompare&&e.sort(r.sortCompare);var i=this.viewport,a=i.devicePixelRatio,o=[i.x*a,i.y*a,i.width*a,i.height*a],s=this.devicePixelRatio,l=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*s,this._height*s],u=[o[2],o[3]],c=Date.now();t?(d["a"].copy(S.VIEW,t.viewMatrix.array),d["a"].copy(S.PROJECTION,t.projectionMatrix.array),d["a"].copy(S.VIEWINVERSE,t.worldTransform.array)):(d["a"].identity(S.VIEW),d["a"].identity(S.PROJECTION),d["a"].identity(S.VIEWINVERSE)),d["a"].multiply(S.VIEWPROJECTION,S.PROJECTION,S.VIEW),d["a"].invert(S.PROJECTIONINVERSE,S.PROJECTION),d["a"].invert(S.VIEWPROJECTIONINVERSE,S.VIEWPROJECTION);for(var h,f,p,m,T,b,w,E,M,A,N,C,L=this.gl,P=this._sceneRendering,D=this.getGLExtension("OES_vertex_array_object"),O=0;O<e.length;O++){var R,I=e[O],F=null!=I.worldTransform;if(n(I)){F&&(R=I.isSkinnedMesh&&I.isSkinnedMesh()?S.IDENTITY:I.worldTransform.array);var B=I.geometry,U=r.getMaterial.call(this,I),z=I.__program,G=U.shader,H=B.__uid__+"-"+z.__uid__,k=H!==A;A=H,k&&D&&D.bindVertexArrayOES(null),F&&(d["a"].copy(S.WORLD,R),d["a"].multiply(S.WORLDVIEWPROJECTION,S.VIEWPROJECTION,R),d["a"].multiplyAffine(S.WORLDVIEW,S.VIEW,R),(G.matrixSemantics.WORLDINVERSE||G.matrixSemantics.WORLDINVERSETRANSPOSE)&&d["a"].invert(S.WORLDINVERSE,R),(G.matrixSemantics.WORLDVIEWINVERSE||G.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&d["a"].invert(S.WORLDVIEWINVERSE,S.WORLDVIEW),(G.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||G.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&d["a"].invert(S.WORLDVIEWPROJECTIONINVERSE,S.WORLDVIEWPROJECTION)),I.beforeRender&&I.beforeRender(this),r.beforeRender.call(this,I,U,h);var V=z!==f;V?(z.bind(this),z.setUniformOfSemantic(L,"VIEWPORT",o),z.setUniformOfSemantic(L,"WINDOW_SIZE",l),t&&(z.setUniformOfSemantic(L,"NEAR",t.near),z.setUniformOfSemantic(L,"FAR",t.far)),z.setUniformOfSemantic(L,"DEVICEPIXELRATIO",a),z.setUniformOfSemantic(L,"TIME",c),z.setUniformOfSemantic(L,"VIEWPORT_SIZE",u),P&&P.setLightUniforms(z,I.lightGroup,this)):z=f,(V||r.isMaterialChanged(I,p,U,h))&&(U.depthTest!==m&&(U.depthTest?L.enable(L.DEPTH_TEST):L.disable(L.DEPTH_TEST),m=U.depthTest),U.depthMask!==T&&(L.depthMask(U.depthMask),T=U.depthMask),U.transparent!==M&&(U.transparent?L.enable(L.BLEND):L.disable(L.BLEND),M=U.transparent),U.transparent&&(U.blend?U.blend(L):(L.blendEquationSeparate(L.FUNC_ADD,L.FUNC_ADD),L.blendFuncSeparate(L.SRC_ALPHA,L.ONE_MINUS_SRC_ALPHA,L.ONE,L.ONE_MINUS_SRC_ALPHA))),C=this._bindMaterial(I,U,z,p||null,h||null,f||null,r.getUniform),h=U);var W=G.matrixSemanticKeys;if(F)for(var j=0;j<W.length;j++){var X=W[j],q=G.matrixSemantics[X],Z=S[X];if(q.isTranspose){var Y=S[q.semanticNoTranspose];d["a"].transpose(Z,Y)}z.setUniform(L,q.type,q.symbol,Z)}I.cullFace!==w&&(w=I.cullFace,L.cullFace(w)),I.frontFace!==E&&(E=I.frontFace,L.frontFace(E)),I.culling!==b&&(b=I.culling,b?L.enable(L.CULL_FACE):L.disable(L.CULL_FACE)),this._updateSkeleton(I,z,C),k&&(N=this._bindVAO(D,G,B,z)),this._renderObject(I,N),r.afterRender(this,I),I.afterRender&&I.afterRender(this),f=z,p=I}}D&&D.bindVertexArrayOES(null),this.trigger("afterrenderpass",this,e,t,r)},getMaxJointNumber:function(){return this._glinfo.getMaxJointNumber()},_updateSkeleton:function(e,t,r){var n=this.gl,i=e.skeleton;if(i)if(i.update(),e.joints.length>this._glinfo.getMaxJointNumber()){var a=i.getSubSkinMatricesTexture(e.__uid__,e.joints);t.useTextureSlot(this,a,r),t.setUniform(n,"1i","skinMatricesTexture",r),t.setUniform(n,"1f","skinMatricesTextureSize",a.width)}else{var o=i.getSubSkinMatrices(e.__uid__,e.joints);t.setUniformOfSemantic(n,"SKIN_MATRIX",o)}},_renderObject:function(e,t){var r=this.gl,n=e.geometry,i=e.mode;if(null==i&&(i=4),t.indicesBuffer){var a=this.getGLExtension("OES_element_index_uint"),o=a&&n.indices instanceof Uint32Array,s=o?r.UNSIGNED_INT:r.UNSIGNED_SHORT;r.drawElements(i,t.indicesBuffer.count,s,0)}else r.drawArrays(i,0,n.vertexCount)},_bindMaterial:function(e,t,r,n,i,a,o){for(var s=this.gl,l=a===r,u=r.currentTextureSlot(),c=t.getEnabledUniforms(),h=t.getTextureUniforms(),d=this._placeholderTexture,f=0;f<h.length;f++){var p=h[f],m=o(e,t,p),g=t.uniforms[p].type;if("t"===g&&m)m.__slot=-1;else if("tv"===g)for(var _=0;_<m.length;_++)m[_]&&(m[_].__slot=-1)}d.__slot=-1;for(f=0;f<c.length;f++){p=c[f];var v=t.uniforms[p],y=(m=o(e,t,p),g=v.type,"t"===g);if(y&&(m&&m.isRenderable()||(m=d)),i&&l){var x=o(n,i,p);if(y&&(x&&x.isRenderable()||(x=d)),x===m){if(y)r.takeCurrentTextureSlot(this,null);else if("tv"===g&&m)for(_=0;_<m.length;_++)r.takeCurrentTextureSlot(this,null);continue}}if(null!=m)if(y)if(m.__slot<0){var T=r.currentTextureSlot(),b=r.setUniform(s,"1i",p,T);b&&(r.takeCurrentTextureSlot(this,m),m.__slot=T)}else r.setUniform(s,"1i",p,m.__slot);else if(Array.isArray(m)){if(0===m.length)continue;if("tv"===g){if(!r.hasUniform(p))continue;var w=[];for(_=0;_<m.length;_++){var E=m[_];if(E.__slot<0){T=r.currentTextureSlot();w.push(T),r.takeCurrentTextureSlot(this,E),E.__slot=T}else w.push(E.__slot)}r.setUniform(s,"1iv",p,w)}else r.setUniform(s,v.type,p,m)}else r.setUniform(s,v.type,p,m)}var S=r.currentTextureSlot();return r.resetTextureSlot(u),S},_bindVAO:function(e,t,r,n){var i=!r.dynamic,a=this.gl,o=this.__uid__+"-"+n.__uid__,s=r.__vaoCache[o];if(!s){var l=r.getBufferChunks(this);if(!l||!l.length)return;for(var u=l[0],c=u.attributeBuffers,h=u.indicesBuffer,d=[],f=[],p=0;p<c.length;p++){var m,g=c[p],_=g.name,v=g.semantic;if(v){var y=t.attributeSemantics[v];m=y&&y.symbol}else m=_;m&&n.attributes[m]&&(d.push(g),f.push(m))}s=new b(d,f,h),i&&(r.__vaoCache[o]=s)}var x=!0;e&&i&&(null==s.vao?s.vao=e.createVertexArrayOES():x=!1,e.bindVertexArrayOES(s.vao));d=s.availableAttributes,h=s.indicesBuffer;if(x){var w=n.enableAttributes(this,s.availableAttributeSymbols,e&&i&&s);for(p=0;p<d.length;p++){var E=w[p];if(-1!==E){g=d[p];var S=g.buffer,M=g.size,A=T[g.type]||a.FLOAT;a.bindBuffer(a.ARRAY_BUFFER,S),a.vertexAttribPointer(E,M,A,!1,0,0)}}r.isUseIndices()&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,h.buffer)}return s},renderPreZ:function(e,t,r){var n=this.gl,i=this._prezMaterial||new s["a"]({shader:new c["a"](c["a"].source("clay.prez.vertex"),c["a"].source("clay.prez.fragment"))});this._prezMaterial=i,n.colorMask(!1,!1,!1,!1),n.depthMask(!0),this.renderPass(e,r,{ifRender:function(e){return!e.ignorePreZ},isMaterialChanged:function(e,t){var r=e.material,n=t.material;return r.get("diffuseMap")!==n.get("diffuseMap")||(r.get("alphaCutoff")||0)!==(n.get("alphaCutoff")||0)},getUniform:function(e,t,r){if("alphaMap"===r)return e.material.get("diffuseMap");if("alphaCutoff"===r){if(e.material.isDefined("fragment","ALPHA_TEST")&&e.material.get("diffuseMap")){var n=e.material.get("alphaCutoff");return n||0}return 0}return t.get(r)},getMaterial:function(){return i},sort:this.opaqueSortCompare}),n.colorMask(!0,!0,!0,!0),n.depthMask(!0)},disposeScene:function(e){this.disposeNode(e,!0,!0),e.dispose()},disposeNode:function(e,t,r){e.getParent()&&e.getParent().remove(e);var n={};e.traverse((function(e){var i=e.material;if(e.geometry&&t&&e.geometry.dispose(this),r&&i&&!n[i.__uid__]){for(var a=i.getTextureUniforms(),o=0;o<a.length;o++){var s=a[o],l=i.uniforms[s].value,u=i.uniforms[s].type;if(l)if("t"===u)l.dispose&&l.dispose(this);else if("tv"===u)for(var c=0;c<l.length;c++)l[c]&&l[c].dispose&&l[c].dispose(this)}n[i.__uid__]=!0}e.dispose&&e.dispose(this)}),this)},disposeGeometry:function(e){e.dispose(this)},disposeTexture:function(e){e.dispose(this)},disposeFrameBuffer:function(e){e.dispose(this)},dispose:function(){},screenToNDC:function(e,t,r){r||(r=new l["a"]),t=this._height-t;var n=this.viewport,i=r.array;return i[0]=(e-n.x)/n.width,i[0]=2*i[0]-1,i[1]=(t-n.y)/n.height,i[1]=2*i[1]-1,r}});E.opaqueSortCompare=E.prototype.opaqueSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.renderOrder-t.renderOrder},E.transparentSortCompare=E.prototype.transparentSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__depth===t.__depth?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.__depth-t.__depth:e.renderOrder-t.renderOrder};var S={IDENTITY:p(),WORLD:p(),VIEW:p(),PROJECTION:p(),WORLDVIEW:p(),VIEWPROJECTION:p(),WORLDVIEWPROJECTION:p(),WORLDINVERSE:p(),VIEWINVERSE:p(),PROJECTIONINVERSE:p(),WORLDVIEWINVERSE:p(),VIEWPROJECTIONINVERSE:p(),WORLDVIEWPROJECTIONINVERSE:p(),WORLDTRANSPOSE:p(),VIEWTRANSPOSE:p(),PROJECTIONTRANSPOSE:p(),WORLDVIEWTRANSPOSE:p(),VIEWPROJECTIONTRANSPOSE:p(),WORLDVIEWPROJECTIONTRANSPOSE:p(),WORLDINVERSETRANSPOSE:p(),VIEWINVERSETRANSPOSE:p(),PROJECTIONINVERSETRANSPOSE:p(),WORLDVIEWINVERSETRANSPOSE:p(),VIEWPROJECTIONINVERSETRANSPOSE:p(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:p()};E.COLOR_BUFFER_BIT=a["a"].COLOR_BUFFER_BIT,E.DEPTH_BUFFER_BIT=a["a"].DEPTH_BUFFER_BIT,E.STENCIL_BUFFER_BIT=a["a"].STENCIL_BUFFER_BIT,t["a"]=E},function(e,t,r){"use strict";function n(e,t){this.action=e,this.context=t}var i={trigger:function(e){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(e)){var t=this.__handlers__[e],r=t.length,n=-1,i=arguments;switch(i.length){case 1:while(++n<r)t[n].action.call(t[n].context);return;case 2:while(++n<r)t[n].action.call(t[n].context,i[1]);return;case 3:while(++n<r)t[n].action.call(t[n].context,i[1],i[2]);return;case 4:while(++n<r)t[n].action.call(t[n].context,i[1],i[2],i[3]);return;case 5:while(++n<r)t[n].action.call(t[n].context,i[1],i[2],i[3],i[4]);return;default:while(++n<r)t[n].action.apply(t[n].context,Array.prototype.slice.call(i,1));return}}},on:function(e,t,r){if(e&&t){var i=this.__handlers__||(this.__handlers__={});if(i[e]){if(this.has(e,t))return}else i[e]=[];var a=new n(t,r||this);return i[e].push(a),this}},once:function(e,t,r){if(e&&t){var n=this;return this.on(e,i,r)}function i(){n.off(e,i),t.apply(this,arguments)}},before:function(e,t,r){if(e&&t)return e="before"+e,this.on(e,t,r)},after:function(e,t,r){if(e&&t)return e="after"+e,this.on(e,t,r)},success:function(e,t){return this.once("success",e,t)},error:function(e,t){return this.once("error",e,t)},off:function(e,t){var r=this.__handlers__||(this.__handlers__={});if(t){if(r[e]){for(var n=r[e],i=[],a=0;a<n.length;a++)t&&n[a].action!==t&&i.push(n[a]);r[e]=i}return this}r[e]=[]},has:function(e,t){var r=this.__handlers__;if(!r||!r[e])return!1;for(var n=r[e],i=0;i<n.length;i++)if(n[i].action===t)return!0}};t["a"]=i},function(e,t,r){"use strict";var n=r(3),i=r(12),a=1e-5,o=function(e,t){this.origin=e||new n["a"],this.direction=t||new n["a"]};o.prototype={constructor:o,intersectPlane:function(e,t){var r=e.normal.array,a=e.distance,o=this.origin.array,s=this.direction.array,l=i["a"].dot(r,s);if(0===l)return null;t||(t=new n["a"]);var u=(i["a"].dot(r,o)-a)/l;return i["a"].scaleAndAdd(t.array,o,s,-u),t._dirty=!0,t},mirrorAgainstPlane:function(e){var t=i["a"].dot(e.normal.array,this.direction.array);i["a"].scaleAndAdd(this.direction.array,this.direction.array,e.normal.array,2*-t),this.direction._dirty=!0},distanceToPoint:function(){var e=i["a"].create();return function(t){i["a"].sub(e,t,this.origin.array);var r=i["a"].dot(e,this.direction.array);if(r<0)return i["a"].distance(this.origin.array,t);var n=i["a"].lenSquared(e);return Math.sqrt(n-r*r)}}(),intersectSphere:function(){var e=i["a"].create();return function(t,r,a){var o=this.origin.array,s=this.direction.array;t=t.array,i["a"].sub(e,t,o);var l=i["a"].dot(e,s),u=i["a"].squaredLength(e),c=u-l*l,h=r*r;if(!(c>h)){var d=Math.sqrt(h-c),f=l-d,p=l+d;return a||(a=new n["a"]),f<0?p<0?null:(i["a"].scaleAndAdd(a.array,o,s,p),a):(i["a"].scaleAndAdd(a.array,o,s,f),a)}}}(),intersectBoundingBox:function(e,t){var r,a,o,s,l,u,c=this.direction.array,h=this.origin.array,d=e.min.array,f=e.max.array,p=1/c[0],m=1/c[1],g=1/c[2];if(p>=0?(r=(d[0]-h[0])*p,a=(f[0]-h[0])*p):(a=(d[0]-h[0])*p,r=(f[0]-h[0])*p),m>=0?(o=(d[1]-h[1])*m,s=(f[1]-h[1])*m):(s=(d[1]-h[1])*m,o=(f[1]-h[1])*m),r>s||o>a)return null;if((o>r||r!==r)&&(r=o),(s<a||a!==a)&&(a=s),g>=0?(l=(d[2]-h[2])*g,u=(f[2]-h[2])*g):(u=(d[2]-h[2])*g,l=(f[2]-h[2])*g),r>u||l>a)return null;if((l>r||r!==r)&&(r=l),(u<a||a!==a)&&(a=u),a<0)return null;var _=r>=0?r:a;return t||(t=new n["a"]),i["a"].scaleAndAdd(t.array,h,c,_),t},intersectTriangle:function(){var e=i["a"].create(),t=i["a"].create(),r=i["a"].create(),o=i["a"].create();return function(s,l,u,c,h,d){var f=this.direction.array,p=this.origin.array;s=s.array,l=l.array,u=u.array,i["a"].sub(e,l,s),i["a"].sub(t,u,s),i["a"].cross(o,t,f);var m=i["a"].dot(e,o);if(c){if(m>-a)return null}else if(m>-a&&m<a)return null;i["a"].sub(r,p,s);var g=i["a"].dot(o,r)/m;if(g<0||g>1)return null;i["a"].cross(o,e,r);var _=i["a"].dot(f,o)/m;if(_<0||_>1||g+_>1)return null;i["a"].cross(o,e,t);var v=-i["a"].dot(r,o)/m;return v<0?null:(h||(h=new n["a"]),d&&n["a"].set(d,1-g-_,g,_),i["a"].scaleAndAdd(h.array,p,f,v),h)}}(),applyTransform:function(e){n["a"].add(this.direction,this.direction,this.origin),n["a"].transformMat4(this.origin,this.origin,e),n["a"].transformMat4(this.direction,this.direction,e),n["a"].sub(this.direction,this.direction,this.origin),n["a"].normalize(this.direction,this.direction)},copy:function(e){n["a"].copy(this.origin,e.origin),n["a"].copy(this.direction,e.direction)},clone:function(){var e=new o;return e.copy(this),e}},t["a"]=o},function(e,t,r){"use strict";var n=r(20),i=r(12),a=r(33),o=r(34),s={create:function(){var e=new n["a"](4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}};s.rotationTo=function(){var e=i["a"].create(),t=i["a"].fromValues(1,0,0),r=i["a"].fromValues(0,1,0);return function(n,a,o){var l=i["a"].dot(a,o);return l<-.999999?(i["a"].cross(e,t,a),i["a"].length(e)<1e-6&&i["a"].cross(e,r,a),i["a"].normalize(e,e),s.setAxisAngle(n,e,Math.PI),n):l>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(i["a"].cross(e,a,o),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+l,s.normalize(n,n))}}(),s.setAxes=function(){var e=o["a"].create();return function(t,r,n,i){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=i[0],e[4]=i[1],e[7]=i[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],s.normalize(t,s.fromMat3(t,e))}}(),s.clone=a["a"].clone,s.fromValues=a["a"].fromValues,s.copy=a["a"].copy,s.set=a["a"].set,s.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},s.setAxisAngle=function(e,t,r){r*=.5;var n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e},s.add=a["a"].add,s.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],l=r[1],u=r[2],c=r[3];return e[0]=n*c+o*s+i*u-a*l,e[1]=i*c+o*l+a*s-n*u,e[2]=a*c+o*u+n*l-i*s,e[3]=o*c-n*s-i*l-a*u,e},s.mul=s.multiply,s.scale=a["a"].scale,s.rotateX=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=n*l+o*s,e[1]=i*l+a*s,e[2]=a*l-i*s,e[3]=o*l-n*s,e},s.rotateY=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=n*l-a*s,e[1]=i*l+o*s,e[2]=a*l+n*s,e[3]=o*l-i*s,e},s.rotateZ=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=n*l+i*s,e[1]=i*l-n*s,e[2]=a*l+o*s,e[3]=o*l-a*s,e},s.calculateW=function(e,t){var r=t[0],n=t[1],i=t[2];return e[0]=r,e[1]=n,e[2]=i,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-i*i)),e},s.dot=a["a"].dot,s.lerp=a["a"].lerp,s.slerp=function(e,t,r,n){var i,a,o,s,l,u=t[0],c=t[1],h=t[2],d=t[3],f=r[0],p=r[1],m=r[2],g=r[3];return a=u*f+c*p+h*m+d*g,a<0&&(a=-a,f=-f,p=-p,m=-m,g=-g),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-n)*i)/o,l=Math.sin(n*i)/o):(s=1-n,l=n),e[0]=s*u+l*f,e[1]=s*c+l*p,e[2]=s*h+l*m,e[3]=s*d+l*g,e},s.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a,s=o?1/o:0;return e[0]=-r*s,e[1]=-n*s,e[2]=-i*s,e[3]=a*s,e},s.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},s.length=a["a"].length,s.len=s.length,s.squaredLength=a["a"].squaredLength,s.sqrLen=s.squaredLength,s.normalize=a["a"].normalize,s.fromMat3=function(e,t){var r,n=t[0]+t[4]+t[8];if(n>0)r=Math.sqrt(n+1),e[3]=.5*r,r=.5/r,e[0]=(t[5]-t[7])*r,e[1]=(t[6]-t[2])*r,e[2]=(t[1]-t[3])*r;else{var i=0;t[4]>t[0]&&(i=1),t[8]>t[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;r=Math.sqrt(t[3*i+i]-t[3*a+a]-t[3*o+o]+1),e[i]=.5*r,r=.5/r,e[3]=(t[3*a+o]-t[3*o+a])*r,e[a]=(t[3*a+i]+t[3*i+a])*r,e[o]=(t[3*o+i]+t[3*i+o])*r}return e},t["a"]=s},function(e,t,r){"use strict";var n=r(55),i=r(34),a=function(e,t,r,i){e=e||0,t=t||0,r=r||0,i=void 0===i?1:i,this.array=n["a"].fromValues(e,t,r,i),this._dirty=!0};a.prototype={constructor:a,add:function(e){return n["a"].add(this.array,this.array,e.array),this._dirty=!0,this},calculateW:function(){return n["a"].calculateW(this.array,this.array),this._dirty=!0,this},set:function(e,t,r,n){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this.array[3]=n,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new a(this.x,this.y,this.z,this.w)},conjugate:function(){return n["a"].conjugate(this.array,this.array),this._dirty=!0,this},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},dot:function(e){return n["a"].dot(this.array,e.array)},fromMat3:function(e){return n["a"].fromMat3(this.array,e.array),this._dirty=!0,this},fromMat4:function(){var e=i["a"].create();return function(t){return i["a"].fromMat4(e,t.array),i["a"].transpose(e,e),n["a"].fromMat3(this.array,e),this._dirty=!0,this}}(),identity:function(){return n["a"].identity(this.array),this._dirty=!0,this},invert:function(){return n["a"].invert(this.array,this.array),this._dirty=!0,this},len:function(){return n["a"].len(this.array)},length:function(){return n["a"].length(this.array)},lerp:function(e,t,r){return n["a"].lerp(this.array,e.array,t.array,r),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return n["a"].multiply(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return n["a"].multiply(this.array,e.array,this.array),this._dirty=!0,this},normalize:function(){return n["a"].normalize(this.array,this.array),this._dirty=!0,this},rotateX:function(e){return n["a"].rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return n["a"].rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return n["a"].rotateZ(this.array,this.array,e),this._dirty=!0,this},rotationTo:function(e,t){return n["a"].rotationTo(this.array,e.array,t.array),this._dirty=!0,this},setAxes:function(e,t,r){return n["a"].setAxes(this.array,e.array,t.array,r.array),this._dirty=!0,this},setAxisAngle:function(e,t){return n["a"].setAxisAngle(this.array,e.array,t),this._dirty=!0,this},slerp:function(e,t,r){return n["a"].slerp(this.array,e.array,t.array,r),this._dirty=!0,this},sqrLen:function(){return n["a"].sqrLen(this.array)},squaredLength:function(){return n["a"].squaredLength(this.array)},fromEuler:function(e,t){return a.fromEuler(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var o=Object.defineProperty;if(o){var s=a.prototype;o(s,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),o(s,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),o(s,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),o(s,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}a.add=function(e,t,r){return n["a"].add(e.array,t.array,r.array),e._dirty=!0,e},a.set=function(e,t,r,i,a){n["a"].set(e.array,t,r,i,a),e._dirty=!0},a.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},a.calculateW=function(e,t){return n["a"].calculateW(e.array,t.array),e._dirty=!0,e},a.conjugate=function(e,t){return n["a"].conjugate(e.array,t.array),e._dirty=!0,e},a.identity=function(e){return n["a"].identity(e.array),e._dirty=!0,e},a.invert=function(e,t){return n["a"].invert(e.array,t.array),e._dirty=!0,e},a.dot=function(e,t){return n["a"].dot(e.array,t.array)},a.len=function(e){return n["a"].length(e.array)},a.lerp=function(e,t,r,i){return n["a"].lerp(e.array,t.array,r.array,i),e._dirty=!0,e},a.slerp=function(e,t,r,i){return n["a"].slerp(e.array,t.array,r.array,i),e._dirty=!0,e},a.mul=function(e,t,r){return n["a"].multiply(e.array,t.array,r.array),e._dirty=!0,e},a.multiply=a.mul,a.rotateX=function(e,t,r){return n["a"].rotateX(e.array,t.array,r),e._dirty=!0,e},a.rotateY=function(e,t,r){return n["a"].rotateY(e.array,t.array,r),e._dirty=!0,e},a.rotateZ=function(e,t,r){return n["a"].rotateZ(e.array,t.array,r),e._dirty=!0,e},a.setAxisAngle=function(e,t,r){return n["a"].setAxisAngle(e.array,t.array,r),e._dirty=!0,e},a.normalize=function(e,t){return n["a"].normalize(e.array,t.array),e._dirty=!0,e},a.sqrLen=function(e){return n["a"].sqrLen(e.array)},a.squaredLength=a.sqrLen,a.fromMat3=function(e,t){return n["a"].fromMat3(e.array,t.array),e._dirty=!0,e},a.setAxes=function(e,t,r,i){return n["a"].setAxes(e.array,t.array,r.array,i.array),e._dirty=!0,e},a.rotationTo=function(e,t,r){return n["a"].rotationTo(e.array,t.array,r.array),e._dirty=!0,e},a.fromEuler=function(e,t,r){e._dirty=!0,t=t.array;var n=e.array,i=Math.cos(t[0]/2),a=Math.cos(t[1]/2),o=Math.cos(t[2]/2),s=Math.sin(t[0]/2),l=Math.sin(t[1]/2),u=Math.sin(t[2]/2);r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=s*a*o+i*l*u,n[1]=i*l*o-s*a*u,n[2]=i*a*u+s*l*o,n[3]=i*a*o-s*l*u;break;case"YXZ":n[0]=s*a*o+i*l*u,n[1]=i*l*o-s*a*u,n[2]=i*a*u-s*l*o,n[3]=i*a*o+s*l*u;break;case"ZXY":n[0]=s*a*o-i*l*u,n[1]=i*l*o+s*a*u,n[2]=i*a*u+s*l*o,n[3]=i*a*o-s*l*u;break;case"ZYX":n[0]=s*a*o-i*l*u,n[1]=i*l*o+s*a*u,n[2]=i*a*u-s*l*o,n[3]=i*a*o+s*l*u;break;case"YZX":n[0]=s*a*o+i*l*u,n[1]=i*l*o+s*a*u,n[2]=i*a*u-s*l*o,n[3]=i*a*o-s*l*u;break;case"XZY":n[0]=s*a*o-i*l*u,n[1]=i*l*o-s*a*u,n[2]=i*a*u+s*l*o,n[3]=i*a*o+s*l*u;break}},t["a"]=a},function(e,t,r){"use strict";var n="__dt__",i=function(){this._contextId=0,this._caches=[],this._context={}};i.prototype={use:function(e,t){var r=this._caches;r[e]||(r[e]={},t&&(r[e]=t())),this._contextId=e,this._context=r[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},dirty:function(e){e=e||"";var t=n+e;this.put(t,!0)},dirtyAll:function(e){e=e||"";for(var t=n+e,r=this._caches,i=0;i<r.length;i++)r[i]&&(r[i][t]=!0)},fresh:function(e){e=e||"";var t=n+e;this.put(t,!1)},freshAll:function(e){e=e||"";for(var t=n+e,r=this._caches,i=0;i<r.length;i++)r[i]&&(r[i][t]=!1)},isDirty:function(e){e=e||"";var t=n+e,r=this._context;return!r.hasOwnProperty(t)||!0===r[t]},deleteContext:function(e){delete this._caches[e],this._context={}},delete:function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(e,t){var r=Object.keys(this._caches);r.forEach((function(r){e&&e.call(t,r)}))},miss:function(e){return!this._context.hasOwnProperty(e)}},i.prototype.constructor=i,t["a"]=i},function(e,t,r){"use strict";var n=r(35),i=r(9),a=r(59),o=r(54),s=r(33),l=r(12),u=n["a"].extend((function(){return{projectionMatrix:new i["a"],invProjectionMatrix:new i["a"],viewMatrix:new i["a"],frustum:new a["a"]}}),(function(){this.update(!0)}),{update:function(e){n["a"].prototype.update.call(this,e),i["a"].invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),i["a"].invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(e){i["a"].copy(this.viewMatrix,e),i["a"].invert(this.worldTransform,e),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(e){i["a"].copy(this.projectionMatrix,e),i["a"].invert(this.invProjectionMatrix,e),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var e=s["a"].create();return function(t,r){var n=void 0!==r?r:new o["a"],i=t.array[0],a=t.array[1];return s["a"].set(e,i,a,-1,1),s["a"].transformMat4(e,e,this.invProjectionMatrix.array),s["a"].transformMat4(e,e,this.worldTransform.array),l["a"].scale(n.origin.array,e,1/e[3]),s["a"].set(e,i,a,1,1),s["a"].transformMat4(e,e,this.invProjectionMatrix.array),s["a"].transformMat4(e,e,this.worldTransform.array),l["a"].scale(e,e,1/e[3]),l["a"].sub(n.direction.array,e,n.origin.array),l["a"].normalize(n.direction.array,n.direction.array),n.direction._dirty=!0,n.origin._dirty=!0,n}}()});t["a"]=u},function(e,t,r){"use strict";var n=r(18),i=r(74),a=r(12),o=a["a"].set,s=a["a"].copy,l=a["a"].transformMat4,u=Math.min,c=Math.max,h=function(){this.planes=[];for(var e=0;e<6;e++)this.planes.push(new i["a"]);this.boundingBox=new n["a"],this.vertices=[];for(e=0;e<8;e++)this.vertices[e]=a["a"].fromValues(0,0,0)};h.prototype={setFromProjection:function(e){var t=this.planes,r=e.array,n=r[0],i=r[1],a=r[2],s=r[3],l=r[4],u=r[5],c=r[6],h=r[7],d=r[8],f=r[9],p=r[10],m=r[11],g=r[12],_=r[13],v=r[14],y=r[15];o(t[0].normal.array,s-n,h-l,m-d),t[0].distance=-(y-g),t[0].normalize(),o(t[1].normal.array,s+n,h+l,m+d),t[1].distance=-(y+g),t[1].normalize(),o(t[2].normal.array,s+i,h+u,m+f),t[2].distance=-(y+_),t[2].normalize(),o(t[3].normal.array,s-i,h-u,m-f),t[3].distance=-(y-_),t[3].normalize(),o(t[4].normal.array,s-a,h-c,m-p),t[4].distance=-(y-v),t[4].normalize(),o(t[5].normal.array,s+a,h+c,m+p),t[5].distance=-(y+v),t[5].normalize();var x=this.boundingBox,T=this.vertices;if(0===y){var b=u/n,w=-v/(p-1),E=-v/(p+1),S=-E/u,M=-w/u;x.min.set(-S*b,-S,E),x.max.set(S*b,S,w),o(T[0],-S*b,-S,E),o(T[1],-S*b,S,E),o(T[2],S*b,-S,E),o(T[3],S*b,S,E),o(T[4],-M*b,-M,w),o(T[5],-M*b,M,w),o(T[6],M*b,-M,w),o(T[7],M*b,M,w)}else{var A=(-1-g)/n,N=(1-g)/n,C=(1-_)/u,L=(-1-_)/u,P=(-1-v)/p,D=(1-v)/p;x.min.set(Math.min(A,N),Math.min(L,C),Math.min(D,P)),x.max.set(Math.max(N,A),Math.max(C,L),Math.max(P,D));var O=x.min.array,R=x.max.array;o(T[0],O[0],O[1],O[2]),o(T[1],O[0],R[1],O[2]),o(T[2],R[0],O[1],O[2]),o(T[3],R[0],R[1],O[2]),o(T[4],O[0],O[1],R[2]),o(T[5],O[0],R[1],R[2]),o(T[6],R[0],O[1],R[2]),o(T[7],R[0],R[1],R[2])}},getTransformedBoundingBox:function(){var e=a["a"].create();return function(t,r){var n=this.vertices,i=r.array,a=t.min,o=t.max,h=a.array,d=o.array,f=n[0];l(e,f,i),s(h,e),s(d,e);for(var p=1;p<8;p++)f=n[p],l(e,f,i),h[0]=u(e[0],h[0]),h[1]=u(e[1],h[1]),h[2]=u(e[2],h[2]),d[0]=c(e[0],d[0]),d[1]=c(e[1],d[1]),d[2]=c(e[2],d[2]);return a._dirty=!0,o._dirty=!0,t}}()},t["a"]=h},function(e,t){var r=function(){this.head=null,this.tail=null,this._len=0},n=r.prototype;n.insert=function(e){var t=new i(e);return this.insertEntry(t),t},n.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e):this.head=this.tail=e,this._len++},n.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._len--},n.len=function(){return this._len},n.clear=function(){this.head=this.tail=null,this._len=0};var i=function(e){this.value=e,this.next,this.prev},a=function(e){this._list=new r,this._map={},this._maxSize=e||10,this._lastRemovedEntry=null},o=a.prototype;o.put=function(e,t){var r=this._list,n=this._map,a=null;if(null==n[e]){var o=r.len(),s=this._lastRemovedEntry;if(o>=this._maxSize&&o>0){var l=r.head;r.remove(l),delete n[l.key],a=l.value,this._lastRemovedEntry=l}s?s.value=t:s=new i(t),s.key=e,r.insertEntry(s),n[e]=s}return a},o.get=function(e){var t=this._map[e],r=this._list;if(null!=t)return t!==r.tail&&(r.remove(t),r.insertEntry(t)),t.value},o.clear=function(){this._list.clear(),this._map={}};var s=a;e.exports=s},function(e,t,r){"use strict";var n=r(5),i=r(27),a=r(14),o=r(62),s=r(75),l=r(36),u=r(122),c=r(123),h={loadTexture:function(e,t,r,a){var o;if("function"===typeof t?(r=t,a=r,t={}):t=t||{},"string"===typeof e){if(e.match(/.hdr$/)||"hdr"===t.fileType)return o=new n["a"]({width:0,height:0,sRGB:!1}),h._fetchTexture(e,(function(e){c["a"].parseRGBE(e,o,t.exposure),o.dirty(),r&&r(o)}),a),o;e.match(/.dds$/)||"dds"===t.fileType?(o=new n["a"]({width:0,height:0}),h._fetchTexture(e,(function(e){u["a"].parse(e,o),o.dirty(),r&&r(o)}),a)):(o=new n["a"],o.load(e),o.success(r),o.error(a))}else"object"===typeof e&&"undefined"!==typeof e.px&&(o=new i["a"],o.load(e),o.success(r),o.error(a));return o},loadPanorama:function(e,t,r,n,i,a){var o=this;"function"===typeof n?(i=n,a=i,n={}):n=n||{},h.loadTexture(t,n,(function(t){t.flipY=n.flipY||!1,o.panoramaToCubeMap(e,t,r,n),t.dispose(e),i&&i(r)}),a)},panoramaToCubeMap:function(e,t,r,n){var i=new o["a"],a=new s["a"]({scene:new l["a"]});return a.setEnvironmentMap(t),n=n||{},n.encodeRGBM&&a.material.define("fragment","RGBM_ENCODE"),r.sRGB=t.sRGB,i.texture=r,i.render(e,a.scene),i.texture=null,i.dispose(e),r},heightToNormal:function(e,t){var r=document.createElement("canvas"),n=r.width=e.width,i=r.height=e.height,a=r.getContext("2d");a.drawImage(e,0,0,n,i),t=t||!1;for(var o=a.getImageData(0,0,n,i),s=a.createImageData(n,i),l=0;l<o.data.length;l+=4){if(t){var u=o.data[l],c=o.data[l+1],h=o.data[l+2],d=Math.abs(u-c)+Math.abs(c-h);if(d>20)return console.warn("Given image is not a height map"),e}var f,p,m,g;l%(4*n)===0?(f=o.data[l],m=o.data[l+4]):l%(4*n)===4*(n-1)?(f=o.data[l-4],m=o.data[l]):(f=o.data[l-4],m=o.data[l+4]),l<4*n?(p=o.data[l],g=o.data[l+4*n]):l>n*(i-1)*4?(p=o.data[l-4*n],g=o.data[l]):(p=o.data[l-4*n],g=o.data[l+4*n]),s.data[l]=f-m+127,s.data[l+1]=p-g+127,s.data[l+2]=255,s.data[l+3]=255}return a.putImageData(s,0,0),r},isHeightImage:function(e,t,r){if(!e||!e.width||!e.height)return!1;var n=document.createElement("canvas"),i=n.getContext("2d"),a=t||32;r=r||20,n.width=n.height=a,i.drawImage(e,0,0,a,a);for(var o=i.getImageData(0,0,a,a),s=0;s<o.data.length;s+=4){var l=o.data[s],u=o.data[s+1],c=o.data[s+2],h=Math.abs(l-u)+Math.abs(u-c);if(h>r)return!1}return!0},_fetchTexture:function(e,t,r){a["a"].request.get({url:e,responseType:"arraybuffer",onload:t,onerror:r})},createChessboard:function(e,t,r,i){e=e||512,t=t||64,r=r||"black",i=i||"white";var a=Math.ceil(e/t),o=document.createElement("canvas");o.width=e,o.height=e;var s=o.getContext("2d");s.fillStyle=i,s.fillRect(0,0,e,e),s.fillStyle=r;for(var l=0;l<a;l++)for(var u=0;u<a;u++){var c=u%2?l%2:l%2-1;c&&s.fillRect(l*t,u*t,t,t)}var h=new n["a"]({image:o,anisotropic:8});return h},createBlank:function(e){var t=document.createElement("canvas");t.width=1,t.height=1;var r=t.getContext("2d");r.fillStyle=e,r.fillRect(0,0,1,1);var i=new n["a"]({image:t});return i}};t["a"]=h},function(e,t,r){"use strict";var n=r(7),i=r(3),a=r(41),o=r(10),s=["px","nx","py","ny","pz","nz"],l=n["a"].extend((function(){var e={position:new i["a"],far:1e3,near:.1,texture:null,shadowMapPass:null},t=e._cameras={px:new a["a"]({fov:90}),nx:new a["a"]({fov:90}),py:new a["a"]({fov:90}),ny:new a["a"]({fov:90}),pz:new a["a"]({fov:90}),nz:new a["a"]({fov:90})};return t.px.lookAt(i["a"].POSITIVE_X,i["a"].NEGATIVE_Y),t.nx.lookAt(i["a"].NEGATIVE_X,i["a"].NEGATIVE_Y),t.py.lookAt(i["a"].POSITIVE_Y,i["a"].POSITIVE_Z),t.ny.lookAt(i["a"].NEGATIVE_Y,i["a"].NEGATIVE_Z),t.pz.lookAt(i["a"].POSITIVE_Z,i["a"].NEGATIVE_Y),t.nz.lookAt(i["a"].NEGATIVE_Z,i["a"].NEGATIVE_Y),e._frameBuffer=new o["a"],e}),{getCamera:function(e){return this._cameras[e]},render:function(e,t,r){var n=e.gl;r||t.update();for(var a=this.texture.width,o=2*Math.atan(a/(a-.5))/Math.PI*180,l=0;l<6;l++){var u=s[l],c=this._cameras[u];if(i["a"].copy(c.position,this.position),c.far=this.far,c.near=this.near,c.fov=o,this.shadowMapPass){c.update();var h=t.getBoundingBox();h.applyTransform(c.viewMatrix),t.viewBoundingBoxLastFrame.copy(h),this.shadowMapPass.render(e,t,c,!0)}this._frameBuffer.attach(this.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+l),this._frameBuffer.bind(e),e.render(t,c,!0),this._frameBuffer.unbind(e)}},dispose:function(e){this._frameBuffer.dispose(e)}});t["a"]=l},function(e,t,r){"use strict";var n=r(1),i=r(165),a=r(166);n["a"].Shader.import(a["a"]),t["a"]=n["a"].Mesh.extend((function(){var e=new i["a"]({dynamic:!0}),t=new n["a"].Material({shader:n["a"].createShader("ecgl.labels"),transparent:!0,depthMask:!1});return{geometry:e,material:t,culling:!1,castShadow:!1,ignorePicking:!0}}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(204),s=r(25),l=r(2),u=r(6),c=r(65),h=r(66),d=r(46),f=u["a"].vec3;function p(e){this.rootNode=new a["a"].Node,this._triangulationResults={},this._shadersMap=a["a"].COMMON_SHADERS.reduce((function(e,t){return e[t]=a["a"].createShader("ecgl."+t),e}),{}),this._linesShader=a["a"].createShader("ecgl.meshLines3D");var t={};a["a"].COMMON_SHADERS.forEach((function(e){t[e]=new a["a"].Material({shader:a["a"].createShader("ecgl."+e)})})),this._groundMaterials=t,this._groundMesh=new a["a"].Mesh({geometry:new a["a"].PlaneGeometry({dynamic:!0}),castShadow:!1,renderNormal:!0,$ignorePicking:!0}),this._groundMesh.rotation.rotateX(-Math.PI/2),this._labelsBuilder=new h["a"](512,512,e),this._labelsBuilder.getMesh().renderOrder=100,this._labelsBuilder.getMesh().material.depthTest=!1,this.rootNode.add(this._labelsBuilder.getMesh()),this._initMeshes(),this._api=e}a["a"].Shader.import(d["a"]),p.prototype={constructor:p,extrudeY:!0,update:function(e,t,r,n,i){var a=e.getData();null==n&&(n=0),null==i&&(i=a.count()),this._startIndex=n,this._endIndex=i-1,this._triangulation(e,n,i);var o=this._getShader(e.get("shading"));this._prepareMesh(e,o,r,n,i),this.rootNode.updateWorldTransform(),this._updateRegionMesh(e,r,n,i);var s=e.coordinateSystem;"geo3D"===s.type&&this._updateGroundPlane(e,s,r);var l=this;this._labelsBuilder.updateData(a,n,i),this._labelsBuilder.getLabelPosition=function(e,t,r){var n=a.getName(e),i=r;if("geo3D"===s.type){var o=s.getRegion(n);if(!o)return[NaN,NaN,NaN];h=o.center;var u=s.dataToPoint([h[0],h[1],i]);return u}var c=l._triangulationResults[e-l._startIndex],h=l.extrudeY?[(c.max[0]+c.min[0])/2,c.max[1]+i,(c.max[2]+c.min[2])/2]:[(c.max[0]+c.min[0])/2,(c.max[1]+c.min[1])/2,c.max[2]+i]},this._data=a,this._labelsBuilder.updateLabels(),this._updateDebugWireframe(e),this._lastHoverDataIndex=0},_initMeshes:function(){var e=this;function t(){var t=new a["a"].Mesh({name:"Polygon",material:new a["a"].Material({shader:e._shadersMap.lambert}),geometry:new a["a"].Geometry({sortTriangles:!0,dynamic:!0}),culling:!1,ignorePicking:!0,renderNormal:!0});return i.a.util.extend(t.geometry,c["a"]),t}var r=t(),n=new a["a"].Mesh({material:new a["a"].Material({shader:this._linesShader}),castShadow:!1,ignorePicking:!0,$ignorePicking:!0,geometry:new s["a"]({useNativeLine:!1})});this.rootNode.add(r),this.rootNode.add(n),r.material.define("both","VERTEX_COLOR"),r.material.define("fragment","DOUBLE_SIDED"),this._polygonMesh=r,this._linesMesh=n,this.rootNode.add(this._groundMesh)},_getShader:function(e){var t=this._shadersMap[e];return t||(console.warn("Unkown shading "+e),t=this._shadersMap.lambert),t.__shading=e,t},_prepareMesh:function(e,t,r,n,i){for(var o=0,s=0,l=0,u=0,c=n;c<i;c++){var h=this._getRegionPolygonInfo(c),d=this._getRegionLinesInfo(c,e,this._linesMesh.geometry);o+=h.vertexCount,s+=h.triangleCount,l+=d.vertexCount,u+=d.triangleCount}var f=this._polygonMesh,p=f.geometry;["position","normal","texcoord0","color"].forEach((function(e){p.attributes[e].init(o)})),p.indices=o>65535?new Uint32Array(3*s):new Uint16Array(3*s),f.material.shader!==t&&f.material.attachShader(t,!0),a["a"].setMaterialFromModel(t.__shading,f.material,e,r),l>0&&(this._linesMesh.geometry.resetOffset(),this._linesMesh.geometry.setVertexCount(l),this._linesMesh.geometry.setTriangleCount(u)),this._dataIndexOfVertex=new Uint32Array(o),this._vertexRangeOfDataIndex=new Uint32Array(2*(i-n))},_updateRegionMesh:function(e,t,r,n){for(var i=e.getData(),o=0,s=0,u=!1,c=this._polygonMesh,h=this._linesMesh,d=r;d<n;d++){var f=e.getRegionModel(d),p=f.getModel("itemStyle"),m=p.get("color"),g=l["a"].firstNotNull(p.get("opacity"),1),_=i.getItemVisual(d,"color",!0);null!=_&&i.hasValue(d)&&(m=_),i.setItemVisual(d,"color",m),i.setItemVisual(d,"opacity",g),m=a["a"].parseColor(m);var v=a["a"].parseColor(p.get("borderColor"));m[3]*=g,v[3]*=g;var y=m[3]<.99;c.material.set("color",[1,1,1,1]),u=u||y;for(var x=l["a"].firstNotNull(f.get("height",!0),e.get("regionHeight")),T=this._updatePolygonGeometry(e,c.geometry,d,x,o,s,m),b=o;b<T.vertexOffset;b++)this._dataIndexOfVertex[b]=d;this._vertexRangeOfDataIndex[2*(d-r)]=o,this._vertexRangeOfDataIndex[2*(d-r)+1]=T.vertexOffset,o=T.vertexOffset,s=T.triangleOffset;var w=p.get("borderWidth"),E=w>0;E&&(w*=t.getDevicePixelRatio(),this._updateLinesGeometry(h.geometry,e,d,x,w,e.coordinateSystem.transform)),h.invisible=!E,h.material.set({color:v})}c=this._polygonMesh;c.material.transparent=u,c.material.depthMask=!u,c.geometry.updateBoundingBox(),c.frontFace=this.extrudeY?a["a"].Mesh.CCW:a["a"].Mesh.CW,c.material.get("normalMap")&&c.geometry.generateTangents(),c.seriesIndex=e.seriesIndex,c.on("mousemove",this._onmousemove,this),c.on("mouseout",this._onmouseout,this)},_updateDebugWireframe:function(e){var t=e.getModel("debug.wireframe");if(t.get("show")){var r=a["a"].parseColor(t.get("lineStyle.color")||"rgba(0,0,0,0.5)"),n=l["a"].firstNotNull(t.get("lineStyle.width"),1),i=this._polygonMesh;i.geometry.generateBarycentric(),i.material.define("both","WIREFRAME_TRIANGLE"),i.material.set("wireframeLineColor",r),i.material.set("wireframeLineWidth",n)}},_onmousemove:function(e){var t=this._dataIndexOfVertex[e.triangle[0]];null==t&&(t=-1),t!==this._lastHoverDataIndex&&(this.downplay(this._lastHoverDataIndex),this.highlight(t),this._labelsBuilder.updateLabels([t])),this._lastHoverDataIndex=t,this._polygonMesh.dataIndex=t},_onmouseout:function(e){e.target&&(this.downplay(this._lastHoverDataIndex),this._lastHoverDataIndex=-1,this._polygonMesh.dataIndex=-1),this._labelsBuilder.updateLabels([])},_updateGroundPlane:function(e,t,r){var n=e.getModel("groundPlane",e);if(this._groundMesh.invisible=!n.get("show",!0),!this._groundMesh.invisible){var i=e.get("shading"),o=this._groundMaterials[i];o||(console.warn("Unkown shading "+i),o=this._groundMaterials.lambert),a["a"].setMaterialFromModel(i,o,n,r),o.get("normalMap")&&this._groundMesh.geometry.generateTangents(),this._groundMesh.material=o,this._groundMesh.material.set("color",a["a"].parseColor(n.get("color"))),this._groundMesh.scale.set(t.size[0],t.size[2],1)}},_triangulation:function(e,t,r){this._triangulationResults=[];for(var n=[1/0,1/0,1/0],i=[-1/0,-1/0,-1/0],a=e.coordinateSystem,s=t;s<r;s++){for(var l=[],u=e.getRegionPolygonCoords(s),c=0;c<u.length;c++){var h=u[c].exterior,d=u[c].interiors,p=[],m=[];if(!(h.length<3)){for(var g=0,_=0;_<h.length;_++){var v=h[_];p[g++]=v[0],p[g++]=v[1]}for(_=0;_<d.length;_++)if(!(d[_].length<3)){for(var y=p.length/2,x=0;x<d[_].length;x++){v=d[_][x];p.push(v[0]),p.push(v[1])}m.push(y)}var T=Object(o["a"])(p,m),b=new Float64Array(p.length/2*3),w=[],E=[1/0,1/0,1/0],S=[-1/0,-1/0,-1/0],M=0;for(_=0;_<p.length;)f.set(w,p[_++],0,p[_++]),a&&a.transform&&f.transformMat4(w,w,a.transform),f.min(E,E,w),f.max(S,S,w),b[M++]=w[0],b[M++]=w[1],b[M++]=w[2];f.min(n,n,E),f.max(i,i,S),l.push({points:b,indices:T,min:E,max:S})}}this._triangulationResults.push(l)}this._geoBoundingBox=[n,i]},_getRegionPolygonInfo:function(e){for(var t=this._triangulationResults[e-this._startIndex],r=0,n=0,i=0;i<t.length;i++)r+=t[i].points.length/3,n+=t[i].indices.length/3;var a=2*r+4*r,o=2*n+2*r;return{vertexCount:a,triangleCount:o}},_updatePolygonGeometry:function(e,t,r,n,i,a,o){var s=e.get("projectUVOnGround"),l=t.attributes.position,u=t.attributes.normal,c=t.attributes.texcoord0,h=t.attributes.color,d=this._triangulationResults[r-this._startIndex],p=h.value&&o,m=t.indices,g=this.extrudeY?1:2,_=this.extrudeY?2:1,v=[this.rootNode.worldTransform.x.len(),this.rootNode.worldTransform.y.len(),this.rootNode.worldTransform.z.len()],y=f.mul([],this._geoBoundingBox[0],v),x=f.mul([],this._geoBoundingBox[1],v),T=Math.max(x[0]-y[0],x[2]-y[2]);function b(e,t,r){for(var n=e.points,a=n.length,s=[],u=[],d=0;d<a;d+=3)s[0]=n[d],s[g]=t,s[_]=n[d+2],u[0]=(n[d]*v[0]-y[0])/T,u[1]=(n[d+2]*v[_]-y[2])/T,l.set(i,s),p&&h.set(i,o),c.set(i++,u)}function w(e,t,r){var n=i;b(e,t,r);for(var o=e.indices.length,s=0;s<o;s++)m[3*a+s]=e.indices[s]+n;a+=e.indices.length/3}for(var E=this.extrudeY?[0,1,0]:[0,0,1],S=f.negate([],E),M=0;M<d.length;M++){var A=i,N=d[M];w(N,0,0),w(N,n,0);for(var C=N.points.length/3,L=0;L<C;L++)u.set(A+L,S),u.set(A+L+C,E);var P=[0,3,1,1,3,2],D=[[],[],[],[]],O=[],R=[],I=[],F=[],B=0;for(L=0;L<C;L++){for(var U=(L+1)%C,z=(N.points[3*U]-N.points[3*L])*v[0],G=(N.points[3*U+2]-N.points[3*L+2])*v[_],H=Math.sqrt(z*z+G*G),k=0;k<4;k++){var V=0===k||3===k,W=3*(V?L:U);D[k][0]=N.points[W],D[k][g]=k>1?n:0,D[k][_]=N.points[W+2],l.set(i+k,D[k]),s?(F[0]=(N.points[W]*v[0]-y[0])/T,F[1]=(N.points[W+2]*v[_]-y[_])/T):(F[0]=(V?B:B+H)/T,F[1]=(D[k][g]*v[g]-y[g])/T),c.set(i+k,F)}f.sub(O,D[1],D[0]),f.sub(R,D[3],D[0]),f.cross(I,O,R),f.normalize(I,I);for(k=0;k<4;k++)u.set(i+k,I),p&&h.set(i+k,o);for(k=0;k<6;k++)m[3*a+k]=P[k]+i;i+=4,a+=2,B+=H}}return t.dirty(),{vertexOffset:i,triangleOffset:a}},_getRegionLinesInfo:function(e,t,r){var n=0,i=0,a=t.getRegionModel(e),o=a.getModel("itemStyle"),s=o.get("borderWidth");if(s>0){var l=t.getRegionPolygonCoords(e);l.forEach((function(e){var t=e.exterior,a=e.interiors;n+=r.getPolylineVertexCount(t),i+=r.getPolylineTriangleCount(t);for(var o=0;o<a.length;o++)n+=r.getPolylineVertexCount(a[o]),i+=r.getPolylineTriangleCount(a[o])}),this)}return{vertexCount:n,triangleCount:i}},_updateLinesGeometry:function(e,t,r,n,i,a){function o(e){for(var t=new Float64Array(3*e.length),r=0,i=[],o=0;o<e.length;o++)i[0]=e[o][0],i[1]=n+.1,i[2]=e[o][1],a&&f.transformMat4(i,i,a),t[r++]=i[0],t[r++]=i[1],t[r++]=i[2];return t}var s=[1,1,1,1],l=t.getRegionPolygonCoords(r);l.forEach((function(t){var r=t.exterior,n=t.interiors;e.addPolyline(o(r),s,i);for(var a=0;a<n.length;a++)e.addPolyline(o(n[a]),s,i)}))},highlight:function(e){var t=this._data;if(t){var r=t.getItemModel(e),n=r.getModel("emphasis.itemStyle"),o=n.get("color"),s=l["a"].firstNotNull(n.get("opacity"),t.getItemVisual(e,"opacity"),1);if(null==o){var u=t.getItemVisual(e,"color");o=i.a.color.lift(u,-.4)}null==s&&(s=t.getItemVisual(e,"opacity"));var c=a["a"].parseColor(o);c[3]*=s,this._setColorOfDataIndex(t,e,c)}},downplay:function(e){var t=this._data;if(t){var r=t.getItemVisual(e,"color"),n=l["a"].firstNotNull(t.getItemVisual(e,"opacity"),1),i=a["a"].parseColor(r);i[3]*=n,this._setColorOfDataIndex(t,e,i)}},_setColorOfDataIndex:function(e,t,r){if(!(t<this._startIndex&&t>this._endIndex)){t-=this._startIndex;for(var n=this._vertexRangeOfDataIndex[2*t];n<this._vertexRangeOfDataIndex[2*t+1];n++)this._polygonMesh.geometry.attributes.color.set(n,r);this._polygonMesh.geometry.dirty(),this._api.getZr().refresh()}}},t["a"]=p},function(e,t,r){"use strict";var n=r(97),i=r(6),a=i["a"].vec3,o=a.create(),s=a.create(),l=a.create();t["a"]={needsSortTriangles:function(){return this.indices&&this.sortTriangles},needsSortTrianglesProgressively:function(){return this.needsSortTriangles()&&this.triangleCount>=2e4},doSortTriangles:function(e,t){var r=this.indices;if(0===t){var n=this.attributes.position;e=e.array;this._triangleZList&&this._triangleZList.length===this.triangleCount||(this._triangleZList=new Float32Array(this.triangleCount),this._sortedTriangleIndices=new Uint32Array(this.triangleCount),this._indicesTmp=new r.constructor(r.length),this._triangleZListTmp=new Float32Array(this.triangleCount));for(var i,u=0,c=0;c<r.length;){n.get(r[c++],o),n.get(r[c++],s),n.get(r[c++],l);var h=a.sqrDist(o,e),d=a.sqrDist(s,e),f=a.sqrDist(l,e),p=Math.min(h,d);p=Math.min(p,f),3===c?(i=p,p=0):p-=i,this._triangleZList[u++]=p}}var m=this._sortedTriangleIndices;for(c=0;c<m.length;c++)m[c]=c;if(this.triangleCount<2e4)0===t&&this._simpleSort(!0);else for(c=0;c<3;c++)this._progressiveQuickSort(3*t+c);var g=this._indicesTmp,_=this._triangleZListTmp,v=this._triangleZList;for(c=0;c<this.triangleCount;c++){var y=3*m[c],x=3*c;g[x++]=r[y++],g[x++]=r[y++],g[x]=r[y],_[c]=v[m[c]]}var T=this._indicesTmp;this._indicesTmp=this.indices,this.indices=T;T=this._triangleZListTmp;this._triangleZListTmp=this._triangleZList,this._triangleZList=T,this.dirtyIndices()},_simpleSort:function(e){var t=this._triangleZList,r=this._sortedTriangleIndices;function i(e,r){return t[r]-t[e]}e?Array.prototype.sort.call(r,i):n["a"].sort(r,i,0,r.length-1)},_progressiveQuickSort:function(e){var t=this._triangleZList,r=this._sortedTriangleIndices;this._quickSort=this._quickSort||new n["a"],this._quickSort.step(r,(function(e,r){return t[r]-t[e]}),e)}}},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(81),o=r(63),s=r(2),l=1,u=2;function c(e,t,r){this._labelsMesh=new o["a"],this._labelTextureSurface=new a["a"]({width:512,height:512,devicePixelRatio:r.getDevicePixelRatio(),onupdate:function(){r.getZr().refresh()}}),this._api=r,this._labelsMesh.material.set("textureAtlas",this._labelTextureSurface.getTexture())}c.prototype.getLabelPosition=function(e,t,r){return[0,0,0]},c.prototype.getLabelDistance=function(e,t,r){return 0},c.prototype.getMesh=function(){return this._labelsMesh},c.prototype.updateData=function(e,t,r){null==t&&(t=0),null==r&&(r=e.count()),this._labelsVisibilitiesBits&&this._labelsVisibilitiesBits.length===r-t||(this._labelsVisibilitiesBits=new Uint8Array(r-t));for(var n=["label","show"],i=["emphasis","label","show"],a=t;a<r;a++){var o=e.getItemModel(a),s=o.get(n),c=o.get(i);null==c&&(c=s);var h=(s?l:0)|(c?u:0);this._labelsVisibilitiesBits[a-t]=h}this._start=t,this._end=r,this._data=e},c.prototype.updateLabels=function(e){if(this._data){e=e||[];for(var t=e.length>0,r={},n=0;n<e.length;n++)r[e[n]]=!0;this._labelsMesh.geometry.convertToDynamicArray(!0),this._labelTextureSurface.clear();for(var a=["label"],o=["emphasis","label"],c=this._data.hostModel,h=this._data,d=c.getModel(a),f=c.getModel(o,d),p={left:"right",right:"left",top:"center",bottom:"center"},m={left:"middle",right:"middle",top:"bottom",bottom:"top"},g=this._start;g<this._end;g++){var _=!1;t&&r[g]&&(_=!0);var v=this._labelsVisibilitiesBits[g-this._start]&(_?u:l);if(v){var y=h.getItemModel(g),x=y.getModel(_?o:a,_?f:d),T=x.get("distance")||0,b=x.get("position"),w=x.getModel("textStyle"),E=this._api.getDevicePixelRatio(),S=c.getFormattedLabel(g,_?"emphasis":"normal");if(null==S||""===S)return;var M=new i.a.graphic.Text;i.a.graphic.setTextStyle(M.style,w,{text:S,textFill:w.get("color")||h.getItemVisual(g,"color")||"#000",textAlign:"left",textVerticalAlign:"top",opacity:s["a"].firstNotNull(w.get("opacity"),h.getItemVisual(g,"opacity"),1)});var A=M.getBoundingRect(),N=1.2;A.height*=N;var C=this._labelTextureSurface.add(M),L=p[b]||"center",P=m[b]||"bottom";this._labelsMesh.geometry.addSprite(this.getLabelPosition(g,b,T),[A.width*E,A.height*E],C,L,P,this.getLabelDistance(g,b,T)*E)}}this._labelsMesh.material.set("uvScale",this._labelTextureSurface.getCoordsScale()),this._labelTextureSurface.getZr().refreshImmediately(),this._labelsMesh.geometry.convertToTypedArray(),this._labelsMesh.geometry.dirty()}},t["a"]=c},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(239),s=r(240),l=r(66),u=r(9),c=r(2),h=20,d=-10;function f(e,t){return e&&t&&e[0]===t[0]&&e[1]===t[1]}function p(e,t){this.rootNode=new a["a"].Node,this.is2D=e,this._labelsBuilder=new l["a"](256,256,t),this._labelsBuilder.getMesh().renderOrder=100,this.rootNode.add(this._labelsBuilder.getMesh()),this._api=t,this._spriteImageCanvas=document.createElement("canvas"),this._startDataIndex=0,this._endDataIndex=0,this._sizeScale=1}p.prototype={constructor:p,highlightOnMouseover:!0,update:function(e,t,r,n,i){var o=this._prevMesh;this._prevMesh=this._mesh,this._mesh=o;var l=e.getData();if(null==n&&(n=0),null==i&&(i=l.count()),this._startDataIndex=n,this._endDataIndex=i-1,!this._mesh){var u=this._prevMesh&&this._prevMesh.material;this._mesh=new s["a"]({renderOrder:10,frustumCulling:!1}),u&&(this._mesh.material=u)}u=this._mesh.material;var c=this._mesh.geometry,h=c.attributes;this.rootNode.remove(this._prevMesh),this.rootNode.add(this._mesh),this._setPositionTextureToMesh(this._mesh,this._positionTexture);var f=this._getSymbolInfo(e,n,i),p=r.getDevicePixelRatio(),m=e.getModel("itemStyle").getItemStyle(),g=e.get("large"),_=1;f.maxSize>2?(_=this._updateSymbolSprite(e,m,f,p),u.enableTexture("sprite")):u.disableTexture("sprite"),h.position.init(i-n);var v=[];if(g){u.undefine("VERTEX_SIZE"),u.undefine("VERTEX_COLOR");var y=l.getVisual("color"),x=l.getVisual("opacity");a["a"].parseColor(y,v),v[3]*=x,u.set({color:v,u_Size:f.maxSize*this._sizeScale})}else u.set({color:[1,1,1,1]}),u.define("VERTEX_SIZE"),u.define("VERTEX_COLOR"),h.size.init(i-n),h.color.init(i-n),this._originalOpacity=new Float32Array(i-n);for(var T=l.getLayout("points"),b=h.position.value,w=0;w<i-n;w++){var E=3*w,S=2*w;if(this.is2D?(b[E]=T[S],b[E+1]=T[S+1],b[E+2]=d):(b[E]=T[E],b[E+1]=T[E+1],b[E+2]=T[E+2]),!g){y=l.getItemVisual(w,"color"),x=l.getItemVisual(w,"opacity");a["a"].parseColor(y,v),v[3]*=x,h.color.set(w,v),v[3]<.99&&!0;var M=l.getItemVisual(w,"symbolSize");M=M instanceof Array?Math.max(M[0],M[1]):M,isNaN(M)&&(M=0),h.size.value[w]=M*_*this._sizeScale,this._originalOpacity[w]=v[3]}}this._mesh.sizeScale=_,c.updateBoundingBox(),c.dirty(),this._updateMaterial(e,m);var A=e.coordinateSystem;if(A&&A.viewGL){var N=A.viewGL.isLinearSpace()?"define":"undefine";u[N]("fragment","SRGB_DECODE")}g||this._updateLabelBuilder(e,n,i),this._updateHandler(e,t,r),this._updateAnimation(e),this._api=r},getPointsMesh:function(){return this._mesh},updateLabels:function(e){this._labelsBuilder.updateLabels(e)},hideLabels:function(){this.rootNode.remove(this._labelsBuilder.getMesh())},showLabels:function(){this.rootNode.add(this._labelsBuilder.getMesh())},_updateSymbolSprite:function(e,t,r,n){r.maxSize=Math.min(2*r.maxSize,200);var i=[];return r.aspect>1?(i[0]=r.maxSize,i[1]=r.maxSize/r.aspect):(i[1]=r.maxSize,i[0]=r.maxSize*r.aspect),i[0]=i[0]||1,i[1]=i[1]||1,this._symbolType===r.type&&f(this._symbolSize,i)&&this._lineWidth===t.lineWidth||(o["a"].createSymbolSprite(r.type,i,{fill:"#fff",lineWidth:t.lineWidth,stroke:"transparent",shadowColor:"transparent",minMargin:Math.min(i[0]/2,10)},this._spriteImageCanvas),o["a"].createSDFFromCanvas(this._spriteImageCanvas,Math.min(this._spriteImageCanvas.width,32),h,this._mesh.material.get("sprite").image),this._symbolType=r.type,this._symbolSize=i,this._lineWidth=t.lineWidth),this._spriteImageCanvas.width/r.maxSize*n},_updateMaterial:function(e,t){var r="lighter"===e.get("blendMode")?a["a"].additiveBlend:null,n=this._mesh.material;n.blend=r,n.set("lineWidth",t.lineWidth/h);var i=a["a"].parseColor(t.stroke);n.set("strokeColor",i),n.transparent=!0,n.depthMask=!1,n.depthTest=!this.is2D,n.sortVertices=!this.is2D},_updateLabelBuilder:function(e,t,r){var n=e.getData(),i=this._mesh.geometry,a=i.attributes.position.value,o=(t=this._startDataIndex,this._mesh.sizeScale);this._labelsBuilder.updateData(n,t,r),this._labelsBuilder.getLabelPosition=function(e,r,n){var i=3*(e-t);return[a[i],a[i+1],a[i+2]]},this._labelsBuilder.getLabelDistance=function(e,r,n){var a=i.attributes.size.get(e-t)/o;return a/2+n},this._labelsBuilder.updateLabels()},_updateAnimation:function(e){a["a"].updateVertexAnimation([["prevPosition","position"],["prevSize","size"]],this._prevMesh,this._mesh,e)},_updateHandler:function(e,t,r){var n,i=e.getData(),a=this._mesh,o=this,s=-1,l=e.coordinateSystem&&"cartesian3D"===e.coordinateSystem.type;l&&(n=e.coordinateSystem.model),a.seriesIndex=e.seriesIndex,a.off("mousemove"),a.off("mouseout"),a.on("mousemove",(function(t){var u=t.vertexIndex+o._startDataIndex;u!==s&&(this.highlightOnMouseover&&(this.downplay(i,s),this.highlight(i,u),this._labelsBuilder.updateLabels([u])),l&&r.dispatchAction({type:"grid3DShowAxisPointer",value:[i.get(e.coordDimToDataDim("x")[0],u),i.get(e.coordDimToDataDim("y")[0],u),i.get(e.coordDimToDataDim("z")[0],u)],grid3DIndex:n.componentIndex})),a.dataIndex=u,s=u}),this),a.on("mouseout",(function(e){var t=e.vertexIndex+o._startDataIndex;this.highlightOnMouseover&&(this.downplay(i,t),this._labelsBuilder.updateLabels()),s=-1,a.dataIndex=-1,l&&r.dispatchAction({type:"grid3DHideAxisPointer",grid3DIndex:n.componentIndex})}),this)},updateLayout:function(e,t,r){var n=e.getData();if(this._mesh){var i=this._mesh.geometry.attributes.position.value,a=n.getLayout("points");if(this.is2D)for(var o=0;o<a.length/2;o++){var s=3*o,l=2*o;i[s]=a[l],i[s+1]=a[l+1],i[s+2]=d}else for(o=0;o<a.length;o++)i[o]=a[o];this._mesh.geometry.dirty(),r.getZr().refresh()}},updateView:function(e){if(this._mesh){var t=new u["a"];u["a"].mul(t,e.viewMatrix,this._mesh.worldTransform),u["a"].mul(t,e.projectionMatrix,t),this._mesh.updateNDCPosition(t,this.is2D,this._api)}},highlight:function(e,t){if(!(t>this._endDataIndex||t<this._startDataIndex)){var r=e.getItemModel(t),n=r.getModel("emphasis.itemStyle"),o=n.get("color"),s=n.get("opacity");if(null==o){var l=e.getItemVisual(t,"color");o=i.a.color.lift(l,-.4)}null==s&&(s=e.getItemVisual(t,"opacity"));var u=a["a"].parseColor(o);u[3]*=s,this._mesh.geometry.attributes.color.set(t-this._startDataIndex,u),this._mesh.geometry.dirtyAttribute("color"),this._api.getZr().refresh()}},downplay:function(e,t){if(!(t>this._endDataIndex||t<this._startDataIndex)){var r=e.getItemVisual(t,"color"),n=e.getItemVisual(t,"opacity"),i=a["a"].parseColor(r);i[3]*=n,this._mesh.geometry.attributes.color.set(t-this._startDataIndex,i),this._mesh.geometry.dirtyAttribute("color"),this._api.getZr().refresh()}},fadeOutAll:function(e){if(this._originalOpacity){for(var t=this._mesh.geometry,r=0;r<t.vertexCount;r++){var n=this._originalOpacity[r]*e;t.attributes.color.value[4*r+3]=n}t.dirtyAttribute("color"),this._api.getZr().refresh()}},fadeInAll:function(){this.fadeOutAll(1)},setPositionTexture:function(e){this._mesh&&this._setPositionTextureToMesh(this._mesh,e),this._positionTexture=e},removePositionTexture:function(){this._positionTexture=null,this._mesh&&this._setPositionTextureToMesh(this._mesh,null)},setSizeScale:function(e){if(e!==this._sizeScale){if(this._mesh){var t=this._mesh.material.get("u_Size");this._mesh.material.set("u_Size",t/this._sizeScale*e);var r=this._mesh.geometry.attributes;if(r.size.value)for(var n=0;n<r.size.value.length;n++)r.size.value[n]=r.size.value[n]/this._sizeScale*e}this._sizeScale=e}},_setPositionTextureToMesh:function(e,t){t&&e.material.set("positionTexture",t),e.material[t?"enableTexture":"disableTexture"]("positionTexture")},_getSymbolInfo:function(e,t,r){if(e.get("large")){var n=c["a"].firstNotNull(e.get("symbolSize"),1);return n instanceof Array?(u=Math.max(n[0],n[1]),i=n[0]/n[1]):(u=n,i=1),{maxSize:n,type:e.get("symbol"),aspect:i}}for(var i,a=e.getData(),o=!1,s=a.getItemVisual(0,"symbol")||"circle",l=!1,u=0,h=t;h<r;h++){n=a.getItemVisual(h,"symbolSize");var d,f=a.getItemVisual(h,"symbol");if(n instanceof Array)d=n[0]/n[1],u=Math.max(Math.max(n[0],n[1]),u);else{if(isNaN(n))return;d=1,u=Math.max(n,u)}null!=i&&Math.abs(d-i)>.05&&(o=!0),f!==s&&(l=!0),s=f,i=d}return o&&console.warn("Different symbol width / height ratio will be ignored."),l&&console.warn("Different symbol type will be ignored."),{maxSize:u,type:s,aspect:i}}},t["a"]=p},function(e,t){var r;r=function(){return this}();try{r=r||Function("return this")()||(0,eval)("this")}catch(n){"object"===typeof window&&(r=window)}e.exports=r},function(e,t,r){"use strict";var n=r(114),i=function(e){this._list=new n["a"],this._map={},this._maxSize=e||10};i.prototype.setMaxSize=function(e){this._maxSize=e},i.prototype.put=function(e,t){if(!this._map.hasOwnProperty(e)){var r=this._list.length();if(r>=this._maxSize&&r>0){var n=this._list.head;this._list.remove(n),delete this._map[n.key]}var i=this._list.insert(t);i.key=e,this._map[e]=i}},i.prototype.get=function(e){var t=this._map[e];if(this._map.hasOwnProperty(e))return t!==this._list.tail&&(this._list.remove(t),this._list.insertEntry(t)),t.value},i.prototype.remove=function(e){var t=this._map[e];"undefined"!==typeof t&&(delete this._map[e],this._list.remove(t))},i.prototype.clear=function(){this._list.clear(),this._map={}},t["a"]=i},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](2);return e[0]=0,e[1]=0,e},clone:function(e){var t=new n["a"](2);return t[0]=e[0],t[1]=e[1],t},fromValues:function(e,t){var r=new n["a"](2);return r[0]=e,r[1]=t,r},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e},set:function(e,t,r){return e[0]=t,e[1]=r,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},subtract:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e}};i.sub=i.subtract,i.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e},i.mul=i.multiply,i.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e},i.div=i.divide,i.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e},i.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e},i.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},i.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e},i.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)},i.dist=i.distance,i.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return r*r+n*n},i.sqrDist=i.squaredDistance,i.length=function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},i.len=i.length,i.squaredLength=function(e){var t=e[0],r=e[1];return t*t+r*r},i.sqrLen=i.squaredLength,i.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},i.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e},i.normalize=function(e,t){var r=t[0],n=t[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),e[0]=t[0]*i,e[1]=t[1]*i),e},i.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},i.cross=function(e,t,r){var n=t[0]*r[1]-t[1]*r[0];return e[0]=e[1]=0,e[2]=n,e},i.lerp=function(e,t,r,n){var i=t[0],a=t[1];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e},i.random=function(e,t){t=t||1;var r=2*GLMAT_RANDOM()*Math.PI;return e[0]=Math.cos(r)*t,e[1]=Math.sin(r)*t,e},i.transformMat2=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i,e[1]=r[1]*n+r[3]*i,e},i.transformMat2d=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i+r[4],e[1]=r[1]*n+r[3]*i+r[5],e},i.transformMat3=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[3]*i+r[6],e[1]=r[1]*n+r[4]*i+r[7],e},i.transformMat4=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[4]*i+r[12],e[1]=r[1]*n+r[5]*i+r[13],e},i.forEach=function(){var e=i.create();return function(t,r,n,i,a,o){var s,l;for(r||(r=2),n||(n=0),l=i?Math.min(i*r+n,t.length):t.length,s=n;s<l;s+=r)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}(),t["a"]=i},function(e,t,r){"use strict";t["a"]="@export clay.prez.vertex\nuniform mat4 WVP : WORLDVIEWPROJECTION;\nattribute vec3 pos : POSITION;\nattribute vec2 uv : TEXCOORD_0;\n@import clay.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvoid main()\n{\n vec3 P = pos;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n P = (skinMatrixWS * vec4(pos, 1.0)).xyz;\n#endif\n gl_Position = WVP * vec4(P, 1.0);\n v_Texcoord = uv;\n}\n@end\n@export clay.prez.fragment\nuniform sampler2D alphaMap;\nuniform float alphaCutoff: 0.0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n if (alphaCutoff > 0.0) {\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\n discard;\n }\n }\n gl_FragColor = vec4(0.0,0.0,0.0,1.0);\n}\n@end"},function(e,t,r){"use strict";var n=r(35),i=r(11),a=n["a"].extend({material:null,geometry:null,mode:i["a"].TRIANGLES,_renderInfo:null},{__program:null,lightGroup:0,renderOrder:0,culling:!0,cullFace:i["a"].BACK,frontFace:i["a"].CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&this.material.shader&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(e){},afterRender:function(e,t){},getBoundingBox:function(e,t){return t=n["a"].prototype.getBoundingBox.call(this,e,t),this.geometry&&this.geometry.boundingBox&&t.union(this.geometry.boundingBox),t},clone:function(){var e=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling","renderOrder","lineWidth","ignorePicking","ignorePreZ","ignoreGBuffer"];return function(){var t=n["a"].prototype.clone.call(this);t.geometry=this.geometry,t.material=this.material;for(var r=0;r<e.length;r++){var i=e[r];t[i]!==this[i]&&(t[i]=this[i])}return t}}()});a.POINTS=i["a"].POINTS,a.LINES=i["a"].LINES,a.LINE_LOOP=i["a"].LINE_LOOP,a.LINE_STRIP=i["a"].LINE_STRIP,a.TRIANGLES=i["a"].TRIANGLES,a.TRIANGLE_STRIP=i["a"].TRIANGLE_STRIP,a.TRIANGLE_FAN=i["a"].TRIANGLE_FAN,a.BACK=i["a"].BACK,a.FRONT=i["a"].FRONT,a.FRONT_AND_BACK=i["a"].FRONT_AND_BACK,a.CW=i["a"].CW,a.CCW=i["a"].CCW,t["a"]=a},function(e,t,r){"use strict";var n={isPowerOfTwo:function(e){return 0===(e&e-1)},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}};t["a"]=n},function(e,t,r){"use strict";var n=r(3),i=r(21),a=r(12),o=r(33),s=function(e,t){this.normal=e||new n["a"](0,1,0),this.distance=t||0};s.prototype={constructor:s,distanceToPoint:function(e){return a["a"].dot(e.array,this.normal.array)-this.distance},projectPoint:function(e,t){t||(t=new n["a"]);var r=this.distanceToPoint(e);return a["a"].scaleAndAdd(t.array,e.array,this.normal.array,-r),t._dirty=!0,t},normalize:function(){var e=1/a["a"].len(this.normal.array);a["a"].scale(this.normal.array,e),this.distance*=e},intersectFrustum:function(e){for(var t=e.vertices,r=this.normal.array,n=a["a"].dot(t[0].array,r)>this.distance,i=1;i<8;i++)if(a["a"].dot(t[i].array,r)>this.distance!=n)return!0},intersectLine:function(){var e=a["a"].create();return function(t,r,i){var o=this.distanceToPoint(t),s=this.distanceToPoint(r);if(o>0&&s>0||o<0&&s<0)return null;var l=this.normal.array,u=this.distance,c=t.array;a["a"].sub(e,r.array,t.array),a["a"].normalize(e,e);var h=a["a"].dot(l,e);if(0===h)return null;i||(i=new n["a"]);var d=(a["a"].dot(l,c)-u)/h;return a["a"].scaleAndAdd(i.array,c,e,-d),i._dirty=!0,i}}(),applyTransform:function(){var e=i["a"].create(),t=o["a"].create(),r=o["a"].create();return r[3]=1,function(n){n=n.array,a["a"].scale(r,this.normal.array,this.distance),o["a"].transformMat4(r,r,n),this.distance=a["a"].dot(r,this.normal.array),i["a"].invert(e,n),i["a"].transpose(e,e),t[3]=0,a["a"].copy(t,this.normal.array),o["a"].transformMat4(t,t,e),a["a"].copy(this.normal.array,t)}}(),copy:function(e){a["a"].copy(this.normal.array,e.normal.array),this.normal._dirty=!0,this.distance=e.distance},clone:function(){var e=new s;return e.copy(this),e}},t["a"]=s},function(e,t,r){"use strict";var n=r(42);t["a"]=n["a"]},function(e,t,r){"use strict";var n=r(15),i=r(43),a=r(9),o=r(3),s=r(18),l=r(14),u=new a["a"],c=n["a"].extend({dynamic:!1,widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},(function(){this.build()}),{build:function(){var e={px:h("px",this.depthSegments,this.heightSegments),nx:h("nx",this.depthSegments,this.heightSegments),py:h("py",this.widthSegments,this.depthSegments),ny:h("ny",this.widthSegments,this.depthSegments),pz:h("pz",this.widthSegments,this.heightSegments),nz:h("nz",this.widthSegments,this.heightSegments)},t=["position","texcoord0","normal"],r=0,n=0;for(var i in e)r+=e[i].vertexCount,n+=e[i].indices.length;for(var a=0;a<t.length;a++)this.attributes[t[a]].init(r);this.indices=new l["a"].Uint16Array(n);var o=0,u=0;for(var i in e){var c=e[i];for(a=0;a<t.length;a++)for(var d=t[a],f=c.attributes[d].value,p=c.attributes[d].size,m="normal"===d,g=0;g<f.length;g++){var _=f[g];this.inside&&m&&(_=-_),this.attributes[d].value[g+p*u]=_}var v=c.indices.length;for(g=0;g<c.indices.length;g++)this.indices[g+o]=u+c.indices[this.inside?v-g-1:g];o+=c.indices.length,u+=c.vertexCount}this.boundingBox=new s["a"],this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});function h(e,t,r){u.identity();var n=new i["a"]({widthSegments:t,heightSegments:r});switch(e){case"px":a["a"].translate(u,u,o["a"].POSITIVE_X),a["a"].rotateY(u,u,Math.PI/2);break;case"nx":a["a"].translate(u,u,o["a"].NEGATIVE_X),a["a"].rotateY(u,u,-Math.PI/2);break;case"py":a["a"].translate(u,u,o["a"].POSITIVE_Y),a["a"].rotateX(u,u,-Math.PI/2);break;case"ny":a["a"].translate(u,u,o["a"].NEGATIVE_Y),a["a"].rotateX(u,u,Math.PI/2);break;case"pz":a["a"].translate(u,u,o["a"].POSITIVE_Z);break;case"nz":a["a"].translate(u,u,o["a"].NEGATIVE_Z),a["a"].rotateY(u,u,Math.PI);break}return n.applyTransform(u),n}t["a"]=c},function(e,t,r){"use strict";var n=r(5),i=r(27),a=r(4),o=r(10),s=r(16),l=r(19),u=r(8),c=r(42),h=r(36),d=r(62),f=r(14),p=r(61),m=r(127),g=r(128),_={},v=["px","nx","py","ny","pz","nz"];_.prefilterEnvironmentMap=function(e,t,r,s,m){m&&s||(s=_.generateNormalDistribution(),m=_.integrateBRDF(e,s)),r=r||{};var y=r.width||64,x=r.height||64,T=r.type||t.type,b=new i["a"]({width:y,height:x,type:T,flipY:!1,mipmaps:[]});b.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var w=Math.min(y,x),E=Math.log(w)/Math.log(2)+1,S=new l["a"]({shader:new u["a"]({vertex:u["a"].source("clay.skybox.vertex"),fragment:g["a"]})});S.set("normalDistribution",s),r.encodeRGBM&&S.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&S.define("fragment","RGBM_DECODE");var M,A=new h["a"];if("texture2D"===t.textureType){var N=new i["a"]({width:y,height:x,type:T===a["a"].FLOAT?a["a"].HALF_FLOAT:T});p["a"].panoramaToCubeMap(e,t,N,{encodeRGBM:r.decodeRGBM}),t=N}M=new c["a"]({scene:A,material:S}),M.material.set("environmentMap",t);var C=new d["a"]({texture:b});r.encodeRGBM&&(T=b.type=a["a"].UNSIGNED_BYTE);for(var L=new n["a"]({width:y,height:x,type:T}),P=new o["a"]({depthBuffer:!1}),D=f["a"][T===a["a"].UNSIGNED_BYTE?"Uint8Array":"Float32Array"],O=0;O<E;O++){b.mipmaps[O]={pixels:{}},M.material.set("roughness",O/(E-1));for(var R=L.width,I=2*Math.atan(R/(R-.5))/Math.PI*180,F=0;F<v.length;F++){var B=new D(L.width*L.height*4);P.attach(L),P.bind(e);var U=C.getCamera(v[F]);U.fov=I,e.render(A,U),e.gl.readPixels(0,0,L.width,L.height,a["a"].RGBA,T,B),P.unbind(e),b.mipmaps[O].pixels[v[F]]=B}L.width/=2,L.height/=2,L.dirty()}return P.dispose(e),L.dispose(e),M.dispose(e),s.dispose(e),{environmentMap:b,brdfLookup:m,normalDistribution:s,maxMipmapLevel:E}},_.integrateBRDF=function(e,t){t=t||_.generateNormalDistribution();var r=new o["a"]({depthBuffer:!1}),i=new s["a"]({fragment:m["a"]}),l=new n["a"]({width:512,height:256,type:a["a"].HALF_FLOAT,wrapS:a["a"].CLAMP_TO_EDGE,wrapT:a["a"].CLAMP_TO_EDGE,minFilter:a["a"].NEAREST,magFilter:a["a"].NEAREST,useMipmap:!1});return i.setUniform("normalDistribution",t),i.setUniform("viewportSize",[512,256]),i.attachOutput(l),i.render(e,r),r.dispose(e),l},_.generateNormalDistribution=function(e,t){e=e||256,t=t||1024;for(var r=new n["a"]({width:e,height:t,type:a["a"].FLOAT,minFilter:a["a"].NEAREST,magFilter:a["a"].NEAREST,wrapS:a["a"].CLAMP_TO_EDGE,wrapT:a["a"].CLAMP_TO_EDGE,useMipmap:!1}),i=new Float32Array(t*e*4),o=[],s=0;s<e;s++){for(var l=s/e,u=l*l,c=0;c<t;c++){var h=(c<<16|c>>>16)>>>0;h=((1431655765&h)<<1|(2863311530&h)>>>1)>>>0,h=((858993459&h)<<2|(3435973836&h)>>>2)>>>0,h=((252645135&h)<<4|(4042322160&h)>>>4)>>>0,h=(((16711935&h)<<8|(4278255360&h)>>>8)>>>0)/4294967296;var d=Math.sqrt((1-h)/(1+(u*u-1)*h));o[c]=d}for(c=0;c<t;c++){var f=4*(c*e+s),p=(d=o[c],Math.sqrt(1-d*d)),m=c/t,g=2*Math.PI*m;i[f]=p*Math.cos(g),i[f+1]=d,i[f+2]=p*Math.sin(g),i[f+3]=1}}return r.pixels=i,r},t["a"]=_},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},clone:function(e){var t=new n["a"](4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},transpose:function(e,t){if(e===t){var r=t[1];e[1]=t[2],e[2]=r}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e},invert:function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*a-i*n;return o?(o=1/o,e[0]=a*o,e[1]=-n*o,e[2]=-i*o,e[3]=r*o,e):null},adjoint:function(e,t){var r=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=r,e},determinant:function(e){return e[0]*e[3]-e[2]*e[1]},multiply:function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],l=r[1],u=r[2],c=r[3];return e[0]=n*s+a*l,e[1]=i*s+o*l,e[2]=n*u+a*c,e[3]=i*u+o*c,e}};i.mul=i.multiply,i.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=n*l+a*s,e[1]=i*l+o*s,e[2]=n*-s+a*l,e[3]=i*-s+o*l,e},i.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],l=r[1];return e[0]=n*s,e[1]=i*s,e[2]=a*l,e[3]=o*l,e},i.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2))},i.LDU=function(e,t,r,n){return e[2]=n[2]/n[0],r[0]=n[0],r[1]=n[1],r[3]=n[3]-e[2]*r[1],[e,t,r]},t["a"]=i},function(e,t,r){"use strict";var n=r(20),i={create:function(){var e=new n["a"](6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},clone:function(e){var t=new n["a"](6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},invert:function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],l=r*a-n*i;return l?(l=1/l,e[0]=a*l,e[1]=-n*l,e[2]=-i*l,e[3]=r*l,e[4]=(i*s-a*o)*l,e[5]=(n*o-r*s)*l,e):null},determinant:function(e){return e[0]*e[3]-e[1]*e[2]},multiply:function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=r[0],c=r[1],h=r[2],d=r[3],f=r[4],p=r[5];return e[0]=n*u+a*c,e[1]=i*u+o*c,e[2]=n*h+a*d,e[3]=i*h+o*d,e[4]=n*f+a*p+s,e[5]=i*f+o*p+l,e}};i.mul=i.multiply,i.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=Math.sin(r),c=Math.cos(r);return e[0]=n*c+a*u,e[1]=i*c+o*u,e[2]=n*-u+a*c,e[3]=i*-u+o*c,e[4]=s,e[5]=l,e},i.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=r[0],c=r[1];return e[0]=n*u,e[1]=i*u,e[2]=a*c,e[3]=o*c,e[4]=s,e[5]=l,e},i.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=r[0],c=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=n*u+a*c+s,e[5]=i*u+o*c+l,e},i.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+1)},t["a"]=i},function(e,t){var r="undefined"!==typeof window&&(window.requestAnimationFrame&&window.requestAnimationFrame.bind(window)||window.msRequestAnimationFrame&&window.msRequestAnimationFrame.bind(window)||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame)||function(e){setTimeout(e,16)};e.exports=r},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(5);function o(e,t,r,n,i,a,o){this._zr=e,this._x=0,this._y=0,this._rowHeight=0,this.width=n,this.height=i,this.offsetX=t,this.offsetY=r,this.dpr=o,this.gap=a}function s(e){e=e||{},e.width=e.width||512,e.height=e.height||512,e.devicePixelRatio=e.devicePixelRatio||1,e.gap=null==e.gap?2:e.gap;var t=document.createElement("canvas");t.width=e.width*e.devicePixelRatio,t.height=e.height*e.devicePixelRatio,this._canvas=t,this._texture=new a["a"]({image:t,flipY:!1});var r=this;this._zr=i.a.zrender.init(t);var n=this._zr.refreshImmediately;this._zr.refreshImmediately=function(){n.call(this),r._texture.dirty(),r.onupdate&&r.onupdate()},this._dpr=e.devicePixelRatio,this._coords={},this.onupdate=e.onupdate,this._gap=e.gap,this._textureAtlasNodes=[new o(this._zr,0,0,e.width,e.height,this._gap,this._dpr)],this._nodeWidth=e.width,this._nodeHeight=e.height,this._currentNodeIdx=0}o.prototype={constructor:o,clear:function(){this._x=0,this._y=0,this._rowHeight=0},add:function(e,t,r){var n=e.getBoundingRect();null==t&&(t=n.width),null==r&&(r=n.height),t*=this.dpr,r*=this.dpr,this._fitElement(e,t,r);var i=this._x,a=this._y,o=this.width*this.dpr,s=this.height*this.dpr,l=this.gap;if(i+t+l>o&&(i=this._x=0,a+=this._rowHeight+l,this._y=a,this._rowHeight=0),this._x+=t+l,this._rowHeight=Math.max(this._rowHeight,r),a+r+l>s)return null;e.position[0]+=this.offsetX*this.dpr+i,e.position[1]+=this.offsetY*this.dpr+a,this._zr.add(e);var u=[this.offsetX/this.width,this.offsetY/this.height],c=[[i/o+u[0],a/s+u[1]],[(i+t)/o+u[0],(a+r)/s+u[1]]];return c},_fitElement:function(e,t,r){var n=e.getBoundingRect(),i=t/n.width,a=r/n.height;e.position=[-n.x*i,-n.y*a],e.scale=[i,a],e.update()}},s.prototype={clear:function(){for(var e=0;e<this._textureAtlasNodes.length;e++)this._textureAtlasNodes[e].clear();this._currentNodeIdx=0,this._zr.clear(),this._coords={}},getWidth:function(){return this._width},getHeight:function(){return this._height},getTexture:function(){return this._texture},getDevicePixelRatio:function(){return this._dpr},getZr:function(){return this._zr},_getCurrentNode:function(){return this._textureAtlasNodes[this._currentNodeIdx]},_expand:function(){if(this._currentNodeIdx++,this._textureAtlasNodes[this._currentNodeIdx])return this._textureAtlasNodes[this._currentNodeIdx];var e=4096/this._dpr,t=this._textureAtlasNodes,r=t.length,n=r*this._nodeWidth%e,i=Math.floor(r*this._nodeWidth/e)*this._nodeHeight;if(!(i>=e)){var a=(n+this._nodeWidth)*this._dpr,s=(i+this._nodeHeight)*this._dpr;try{this._zr.resize({width:a,height:s})}catch(u){this._canvas.width=a,this._canvas.height=s}var l=new o(this._zr,n,i,this._nodeWidth,this._nodeHeight,this._gap,this._dpr);return this._textureAtlasNodes.push(l),l}console.error("Too much labels. Some will be ignored.")},add:function(e,t,r){if(this._coords[e.id])return console.warn("Element already been add"),this._coords[e.id];var n=this._getCurrentNode().add(e,t,r);if(!n){var i=this._expand();if(!i)return;n=i.add(e,t,r)}return this._coords[e.id]=n,n},getCoordsScale:function(){var e=this._dpr;return[this._nodeWidth/this._canvas.width*e,this._nodeHeight/this._canvas.height*e]},getCoords:function(e){return this._coords[e]}},t["a"]=s},function(e,t,r){var n=r(83),i=r(84),a=n.applyTransform,o=Math.min,s=Math.max;function l(e,t,r,n){r<0&&(e+=r,r=-r),n<0&&(t+=n,n=-n),this.x=e,this.y=t,this.width=r,this.height=n}l.prototype={constructor:l,union:function(e){var t=o(e.x,this.x),r=o(e.y,this.y);this.width=s(e.x+e.width,this.x+this.width)-t,this.height=s(e.y+e.height,this.y+this.height)-r,this.x=t,this.y=r},applyTransform:function(){var e=[],t=[],r=[],n=[];return function(i){if(i){e[0]=r[0]=this.x,e[1]=n[1]=this.y,t[0]=n[0]=this.x+this.width,t[1]=r[1]=this.y+this.height,a(e,e,i),a(t,t,i),a(r,r,i),a(n,n,i),this.x=o(e[0],t[0],r[0],n[0]),this.y=o(e[1],t[1],r[1],n[1]);var l=s(e[0],t[0],r[0],n[0]),u=s(e[1],t[1],r[1],n[1]);this.width=l-this.x,this.height=u-this.y}}}(),calculateTransform:function(e){var t=this,r=e.width/t.width,n=e.height/t.height,a=i.create();return i.translate(a,a,[-t.x,-t.y]),i.scale(a,a,[r,n]),i.translate(a,a,[e.x,e.y]),a},intersect:function(e){if(!e)return!1;e instanceof l||(e=l.create(e));var t=this,r=t.x,n=t.x+t.width,i=t.y,a=t.y+t.height,o=e.x,s=e.x+e.width,u=e.y,c=e.y+e.height;return!(n<o||s<r||a<u||c<i)},contain:function(e,t){var r=this;return e>=r.x&&e<=r.x+r.width&&t>=r.y&&t<=r.y+r.height},clone:function(){return new l(this.x,this.y,this.width,this.height)},copy:function(e){this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height},plain:function(){return{x:this.x,y:this.y,width:this.width,height:this.height}}},l.create=function(e){return new l(e.x,e.y,e.width,e.height)};var u=l;e.exports=u},function(e,t){var r="undefined"===typeof Float32Array?Array:Float32Array;function n(e,t){var n=new r(2);return null==e&&(e=0),null==t&&(t=0),n[0]=e,n[1]=t,n}function i(e,t){return e[0]=t[0],e[1]=t[1],e}function a(e){var t=new r(2);return t[0]=e[0],t[1]=e[1],t}function o(e,t,r){return e[0]=t,e[1]=r,e}function s(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e}function l(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e}function u(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e}function c(e){return Math.sqrt(d(e))}var h=c;function d(e){return e[0]*e[0]+e[1]*e[1]}var f=d;function p(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e}function m(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e}function g(e,t){return e[0]*t[0]+e[1]*t[1]}function _(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e}function v(e,t){var r=c(t);return 0===r?(e[0]=0,e[1]=0):(e[0]=t[0]/r,e[1]=t[1]/r),e}function y(e,t){return Math.sqrt((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1]))}var x=y;function T(e,t){return(e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1])}var b=T;function w(e,t){return e[0]=-t[0],e[1]=-t[1],e}function E(e,t,r,n){return e[0]=t[0]+n*(r[0]-t[0]),e[1]=t[1]+n*(r[1]-t[1]),e}function S(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i+r[4],e[1]=r[1]*n+r[3]*i+r[5],e}function M(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e}function A(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e}t.create=n,t.copy=i,t.clone=a,t.set=o,t.add=s,t.scaleAndAdd=l,t.sub=u,t.len=c,t.length=h,t.lenSquare=d,t.lengthSquare=f,t.mul=p,t.div=m,t.dot=g,t.scale=_,t.normalize=v,t.distance=y,t.dist=x,t.distanceSquare=T,t.distSquare=b,t.negate=w,t.lerp=E,t.applyTransform=S,t.min=M,t.max=A},function(e,t){var r="undefined"===typeof Float32Array?Array:Float32Array;function n(){var e=new r(6);return i(e),e}function i(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e}function a(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e}function o(e,t,r){var n=t[0]*r[0]+t[2]*r[1],i=t[1]*r[0]+t[3]*r[1],a=t[0]*r[2]+t[2]*r[3],o=t[1]*r[2]+t[3]*r[3],s=t[0]*r[4]+t[2]*r[5]+t[4],l=t[1]*r[4]+t[3]*r[5]+t[5];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e}function s(e,t,r){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4]+r[0],e[5]=t[5]+r[1],e}function l(e,t,r){var n=t[0],i=t[2],a=t[4],o=t[1],s=t[3],l=t[5],u=Math.sin(r),c=Math.cos(r);return e[0]=n*c+o*u,e[1]=-n*u+o*c,e[2]=i*c+s*u,e[3]=-i*u+c*s,e[4]=c*a+u*l,e[5]=c*l-u*a,e}function u(e,t,r){var n=r[0],i=r[1];return e[0]=t[0]*n,e[1]=t[1]*i,e[2]=t[2]*n,e[3]=t[3]*i,e[4]=t[4]*n,e[5]=t[5]*i,e}function c(e,t){var r=t[0],n=t[2],i=t[4],a=t[1],o=t[3],s=t[5],l=r*o-a*n;return l?(l=1/l,e[0]=o*l,e[1]=-a*l,e[2]=-n*l,e[3]=r*l,e[4]=(n*s-o*i)*l,e[5]=(a*i-r*s)*l,e):null}function h(e){var t=n();return a(t,e),t}t.create=n,t.identity=i,t.copy=a,t.mul=o,t.translate=s,t.rotate=l,t.scale=u,t.invert=c,t.clone=h},function(e,t,r){var n=r(13),i=1e-4;function a(e){return e.replace(/^\s+/,"").replace(/\s+$/,"")}function o(e,t,r,n){var i=t[1]-t[0],a=r[1]-r[0];if(0===i)return 0===a?r[0]:(r[0]+r[1])/2;if(n)if(i>0){if(e<=t[0])return r[0];if(e>=t[1])return r[1]}else{if(e>=t[0])return r[0];if(e<=t[1])return r[1]}else{if(e===t[0])return r[0];if(e===t[1])return r[1]}return(e-t[0])/i*a+r[0]}function s(e,t){switch(e){case"center":case"middle":e="50%";break;case"left":case"top":e="0%";break;case"right":case"bottom":e="100%";break}return"string"===typeof e?a(e).match(/%$/)?parseFloat(e)/100*t:parseFloat(e):null==e?NaN:+e}function l(e,t,r){return null==t&&(t=10),t=Math.min(Math.max(0,t),20),e=(+e).toFixed(t),r?e:+e}function u(e){return e.sort((function(e,t){return e-t})),e}function c(e){if(e=+e,isNaN(e))return 0;var t=1,r=0;while(Math.round(e*t)/t!==e)t*=10,r++;return r}function h(e){var t=e.toString(),r=t.indexOf("e");if(r>0){var n=+t.slice(r+1);return n<0?-n:0}var i=t.indexOf(".");return i<0?0:t.length-1-i}function d(e,t){var r=Math.log,n=Math.LN10,i=Math.floor(r(e[1]-e[0])/n),a=Math.round(r(Math.abs(t[1]-t[0]))/n),o=Math.min(Math.max(-i+a,0),20);return isFinite(o)?o:20}function f(e,t,r){if(!e[t])return 0;var i=n.reduce(e,(function(e,t){return e+(isNaN(t)?0:t)}),0);if(0===i)return 0;var a=Math.pow(10,r),o=n.map(e,(function(e){return(isNaN(e)?0:e)/i*a*100})),s=100*a,l=n.map(o,(function(e){return Math.floor(e)})),u=n.reduce(l,(function(e,t){return e+t}),0),c=n.map(o,(function(e,t){return e-l[t]}));while(u<s){for(var h=Number.NEGATIVE_INFINITY,d=null,f=0,p=c.length;f<p;++f)c[f]>h&&(h=c[f],d=f);++l[d],c[d]=0,++u}return l[t]/a}var p=9007199254740991;function m(e){var t=2*Math.PI;return(e%t+t)%t}function g(e){return e>-i&&e<i}var _=/^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;function v(e){if(e instanceof Date)return e;if("string"===typeof e){var t=_.exec(e);if(!t)return new Date(NaN);if(t[8]){var r=+t[4]||0;return"Z"!==t[8].toUpperCase()&&(r-=t[8].slice(0,3)),new Date(Date.UTC(+t[1],+(t[2]||1)-1,+t[3]||1,r,+(t[5]||0),+t[6]||0,+t[7]||0))}return new Date(+t[1],+(t[2]||1)-1,+t[3]||1,+t[4]||0,+(t[5]||0),+t[6]||0,+t[7]||0)}return null==e?new Date(NaN):new Date(Math.round(e))}function y(e){return Math.pow(10,x(e))}function x(e){return Math.floor(Math.log(e)/Math.LN10)}function T(e,t){var r,n=x(e),i=Math.pow(10,n),a=e/i;return r=t?a<1.5?1:a<2.5?2:a<4?3:a<7?5:10:a<1?1:a<2?2:a<3?3:a<5?5:10,e=r*i,n>=-20?+e.toFixed(n<0?-n:0):e}function b(e){e.sort((function(e,t){return s(e,t,0)?-1:1}));for(var t=-1/0,r=1,n=0;n<e.length;){for(var i=e[n].interval,a=e[n].close,o=0;o<2;o++)i[o]<=t&&(i[o]=t,a[o]=o?1:1-r),t=i[o],r=a[o];i[0]===i[1]&&a[0]*a[1]!==1?e.splice(n,1):n++}return e;function s(e,t,r){return e.interval[r]<t.interval[r]||e.interval[r]===t.interval[r]&&(e.close[r]-t.close[r]===(r?-1:1)||!r&&s(e,t,1))}}function w(e){return e-parseFloat(e)>=0}t.linearMap=o,t.parsePercent=s,t.round=l,t.asc=u,t.getPrecision=c,t.getPrecisionSafe=h,t.getPixelPrecision=d,t.getPercentWithPrecision=f,t.MAX_SAFE_INTEGER=p,t.remRadian=m,t.isRadianAroundZero=g,t.parseDate=v,t.quantity=y,t.nice=T,t.reformIntervals=b,t.isNumeric=w},function(e,t,r){"use strict";var n=r(5),i=r(11),a=r(23),o=function(){this._pool={},this._allocatedTextures=[]};o.prototype={constructor:o,get:function(e){var t=u(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var r=this._pool[t];if(!r.length){var i=new n["a"](e);return this._allocatedTextures.push(i),i}return r.pop()},put:function(e){var t=u(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var r=this._pool[t];r.push(e)},clear:function(e){for(var t=0;t<this._allocatedTextures.length;t++)this._allocatedTextures[t].dispose(e);this._pool={},this._allocatedTextures=[]}};var s={width:512,height:512,type:i["a"].UNSIGNED_BYTE,format:i["a"].RGBA,wrapS:i["a"].CLAMP_TO_EDGE,wrapT:i["a"].CLAMP_TO_EDGE,minFilter:i["a"].LINEAR_MIPMAP_LINEAR,magFilter:i["a"].LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},l=Object.keys(s);function u(e){a["a"].defaultsWithPropList(e,s,l),c(e);for(var t="",r=0;r<l.length;r++){var n=l[r],i=e[n].toString();t+=i}return t}function c(e){var t=h(e.width,e.height);e.format===i["a"].DEPTH_COMPONENT&&(e.useMipmap=!1),t&&e.useMipmap||(e.minFilter==i["a"].NEAREST_MIPMAP_NEAREST||e.minFilter==i["a"].NEAREST_MIPMAP_LINEAR?e.minFilter=i["a"].NEAREST:e.minFilter!=i["a"].LINEAR_MIPMAP_LINEAR&&e.minFilter!=i["a"].LINEAR_MIPMAP_NEAREST||(e.minFilter=i["a"].LINEAR)),t||(e.wrapS=i["a"].CLAMP_TO_EDGE,e.wrapT=i["a"].CLAMP_TO_EDGE)}function h(e,t){return 0===(e&e-1)&&0===(t&t-1)}t["a"]=o},function(e,t,r){"use strict";t["a"]="@export clay.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export clay.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export clay.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main (void)\n{\n @import clay.compositor.kernel.gaussian_9\n vec2 off = blurSize / textureSize;\n off *= vec2(1.0 - blurDir, blurDir);\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n for (int i = 0; i < 9; i++) {\n float w = gaussianKernel[i];\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n sum += texel * w;\n weightAll += w;\n }\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n"},function(e,t,r){"use strict";t["a"]="\n@export clay.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n float blueColor = tex.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec4 newColor1 = texture2D(lookup, texPos1);\n vec4 newColor2 = texture2D(lookup, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n gl_FragColor.a = tex.a;\n#else\n gl_FragColor.a = 1.0;\n#endif\n gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n texel = median(median(texel, s1, s2), s3, s4);\n#endif\n float lum = dot(texel.rgb , lumWeight);\n vec4 color;\n if (lum > threshold && texel.a > 0.0)\n {\n color = vec4(texel.rgb * scale, texel.a * scale);\n }\n else\n {\n color = vec4(0.0);\n }\n gl_FragColor = encodeHDR(color);\n}\n@end\n"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nfloat brightness(vec3 c)\n{\n return max(max(c.r, c.g), c.b);\n}\n@import clay.util.clamp_sample\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n float s1w = 1.0 / (brightness(s1) + 1.0);\n float s2w = 1.0 / (brightness(s2) + 1.0);\n float s3w = 1.0 / (brightness(s3) + 1.0);\n float s4w = 1.0 / (brightness(s4) + 1.0);\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n vec4 color = vec4(\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n 1.0\n );\n#else\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n color *= 0.25;\n#endif\n gl_FragColor = encodeHDR(color);\n}\n@end"},function(e,t,r){"use strict";t["a"]="\n@export clay.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n gl_FragColor = encodeHDR(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.hdr.composite\n#define TONEMAPPING\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import clay.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n float blueColor = color.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec4 newColor1 = texture2D(lut, texPos1);\n vec4 newColor2 = texture2D(lut, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n return newColor.rgb;\n}\n#endif\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = vec4(0.0);\n vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n texel = decodeHDR(texture2D(texture, v_Texcoord));\n originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n texel.rgb += bloomTexel.rgb * bloomIntensity;\n texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n float exposureBias = adaptedLumDest * exposure;\n#else\n float exposureBias = exposure;\n#endif\n#ifdef TONEMAPPING\n texel.rgb *= exposureBias;\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n #if DEBUG == 1\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n #elif DEBUG == 2\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n #elif DEBUG == 3\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n #endif\n#endif\n if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n }\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.blend\n#define SHADER_NAME blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n gl_FragColor = encodeHDR(tex);\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN (1.0/128.0)\n#define FXAA_REDUCE_MUL (1.0/8.0)\n#define FXAA_SPAN_MAX 8.0\n@import clay.util.rgbm\nvoid main()\n{\n vec2 resolution = 1.0 / viewport.zw;\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\n vec3 rgbM = rgbaM.xyz;\n float opacity = rgbaM.w;\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\n float lumaNW = dot( rgbNW, luma );\n float lumaNE = dot( rgbNE, luma );\n float lumaSW = dot( rgbSW, luma );\n float lumaSE = dot( rgbSE, luma );\n float lumaM = dot( rgbM, luma );\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n vec2 dir;\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n dir * rcpDirMin)) * resolution;\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA *= 0.5;\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\n rgbB *= 0.25;\n rgbB += rgbA * 0.5;\n float lumaB = dot( rgbB, luma );\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n {\n gl_FragColor = vec4( rgbA, opacity );\n }\n else {\n gl_FragColor = vec4( rgbB, opacity );\n }\n}\n@end"},function(e,t,r){"use strict";var n=r(0),i=r.n(n);t["a"]={getFilledRegions:function(e,t){var r,n=(e||[]).slice();if("string"===typeof t?(t=i.a.getMap(t),r=t&&t.geoJson):t&&t.features&&(r=t),!r)return console.error("Map "+t+" not exists. You can download map file on http://echarts.baidu.com/download-map.html"),r.features||console.error("Invalid GeoJSON for map3D"),[];for(var a={},o=r.features,s=0;s<n.length;s++)a[n[s].name]=n[s];for(s=0;s<o.length;s++){var l=o[s].properties.name;a[l]||n.push({name:l})}return n},defaultOption:{show:!0,zlevel:-10,map:"",left:0,top:0,width:"100%",height:"100%",boxWidth:100,boxHeight:10,boxDepth:"auto",regionHeight:3,environment:"auto",groundPlane:{show:!1,color:"#aaa"},shading:"lambert",light:{main:{alpha:40,beta:30}},viewControl:{alpha:40,beta:0,distance:100,orthographicSize:60,minAlpha:5,minBeta:-80,maxBeta:80},label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:4}},itemStyle:{color:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{color:"#639fc0"},label:{show:!0}}}}},function(e,t,r){"use strict";function n(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function i(e,t,r,i,a){var o=r,s=e[t];n(e,t,i);for(var l=r;l<i;l++)a(e[l],s)<0&&(n(e,l,o),o++);return n(e,i,o),o}function a(e,t,r,n){if(r<n){var o=Math.floor((r+n)/2),s=i(e,o,r,n,t);a(e,t,r,s-1),a(e,t,s+1,n)}}function o(){this._parts=[]}o.prototype.step=function(e,t,r){var n=e.length;if(0===r){this._parts=[],this._sorted=!1;var o=Math.floor(n/2);this._parts.push({pivot:o,left:0,right:n-1}),this._currentSortPartIdx=0}if(!this._sorted){var s=this._parts;if(0===s.length)return this._sorted=!0,!0;if(s.length<512){for(var l=0;l<s.length;l++)s[l].pivot=i(e,s[l].pivot,s[l].left,s[l].right,t);var u=[];for(l=0;l<s.length;l++){var c=s[l].left,h=s[l].pivot-1;h>c&&u.push({pivot:Math.floor((h+c)/2),left:c,right:h});c=s[l].pivot+1,h=s[l].right;h>c&&u.push({pivot:Math.floor((h+c)/2),left:c,right:h})}s=this._parts=u}else for(l=0;l<Math.floor(s.length/10);l++){var d=s.length-1-this._currentSortPartIdx;if(a(e,t,s[d].left,s[d].right),this._currentSortPartIdx++,this._currentSortPartIdx===s.length)return this._sorted=!0,!0}return!1}},o.sort=a,t["a"]=o},function(e,t,r){"use strict";var n=r(99),i=r(0),a=r.n(i),o=r(47),s=r.n(o),l=r(22),u=r(2);function c(e,t){var r=e.getBoxLayoutParams(),n=s.a.getLayoutRect(r,{width:t.getWidth(),height:t.getHeight()});n.y=t.getHeight()-n.y-n.height,this.viewGL.setViewport(n.x,n.y,n.width,n.height,t.getDevicePixelRatio());var i=this.getGeoBoundingRect(),a=i.width/i.height*(e.get("aspectScale")||.75),o=e.get("boxWidth"),l=e.get("boxDepth"),u=e.get("boxHeight");null==u&&(u=5),isNaN(o)&&isNaN(l)&&(o=100),isNaN(l)?l=o/a:isNaN(o)&&(o=l/a),this.setSize(o,u,l),this.regionHeight=e.get("regionHeight"),this.altitudeAxis&&this.altitudeAxis.setExtent(0,Math.max(u-this.regionHeight,0))}function h(e,t){var r=[1/0,-1/0];if(e.eachSeries((function(e){if(e.coordinateSystem===this&&"series.map3D"!==e.type){var t=e.getData(),n=e.coordDimToDataDim("alt"),i=n&&n[0];if(i){var a=t.getDataExtent(i,!0);r[0]=Math.min(r[0],a[0]),r[1]=Math.max(r[1],a[1])}}}),this),r&&isFinite(r[1]-r[0])){var n=a.a.helper.createScale(r,{type:"value",min:"dataMin",max:"dataMax"});this.altitudeAxis=new a.a.Axis("altitude",n),this.resize(this.model,t)}}var d=function(e){console.error("Map "+e+" not exists. You can download map file on http://echarts.baidu.com/download-map.html")},f=0,p={dimensions:n["a"].prototype.dimensions,create:function(e,t){var r=[];if(!a.a.getMap)throw new Error("geo3D component depends on geo component");function n(e,n){var i=p.createGeo3D(e);e.__viewGL=e.__viewGL||new l["a"],i.viewGL=e.__viewGL,e.coordinateSystem=i,i.model=e,r.push(i),i.resize=c,i.resize(e,t),i.update=h}return e.eachComponent("geo3D",(function(e,t){n(e,t)})),e.eachSeriesByType("map3D",(function(e,t){var r=e.get("coordinateSystem");null==r&&(r="geo3D"),"geo3D"===r&&n(e,t)})),e.eachSeries((function(t){if("geo3D"===t.get("coordinateSystem")){if("series.map3D"===t.type)return;var r=t.getReferringComponents("geo3D")[0];if(r||(r=e.getComponent("geo3D")),!r)throw new Error('geo "'+u["a"].firstNotNull(t.get("geo3DIndex"),t.get("geo3DId"),0)+'" not found');t.coordinateSystem=r.coordinateSystem}})),r},createGeo3D:function(e){var t,r=e.get("map");if("string"===typeof r?(t=r,r=a.a.getMap(r)):r&&r.features&&(r={geoJson:r}),r||d(r),!r.geoJson.features)throw new Error("Invalid GeoJSON for map3D");return null==t&&(t="GEO_ANONYMOUS_"+f++),new n["a"](t+f++,t,r&&r.geoJson,r&&r.specialAreas,e.get("nameMap"))}};a.a.registerCoordinateSystem("geo3D",p),t["a"]=p},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(6),o=r(205),s=r.n(o),l=r(206),u=r.n(l),c=a["a"].vec3,h=a["a"].mat4,d=[s.a,u.a];function f(e,t,r,n,i){this.name=e,this.map=t,this.regionHeight=0,this.regions=[],this._nameCoordMap={},this.loadGeoJson(r,n,i),this.transform=h.identity(new Float64Array(16)),this.invTransform=h.identity(new Float64Array(16)),this.extrudeY=!0,this.altitudeAxis}f.prototype={constructor:f,type:"geo3D",dimensions:["lng","lat","alt"],containPoint:function(){},loadGeoJson:function(e,t,r){var n=i.a.parseGeoJSON||i.a.parseGeoJson;try{this.regions=e?n(e):[]}catch(c){throw"Invalid geoJson format\n"+c}t=t||{},r=r||{};for(var a=this.regions,o={},s=0;s<a.length;s++){var l=a[s].name;l=r[l]||l,a[s].name=l,o[l]=a[s],this.addGeoCoord(l,a[s].center);var u=t[l];u&&a[s].transformTo(u.left,u.top,u.width,u.height)}this._regionsMap=o,this._geoRect=null,d.forEach((function(e){e(this)}),this)},getGeoBoundingRect:function(){if(this._geoRect)return this._geoRect;for(var e,t=this.regions,r=0;r<t.length;r++){var n=t[r].getBoundingRect();e=e||n.clone(),e.union(n)}return this._geoRect=e||new i.a.graphic.BoundingRect(0,0,0,0)},addGeoCoord:function(e,t){this._nameCoordMap[e]=t},getRegion:function(e){return this._regionsMap[e]},getRegionByCoord:function(e){for(var t=this.regions,r=0;r<t.length;r++)if(t[r].contain(e))return t[r]},setSize:function(e,t,r){this.size=[e,t,r];var n=this.getGeoBoundingRect(),i=e/n.width,a=-r/n.height,o=-e/2-n.x*i,s=r/2-n.y*a,l=this.extrudeY?[o,0,s]:[o,s,0],u=this.extrudeY?[i,1,a]:[i,a,1],c=this.transform;h.identity(c),h.translate(c,c,l),h.scale(c,c,u),h.invert(this.invTransform,c)},dataToPoint:function(e,t){t=t||[];var r=this.extrudeY?1:2,n=this.extrudeY?2:1,i=e[2];return isNaN(i)&&(i=0),t[0]=e[0],t[n]=e[1],this.altitudeAxis?t[r]=this.altitudeAxis.dataToCoord(i):t[r]=0,t[r]+=this.regionHeight,c.transformMat4(t,t,this.transform),t},pointToData:function(e,t){}},t["a"]=f},function(e,t,r){"use strict";var n=r(6),i=n["a"].mat4,a=512,o=.6435011087932844,s=Math.PI,l=.1;function u(){this.width=0,this.height=0,this.altitudeScale=1,this.boxHeight="auto",this.altitudeExtent,this.bearing=0,this.pitch=0,this.center=[0,0],this._origin,this.zoom=0,this._initialZoom,this.maxPitch=60,this.zoomOffset=0}u.prototype={constructor:u,dimensions:["lng","lat","alt"],containPoint:function(){},setCameraOption:function(e){this.bearing=e.bearing,this.pitch=e.pitch,this.center=e.center,this.zoom=e.zoom,this._origin||(this._origin=this.projectOnTileWithScale(this.center,a)),null==this._initialZoom&&(this._initialZoom=this.zoom),this.updateTransform()},updateTransform:function(){if(this.height){var e=.5/Math.tan(o/2)*this.height*l,t=Math.max(Math.min(this.pitch,this.maxPitch),0)/180*Math.PI,r=o/2,n=Math.PI/2+t,s=Math.sin(r)*e/Math.sin(Math.PI-n-r),u=Math.cos(Math.PI/2-t)*s+e,c=1.1*u;this.pitch>50&&(c=1e3);var h=[];i.perspective(h,o,this.width/this.height,1,c),this.viewGL.camera.projectionMatrix.setArray(h),this.viewGL.camera.decomposeProjectionMatrix();h=i.identity([]);var d=this.dataToPoint(this.center);i.scale(h,h,[1,-1,1]),i.translate(h,h,[0,0,-e]),i.rotateX(h,h,t),i.rotateZ(h,h,-this.bearing/180*Math.PI),i.translate(h,h,[-d[0]*this.getScale()*l,-d[1]*this.getScale()*l,0]),this.viewGL.camera.viewMatrix.array=h;var f=[];i.invert(f,h),this.viewGL.camera.worldTransform.array=f,this.viewGL.camera.decomposeWorldTransform();var p,m=a*this.getScale();if(this.altitudeExtent&&!isNaN(this.boxHeight)){var g=this.altitudeExtent[1]-this.altitudeExtent[0];p=this.boxHeight/g*this.getScale()/Math.pow(2,this._initialZoom-this.zoomOffset)}else p=m/(2*Math.PI*6378e3*Math.abs(Math.cos(this.center[1]*(Math.PI/180))))*this.altitudeScale*l;this.viewGL.rootNode.scale.set(this.getScale()*l,this.getScale()*l,p)}},getScale:function(){return Math.pow(2,this.zoom-this.zoomOffset)},projectOnTile:function(e,t){return this.projectOnTileWithScale(e,this.getScale()*a,t)},projectOnTileWithScale:function(e,t,r){var n=e[0],i=e[1],a=n*s/180,o=i*s/180,l=t*(a+s)/(2*s),u=t*(s-Math.log(Math.tan(s/4+.5*o)))/(2*s);return r=r||[],r[0]=l,r[1]=u,r},unprojectFromTile:function(e,t){return this.unprojectOnTileWithScale(e,this.getScale()*a,t)},unprojectOnTileWithScale:function(e,t,r){var n=e[0],i=e[1],a=n/t*(2*s)-s,o=2*(Math.atan(Math.exp(s-i/t*(2*s)))-s/4);return r=r||[],r[0]=180*a/s,r[1]=180*o/s,r},dataToPoint:function(e,t){return t=this.projectOnTileWithScale(e,a,t),t[0]-=this._origin[0],t[1]-=this._origin[1],t[2]=isNaN(e[2])?0:e[2],isNaN(e[2])||(t[2]=e[2],this.altitudeExtent&&(t[2]-=this.altitudeExtent[0])),t}},t["a"]=u},function(e,t,r){"use strict";var n=r(2),i=r(1),a=r(22);t["a"]=function(e,t,r){function o(e,t){var r=t.getWidth(),n=t.getHeight(),i=t.getDevicePixelRatio();this.viewGL.setViewport(0,0,r,n,i),this.width=r,this.height=n,this.altitudeScale=e.get("altitudeScale"),this.boxHeight=e.get("boxHeight")}function s(e,t){if("auto"!==this.model.get("boxHeight")){var r=[1/0,-1/0];e.eachSeries((function(e){if(e.coordinateSystem===this){var t=e.getData(),n=e.coordDimToDataDim("alt")[0];if(n){var i=t.getDataExtent(n,!0);r[0]=Math.min(r[0],i[0]),r[1]=Math.max(r[1],i[1])}}}),this),r&&isFinite(r[1]-r[0])&&(this.altitudeExtent=r)}}return{dimensions:t.prototype.dimensions,create:function(l,u){var c=[];return l.eachComponent(e,(function(e){var r=e.__viewGL;r||(r=e.__viewGL=new a["a"],r.setRootNode(new i["a"].Node));var n=new t;n.viewGL=e.__viewGL,n.resize=o,n.resize(e,u),c.push(n),e.coordinateSystem=n,n.model=e,n.update=s})),l.eachSeries((function(t){if(t.get("coordinateSystem")===e){var r=t.getReferringComponents(e)[0];if(r||(r=l.getComponent(e)),!r)throw new Error(e+' "'+n["a"].firstNotNull(t.get(e+"Index"),t.get(e+"Id"),0)+'" not found');t.coordinateSystem=r.coordinateSystem}})),r&&r(c,l,u),c}}}},function(e,t,r){"use strict";t["a"]="\n@export ecgl.displayShadow.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n@import ecgl.common.attributes\n\nvarying vec3 v_WorldPosition;\n\nvarying vec3 v_Normal;\n\nvoid main()\n{\n @import ecgl.common.uv.main\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end\n\n\n@export ecgl.displayShadow.fragment\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform float roughness: 0.2;\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n@import ecgl.common.ssaoMap.header\n\n@import clay.plugin.compute_shadow_map\n\nvoid main()\n{\n float shadow = 1.0;\n\n @import ecgl.common.ssaoMap.main\n\n#if defined(DIRECTIONAL_LIGHT_COUNT) && defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n for (int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++) {\n shadow = min(shadow, shadowContribsDir[i] * 0.5 + 0.5);\n }\n#endif\n\n shadow *= 0.5 + ao * 0.5;\n shadow = clamp(shadow, 0.0, 1.0);\n\n gl_FragColor = vec4(vec3(0.0), 1.0 - shadow);\n}\n\n@end"},function(e,t,r){"use strict";var n=r(84),i=r.n(n),a=r(83),o=r.n(a);function s(e){this.viewGL=e}s.prototype.reset=function(e,t){this._updateCamera(t.getWidth(),t.getHeight(),t.getDevicePixelRatio()),this._viewTransform=i.a.create(),this.updateTransform(e,t)},s.prototype.updateTransform=function(e,t){var r=e.coordinateSystem;r.getRoamTransform&&(i.a.invert(this._viewTransform,r.getRoamTransform()),this._setCameraTransform(this._viewTransform),t.getZr().refresh())},s.prototype.dataToPoint=function(e,t,r){r=e.dataToPoint(t,null,r);var n=this._viewTransform;n&&o.a.applyTransform(r,r,n)},s.prototype.removeTransformInPoint=function(e){return this._viewTransform&&o.a.applyTransform(e,e,this._viewTransform),e},s.prototype.getZoom=function(){if(this._viewTransform){var e=this._viewTransform;return 1/Math.max(Math.sqrt(e[0]*e[0]+e[1]*e[1]),Math.sqrt(e[2]*e[2]+e[3]*e[3]))}return 1},s.prototype._setCameraTransform=function(e){var t=this.viewGL.camera;t.position.set(e[4],e[5],0),t.scale.set(Math.sqrt(e[0]*e[0]+e[1]*e[1]),Math.sqrt(e[2]*e[2]+e[3]*e[3]),1)},s.prototype._updateCamera=function(e,t,r){this.viewGL.setViewport(0,0,e,t,r);var n=this.viewGL.camera;n.left=n.top=0,n.bottom=t,n.right=e,n.near=0,n.far=100},t["a"]=s},function(e,t,r){(function(e){var r;"undefined"!==typeof window?r=window.__DEV__:"undefined"!==typeof e&&(r=e.__DEV__),"undefined"===typeof r&&(r=!0);var n=r;t.__DEV__=n}).call(t,r(68))},function(e,t,r){"use strict";var n=r(15),i=r(0),a=r.n(i),o=r(38),s=r(6),l=s["a"].vec2,u=[[0,0],[1,1]],c=n["a"].extend((function(){return{segmentScale:4,dynamic:!0,useNativeLine:!0,attributes:{position:new n["a"].Attribute("position","float",2,"POSITION"),normal:new n["a"].Attribute("normal","float",2),offset:new n["a"].Attribute("offset","float",1),color:new n["a"].Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.offset.init(e),t.normal.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(this.indices=0===e?null:this.vertexCount>65535?new Uint32Array(3*e):new Uint16Array(3*e))},_getCubicCurveApproxStep:function(e,t,r,n){var i=l.dist(e,t)+l.dist(r,t)+l.dist(n,r),a=1/(i+1)*this.segmentScale;return a},getCubicCurveVertexCount:function(e,t,r,n){var i=this._getCubicCurveApproxStep(e,t,r,n),a=Math.ceil(1/i);return this.useNativeLine?2*a:2*a+2},getCubicCurveTriangleCount:function(e,t,r,n){var i=this._getCubicCurveApproxStep(e,t,r,n),a=Math.ceil(1/i);return this.useNativeLine?0:2*a},getLineVertexCount:function(){return this.getPolylineVertexCount(u)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(u)},getPolylineVertexCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/2}return this.useNativeLine?2*(t-1):2*(t-1)+2},getPolylineTriangleCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/2}return this.useNativeLine?0:2*(t-1)},addCubicCurve:function(e,t,r,n,i,a){null==a&&(a=1);var o=e[0],s=e[1],l=t[0],u=t[1],c=r[0],h=r[1],d=n[0],f=n[1],p=this._getCubicCurveApproxStep(e,t,r,n),m=p*p,g=m*p,_=3*p,v=3*m,y=6*m,x=6*g,T=o-2*l+c,b=s-2*u+h,w=3*(l-c)-o+d,E=3*(u-h)-s+f,S=o,M=s,A=(l-o)*_+T*v+w*g,N=(u-s)*_+b*v+E*g,C=T*y+w*x,L=b*y+E*x,P=w*x,D=E*x,O=0,R=0,I=Math.ceil(1/p),F=new Float32Array(3*(I+1)),B=(F=[],0);for(R=0;R<I+1;R++)F[B++]=S,F[B++]=M,S+=A,M+=N,A+=C,N+=L,C+=P,L+=D,O+=p,O>1&&(S=A>0?Math.min(S,d):Math.max(S,d),M=N>0?Math.min(M,f):Math.max(M,f));this.addPolyline(F,i,a)},addLine:function(e,t,r,n){this.addPolyline([e,t],r,n)},addPolyline:function(){var e=l.create(),t=l.create(),r=l.create(),n=l.create(),i=[],a=[],o=[];return function(s,u,c,h,d){if(s.length){var f="number"!==typeof s[0];if(null==d&&(d=f?s.length:s.length/2),!(d<2)){null==h&&(h=0),null==c&&(c=1),this._itemVertexOffsets.push(this._vertexOffset);for(var p,m=f?"number"!==typeof u[0]:u.length/4===d,g=this.attributes.position,_=this.attributes.color,v=this.attributes.offset,y=this.attributes.normal,x=this.indices,T=this._vertexOffset,b=0;b<d;b++){if(f)i=s[b+h],p=m?u[b+h]:u;else{var w=2*b+h;if(i=i||[],i[0]=s[w],i[1]=s[w+1],m){var E=4*b+h;p=p||[],p[0]=u[E],p[1]=u[E+1],p[2]=u[E+2],p[3]=u[E+3]}else p=u}if(this.useNativeLine)b>1&&(g.copy(T,T-1),_.copy(T,T-1),T++);else{var S;if(b<d-1){if(f)l.copy(a,s[b+1]);else{w=2*(b+1)+h;a=a||[],a[0]=s[w],a[1]=s[w+1]}if(b>0){l.sub(e,i,o),l.sub(t,a,i),l.normalize(e,e),l.normalize(t,t),l.add(n,e,t),l.normalize(n,n);var M=c/2*Math.min(1/l.dot(e,n),2);r[0]=-n[1],r[1]=n[0],S=M}else l.sub(e,a,i),l.normalize(e,e),r[0]=-e[1],r[1]=e[0],S=c/2}else l.sub(e,i,o),l.normalize(e,e),r[0]=-e[1],r[1]=e[0],S=c/2;y.set(T,r),y.set(T+1,r),v.set(T,S),v.set(T+1,-S),l.copy(o,i),g.set(T,i),g.set(T+1,i),_.set(T,p),_.set(T+1,p),T+=2}if(this.useNativeLine)_.set(T,p),g.set(T,i),T++;else if(b>0){var A=3*this._faceOffset;x=this.indices;x[A]=T-4,x[A+1]=T-3,x[A+2]=T-2,x[A+3]=T-3,x[A+4]=T-1,x[A+5]=T-2,this._faceOffset+=2}}this._vertexOffset=T}}}}(),setItemColor:function(e,t){for(var r=this._itemVertexOffsets[e],n=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,i=r;i<n;i++)this.attributes.color.set(i,t);this.dirty("color")}});a.a.util.defaults(c.prototype,o["a"]),t["a"]=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});r(107),r(154),r(201),r(207),r(213),r(219),r(225),r(232),r(236),r(243),r(249),r(252),r(256),r(259),r(262),r(275),r(281)},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(108),o=r(109),s=r(153),l=r(1),u={version:"1.1.1",dependencies:{echarts:"4.1.0",claygl:"1.2.1"}},c=u.dependencies;function h(e){throw new Error(e+" version is too old, needs "+c[e]+" or higher")}function d(e,t){e.replace(".","")-0<c[t].replace(".","")-0&&h(t),console.log("Loaded "+t+", version "+e)}function f(e){this._layers={},this._zr=e}d(a["a"],"claygl"),d(i.a.version,"echarts"),f.prototype.update=function(e,t){var r=this,n=t.getZr();if(n.getWidth()&&n.getHeight()){for(var a in this._layers)this._layers[a].removeViewsAll();e.eachComponent((function(r,n){if("series"!==r){var i=t.getViewOfComponentModel(n),a=n.coordinateSystem;if(i.__ecgl__){if(a){if(!a.viewGL)return void console.error("Can't find viewGL in coordinateSystem of component "+n.id);o=a.viewGL}else{if(!n.viewGL)return void console.error("Can't find viewGL of component "+n.id);o=a.viewGL}var o=a.viewGL,u=s(n);u.addView(o),i.afterRender&&i.afterRender(n,e,t,u),l(i.groupGL,n.get("silent"))}}})),e.eachSeries((function(r){var n=t.getViewOfSeriesModel(r),i=r.coordinateSystem;if(n.__ecgl__){if(i&&!i.viewGL&&!n.viewGL)return void console.error("Can't find viewGL of series "+n.id);var a=i&&i.viewGL||n.viewGL,o=s(r);o.addView(a),n.afterRender&&n.afterRender(r,e,t,o),l(n.groupGL,r.get("silent"))}}))}else console.warn("Dom has no width or height");function s(e){var t;t=(e.coordinateSystem&&e.coordinateSystem.model,e.get("zlevel"));var a=r._layers,s=a[t];if(!s){if(s=a[t]=new o["a"]("gl-"+t,n),n.painter.isSingleCanvas()){s.virtual=!0;var l=new i.a.graphic.Image({z:1e4,style:{image:s.renderer.canvas},silent:!0});s.__hostImage=l,n.add(l)}n.painter.insertLayer(t,s)}return s.__hostImage&&s.__hostImage.setStyle({width:s.renderer.getWidth(),height:s.renderer.getHeight()}),s}function l(e,t){e&&e.traverse((function(e){e.isRenderable&&e.isRenderable()&&(e.ignorePicking=null!=e.$ignorePicking?e.$ignorePicking:t)}))}};var p=i.a.init;i.a.init=function(){var e=p.apply(this,arguments);return e.getZr().painter.getRenderedCanvas=function(e){if(e=e||{},this._singleCanvas)return this._layers[0].dom;var t=document.createElement("canvas"),r=e.pixelRatio||this.dpr;t.width=this.getWidth()*r,t.height=this.getHeight()*r;var n=t.getContext("2d");n.dpr=r,n.clearRect(0,0,t.width,t.height),e.backgroundColor&&(n.fillStyle=e.backgroundColor,n.fillRect(0,0,t.width,t.height));var i,a=this.storage.getDisplayList(!0),o={},s=this;function l(e,t){var r,i=s._zlevelList;null==e&&(e=-1/0);for(var a=0;a<i.length;a++){var o=i[a],l=s._layers[o];if(!l.__builtin__&&o>e&&o<t){r=l;break}}r&&r.renderToCanvas&&(n.save(),r.renderToCanvas(n),n.restore())}for(var u={ctx:n},c=0;c<a.length;c++){var h=a[c];h.zlevel!==i&&(l(i,h.zlevel),i=h.zlevel),this._doPaintEl(h,u,!0,o)}return l(i,1/0),t},e},i.a.registerPostUpdate((function(e,t){var r=t.getZr(),n=r.__egl=r.__egl||new f(r);n.update(e,t)})),i.a.registerPreprocessor(s["a"]),i.a.graphicGL=l["a"]},function(e,t,r){"use strict";t["a"]="1.2.1"},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(52),o=r(117),s=r(4),l=r(1),u=r(53),c=r(80),h=r.n(c),d=function(e,t){this.id=e,this.zr=t;try{this.renderer=new a["a"]({clearBit:0,devicePixelRatio:t.painter.dpr,preserveDrawingBuffer:!0,premultipliedAlpha:!0}),this.renderer.resize(t.painter.getWidth(),t.painter.getHeight())}catch(n){return this.renderer=null,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute; left: 0; top: 0; right: 0; bottom: 0;",this.dom.className="ecgl-nowebgl",this.dom.innerHTML="Sorry, your browser does not support WebGL",void console.error(n)}this.onglobalout=this.onglobalout.bind(this),t.on("globalout",this.onglobalout),this.dom=this.renderer.canvas;var r=this.dom.style;r.position="absolute",r.left="0",r.top="0",this.views=[],this._picking=new o["a"]({renderer:this.renderer}),this._viewsToDispose=[],this._accumulatingId=0,this._zrEventProxy=new i.a.graphic.Rect({shape:{x:-1,y:-1,width:2,height:2},__isGLToZRProxy:!0}),this._backgroundColor=null};function f(e){var t=e.__zr;e.__zr=null,t&&e.removeAnimatorsFromZr&&e.removeAnimatorsFromZr(t)}d.prototype.addView=function(e){if(e.layer!==this){var t=this._viewsToDispose.indexOf(e);t>=0&&this._viewsToDispose.splice(t,1),this.views.push(e),e.layer=this;var r=this.zr;e.scene.traverse((function(e){e.__zr=r,e.addAnimatorsToZr&&e.addAnimatorsToZr(r)}))}},d.prototype.removeView=function(e){if(e.layer===this){var t=this.views.indexOf(e);t>=0&&(this.views.splice(t,1),e.scene.traverse(f,this),e.layer=null,this._viewsToDispose.push(e))}},d.prototype.removeViewsAll=function(){this.views.forEach((function(e){e.scene.traverse(f,this),e.layer=null,this._viewsToDispose.push(e)}),this),this.views.length=0},d.prototype.resize=function(e,t){var r=this.renderer;r.resize(e,t)},d.prototype.clear=function(){var e=this.renderer.gl,t=this._backgroundColor||[0,0,0,0];e.clearColor(t[0],t[1],t[2],t[3]),e.depthMask(!0),e.colorMask(!0,!0,!0,!0),e.clear(e.DEPTH_BUFFER_BIT|e.COLOR_BUFFER_BIT)},d.prototype.clearDepth=function(){var e=this.renderer.gl;e.clear(e.DEPTH_BUFFER_BIT)},d.prototype.clearColor=function(){var e=this.renderer.gl;e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT)},d.prototype.needsRefresh=function(){this.zr.refresh()},d.prototype.refresh=function(e){this._backgroundColor=e?l["a"].parseColor(e):[0,0,0,0],this.renderer.clearColor=this._backgroundColor;for(var t=0;t<this.views.length;t++)this.views[t].prepareRender(this.renderer);this._doRender(!1),this._trackAndClean();for(t=0;t<this._viewsToDispose.length;t++)this._viewsToDispose[t].dispose(this.renderer);this._viewsToDispose.length=0,this._startAccumulating()},d.prototype.renderToCanvas=function(e){this._startAccumulating(!0),e.drawImage(this.dom,0,0,e.canvas.width,e.canvas.height)},d.prototype._doRender=function(e){this.clear(),this.renderer.saveViewport();for(var t=0;t<this.views.length;t++)this.views[t].render(this.renderer,e);this.renderer.restoreViewport()},d.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)};var p=1;function m(e){for(var t=0;t<e.length;t++)e[t].__used__=0}function g(e,t){for(var r=0;r<t.length;r++)t[r].__used__||t[r].dispose(e)}function _(e,t){e.__used__=e.__used__||0,e.__used__++,1===e.__used__&&t.push(e)}function v(e,t,r){var n,i;e.traverse((function(e){if(e.isRenderable()){var a=e.geometry,o=e.material;if(o!==n)for(var l=o.getTextureUniforms(),u=0;u<l.length;u++){var c=l[u],h=o.uniforms[c].value;if(h)if(h instanceof s["a"])_(h,t);else if(h instanceof Array)for(var d=0;d<h.length;d++)h[d]instanceof s["a"]&&_(h[d],t)}a!==i&&_(a,r),n=o,i=a}}));for(var a=0;a<e.lights.length;a++)e.lights[a].cubemap&&_(e.lights[a].cubemap,t)}d.prototype._startAccumulating=function(e){var t=this;this._stopAccumulating();for(var r=!1,n=0;n<this.views.length;n++)r=this.views[n].needsAccumulate()||r;function i(n){if(t._accumulatingId&&n===t._accumulatingId){for(var a=!0,o=0;o<t.views.length;o++)a=t.views[o].isAccumulateFinished()&&r;a||(t._doRender(!0),e?i(n):h()((function(){i(n)})))}}r&&(this._accumulatingId=p++,e?i(t._accumulatingId):this._accumulatingTimeout=setTimeout((function(){i(t._accumulatingId)}),50))},d.prototype._trackAndClean=function(){var e=[],t=[];this._textureList&&(m(this._textureList),m(this._geometriesList));for(var r=0;r<this.views.length;r++)v(this.views[r].scene,e,t);this._textureList&&(g(this.renderer,this._textureList),g(this.renderer,this._geometriesList)),this._textureList=e,this._geometriesList=t},d.prototype.dispose=function(){this._stopAccumulating(),this.renderer.disposeScene(this.scene),this.zr.off("globalout",this.onglobalout)},d.prototype.onmousedown=function(e){if(!e.target||!e.target.__isGLToZRProxy){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY);t&&(this._dispatchEvent("mousedown",e,t),this._dispatchDataEvent("mousedown",e,t)),this._downX=e.offsetX,this._downY=e.offsetY}},d.prototype.onmousemove=function(e){if(!e.target||!e.target.__isGLToZRProxy){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY),r=t&&t.target,n=this._hovered;this._hovered=t,n&&r!==n.target&&(n.relatedTarget=r,this._dispatchEvent("mouseout",e,n),this.zr.setCursorStyle("default")),this._dispatchEvent("mousemove",e,t),t&&(this.zr.setCursorStyle("pointer"),n&&r===n.target||this._dispatchEvent("mouseover",e,t)),this._dispatchDataEvent("mousemove",e,t)}},d.prototype.onmouseup=function(e){if(!e.target||!e.target.__isGLToZRProxy){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY);t&&(this._dispatchEvent("mouseup",e,t),this._dispatchDataEvent("mouseup",e,t)),this._upX=e.offsetX,this._upY=e.offsetY}},d.prototype.onclick=d.prototype.dblclick=function(e){if(!e.target||!e.target.__isGLToZRProxy){var t=this._upX-this._downX,r=this._upY-this._downY;if(!(Math.sqrt(t*t+r*r)>20)){e=e.event;var n=this.pickObject(e.offsetX,e.offsetY);n&&(this._dispatchEvent(e.type,e,n),this._dispatchDataEvent(e.type,e,n));var i=this._clickToSetFocusPoint(e);if(i){var a=i.view.setDOFFocusOnPoint(i.distance);a&&this.zr.refresh()}}}},d.prototype._clickToSetFocusPoint=function(e){for(var t=this.renderer,r=t.viewport,n=this.views.length-1;n>=0;n--){var i=this.views[n];if(i.hasDOF()&&i.containPoint(e.offsetX,e.offsetY)){this._picking.scene=i.scene,this._picking.camera=i.camera,t.viewport=i.viewport;var a=this._picking.pick(e.offsetX,e.offsetY,!0);if(a)return a.view=i,a}}t.viewport=r},d.prototype.onglobalout=function(e){var t=this._hovered;t&&this._dispatchEvent("mouseout",e,{target:t.target})},d.prototype.pickObject=function(e,t){for(var r=[],n=this.renderer,i=n.viewport,a=0;a<this.views.length;a++){var o=this.views[a];o.containPoint(e,t)&&(this._picking.scene=o.scene,this._picking.camera=o.camera,n.viewport=o.viewport,this._picking.pickAll(e,t,r))}return n.viewport=i,r.sort((function(e,t){return e.distance-t.distance})),r[0]},d.prototype._dispatchEvent=function(e,t,r){r||(r={});var n=r.target;r.cancelBubble=!1,r.event=t,r.type=e,r.offsetX=t.offsetX,r.offsetY=t.offsetY;while(n)if(n.trigger(e,r),n=n.getParent(),r.cancelBubble)break;this._dispatchToView(e,r)},d.prototype._dispatchDataEvent=function(e,t,r){var n=r&&r.target,i=n&&n.dataIndex,a=n&&n.seriesIndex,o=n&&n.eventData,s=!1,l=this._zrEventProxy;l.position=[t.offsetX,t.offsetY],l.update();var u={target:l};"mousemove"===e&&(null!=i?i!==this._lastDataIndex&&(parseInt(this._lastDataIndex,10)>=0&&(l.dataIndex=this._lastDataIndex,l.seriesIndex=this._lastSeriesIndex,this.zr.handler.dispatchToElement(u,"mouseout",t)),s=!0):null!=o&&o!==this._lastEventData&&(null!=this._lastEventData&&(l.eventData=this._lastEventData,this.zr.handler.dispatchToElement(u,"mouseout",t)),s=!0),this._lastEventData=o,this._lastDataIndex=i,this._lastSeriesIndex=a),l.eventData=o,l.dataIndex=i,l.seriesIndex=a,(null!=o||parseInt(i,10)>=0&&parseInt(a,10)>=0)&&(this.zr.handler.dispatchToElement(u,e,t),s&&this.zr.handler.dispatchToElement(u,"mouseover",t))},d.prototype._dispatchToView=function(e,t){for(var r=0;r<this.views.length;r++)this.views[r].containPoint(t.offsetX,t.offsetY)&&this.views[r].trigger(e,t)},i.a.util.extend(d.prototype,u["a"]),t["a"]=d},function(e,t,r){"use strict";function n(e,t,r){"object"==typeof t&&(r=t,t=null);var n,o=this;if(!(e instanceof Function))for(var s in n=[],e)e.hasOwnProperty(s)&&n.push(s);var l=function(t){if(o.apply(this,arguments),e instanceof Function?i(this,e.call(this,t)):a(this,e,n),this.constructor===l)for(var r=l.__initializers__,s=0;s<r.length;s++)r[s].apply(this,arguments)};l.__super__=o,o.__initializers__?l.__initializers__=o.__initializers__.slice():l.__initializers__=[],t&&l.__initializers__.push(t);var u=function(){};return u.prototype=o.prototype,l.prototype=new u,l.prototype.constructor=l,i(l.prototype,r),l.extend=o.extend,l.derive=o.extend,l}function i(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])}function a(e,t,r){for(var n=0;n<r.length;n++){var i=r[n];e[i]=t[i]}}t["a"]={extend:n,derive:n}},function(e,t,r){"use strict";var n=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB"],i=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"];function a(e){for(var t={},r={},a=0;a<n.length;a++){var o=n[a];l(o)}for(a=0;a<i.length;a++){var s=i[a];r[s]=e.getParameter(e[s])}function l(r){var n=e.getExtension(r);n||(n=e.getExtension("MOZ_"+r)),n||(n=e.getExtension("WEBKIT_"+r)),t[r]=n}this.getExtension=function(e){return e in t||l(e),t[e]},this.getParameter=function(e){return r[e]},this.getMaxJointNumber=function(){return 15}}t["a"]=a},function(e,t,r){"use strict";function n(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(t){if(t.lengthComputable){var r=t.loaded/t.total;e.onprogress(r,t.loaded,t.total)}else e.onprogress(null)}),t.onload=function(r){t.status>=400?e.onerror&&e.onerror():e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}t["a"]={get:n}},function(e,t,r){"use strict";var n=r(69),i={},a={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function o(e){return e=Math.round(e),e<0?0:e>255?255:e}function s(e){return e=Math.round(e),e<0?0:e>360?360:e}function l(e){return e<0?0:e>1?1:e}function u(e){return e.length&&"%"===e.charAt(e.length-1)?o(parseFloat(e)/100*255):o(parseInt(e,10))}function c(e){return e.length&&"%"===e.charAt(e.length-1)?l(parseFloat(e)/100):l(parseFloat(e))}function h(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function d(e,t,r){return e+(t-e)*r}function f(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e}function p(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}var m=new n["a"](20),g=null;function _(e,t){g&&p(g,t),g=m.put(e,g||t.slice())}function v(e,t){var r=(parseFloat(e[0])%360+360)%360/360,n=c(e[1]),i=c(e[2]),a=i<=.5?i*(n+1):i+n-i*n,s=2*i-a;return t=t||[],f(t,o(255*h(s,a,r+1/3)),o(255*h(s,a,r)),o(255*h(s,a,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}function y(e){if(e){var t,r,n=e[0]/255,i=e[1]/255,a=e[2]/255,o=Math.min(n,i,a),s=Math.max(n,i,a),l=s-o,u=(s+o)/2;if(0===l)t=0,r=0;else{r=u<.5?l/(s+o):l/(2-s-o);var c=((s-n)/6+l/2)/l,h=((s-i)/6+l/2)/l,d=((s-a)/6+l/2)/l;n===s?t=d-h:i===s?t=1/3+c-d:a===s&&(t=2/3+h-c),t<0&&(t+=1),t>1&&(t-=1)}var f=[360*t,r,u];return null!=e[3]&&f.push(e[3]),f}}i.parse=function(e,t){if(e){t=t||[];var r=m.get(e);if(r)return p(t,r);e+="";var n=e.replace(/ /g,"").toLowerCase();if(n in a)return p(t,a[n]),_(e,t),t;if("#"!==n.charAt(0)){var i=n.indexOf("("),o=n.indexOf(")");if(-1!==i&&o+1===n.length){var s=n.substr(0,i),l=n.substr(i+1,o-(i+1)).split(","),h=1;switch(s){case"rgba":if(4!==l.length)return void f(t,0,0,0,1);h=c(l.pop());case"rgb":return 3!==l.length?void f(t,0,0,0,1):(f(t,u(l[0]),u(l[1]),u(l[2]),h),_(e,t),t);case"hsla":return 4!==l.length?void f(t,0,0,0,1):(l[3]=c(l[3]),v(l,t),_(e,t),t);case"hsl":return 3!==l.length?void f(t,0,0,0,1):(v(l,t),_(e,t),t);default:return}}f(t,0,0,0,1)}else{if(4===n.length){var d=parseInt(n.substr(1),16);return d>=0&&d<=4095?(f(t,(3840&d)>>4|(3840&d)>>8,240&d|(240&d)>>4,15&d|(15&d)<<4,1),_(e,t),t):void f(t,0,0,0,1)}if(7===n.length){d=parseInt(n.substr(1),16);return d>=0&&d<=16777215?(f(t,(16711680&d)>>16,(65280&d)>>8,255&d,1),_(e,t),t):void f(t,0,0,0,1)}}}},i.parseToFloat=function(e,t){if(t=i.parse(e,t),t)return t[0]/=255,t[1]/=255,t[2]/=255,t},i.lift=function(e,t){var r=i.parse(e);if(r){for(var n=0;n<3;n++)r[n]=t<0?r[n]*(1-t)|0:(255-r[n])*t+r[n]|0;return i.stringify(r,4===r.length?"rgba":"rgb")}},i.toHex=function(e){var t=i.parse(e);if(t)return((1<<24)+(t[0]<<16)+(t[1]<<8)+ +t[2]).toString(16).slice(1)},i.fastLerp=function(e,t,r){if(t&&t.length&&e>=0&&e<=1){r=r||[];var n=e*(t.length-1),i=Math.floor(n),a=Math.ceil(n),s=t[i],u=t[a],c=n-i;return r[0]=o(d(s[0],u[0],c)),r[1]=o(d(s[1],u[1],c)),r[2]=o(d(s[2],u[2],c)),r[3]=l(d(s[3],u[3],c)),r}},i.fastMapToColor=i.fastLerp,i.lerp=function(e,t,r){if(t&&t.length&&e>=0&&e<=1){var n=e*(t.length-1),a=Math.floor(n),s=Math.ceil(n),u=i.parse(t[a]),c=i.parse(t[s]),h=n-a,f=i.stringify([o(d(u[0],c[0],h)),o(d(u[1],c[1],h)),o(d(u[2],c[2],h)),l(d(u[3],c[3],h))],"rgba");return r?{color:f,leftIndex:a,rightIndex:s,value:n}:f}},i.mapToColor=i.lerp,i.modifyHSL=function(e,t,r,n){if(e=i.parse(e),e)return e=y(e),null!=t&&(e[0]=s(t)),null!=r&&(e[1]=c(r)),null!=n&&(e[2]=c(n)),i.stringify(v(e),"rgba")},i.modifyAlpha=function(e,t){if(e=i.parse(e),e&&null!=t)return e[3]=l(t),i.stringify(e,"rgba")},i.stringify=function(e,t){if(e&&e.length){var r=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(r+=","+e[3]),t+"("+r+")"}},t["a"]=i},function(e,t,r){"use strict";var n=function(){this.head=null,this.tail=null,this._length=0};n.prototype.insert=function(e){var t=new n.Entry(e);return this.insertEntry(t),t},n.prototype.insertAt=function(e,t){if(!(e<0)){var r=this.head,i=0;while(r&&i!=e)r=r.next,i++;if(r){var a=new n.Entry(t),o=r.prev;o?(o.next=a,a.prev=o):this.head=a,a.next=r,r.prev=a}else this.insert(t)}},n.prototype.insertBeforeEntry=function(e,t){var r=new n.Entry(e),i=t.prev;i?(i.next=r,r.prev=i):this.head=r,r.next=t,t.prev=r,this._length++},n.prototype.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,this.tail=e):this.head=this.tail=e,this._length++},n.prototype.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._length--},n.prototype.removeAt=function(e){if(!(e<0)){var t=this.head,r=0;while(t&&r!=e)t=t.next,r++;return t?(this.remove(t),t.value):void 0}},n.prototype.getHead=function(){if(this.head)return this.head.value},n.prototype.getTail=function(){if(this.tail)return this.tail.value},n.prototype.getAt=function(e){if(!(e<0)){var t=this.head,r=0;while(t&&r!=e)t=t.next,r++;return t.value}},n.prototype.indexOf=function(e){var t=this.head,r=0;while(t){if(t.value===e)return r;t=t.next,r++}},n.prototype.length=function(){return this._length},n.prototype.isEmpty=function(){return 0===this._length},n.prototype.forEach=function(e,t){var r=this.head,n=0,i="undefined"!=typeof t;while(r)i?e.call(t,r.value,n):e(r.value,n),r=r.next,n++},n.prototype.clear=function(){this.tail=this.head=null,this._length=0},n.Entry=function(e){this.value=e,this.next=null,this.prev=null},t["a"]=n},function(e,t,r){"use strict";var n=r(116),i=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g;function a(e,t,r){function n(e,r,n,i){var o="";isNaN(r)&&(r=r in t?t[r]:a[r]),isNaN(n)&&(n=n in t?t[n]:a[n]);for(var s=parseInt(r);s<parseInt(n);s++)o+="{"+i.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var a={};for(var o in r)a[o+"_COUNT"]=r[o];return e.replace(i,n)}function o(e,t,r){var n=[];if(t)for(var i in t){var a=t[i];a>0&&n.push("#define "+i.toUpperCase()+"_COUNT "+a)}if(r)for(var o=0;o<r.length;o++){var s=r[o];n.push("#define "+s.toUpperCase()+"_ENABLED")}for(var s in e){var l=e[s];null===l?n.push("#define "+s):n.push("#define "+s+" "+l.toString())}return n.join("\n")}function s(e){for(var t=[],r=0;r<e.length;r++)t.push("#extension GL_"+e[r]+" : enable");return t.join("\n")}function l(e){return["precision",e,"float"].join(" ")+";\n"+["precision",e,"int"].join(" ")+";\n"+["precision",e,"sampler2D"].join(" ")+";\n"}function u(e){this._renderer=e,this._cache={}}u.prototype.getProgram=function(e,t,r){var i=this._cache,u=e.isSkinnedMesh&&e.isSkinnedMesh(),c="s"+t.shader.shaderID+"m"+t.getProgramKey();r&&(c+="se"+r.getProgramKey(e.lightGroup)),u&&(c+=","+e.joints.length);var h=i[c];if(h)return h;var d=r?r.getLightsNumbers(e.lightGroup):{},f=this._renderer,p=f.gl,m=t.getEnabledTextures(),g="";if(u){var _={SKINNING:null,JOINT_COUNT:e.joints.length};e.joints.length>f.getMaxJointNumber()&&(_.USE_SKIN_MATRICES_TEXTURE=null),g="\n"+o(_)+"\n"}var v=g+o(t.vertexDefines,d,m),y=g+o(t.fragmentDefines,d,m),x=v+"\n"+t.shader.vertex,T=["OES_standard_derivatives","EXT_shader_texture_lod"].filter((function(e){return null!=f.getGLExtension(e)}));T.indexOf("EXT_shader_texture_lod")>=0&&(y+="\n#define SUPPORT_TEXTURE_LOD"),T.indexOf("OES_standard_derivatives")>=0&&(y+="\n#define SUPPORT_STANDARD_DERIVATIVES");var b=s(T)+"\n"+l(t.precision)+"\n"+y+"\n"+t.shader.fragment,w=a(x,t.vertexDefines,d),E=a(b,t.fragmentDefines,d);h=new n["a"];h.uniformSemantics=t.shader.uniformSemantics,h.attributes=t.shader.attributes;var S=h.buildProgram(p,t.shader,w,E);return h.__error=S,i[c]=h,h},t["a"]=u},function(e,t,r){"use strict";var n=r(14),i=r(7),a=1,o=2,s=3,l={};function u(e){for(var t=e.split("\n"),r=0,n=t.length;r<n;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function c(e,t,r){if(!e.getShaderParameter(t,e.COMPILE_STATUS))return[e.getShaderInfoLog(t),u(r)].join("\n")}var h=new n["a"].Float32Array(16),d=i["a"].extend({uniformSemantics:{},attributes:{}},(function(){this._locations={},this._textureSlot=0,this._program=null}),{bind:function(e){this._textureSlot=0,e.gl.useProgram(this._program)},hasUniform:function(e){var t=this._locations[e];return null!==t&&void 0!==t},useTextureSlot:function(e,t,r){t&&(e.gl.activeTexture(e.gl.TEXTURE0+r),t.isRenderable()?t.bind(e):t.unbind(e))},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(e){this._textureSlot=e||0},takeCurrentTextureSlot:function(e,t){var r=this._textureSlot;return this.useTextureSlot(e,t,r),this._textureSlot++,r},setUniform:function(e,t,r,i){var a=this._locations,o=a[r];if(null===o||void 0===o)return!1;switch(t){case"m4":if(!(i instanceof Float32Array)){for(var s=0;s<i.length;s++)h[s]=i[s];i=h}e.uniformMatrix4fv(o,!1,i);break;case"2i":e.uniform2i(o,i[0],i[1]);break;case"2f":e.uniform2f(o,i[0],i[1]);break;case"3i":e.uniform3i(o,i[0],i[1],i[2]);break;case"3f":e.uniform3f(o,i[0],i[1],i[2]);break;case"4i":e.uniform4i(o,i[0],i[1],i[2],i[3]);break;case"4f":e.uniform4f(o,i[0],i[1],i[2],i[3]);break;case"1i":e.uniform1i(o,i);break;case"1f":e.uniform1f(o,i);break;case"1fv":e.uniform1fv(o,i);break;case"1iv":e.uniform1iv(o,i);break;case"2iv":e.uniform2iv(o,i);break;case"2fv":e.uniform2fv(o,i);break;case"3iv":e.uniform3iv(o,i);break;case"3fv":e.uniform3fv(o,i);break;case"4iv":e.uniform4iv(o,i);break;case"4fv":e.uniform4fv(o,i);break;case"m2":case"m2v":e.uniformMatrix2fv(o,!1,i);break;case"m3":case"m3v":e.uniformMatrix3fv(o,!1,i);break;case"m4v":if(Array.isArray(i)&&Array.isArray(i[0])){var l=new n["a"].Float32Array(16*i.length),u=0;for(s=0;s<i.length;s++)for(var c=i[s],d=0;d<16;d++)l[u++]=c[d];e.uniformMatrix4fv(o,!1,l)}else e.uniformMatrix4fv(o,!1,i);break}return!0},setUniformOfSemantic:function(e,t,r){var n=this.uniformSemantics[t];return!!n&&this.setUniform(e,n.type,n.symbol,r)},enableAttributes:function(e,t,r){var n,i=e.gl,u=this._program,c=this._locations;n=r?r.__enabledAttributeList:l[e.__uid__],n||(n=r?r.__enabledAttributeList=[]:l[e.__uid__]=[]);for(var h=[],d=0;d<t.length;d++){var f=t[d];if(this.attributes[f]){var p=c[f];if(null==p){if(p=i.getAttribLocation(u,f),-1===p){h[d]=-1;continue}c[f]=p}h[d]=p,n[p]?n[p]=o:n[p]=a}else h[d]=-1}for(d=0;d<n.length;d++)switch(n[d]){case a:i.enableVertexAttribArray(d),n[d]=s;break;case o:n[d]=s;break;case s:i.disableVertexAttribArray(d),n[d]=0;break}return h},buildProgram:function(e,t,r,n){var i=e.createShader(e.VERTEX_SHADER),a=e.createProgram();e.shaderSource(i,r),e.compileShader(i);var o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(o,n),e.compileShader(o);var s=c(e,i,r);if(s)return s;if(s=c(e,o,n),s)return s;if(e.attachShader(a,i),e.attachShader(a,o),t.attributeSemantics["POSITION"])e.bindAttribLocation(a,0,t.attributeSemantics["POSITION"].symbol);else{var l=Object.keys(this.attributes);e.bindAttribLocation(a,0,l[0])}if(e.linkProgram(a),!e.getProgramParameter(a,e.LINK_STATUS))return"Could not link program\n"+e.getProgramInfoLog(a);for(var u=0;u<t.uniforms.length;u++){var h=t.uniforms[u];this._locations[h]=e.getUniformLocation(a,h)}e.deleteShader(i),e.deleteShader(o),this._program=a,this.vertexCode=r,this.fragmentCode=n}});t["a"]=d},function(e,t,r){"use strict";var n=r(7),i=r(54),a=r(26),o=r(3),s=r(9),l=r(72),u=r(11),c=r(12),h=n["a"].extend({scene:null,camera:null,renderer:null},(function(){this._ray=new i["a"],this._ndc=new a["a"]}),{pick:function(e,t,r){var n=this.pickAll(e,t,[],r);return n[0]||null},pickAll:function(e,t,r,n){return this.renderer.screenToNDC(e,t,this._ndc),this.camera.castRay(this._ndc,this._ray),r=r||[],this._intersectNode(this.scene,r,n||!1),r.sort(this._intersectionCompareFunc),r},_intersectNode:function(e,t,r){e instanceof l["a"]&&e.isRenderable()&&(e.ignorePicking&&!r||!(e.mode===u["a"].TRIANGLES&&e.geometry.isUseIndices()||e.geometry.pickByRay||e.geometry.pick)||this._intersectRenderable(e,t));for(var n=0;n<e._children.length;n++)this._intersectNode(e._children[n],t,r)},_intersectRenderable:function(){var e=new o["a"],t=new o["a"],r=new o["a"],n=new i["a"],a=new s["a"];return function(i,l){var d=i.isSkinnedMesh();n.copy(this._ray),s["a"].invert(a,i.worldTransform),d||n.applyTransform(a);var f=i.geometry,p=d?i.skeleton.boundingBox:f.boundingBox;if(!p||n.intersectBoundingBox(p))if(f.pick)f.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,i,l);else if(f.pickByRay)f.pickByRay(n,i,l);else{var m,g,_=i.cullFace===u["a"].BACK&&i.frontFace===u["a"].CCW||i.cullFace===u["a"].FRONT&&i.frontFace===u["a"].CW,v=f.indices,y=f.attributes.position,x=f.attributes.weight,T=f.attributes.joint,b=[];if(y&&y.value&&v){if(d){g=i.skeleton.getSubSkinMatrices(i.__uid__,i.joints);for(var w=0;w<i.joints.length;w++){b[w]=b[w]||[];for(var E=0;E<16;E++)b[w][E]=g[16*w+E]}var S=[],M=[],A=[],N=[],C=[],L=f.attributes.skinnedPosition;L&&L.value||(f.createAttribute("skinnedPosition","f",3),L=f.attributes.skinnedPosition,L.init(f.vertexCount));for(w=0;w<f.vertexCount;w++){y.get(w,S),x.get(w,M),T.get(w,A),M[3]=1-M[0]-M[1]-M[2],c["a"].set(N,0,0,0);for(E=0;E<4;E++)A[E]>=0&&M[E]>1e-4&&(c["a"].transformMat4(C,S,b[A[E]]),c["a"].scaleAndAdd(N,N,C,M[E]));L.set(w,N)}}for(w=0;w<v.length;w+=3){var P=v[w],D=v[w+1],O=v[w+2],R=d?f.attributes.skinnedPosition:y;if(R.get(P,e.array),R.get(D,t.array),R.get(O,r.array),m=_?n.intersectTriangle(e,t,r,i.culling):n.intersectTriangle(e,r,t,i.culling),m){var I=new o["a"];d?o["a"].copy(I,m):o["a"].transformMat4(I,m,i.worldTransform),l.push(new h.Intersection(m,I,i,[P,D,O],w/3,o["a"].dist(I,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(e,t){return e.distance-t.distance}});h.Intersection=function(e,t,r,n,i,a){this.point=e,this.pointWorld=t,this.target=r,this.triangle=n,this.triangleIndex=i,this.distance=a},t["a"]=h},function(e,t,r){"use strict";var n=r(7),i=r(11),a=r(57),o=r(14);function s(e){return{byte:o["a"].Int8Array,ubyte:o["a"].Uint8Array,short:o["a"].Int16Array,ushort:o["a"].Uint16Array}[e]||o["a"].Float32Array}function l(e){return"attr_"+e}function u(e,t,r,n){switch(this.name=e,this.type=t,this.size=r,this.semantic=n||"",this.value=null,r){case 1:this.get=function(e){return this.value[e]},this.set=function(e,t){this.value[e]=t},this.copy=function(e,t){this.value[e]=this.value[e]};break;case 2:this.get=function(e,t){var r=this.value;return t[0]=r[2*e],t[1]=r[2*e+1],t},this.set=function(e,t){var r=this.value;r[2*e]=t[0],r[2*e+1]=t[1]},this.copy=function(e,t){var r=this.value;t*=2,e*=2,r[e]=r[t],r[e+1]=r[t+1]};break;case 3:this.get=function(e,t){var r=3*e,n=this.value;return t[0]=n[r],t[1]=n[r+1],t[2]=n[r+2],t},this.set=function(e,t){var r=3*e,n=this.value;n[r]=t[0],n[r+1]=t[1],n[r+2]=t[2]},this.copy=function(e,t){var r=this.value;t*=3,e*=3,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2]};break;case 4:this.get=function(e,t){var r=this.value,n=4*e;return t[0]=r[n],t[1]=r[n+1],t[2]=r[n+2],t[3]=r[n+3],t},this.set=function(e,t){var r=this.value,n=4*e;r[n]=t[0],r[n+1]=t[1],r[n+2]=t[2],r[n+3]=t[3]},this.copy=function(e,t){var r=this.value;t*=4,e*=4,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2],r[e+3]=r[t+3]}}}function c(e,t,r,n,i){this.name=e,this.type=t,this.buffer=r,this.size=n,this.semantic=i,this.symbol="",this.needsRemove=!1}function h(e){this.buffer=e,this.count=0}u.prototype.init=function(e){if(!this.value||this.value.length!=e*this.size){var t=s(this.type);this.value=new t(e*this.size)}},u.prototype.fromArray=function(e){var t,r=s(this.type);if(e[0]&&e[0].length){var n=0,i=this.size;t=new r(e.length*i);for(var a=0;a<e.length;a++)for(var o=0;o<i;o++)t[n++]=e[a][o]}else t=new r(e);this.value=t},u.prototype.clone=function(e){var t=new u(this.name,this.type,this.size,this.semantic);return e&&console.warn("todo"),t};var d=n["a"].extend((function(){return{attributes:{},indices:null,dynamic:!0,_enabledAttributes:null,__used:0}}),(function(){this._cache=new a["a"],this._attributeList=Object.keys(this.attributes),this.__vaoCache={}}),{mainAttribute:"",pick:null,pickByRay:null,dirty:function(){for(var e=this.getEnabledAttributes(),t=0;t<e.length;t++)this.dirtyAttribute(e[t]);this.dirtyIndices(),this._enabledAttributes=null,this._cache.dirty("any")},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(e){this._cache.dirtyAll(l(e)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(e,t){if(e<this.triangleCount&&e>=0){t||(t=[]);var r=this.indices;return t[0]=r[3*e],t[1]=r[3*e+1],t[2]=r[3*e+2],t}},setTriangleIndices:function(e,t){var r=this.indices;r[3*e]=t[0],r[3*e+1]=t[1],r[3*e+2]=t[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(e){var t,r=this.vertexCount>65535?o["a"].Uint32Array:o["a"].Uint16Array;if(e[0]&&e[0].length){var n=0,i=3;t=new r(e.length*i);for(var a=0;a<e.length;a++)for(var s=0;s<i;s++)t[n++]=e[a][s]}else t=new r(e);this.indices=t},createAttribute:function(e,t,r,n){var i=new u(e,t,r,n);return this.attributes[e]&&this.removeAttribute(e),this.attributes[e]=i,this._attributeList.push(e),i},removeAttribute:function(e){var t=this._attributeList,r=t.indexOf(e);return r>=0&&(t.splice(r,1),delete this.attributes[e],!0)},getAttribute:function(e){return this.attributes[e]},getEnabledAttributes:function(){var e=this._enabledAttributes,t=this._attributeList;if(e)return e;for(var r=[],n=this.vertexCount,i=0;i<t.length;i++){var a=t[i],o=this.attributes[a];o.value&&o.value.length===n*o.size&&r.push(a)}return this._enabledAttributes=r,r},getBufferChunks:function(e){var t=this._cache;t.use(e.__uid__);var r=t.isDirty("attributes"),n=t.isDirty("indices");if(r||n){this._updateBuffer(e.gl,r,n);for(var i=this.getEnabledAttributes(),a=0;a<i.length;a++)t.fresh(l(i[a]));t.fresh("attributes"),t.fresh("indices")}return t.fresh("any"),t.get("chunks")},_updateBuffer:function(e,t,r){var n=this._cache,a=n.get("chunks"),o=!1;a||(a=[],a[0]={attributeBuffers:[],indicesBuffer:null},n.put("chunks",a),o=!0);var s=a[0],u=s.attributeBuffers,d=s.indicesBuffer;if(t||o){var f=this.getEnabledAttributes(),p={};if(!o)for(var m=0;m<u.length;m++)p[u[m].name]=u[m];for(var g=0;g<f.length;g++){var _,v,y=f[g],x=this.attributes[y];o||(_=p[y]),v=_?_.buffer:e.createBuffer(),n.isDirty(l(y))&&(e.bindBuffer(e.ARRAY_BUFFER,v),e.bufferData(e.ARRAY_BUFFER,x.value,this.dynamic?i["a"].DYNAMIC_DRAW:i["a"].STATIC_DRAW)),u[g]=new c(y,x.type,v,x.size,x.semantic)}for(m=g;m<u.length;m++)e.deleteBuffer(u[m].buffer);u.length=g}this.isUseIndices()&&(r||o)&&(d||(d=new h(e.createBuffer()),s.indicesBuffer=d),d.count=this.indices.length,e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,d.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,this.dynamic?i["a"].DYNAMIC_DRAW:i["a"].STATIC_DRAW))},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("chunks");if(r)for(var n=0;n<r.length;n++){for(var i=r[n],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}i.indicesBuffer&&e.gl.deleteBuffer(i.indicesBuffer.buffer)}if(this.__vaoCache){var s=e.getGLExtension("OES_vertex_array_object");for(var l in this.__vaoCache){var u=this.__vaoCache[l].vao;u&&s.deleteVertexArrayOES(u)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});Object.defineProperty&&(Object.defineProperty(d.prototype,"vertexCount",{enumerable:!1,get:function(){var e=this.attributes[this.mainAttribute];return e||(e=this.attributes[this._attributeList[0]]),e&&e.value?e.value.length/e.size:0}}),Object.defineProperty(d.prototype,"triangleCount",{enumerable:!1,get:function(){var e=this.indices;return e?e.length/3:0}})),d.STATIC_DRAW=i["a"].STATIC_DRAW,d.DYNAMIC_DRAW=i["a"].DYNAMIC_DRAW,d.STREAM_DRAW=i["a"].STREAM_DRAW,d.AttributeBuffer=c,d.IndicesBuffer=h,d.Attribute=u,t["a"]=d},function(e,t,r){"use strict";var n=r(120),i="uniform vec3 ",a="uniform float ",o="@export clay.header.",s="@end",l=":unconfigurable;";t["a"]=[o+"directional_light",i+"directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+l,i+"directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+l,s,o+"ambient_light",i+"ambientLightColor[AMBIENT_LIGHT_COUNT]"+l,s,o+"ambient_sh_light",i+"ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+l,i+"ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+l,n["a"],s,o+"ambient_cubemap_light",i+"ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+l,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+l,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+l,s,o+"point_light",i+"pointLightPosition[POINT_LIGHT_COUNT]"+l,a+"pointLightRange[POINT_LIGHT_COUNT]"+l,i+"pointLightColor[POINT_LIGHT_COUNT]"+l,s,o+"spot_light",i+"spotLightPosition[SPOT_LIGHT_COUNT]"+l,i+"spotLightDirection[SPOT_LIGHT_COUNT]"+l,a+"spotLightRange[SPOT_LIGHT_COUNT]"+l,a+"spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+l,a+"spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+l,a+"spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+l,i+"spotLightColor[SPOT_LIGHT_COUNT]"+l,s].join("\n")},function(e,t,r){"use strict";t["a"]="vec3 calcAmbientSHLight(int idx, vec3 N) {\n int offset = 9 * idx;\n return ambientSHLightCoefficients[0]\n + ambientSHLightCoefficients[1] * N.x\n + ambientSHLightCoefficients[2] * N.y\n + ambientSHLightCoefficients[3] * N.z\n + ambientSHLightCoefficients[4] * N.x * N.z\n + ambientSHLightCoefficients[5] * N.z * N.y\n + ambientSHLightCoefficients[6] * N.y * N.x\n + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}"},function(e,t,r){"use strict";t["a"]="@export clay.skybox.vertex\n#define SHADER_NAME skybox\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_WorldPosition;\nvoid main()\n{\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n@export clay.skybox.fragment\n#define PI 3.1415926\nuniform mat4 viewInverse : VIEWINVERSE;\n#ifdef EQUIRECTANGULAR\nuniform sampler2D environmentMap;\n#else\nuniform samplerCube environmentMap;\n#endif\nuniform float lod: 0.0;\nvarying vec3 v_WorldPosition;\n@import clay.util.rgbm\n@import clay.util.srgb\n@import clay.util.ACES\nvoid main()\n{\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(v_WorldPosition - eyePos);\n#ifdef EQUIRECTANGULAR\n float phi = acos(V.y);\n float theta = atan(-V.x, V.z) + PI * 0.5;\n vec2 uv = vec2(theta / 2.0 / PI, phi / PI);\n vec4 texel = decodeHDR(texture2D(environmentMap, fract(uv)));\n#else\n #if defined(LOD) || defined(SUPPORT_TEXTURE_LOD)\n vec4 texel = decodeHDR(textureCubeLodEXT(environmentMap, V, lod));\n #else\n vec4 texel = decodeHDR(textureCube(environmentMap, V));\n #endif\n#endif\n#ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n#endif\n#ifdef TONEMAPPING\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n#ifdef SRGB_ENCODE\n texel = linearTosRGB(texel);\n#endif\n gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));\n}\n@end"},function(e,t,r){"use strict";var n=r(4),i=r(5),a=(r(27),542327876),o=131072,s=512,l=4;function u(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var c=31,h=u("DXT1"),d=u("DXT3"),f=u("DXT5"),p=0,m=1,g=2,_=3,v=4,y=7,x=20,T=21,b=28,w={parse:function(e,t){var r=new Int32Array(e,0,c);if(r[p]!==a)return null;if(!r(x)&l)return null;var u,w,E=r(T),S=r[v],M=r[_],A=r[b]&s,N=r[g]&o;switch(E){case h:u=8,w=n["a"].COMPRESSED_RGB_S3TC_DXT1_EXT;break;case d:u=16,w=n["a"].COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case f:u=16,w=n["a"].COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var C=r[m]+4,L=A?6:1,P=1;N&&(P=Math.max(1,r[y]));for(var D=[],O=0;O<L;O++){var R=S,I=M;D[O]=new i["a"]({width:R,height:I,format:w});for(var F=[],B=0;B<P;B++){var U=Math.max(4,R)/4*Math.max(4,I)/4*u,z=new Uint8Array(e,C,U);C+=U,R*=.5,I*=.5,F[B]=z}D[O].pixels=F[0],N&&(D[O].mipmaps=F)}if(!t)return D[0];t.width=D[0].width,t.height=D[0].height,t.format=D[0].format,t.pixels=D[0].pixels,t.mipmaps=D[0].mipmaps}};t["a"]=w},function(e,t,r){"use strict";var n=r(4),i=r(5),a=String.fromCharCode,o=8,s=32767;function l(e,t,r,n){if(e[3]>0){var i=Math.pow(2,e[3]-128-8+n);t[r+0]=e[0]*i,t[r+1]=e[1]*i,t[r+2]=e[2]*i}else t[r+0]=0,t[r+1]=0,t[r+2]=0;return t[r+3]=1,t}function u(e,t,r){for(var n="",i=t;i<r;i++)n+=a(e[i]);return n}function c(e,t){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3]}function h(e,t,r,n){var i=0,a=0,o=n;while(o>0)if(e[a][0]=t[r++],e[a][1]=t[r++],e[a][2]=t[r++],e[a][3]=t[r++],1===e[a][0]&&1===e[a][1]&&1===e[a][2]){for(var s=e[a][3]<<i>>>0;s>0;s--)c(e[a-1],e[a]),a++,o--;i+=8}else a++,o--,i=0;return r}function d(e,t,r,n){if(n<o|n>s)return h(e,t,r,n);var i=t[r++];if(2!=i)return h(e,t,r-1,n);if(e[0][1]=t[r++],e[0][2]=t[r++],i=t[r++],(e[0][2]<<8>>>0|i)>>>0!==n)return null;for(i=0;i<4;i++)for(var a=0;a<n;){var l=t[r++];if(l>128){l=(127&l)>>>0;var u=t[r++];while(l--)e[a++][i]=u}else while(l--)e[a++][i]=t[r++]}return r}var f={parseRGBE:function(e,t,r){null==r&&(r=0);var o=new Uint8Array(e),s=o.length;if("#?"===u(o,0,2)){for(var c=2;c<s;c++)if("\n"===a(o[c])&&"\n"===a(o[c+1]))break;if(!(c>=s)){c+=2;for(var h="";c<s;c++){var f=a(o[c]);if("\n"===f)break;h+=f}var p=h.split(" "),m=parseInt(p[1]),g=parseInt(p[3]);if(g&&m){for(var _=c+1,v=[],y=0;y<g;y++){v[y]=[];for(var x=0;x<4;x++)v[y][x]=0}for(var T=new Float32Array(g*m*4),b=0,w=0;w<m;w++){_=d(v,o,_,g);if(!_)return null;for(y=0;y<g;y++)l(v[y],T,b,r),b+=4}return t||(t=new i["a"]),t.width=g,t.height=m,t.pixels=T,t.type=n["a"].FLOAT,t}}}},parseRGBEFromPNG:function(e){}};t["a"]=f},function(e,t,r){"use strict";var n=r(5),i=r(3),a=r(26),o=["mousedown","mouseup","mousemove","mouseover","mouseout","click","dblclick","contextmenu"];function s(e){return"_on"+e}var l=function(e){var t=this;this._texture=new n["a"]({anisotropic:32,flipY:!1,surface:this,dispose:function(e){t.dispose(),n["a"].prototype.dispose.call(this,e)}}),o.forEach((function(e){this[s(e)]=function(t){t.triangle&&this._meshes.forEach((function(r){this.dispatchEvent(e,r,t.triangle,t.point)}),this)}}),this),this._meshes=[],e&&this.setECharts(e),this.onupdate=null};l.prototype={constructor:l,getTexture:function(){return this._texture},setECharts:function(e){this._chart=e;var t=e.getDom();if(t instanceof HTMLCanvasElement){var r=this,n=e.getZr(),i=n.__oldRefreshImmediately||n.refreshImmediately;n.refreshImmediately=function(){i.call(this),r._texture.dirty(),r.onupdate&&r.onupdate()},n.__oldRefreshImmediately=i}else console.error("ECharts must init on canvas if it is used as texture."),t=document.createElement("canvas");this._texture.image=t,this._texture.dirty(),this.onupdate&&this.onupdate()},dispatchEvent:function(){var e=new i["a"],t=new i["a"],r=new i["a"],n=new a["a"],o=new a["a"],s=new a["a"],l=new a["a"],u=new i["a"];return function(c,h,d,f){var p=h.geometry,m=p.attributes.position,g=p.attributes.texcoord0,_=i["a"].dot,v=i["a"].cross;m.get(d[0],e.array),m.get(d[1],t.array),m.get(d[2],r.array),g.get(d[0],n.array),g.get(d[1],o.array),g.get(d[2],s.array),v(u,t,r);var y=_(e,u),x=_(f,u)/y;v(u,r,e);var T=_(f,u)/y;v(u,e,t);var b=_(f,u)/y;a["a"].scale(l,n,x),a["a"].scaleAndAdd(l,l,o,T),a["a"].scaleAndAdd(l,l,s,b);var w=l.x*this._chart.getWidth(),E=l.y*this._chart.getHeight();this._chart.getZr().handler.dispatch(c,{zrX:w,zrY:E})}}(),attachToMesh:function(e){this._meshes.indexOf(e)>=0||(o.forEach((function(t){e.on(t,this[s(t)],this)}),this),this._meshes.push(e))},detachFromMesh:function(e){var t=this._meshes.indexOf(e);t>=0&&this._meshes.splice(t,1),o.forEach((function(t){e.off(t,this[s(t)])}),this)},dispose:function(){this._meshes.forEach((function(e){this.detachFromMesh(e)}),this)}},t["a"]=l},function(e,t,r){"use strict";var n=r(24),i=r(77),a=n["a"].extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(e,t){if(e.getGLExtension("EXT_shader_texture_lod")){this._brdfLookup||(this._normalDistribution=i["a"].generateNormalDistribution(),this._brdfLookup=i["a"].integrateBRDF(e,this._normalDistribution));var r=this.cubemap;if(!r.__prefiltered){var n=i["a"].prefilterEnvironmentMap(e,r,{encodeRGBM:!0,width:t,height:t},this._normalDistribution,this._brdfLookup);this.cubemap=n.environmentMap,this.cubemap.__prefiltered=!0,r.dispose(e)}}else console.warn("Device not support textureCubeLodEXT")},getBRDFLookup:function(){return this._brdfLookup},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientCubemapLightCubemap:{type:"t",value:function(e){return e.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(e){return e._brdfLookup}}}});t["a"]=a},function(e,t,r){"use strict";t["a"]="\n@export clay.compositor.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n v_Texcoord = texcoord;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end"},function(e,t,r){"use strict";t["a"]="#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform sampler2D normalDistribution;\nuniform vec2 viewportSize : [512, 256];\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nfloat G_Smith(float roughness, float NoV, float NoL) {\n float k = roughness * roughness / 2.0;\n float G1V = NoV / (NoV * (1.0 - k) + k);\n float G1L = NoL / (NoL * (1.0 - k) + k);\n return G1L * G1V;\n}\nvoid main() {\n vec2 uv = gl_FragCoord.xy / viewportSize;\n float NoV = uv.x;\n float roughness = uv.y;\n vec3 V;\n V.x = sqrt(1.0 - NoV * NoV);\n V.y = 0.0;\n V.z = NoV;\n float A = 0.0;\n float B = 0.0;\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\n vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n vec3 L = reflect(-V, H);\n float NoL = clamp(L.z, 0.0, 1.0);\n float NoH = clamp(H.z, 0.0, 1.0);\n float VoH = clamp(dot(V, H), 0.0, 1.0);\n if (NoL > 0.0) {\n float G = G_Smith(roughness, NoV, NoL);\n float G_Vis = G * VoH / (NoH * NoV);\n float Fc = pow(1.0 - VoH, 5.0);\n A += (1.0 - Fc) * G_Vis;\n B += Fc * G_Vis;\n }\n }\n gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n"},function(e,t,r){"use strict";t["a"]="#define SHADER_NAME prefilter\n#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\nuniform float roughness : 0.5;\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\n@import clay.util.rgbm\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nvoid main() {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(v_WorldPosition - eyePos);\n vec3 N = V;\n vec3 prefilteredColor = vec3(0.0);\n float totalWeight = 0.0;\n float fMaxSampleNumber = float(SAMPLE_NUMBER);\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\n vec3 H = importanceSampleNormal(float(i) / fMaxSampleNumber, roughness, N);\n vec3 L = reflect(-V, H);\n float NoL = clamp(dot(N, L), 0.0, 1.0);\n if (NoL > 0.0) {\n prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n totalWeight += NoL;\n }\n }\n gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n"},function(e,t,r){"use strict";var n=r(24),i=r(14),a=n["a"].extend({castShadow:!1,coefficients:[]},(function(){this._coefficientsTmpArr=new i["a"].Float32Array(27)}),{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientSHLightCoefficients:{type:"3f",value:function(e){for(var t=e._coefficientsTmpArr,r=0;r<e.coefficients.length;r++)t[r]=e.coefficients[r];return t}}}});t["a"]=a},function(e,t,r){"use strict";var n=r(4),i=r(10),a=r(5),o=(r(16),r(14)),s=r(42),l=r(75),u=r(62),c=r(36),h=r(12),d=(r(131),{}),f=["px","nx","py","ny","pz","nz"];function p(e,t){var r=e[0],n=e[1],i=e[2];return 0===t?1:1===t?r:2===t?n:3===t?i:4===t?r*i:5===t?n*i:6===t?r*n:7===t?3*i*i-1:r*r-n*n}var m={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};function g(e,t,r,n){for(var i=new o["a"].Float32Array(27),a=h["a"].create(),s=h["a"].create(),l=h["a"].create(),u=0;u<9;u++){for(var c=h["a"].create(),d=0;d<f.length;d++){for(var g=t[f[d]],_=h["a"].create(),v=0,y=0,x=m[f[d]],T=0;T<n;T++)for(var b=0;b<r;b++){a[0]=b/(r-1)*2-1,a[1]=T/(n-1)*2-1,a[2]=-1,h["a"].normalize(a,a),l[0]=a[x[0]]*x[3],l[1]=a[x[1]]*x[4],l[2]=a[x[2]]*x[5],s[0]=g[y++]/255,s[1]=g[y++]/255,s[2]=g[y++]/255;var w=g[y++]/255*8.12;s[0]*=w,s[1]*=w,s[2]*=w,h["a"].scaleAndAdd(_,_,s,p(l,u)*-a[2]),v+=-a[2]}h["a"].scaleAndAdd(c,c,_,1/v)}i[3*u]=c[0]/6,i[3*u+1]=c[1]/6,i[3*u+2]=c[2]/6}return i}d.projectEnvironmentMap=function(e,t,r){var o;r=r||{},r.lod=r.lod||0;var h=new c["a"],d=64;"texture2D"===t.textureType?o=new l["a"]({scene:h,environmentMap:t}):(d=t.image&&t.image.px?t.image.px.width:t.width,o=new s["a"]({scene:h,environmentMap:t}));var p=Math.ceil(d/Math.pow(2,r.lod)),m=Math.ceil(d/Math.pow(2,r.lod)),_=new a["a"]({width:p,height:m}),v=new i["a"];o.material.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&o.material.define("fragment","RGBM_DECODE"),o.material.set("lod",r.lod);for(var y=new u["a"]({texture:_}),x={},T=0;T<f.length;T++){x[f[T]]=new Uint8Array(p*m*4);var b=y.getCamera(f[T]);b.fov=90,v.attach(_),v.bind(e),e.render(h,b),e.gl.readPixels(0,0,p,m,n["a"].RGBA,n["a"].UNSIGNED_BYTE,x[f[T]]),v.unbind(e)}return o.dispose(e),v.dispose(e),_.dispose(e),g(e,x,p,m)},t["a"]=d},function(e,t,r){"use strict";t["a"]="uniform samplerCube environmentMap;\nvarying vec2 v_Texcoord;\n#define TEXTURE_SIZE 16\nmat3 front = mat3(\n 1.0, 0.0, 0.0,\n 0.0, 1.0, 0.0,\n 0.0, 0.0, 1.0\n);\nmat3 back = mat3(\n -1.0, 0.0, 0.0,\n 0.0, 1.0, 0.0,\n 0.0, 0.0, -1.0\n);\nmat3 left = mat3(\n 0.0, 0.0, -1.0,\n 0.0, 1.0, 0.0,\n 1.0, 0.0, 0.0\n);\nmat3 right = mat3(\n 0.0, 0.0, 1.0,\n 0.0, 1.0, 0.0,\n -1.0, 0.0, 0.0\n);\nmat3 up = mat3(\n 1.0, 0.0, 0.0,\n 0.0, 0.0, 1.0,\n 0.0, -1.0, 0.0\n);\nmat3 down = mat3(\n 1.0, 0.0, 0.0,\n 0.0, 0.0, -1.0,\n 0.0, 1.0, 0.0\n);\nfloat harmonics(vec3 normal){\n int index = int(gl_FragCoord.x);\n float x = normal.x;\n float y = normal.y;\n float z = normal.z;\n if(index==0){\n return 1.0;\n }\n else if(index==1){\n return x;\n }\n else if(index==2){\n return y;\n }\n else if(index==3){\n return z;\n }\n else if(index==4){\n return x*z;\n }\n else if(index==5){\n return y*z;\n }\n else if(index==6){\n return x*y;\n }\n else if(index==7){\n return 3.0*z*z - 1.0;\n }\n else{\n return x*x - y*y;\n }\n}\nvec3 sampleSide(mat3 rot)\n{\n vec3 result = vec3(0.0);\n float divider = 0.0;\n for (int i = 0; i < TEXTURE_SIZE * TEXTURE_SIZE; i++) {\n float x = mod(float(i), float(TEXTURE_SIZE));\n float y = float(i / TEXTURE_SIZE);\n vec2 sidecoord = ((vec2(x, y) + vec2(0.5, 0.5)) / vec2(TEXTURE_SIZE)) * 2.0 - 1.0;\n vec3 normal = normalize(vec3(sidecoord, -1.0));\n vec3 fetchNormal = rot * normal;\n vec3 texel = textureCube(environmentMap, fetchNormal).rgb;\n result += harmonics(fetchNormal) * texel * -normal.z;\n divider += -normal.z;\n }\n return result / divider;\n}\nvoid main()\n{\n vec3 result = (\n sampleSide(front) +\n sampleSide(back) +\n sampleSide(left) +\n sampleSide(right) +\n sampleSide(up) +\n sampleSide(down)\n ) / 6.0;\n gl_FragColor = vec4(result, 1.0);\n}"},function(e,t,r){"use strict";var n=r(15),i=r(18),a=n["a"].extend({dynamic:!1,widthSegments:40,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},(function(){this.build()}),{build:function(){var e=this.heightSegments,t=this.widthSegments,r=this.attributes.position,n=this.attributes.texcoord0,a=this.attributes.normal,o=(t+1)*(e+1);r.init(o),n.init(o),a.init(o);var s,l,u,c,h,d,f,p,m,g,_,v=o>65535?Uint32Array:Uint16Array,y=this.indices=new v(t*e*6),x=this.radius,T=this.phiStart,b=this.phiLength,w=this.thetaStart,E=this.thetaLength,S=(x=this.radius,[]),M=[],A=0,N=1/x;for(f=0;f<=e;f++)for(d=0;d<=t;d++)c=d/t,h=f/e,s=-x*Math.cos(T+c*b)*Math.sin(w+h*E),l=x*Math.cos(w+h*E),u=x*Math.sin(T+c*b)*Math.sin(w+h*E),S[0]=s,S[1]=l,S[2]=u,M[0]=c,M[1]=h,r.set(A,S),n.set(A,M),S[0]*=N,S[1]*=N,S[2]*=N,a.set(A,S),A++;var C=t+1,L=0;for(f=0;f<e;f++)for(d=0;d<t;d++)m=f*C+d,p=f*C+d+1,_=(f+1)*C+d+1,g=(f+1)*C+d,y[L++]=p,y[L++]=m,y[L++]=_,y[L++]=m,y[L++]=g,y[L++]=_;this.boundingBox=new i["a"],this.boundingBox.max.set(x,x,x),this.boundingBox.min.set(-x,-x,-x)}});t["a"]=a},function(e,t,r){"use strict";var n=r(24),i=n["a"].extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}}});t["a"]=i},function(e,t,r){"use strict";var n=r(24),i=r(3),a=n["a"].extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new i["a"],e.__dir.copy(e.worldTransform.z).normalize().negate().array}},directionalLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=n["a"].prototype.clone.call(this);return e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}});t["a"]=a},function(e,t,r){"use strict";var n=r(24),i=n["a"].extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(e){return e.getWorldPosition().array}},pointLightRange:{type:"1f",value:function(e){return e.range}},pointLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=n["a"].prototype.clone.call(this);return e.range=this.range,e}});t["a"]=i},function(e,t,r){"use strict";var n=r(24),i=r(3),a=n["a"].extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:.001,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(e){return e.getWorldPosition().array}},spotLightRange:{type:"1f",value:function(e){return e.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(e){return e.falloffFactor}},spotLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new i["a"],e.__dir.copy(e.worldTransform.z).negate().array}},spotLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=n["a"].prototype.clone.call(this);return e.range=this.range,e.umbraAngle=this.umbraAngle,e.penumbraAngle=this.penumbraAngle,e.falloffFactor=this.falloffFactor,e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}});t["a"]=a},function(e,t,r){"use strict";var n=r(33),i=function(e,t,r,i){e=e||0,t=t||0,r=r||0,i=i||0,this.array=n["a"].fromValues(e,t,r,i),this._dirty=!0};i.prototype={constructor:i,add:function(e){return n["a"].add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,r,n){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this.array[3]=n,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new i(this.x,this.y,this.z,this.w)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},dist:function(e){return n["a"].dist(this.array,e.array)},distance:function(e){return n["a"].distance(this.array,e.array)},div:function(e){return n["a"].div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return n["a"].divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return n["a"].dot(this.array,e.array)},len:function(){return n["a"].len(this.array)},length:function(){return n["a"].length(this.array)},lerp:function(e,t,r){return n["a"].lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return n["a"].min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return n["a"].max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return n["a"].negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return n["a"].normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return n["a"].random(this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return n["a"].scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return n["a"].sqrDist(this.array,e.array)},squaredDistance:function(e){return n["a"].squaredDistance(this.array,e.array)},sqrLen:function(){return n["a"].sqrLen(this.array)},squaredLength:function(){return n["a"].squaredLength(this.array)},sub:function(e){return n["a"].sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return n["a"].subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return n["a"].transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return n["a"].transformQuat(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var a=Object.defineProperty;if(a){var o=i.prototype;a(o,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),a(o,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),a(o,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),a(o,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}i.add=function(e,t,r){return n["a"].add(e.array,t.array,r.array),e._dirty=!0,e},i.set=function(e,t,r,i,a){n["a"].set(e.array,t,r,i,a),e._dirty=!0},i.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},i.dist=function(e,t){return n["a"].distance(e.array,t.array)},i.distance=i.dist,i.div=function(e,t,r){return n["a"].divide(e.array,t.array,r.array),e._dirty=!0,e},i.divide=i.div,i.dot=function(e,t){return n["a"].dot(e.array,t.array)},i.len=function(e){return n["a"].length(e.array)},i.lerp=function(e,t,r,i){return n["a"].lerp(e.array,t.array,r.array,i),e._dirty=!0,e},i.min=function(e,t,r){return n["a"].min(e.array,t.array,r.array),e._dirty=!0,e},i.max=function(e,t,r){return n["a"].max(e.array,t.array,r.array),e._dirty=!0,e},i.mul=function(e,t,r){return n["a"].multiply(e.array,t.array,r.array),e._dirty=!0,e},i.multiply=i.mul,i.negate=function(e,t){return n["a"].negate(e.array,t.array),e._dirty=!0,e},i.normalize=function(e,t){return n["a"].normalize(e.array,t.array),e._dirty=!0,e},i.random=function(e,t){return n["a"].random(e.array,t),e._dirty=!0,e},i.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r),e._dirty=!0,e},i.scaleAndAdd=function(e,t,r,i){return n["a"].scaleAndAdd(e.array,t.array,r.array,i),e._dirty=!0,e},i.sqrDist=function(e,t){return n["a"].sqrDist(e.array,t.array)},i.squaredDistance=i.sqrDist,i.sqrLen=function(e){return n["a"].sqrLen(e.array)},i.squaredLength=i.sqrLen,i.sub=function(e,t,r){return n["a"].subtract(e.array,t.array,r.array),e._dirty=!0,e},i.subtract=i.sub,i.transformMat4=function(e,t,r){return n["a"].transformMat4(e.array,t.array,r.array),e._dirty=!0,e},i.transformQuat=function(e,t,r){return n["a"].transformQuat(e.array,t.array,r.array),e._dirty=!0,e},t["a"]=i},function(e,t,r){"use strict";var n=r(78),i=function(){this.array=n["a"].create(),this._dirty=!0};i.prototype={constructor:i,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},clone:function(){return(new i).copy(this)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},adjoint:function(){return n["a"].adjoint(this.array,this.array),this._dirty=!0,this},determinant:function(){return n["a"].determinant(this.array)},identity:function(){return n["a"].identity(this.array),this._dirty=!0,this},invert:function(){return n["a"].invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return n["a"].mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return n["a"].multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return n["a"].rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return n["a"].transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},i.adjoint=function(e,t){return n["a"].adjoint(e.array,t.array),e._dirty=!0,e},i.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},i.determinant=function(e){return n["a"].determinant(e.array)},i.identity=function(e){return n["a"].identity(e.array),e._dirty=!0,e},i.invert=function(e,t){return n["a"].invert(e.array,t.array),e._dirty=!0,e},i.mul=function(e,t,r){return n["a"].mul(e.array,t.array,r.array),e._dirty=!0,e},i.multiply=i.mul,i.rotate=function(e,t,r){return n["a"].rotate(e.array,t.array,r),e._dirty=!0,e},i.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r.array),e._dirty=!0,e},i.transpose=function(e,t){return n["a"].transpose(e.array,t.array),e._dirty=!0,e},t["a"]=i},function(e,t,r){"use strict";var n=r(79),i=function(){this.array=n["a"].create(),this._dirty=!0};i.prototype={constructor:i,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},clone:function(){return(new i).copy(this)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return n["a"].determinant(this.array)},identity:function(){return n["a"].identity(this.array),this._dirty=!0,this},invert:function(){return n["a"].invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return n["a"].mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return n["a"].multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return n["a"].rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return n["a"].translate(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},i.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},i.determinant=function(e){return n["a"].determinant(e.array)},i.identity=function(e){return n["a"].identity(e.array),e._dirty=!0,e},i.invert=function(e,t){return n["a"].invert(e.array,t.array),e._dirty=!0,e},i.mul=function(e,t,r){return n["a"].mul(e.array,t.array,r.array),e._dirty=!0,e},i.multiply=i.mul,i.rotate=function(e,t,r){return n["a"].rotate(e.array,t.array,r),e._dirty=!0,e},i.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r.array),e._dirty=!0,e},i.translate=function(e,t,r){return n["a"].translate(e.array,t.array,r.array),e._dirty=!0,e},t["a"]=i},function(e,t,r){"use strict";var n=r(34),i=function(){this.array=n["a"].create(),this._dirty=!0};i.prototype={constructor:i,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return n["a"].adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return(new i).copy(this)},copy:function(e){return n["a"].copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return n["a"].determinant(this.array)},fromMat2d:function(e){return n["a"].fromMat2d(this.array,e.array),this._dirty=!0,this},fromMat4:function(e){return n["a"].fromMat4(this.array,e.array),this._dirty=!0,this},fromQuat:function(e){return n["a"].fromQuat(this.array,e.array),this._dirty=!0,this},identity:function(){return n["a"].identity(this.array),this._dirty=!0,this},invert:function(){return n["a"].invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return n["a"].mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return n["a"].mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return n["a"].multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return n["a"].multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return n["a"].rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return n["a"].scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return n["a"].translate(this.array,this.array,e.array),this._dirty=!0,this},normalFromMat4:function(e){return n["a"].normalFromMat4(this.array,e.array),this._dirty=!0,this},transpose:function(){return n["a"].transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},i.adjoint=function(e,t){return n["a"].adjoint(e.array,t.array),e._dirty=!0,e},i.copy=function(e,t){return n["a"].copy(e.array,t.array),e._dirty=!0,e},i.determinant=function(e){return n["a"].determinant(e.array)},i.identity=function(e){return n["a"].identity(e.array),e._dirty=!0,e},i.invert=function(e,t){return n["a"].invert(e.array,t.array),e},i.mul=function(e,t,r){return n["a"].mul(e.array,t.array,r.array),e._dirty=!0,e},i.multiply=i.mul,i.fromMat2d=function(e,t){return n["a"].fromMat2d(e.array,t.array),e._dirty=!0,e},i.fromMat4=function(e,t){return n["a"].fromMat4(e.array,t.array),e._dirty=!0,e},i.fromQuat=function(e,t){return n["a"].fromQuat(e.array,t.array),e._dirty=!0,e},i.normalFromMat4=function(e,t){return n["a"].normalFromMat4(e.array,t.array),e._dirty=!0,e},i.rotate=function(e,t,r){return n["a"].rotate(e.array,t.array,r),e._dirty=!0,e},i.scale=function(e,t,r){return n["a"].scale(e.array,t.array,r.array),e._dirty=!0,e},i.transpose=function(e,t){return n["a"].transpose(e.array,t.array),e._dirty=!0,e},i.translate=function(e,t,r){return n["a"].translate(e.array,t.array,r.array),e._dirty=!0,e},t["a"]=i},function(e,t,r){"use strict";var n=r(142),i=r.n(n),a={_animators:null,getAnimators:function(){return this._animators=this._animators||[],this._animators},animate:function(e,t){this._animators=this._animators||[];var r,n=this;if(e){for(var a=e.split("."),o=n,s=0,l=a.length;s<l;s++)o&&(o=o[a[s]]);o&&(r=o)}else r=n;if(null==r)throw new Error("Target "+e+" not exists");var u=this._animators,c=new i.a(r,t),h=this;return c.during((function(){h.__zr&&h.__zr.refresh()})).done((function(){var e=u.indexOf(c);e>=0&&u.splice(e,1)})),u.push(c),this.__zr&&this.__zr.animation.addAnimator(c),c},stopAnimation:function(e){this._animators=this._animators||[];for(var t=this._animators,r=t.length,n=0;n<r;n++)t[n].stop(e);return t.length=0,this},addAnimatorsToZr:function(e){if(this._animators)for(var t=0;t<this._animators.length;t++)e.animation.addAnimator(this._animators[t])},removeAnimatorsFromZr:function(e){if(this._animators)for(var t=0;t<this._animators.length;t++)e.animation.removeAnimator(this._animators[t])}};t["a"]=a},function(e,t,r){var n=r(143),i=r(145),a=r(13),o=a.isArrayLike,s=Array.prototype.slice;function l(e,t){return e[t]}function u(e,t,r){e[t]=r}function c(e,t,r){return(t-e)*r+e}function h(e,t,r){return r>.5?t:e}function d(e,t,r,n,i){var a=e.length;if(1==i)for(var o=0;o<a;o++)n[o]=c(e[o],t[o],r);else{var s=a&&e[0].length;for(o=0;o<a;o++)for(var l=0;l<s;l++)n[o][l]=c(e[o][l],t[o][l],r)}}function f(e,t,r){var n=e.length,i=t.length;if(n!==i){var a=n>i;if(a)e.length=i;else for(var o=n;o<i;o++)e.push(1===r?t[o]:s.call(t[o]))}var l=e[0]&&e[0].length;for(o=0;o<e.length;o++)if(1===r)isNaN(e[o])&&(e[o]=t[o]);else for(var u=0;u<l;u++)isNaN(e[o][u])&&(e[o][u]=t[o][u])}function p(e,t,r){if(e===t)return!0;var n=e.length;if(n!==t.length)return!1;if(1===r){for(var i=0;i<n;i++)if(e[i]!==t[i])return!1}else{var a=e[0].length;for(i=0;i<n;i++)for(var o=0;o<a;o++)if(e[i][o]!==t[i][o])return!1}return!0}function m(e,t,r,n,i,a,o,s,l){var u=e.length;if(1==l)for(var c=0;c<u;c++)s[c]=g(e[c],t[c],r[c],n[c],i,a,o);else{var h=e[0].length;for(c=0;c<u;c++)for(var d=0;d<h;d++)s[c][d]=g(e[c][d],t[c][d],r[c][d],n[c][d],i,a,o)}}function g(e,t,r,n,i,a,o){var s=.5*(r-e),l=.5*(n-t);return(2*(t-r)+s+l)*o+(-3*(t-r)-2*s-l)*a+s*i+t}function _(e){if(o(e)){var t=e.length;if(o(e[0])){for(var r=[],n=0;n<t;n++)r.push(s.call(e[n]));return r}return s.call(e)}return e}function v(e){return e[0]=Math.floor(e[0]),e[1]=Math.floor(e[1]),e[2]=Math.floor(e[2]),"rgba("+e.join(",")+")"}function y(e){var t=e[e.length-1].value;return o(t&&t[0])?2:1}function x(e,t,r,a,s,l){var u=e._getter,_=e._setter,x="spline"===t,T=a.length;if(T){var b,w=a[0].value,E=o(w),S=!1,M=!1,A=E?y(a):0;a.sort((function(e,t){return e.time-t.time})),b=a[T-1].time;for(var N=[],C=[],L=a[0].value,P=!0,D=0;D<T;D++){N.push(a[D].time/b);var O=a[D].value;if(E&&p(O,L,A)||!E&&O===L||(P=!1),L=O,"string"==typeof O){var R=i.parse(O);R?(O=R,S=!0):M=!0}C.push(O)}if(l||!P){var I=C[T-1];for(D=0;D<T-1;D++)E?f(C[D],I,A):!isNaN(C[D])||isNaN(I)||M||S||(C[D]=I);E&&f(u(e._target,s),I,A);var F,B,U,z,G,H,k=0,V=0;if(S)var W=[0,0,0,0];var j=function(e,t){var r;if(t<0)r=0;else if(t<V){for(F=Math.min(k+1,T-1),r=F;r>=0;r--)if(N[r]<=t)break;r=Math.min(r,T-2)}else{for(r=k;r<T;r++)if(N[r]>t)break;r=Math.min(r-1,T-2)}k=r,V=t;var n=N[r+1]-N[r];if(0!==n)if(B=(t-N[r])/n,x)if(z=C[r],U=C[0===r?r:r-1],G=C[r>T-2?T-1:r+1],H=C[r>T-3?T-1:r+2],E)m(U,z,G,H,B,B*B,B*B*B,u(e,s),A);else{if(S)i=m(U,z,G,H,B,B*B,B*B*B,W,1),i=v(W);else{if(M)return h(z,G,B);i=g(U,z,G,H,B,B*B,B*B*B)}_(e,s,i)}else if(E)d(C[r],C[r+1],B,u(e,s),A);else{var i;if(S)d(C[r],C[r+1],B,W,1),i=v(W);else{if(M)return h(C[r],C[r+1],B);i=c(C[r],C[r+1],B)}_(e,s,i)}},X=new n({target:e._target,life:b,loop:e._loop,delay:e._delay,onframe:j,ondestroy:r});return t&&"spline"!==t&&(X.easing=t),X}}}var T=function(e,t,r,n){this._tracks={},this._target=e,this._loop=t||!1,this._getter=r||l,this._setter=n||u,this._clipCount=0,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]};T.prototype={when:function(e,t){var r=this._tracks;for(var n in t)if(t.hasOwnProperty(n)){if(!r[n]){r[n]=[];var i=this._getter(this._target,n);if(null==i)continue;0!==e&&r[n].push({time:0,value:_(i)})}r[n].push({time:e,value:t[n]})}return this},during:function(e){return this._onframeList.push(e),this},pause:function(){for(var e=0;e<this._clipList.length;e++)this._clipList[e].pause();this._paused=!0},resume:function(){for(var e=0;e<this._clipList.length;e++)this._clipList[e].resume();this._paused=!1},isPaused:function(){return!!this._paused},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var e=this._doneList,t=e.length,r=0;r<t;r++)e[r].call(this)},start:function(e,t){var r,n=this,i=0,a=function(){i--,i||n._doneCallback()};for(var o in this._tracks)if(this._tracks.hasOwnProperty(o)){var s=x(this,e,a,this._tracks[o],o,t);s&&(this._clipList.push(s),i++,this.animation&&this.animation.addClip(s),r=s)}if(r){var l=r.onframe;r.onframe=function(e,t){l(e,t);for(var r=0;r<n._onframeList.length;r++)n._onframeList[r](e,t)}}return i||this._doneCallback(),this},stop:function(e){for(var t=this._clipList,r=this.animation,n=0;n<t.length;n++){var i=t[n];e&&i.onframe(this._target,1),r&&r.removeClip(i)}t.length=0},delay:function(e){return this._delay=e,this},done:function(e){return e&&this._doneList.push(e),this},getClips:function(){return this._clipList}};var b=T;e.exports=b},function(e,t,r){var n=r(144);function i(e){this._target=e.target,this._life=e.life||1e3,this._delay=e.delay||0,this._initialized=!1,this.loop=null!=e.loop&&e.loop,this.gap=e.gap||0,this.easing=e.easing||"Linear",this.onframe=e.onframe,this.ondestroy=e.ondestroy,this.onrestart=e.onrestart,this._pausedTime=0,this._paused=!1}i.prototype={constructor:i,step:function(e,t){if(this._initialized||(this._startTime=e+this._delay,this._initialized=!0),this._paused)this._pausedTime+=t;else{var r=(e-this._startTime-this._pausedTime)/this._life;if(!(r<0)){r=Math.min(r,1);var i=this.easing,a="string"==typeof i?n[i]:i,o="function"===typeof a?a(r):r;return this.fire("frame",o),1==r?this.loop?(this.restart(e),"restart"):(this._needsRemove=!0,"destroy"):null}}},restart:function(e){var t=(e-this._startTime-this._pausedTime)%this._life;this._startTime=e-t+this.gap,this._pausedTime=0,this._needsRemove=!1},fire:function(e,t){e="on"+e,this[e]&&this[e](this._target,t)},pause:function(){this._paused=!0},resume:function(){this._paused=!1}};var a=i;e.exports=a},function(e,t){var r={linear:function(e){return e},quadraticIn:function(e){return e*e},quadraticOut:function(e){return e*(2-e)},quadraticInOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)},cubicIn:function(e){return e*e*e},cubicOut:function(e){return--e*e*e+1},cubicInOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},quarticIn:function(e){return e*e*e*e},quarticOut:function(e){return 1- --e*e*e*e},quarticInOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},quinticIn:function(e){return e*e*e*e*e},quinticOut:function(e){return--e*e*e*e*e+1},quinticInOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},sinusoidalIn:function(e){return 1-Math.cos(e*Math.PI/2)},sinusoidalOut:function(e){return Math.sin(e*Math.PI/2)},sinusoidalInOut:function(e){return.5*(1-Math.cos(Math.PI*e))},exponentialIn:function(e){return 0===e?0:Math.pow(1024,e-1)},exponentialOut:function(e){return 1===e?1:1-Math.pow(2,-10*e)},exponentialInOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))},circularIn:function(e){return 1-Math.sqrt(1-e*e)},circularOut:function(e){return Math.sqrt(1- --e*e)},circularInOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},elasticIn:function(e){var t,r=.1,n=.4;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=n/4):t=n*Math.asin(1/r)/(2*Math.PI),-r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/n))},elasticOut:function(e){var t,r=.1,n=.4;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=n/4):t=n*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/n)+1)},elasticInOut:function(e){var t,r=.1,n=.4;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=n/4):t=n*Math.asin(1/r)/(2*Math.PI),(e*=2)<1?r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/n)*-.5:r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/n)*.5+1)},backIn:function(e){var t=1.70158;return e*e*((t+1)*e-t)},backOut:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},backInOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)},bounceIn:function(e){return 1-r.bounceOut(1-e)},bounceOut:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bounceInOut:function(e){return e<.5?.5*r.bounceIn(2*e):.5*r.bounceOut(2*e-1)+.5}},n=r;e.exports=n},function(e,t,r){var n=r(60),i={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function a(e){return e=Math.round(e),e<0?0:e>255?255:e}function o(e){return e=Math.round(e),e<0?0:e>360?360:e}function s(e){return e<0?0:e>1?1:e}function l(e){return e.length&&"%"===e.charAt(e.length-1)?a(parseFloat(e)/100*255):a(parseInt(e,10))}function u(e){return e.length&&"%"===e.charAt(e.length-1)?s(parseFloat(e)/100):s(parseFloat(e))}function c(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function h(e,t,r){return e+(t-e)*r}function d(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e}function f(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}var p=new n(20),m=null;function g(e,t){m&&f(m,t),m=p.put(e,m||t.slice())}function _(e,t){if(e){t=t||[];var r=p.get(e);if(r)return f(t,r);e+="";var n=e.replace(/ /g,"").toLowerCase();if(n in i)return f(t,i[n]),g(e,t),t;if("#"!==n.charAt(0)){var a=n.indexOf("("),o=n.indexOf(")");if(-1!==a&&o+1===n.length){var s=n.substr(0,a),c=n.substr(a+1,o-(a+1)).split(","),h=1;switch(s){case"rgba":if(4!==c.length)return void d(t,0,0,0,1);h=u(c.pop());case"rgb":return 3!==c.length?void d(t,0,0,0,1):(d(t,l(c[0]),l(c[1]),l(c[2]),h),g(e,t),t);case"hsla":return 4!==c.length?void d(t,0,0,0,1):(c[3]=u(c[3]),v(c,t),g(e,t),t);case"hsl":return 3!==c.length?void d(t,0,0,0,1):(v(c,t),g(e,t),t);default:return}}d(t,0,0,0,1)}else{if(4===n.length){var m=parseInt(n.substr(1),16);return m>=0&&m<=4095?(d(t,(3840&m)>>4|(3840&m)>>8,240&m|(240&m)>>4,15&m|(15&m)<<4,1),g(e,t),t):void d(t,0,0,0,1)}if(7===n.length){m=parseInt(n.substr(1),16);return m>=0&&m<=16777215?(d(t,(16711680&m)>>16,(65280&m)>>8,255&m,1),g(e,t),t):void d(t,0,0,0,1)}}}}function v(e,t){var r=(parseFloat(e[0])%360+360)%360/360,n=u(e[1]),i=u(e[2]),o=i<=.5?i*(n+1):i+n-i*n,s=2*i-o;return t=t||[],d(t,a(255*c(s,o,r+1/3)),a(255*c(s,o,r)),a(255*c(s,o,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}function y(e){if(e){var t,r,n=e[0]/255,i=e[1]/255,a=e[2]/255,o=Math.min(n,i,a),s=Math.max(n,i,a),l=s-o,u=(s+o)/2;if(0===l)t=0,r=0;else{r=u<.5?l/(s+o):l/(2-s-o);var c=((s-n)/6+l/2)/l,h=((s-i)/6+l/2)/l,d=((s-a)/6+l/2)/l;n===s?t=d-h:i===s?t=1/3+c-d:a===s&&(t=2/3+h-c),t<0&&(t+=1),t>1&&(t-=1)}var f=[360*t,r,u];return null!=e[3]&&f.push(e[3]),f}}function x(e,t){var r=_(e);if(r){for(var n=0;n<3;n++)r[n]=t<0?r[n]*(1-t)|0:(255-r[n])*t+r[n]|0,r[n]>255?r[n]=255:e[n]<0&&(r[n]=0);return N(r,4===r.length?"rgba":"rgb")}}function T(e){var t=_(e);if(t)return((1<<24)+(t[0]<<16)+(t[1]<<8)+ +t[2]).toString(16).slice(1)}function b(e,t,r){if(t&&t.length&&e>=0&&e<=1){r=r||[];var n=e*(t.length-1),i=Math.floor(n),o=Math.ceil(n),l=t[i],u=t[o],c=n-i;return r[0]=a(h(l[0],u[0],c)),r[1]=a(h(l[1],u[1],c)),r[2]=a(h(l[2],u[2],c)),r[3]=s(h(l[3],u[3],c)),r}}var w=b;function E(e,t,r){if(t&&t.length&&e>=0&&e<=1){var n=e*(t.length-1),i=Math.floor(n),o=Math.ceil(n),l=_(t[i]),u=_(t[o]),c=n-i,d=N([a(h(l[0],u[0],c)),a(h(l[1],u[1],c)),a(h(l[2],u[2],c)),s(h(l[3],u[3],c))],"rgba");return r?{color:d,leftIndex:i,rightIndex:o,value:n}:d}}var S=E;function M(e,t,r,n){if(e=_(e),e)return e=y(e),null!=t&&(e[0]=o(t)),null!=r&&(e[1]=u(r)),null!=n&&(e[2]=u(n)),N(v(e),"rgba")}function A(e,t){if(e=_(e),e&&null!=t)return e[3]=s(t),N(e,"rgba")}function N(e,t){if(e&&e.length){var r=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(r+=","+e[3]),t+"("+r+")"}}t.parse=_,t.lift=x,t.toHex=T,t.fastLerp=b,t.fastMapToColor=w,t.lerp=E,t.mapToColor=S,t.modifyHSL=M,t.modifyAlpha=A,t.stringify=N},function(e,t,r){"use strict";t["a"]="\n@export clay.util.rand\nhighp float rand(vec2 uv) {\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n return fract(sin(sn) * c);\n}\n@end\n@export clay.util.calculate_attenuation\nuniform float attenuationFactor : 5.0;\nfloat lightAttenuation(float dist, float range)\n{\n float attenuation = 1.0;\n attenuation = dist*dist/(range*range+1.0);\n float att_s = attenuationFactor;\n attenuation = 1.0/(attenuation*att_s+1.0);\n att_s = 1.0/(att_s+1.0);\n attenuation = attenuation - att_s;\n attenuation /= 1.0 - att_s;\n return clamp(attenuation, 0.0, 1.0);\n}\n@end\n@export clay.util.edge_factor\n#ifdef SUPPORT_STANDARD_DERIVATIVES\nfloat edgeFactor(float width)\n{\n vec3 d = fwidth(v_Barycentric);\n vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n return min(min(a3.x, a3.y), a3.z);\n}\n#else\nfloat edgeFactor(float width)\n{\n return 1.0;\n}\n#endif\n@end\n@export clay.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n vec4 res = fract(depth * bitShifts);\n res -= res.xxyz * bit_mask;\n return res;\n}\n@end\n@export clay.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n return dot(color, bitShifts);\n}\n@end\n@export clay.util.float\n@import clay.util.encode_float\n@import clay.util.decode_float\n@end\n@export clay.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n return range * rgbm.rgb * rgbm.a;\n}\n@end\n@export clay.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n if (dot(color, color) == 0.0) {\n return vec4(0.0);\n }\n vec4 rgbm;\n color /= range;\n rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n rgbm.rgb = color / rgbm.a;\n return rgbm;\n}\n@end\n@export clay.util.rgbm\n@import clay.util.rgbm_decode\n@import clay.util.rgbm_encode\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n return vec4(RGBMDecode(color, 8.12), 1.0);\n#else\n return color;\n#endif\n}\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n return RGBMEncode(color.xyz, 8.12);\n#else\n return color;\n#endif\n}\n@end\n@export clay.util.srgb\nvec4 sRGBToLinear(in vec4 value) {\n return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\nvec4 linearTosRGB(in vec4 value) {\n return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n@export clay.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D skinMatricesTexture : ignore;\nuniform float skinMatricesTextureSize: ignore;\nmat4 getSkinMatrix(sampler2D tex, float idx) {\n float j = idx * 4.0;\n float x = mod(j, skinMatricesTextureSize);\n float y = floor(j / skinMatricesTextureSize) + 0.5;\n vec2 scale = vec2(skinMatricesTextureSize);\n return mat4(\n texture2D(tex, vec2(x + 0.5, y) / scale),\n texture2D(tex, vec2(x + 1.5, y) / scale),\n texture2D(tex, vec2(x + 2.5, y) / scale),\n texture2D(tex, vec2(x + 3.5, y) / scale)\n );\n}\nmat4 getSkinMatrix(float idx) {\n return getSkinMatrix(skinMatricesTexture, idx);\n}\n#else\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n return skinMatrix[int(idx)];\n}\n#endif\n#endif\n@end\n@export clay.chunk.skin_matrix\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\nif (weight.y > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n@export clay.util.parallax_correct\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n vec3 first = (boxMax - pos) / dir;\n vec3 second = (boxMin - pos) / dir;\n vec3 further = max(first, second);\n float dist = min(further.x, min(further.y, further.z));\n vec3 fixedPos = pos + dir * dist;\n vec3 boxCenter = (boxMax + boxMin) * 0.5;\n return normalize(fixedPos - boxCenter);\n}\n@end\n@export clay.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n float eye = step(0.5, coord.x) * 0.5;\n vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n return texture2D(texture, coordClamped);\n}\n@end\n@export clay.util.ACES\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n@end"},function(e,t,r){"use strict";t["a"]="\n@export ecgl.common.transformUniforms\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n@end\n\n@export ecgl.common.attributes\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n@end\n\n@export ecgl.common.uv.header\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nuniform vec2 detailUvRepeat : [1.0, 1.0];\nuniform vec2 detailUvOffset : [0.0, 0.0];\n\nvarying vec2 v_Texcoord;\nvarying vec2 v_DetailTexcoord;\n@end\n\n@export ecgl.common.uv.main\nv_Texcoord = texcoord * uvRepeat + uvOffset;\nv_DetailTexcoord = texcoord * detailUvRepeat + detailUvOffset;\n@end\n\n@export ecgl.common.uv.fragmentHeader\nvarying vec2 v_Texcoord;\nvarying vec2 v_DetailTexcoord;\n@end\n\n\n@export ecgl.common.albedo.main\n\n vec4 albedoTexel = vec4(1.0);\n#ifdef DIFFUSEMAP_ENABLED\n albedoTexel = texture2D(diffuseMap, v_Texcoord);\n #ifdef SRGB_DECODE\n albedoTexel = sRGBToLinear(albedoTexel);\n #endif\n#endif\n\n#ifdef DETAILMAP_ENABLED\n vec4 detailTexel = texture2D(detailMap, v_DetailTexcoord);\n #ifdef SRGB_DECODE\n detailTexel = sRGBToLinear(detailTexel);\n #endif\n albedoTexel.rgb = mix(albedoTexel.rgb, detailTexel.rgb, detailTexel.a);\n albedoTexel.a = detailTexel.a + (1.0 - detailTexel.a) * albedoTexel.a;\n#endif\n\n@end\n\n@export ecgl.common.wireframe.vertexHeader\n\n#ifdef WIREFRAME_QUAD\nattribute vec4 barycentric;\nvarying vec4 v_Barycentric;\n#elif defined(WIREFRAME_TRIANGLE)\nattribute vec3 barycentric;\nvarying vec3 v_Barycentric;\n#endif\n\n@end\n\n@export ecgl.common.wireframe.vertexMain\n\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\n v_Barycentric = barycentric;\n#endif\n\n@end\n\n\n@export ecgl.common.wireframe.fragmentHeader\n\nuniform float wireframeLineWidth : 1;\nuniform vec4 wireframeLineColor: [0, 0, 0, 0.5];\n\n#ifdef WIREFRAME_QUAD\nvarying vec4 v_Barycentric;\nfloat edgeFactor () {\n vec4 d = fwidth(v_Barycentric);\n vec4 a4 = smoothstep(vec4(0.0), d * wireframeLineWidth, v_Barycentric);\n return min(min(min(a4.x, a4.y), a4.z), a4.w);\n}\n#elif defined(WIREFRAME_TRIANGLE)\nvarying vec3 v_Barycentric;\nfloat edgeFactor () {\n vec3 d = fwidth(v_Barycentric);\n vec3 a3 = smoothstep(vec3(0.0), d * wireframeLineWidth, v_Barycentric);\n return min(min(a3.x, a3.y), a3.z);\n}\n#endif\n\n@end\n\n\n@export ecgl.common.wireframe.fragmentMain\n\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\n if (wireframeLineWidth > 0.) {\n vec4 lineColor = wireframeLineColor;\n#ifdef SRGB_DECODE\n lineColor = sRGBToLinear(lineColor);\n#endif\n\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor()) * lineColor.a);\n }\n#endif\n@end\n\n\n\n\n@export ecgl.common.bumpMap.header\n\n#ifdef BUMPMAP_ENABLED\nuniform sampler2D bumpMap;\nuniform float bumpScale : 1.0;\n\n\nvec3 bumpNormal(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)\n{\n vec2 dSTdx = dFdx(v_Texcoord);\n vec2 dSTdy = dFdy(v_Texcoord);\n\n float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;\n float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;\n float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;\n\n vec3 vSigmaX = dFdx(surfPos);\n vec3 vSigmaY = dFdy(surfPos);\n vec3 vN = surfNormal;\n\n vec3 R1 = cross(vSigmaY, vN);\n vec3 R2 = cross(vN, vSigmaX);\n\n float fDet = dot(vSigmaX, R1);\n\n vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);\n return normalize(abs(fDet) * baseNormal - vGrad);\n\n}\n#endif\n\n@end\n\n@export ecgl.common.normalMap.vertexHeader\n\n#ifdef NORMALMAP_ENABLED\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n@end\n\n@export ecgl.common.normalMap.vertexMain\n\n#ifdef NORMALMAP_ENABLED\n if (dot(tangent, tangent) > 0.0) {\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n }\n#endif\n\n@end\n\n\n@export ecgl.common.normalMap.fragmentHeader\n\n#ifdef NORMALMAP_ENABLED\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n@end\n\n@export ecgl.common.normalMap.fragmentMain\n#ifdef NORMALMAP_ENABLED\n if (dot(v_Tangent, v_Tangent) > 0.0) {\n vec3 normalTexel = texture2D(normalMap, v_DetailTexcoord).xyz;\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n N = normalize(tbn * N);\n }\n }\n#endif\n@end\n\n\n\n@export ecgl.common.vertexAnimation.header\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute vec3 prevNormal;\nuniform float percent;\n#endif\n\n@end\n\n@export ecgl.common.vertexAnimation.main\n\n#ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n vec3 norm = mix(prevNormal, normal, percent);\n#else\n vec3 pos = position;\n vec3 norm = normal;\n#endif\n\n@end\n\n\n@export ecgl.common.ssaoMap.header\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n@end\n\n@export ecgl.common.ssaoMap.main\n float ao = 1.0;\n#ifdef SSAOMAP_ENABLED\n ao = texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\n#endif\n@end\n\n\n\n\n@export ecgl.common.diffuseLayer.header\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\nuniform float layerDiffuseIntensity[LAYER_DIFFUSEMAP_COUNT];\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\n#endif\n\n@end\n\n@export ecgl.common.emissiveLayer.header\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\nuniform float layerEmissionIntensity[LAYER_EMISSIVEMAP_COUNT];\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\n#endif\n\n@end\n\n@export ecgl.common.layers.header\n@import ecgl.common.diffuseLayer.header\n@import ecgl.common.emissiveLayer.header\n@end\n\n@export ecgl.common.diffuseLayer.main\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\n for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\n float intensity = layerDiffuseIntensity[_idx_];\n vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\n #ifdef SRGB_DECODE\n texel2 = sRGBToLinear(texel2);\n #endif\n albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb * intensity, texel2.a);\n albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\n }}\n#endif\n\n@end\n\n@export ecgl.common.emissiveLayer.main\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\n for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++)\n {{\n vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * layerEmissionIntensity[_idx_];\n #ifdef SRGB_DECODE\n texel2 = sRGBToLinear(texel2);\n #endif\n float intensity = layerEmissionIntensity[_idx_];\n gl_FragColor.rgb += texel2.rgb * texel2.a * intensity;\n }}\n#endif\n\n@end\n"},function(e,t,r){"use strict";t["a"]="@export ecgl.color.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\n@import ecgl.common.uv.header\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position: POSITION;\n\n@import ecgl.common.wireframe.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nuniform float percent : 1.0;\n#endif\n\nvoid main()\n{\n#ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n#else\n vec3 pos = position;\n#endif\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n @import ecgl.common.uv.main\n\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n\n @import ecgl.common.wireframe.vertexMain\n\n}\n\n@end\n\n@export ecgl.color.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n\nuniform sampler2D diffuseMap;\nuniform sampler2D detailMap;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n@import ecgl.common.layers.header\n\n@import ecgl.common.uv.fragmentHeader\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color);\n#else\n gl_FragColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n#endif\n\n @import ecgl.common.albedo.main\n\n @import ecgl.common.diffuseLayer.main\n\n gl_FragColor *= albedoTexel;\n\n @import ecgl.common.emissiveLayer.main\n\n @import ecgl.common.wireframe.fragmentMain\n\n}\n@end"},function(e,t,r){"use strict";t["a"]="/**\n * http: */\n\n@export ecgl.lambert.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n\n@import ecgl.common.attributes\n\n@import ecgl.common.wireframe.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\n\n@import ecgl.common.vertexAnimation.header\n\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n @import ecgl.common.uv.main\n\n @import ecgl.common.vertexAnimation.main\n\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\n\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n\n @import ecgl.common.wireframe.vertexMain\n}\n\n@end\n\n\n@export ecgl.lambert.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n\n#define NORMAL_UP_AXIS 1\n#define NORMAL_FRONT_AXIS 2\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\nuniform sampler2D detailMap;\n\n@import ecgl.common.layers.header\n\nuniform float emissionIntensity: 1.0;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n\n@import ecgl.common.ssaoMap.header\n\n@import ecgl.common.bumpMap.header\n\n@import clay.util.srgb\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.plugin.compute_shadow_map\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color);\n#else\n gl_FragColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n #ifdef SRGB_DECODE\n gl_FragColor *= sRGBToLinear(v_Color);\n #else\n gl_FragColor *= v_Color;\n #endif\n#endif\n\n @import ecgl.common.albedo.main\n\n @import ecgl.common.diffuseLayer.main\n\n gl_FragColor *= albedoTexel;\n\n vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n ambientFactor = dot(v_Normal, N);\n#endif\n\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\n\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n @import ecgl.common.ssaoMap.main\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\n {\n diffuseColor += ambientLightColor[i] * ambientFactor * ao;\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\n }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0);\n }\n#endif\n\n gl_FragColor.rgb *= diffuseColor;\n\n @import ecgl.common.emissiveLayer.main\n\n @import ecgl.common.wireframe.fragmentMain\n}\n\n@end"},function(e,t,r){"use strict";t["a"]="@export ecgl.realistic.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n@import ecgl.common.attributes\n\n\n@import ecgl.common.wireframe.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\n#ifdef NORMALMAP_ENABLED\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n@import ecgl.common.vertexAnimation.header\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n\n @import ecgl.common.uv.main\n\n @import ecgl.common.vertexAnimation.main\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\n\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n\n#ifdef NORMALMAP_ENABLED\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n\n @import ecgl.common.wireframe.vertexMain\n\n}\n\n@end\n\n\n\n@export ecgl.realistic.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n#define PI 3.14159265358979\n#define ROUGHNESS_CHANEL 0\n#define METALNESS_CHANEL 1\n\n#define NORMAL_UP_AXIS 1\n#define NORMAL_FRONT_AXIS 2\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\n\nuniform sampler2D detailMap;\nuniform sampler2D metalnessMap;\nuniform sampler2D roughnessMap;\n\n@import ecgl.common.layers.header\n\nuniform float emissionIntensity: 1.0;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform float metalness : 0.0;\nuniform float roughness : 0.5;\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import clay.header.ambient_cubemap_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n@import ecgl.common.normalMap.fragmentHeader\n\n@import ecgl.common.ssaoMap.header\n\n@import ecgl.common.bumpMap.header\n\n@import clay.util.srgb\n\n@import clay.util.rgbm\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.plugin.compute_shadow_map\n\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n\nfloat D_Phong(float g, float ndh) {\n float a = pow(8192.0, g);\n return (a + 2.0) / 8.0 * pow(ndh, a);\n}\n\nvoid main()\n{\n vec4 albedoColor = color;\n\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n#ifdef VERTEX_COLOR\n #ifdef SRGB_DECODE\n albedoColor *= sRGBToLinear(v_Color);\n #else\n albedoColor *= v_Color;\n #endif\n#endif\n\n @import ecgl.common.albedo.main\n\n @import ecgl.common.diffuseLayer.main\n\n albedoColor *= albedoTexel;\n\n float m = metalness;\n\n#ifdef METALNESSMAP_ENABLED\n float m2 = texture2D(metalnessMap, v_DetailTexcoord)[METALNESS_CHANEL];\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n#endif\n\n vec3 baseColor = albedoColor.rgb;\n albedoColor.rgb = baseColor * (1.0 - m);\n vec3 specFactor = mix(vec3(0.04), baseColor, m);\n\n float g = 1.0 - roughness;\n\n#ifdef ROUGHNESSMAP_ENABLED\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n#endif\n\n vec3 N = v_Normal;\n\n#ifdef DOUBLE_SIDED\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n ambientFactor = dot(v_Normal, N);\n#endif\n\n@import ecgl.common.normalMap.fragmentMain\n\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\n\n vec3 diffuseTerm = vec3(0.0);\n vec3 specularTerm = vec3(0.0);\n\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n vec3 fresnelTerm = F_Schlick(ndv, specFactor);\n\n @import ecgl.common.ssaoMap.main\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += ambientLightColor[_idx_] * ambientFactor * ao;\n }}\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\n }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n {{\n vec3 L = -directionalLightDirection[_idx_];\n vec3 lc = directionalLightColor[_idx_];\n\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, normalize(L)), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsDir[_idx_];\n }\n#endif\n\n vec3 li = lc * ndl * shadowContrib;\n\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }}\n#endif\n\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n vec3 L = reflect(-V, N);\n L = vec3(L.x, L[NORMAL_UP_AXIS], L[NORMAL_FRONT_AXIS]);\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\n float bias2 = rough2 * 5.0;\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n vec3 envWeight2 = specFactor * brdfParam2.x + brdfParam2.y;\n vec3 envTexel2;\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n {{\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);\n specularTerm += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2 * ao;\n }}\n#endif\n\n gl_FragColor.rgb = albedoColor.rgb * diffuseTerm + specularTerm;\n gl_FragColor.a = albedoColor.a;\n\n#ifdef SRGB_ENCODE\n gl_FragColor = linearTosRGB(gl_FragColor);\n#endif\n\n @import ecgl.common.emissiveLayer.main\n\n @import ecgl.common.wireframe.fragmentMain\n}\n\n@end"},function(e,t,r){"use strict";t["a"]="@export ecgl.hatching.vertex\n\n@import ecgl.realistic.vertex\n\n@end\n\n\n@export ecgl.hatching.fragment\n\n#define NORMAL_UP_AXIS 1\n#define NORMAL_FRONT_AXIS 2\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform vec4 color : [0.0, 0.0, 0.0, 1.0];\nuniform vec4 paperColor : [1.0, 1.0, 1.0, 1.0];\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n\n@import ecgl.common.ssaoMap.header\n\n@import ecgl.common.bumpMap.header\n\n@import clay.util.srgb\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.plugin.compute_shadow_map\n\nuniform sampler2D hatch1;\nuniform sampler2D hatch2;\nuniform sampler2D hatch3;\nuniform sampler2D hatch4;\nuniform sampler2D hatch5;\nuniform sampler2D hatch6;\n\nfloat shade(in float tone) {\n vec4 c = vec4(1. ,1., 1., 1.);\n float step = 1. / 6.;\n vec2 uv = v_DetailTexcoord;\n if (tone <= step / 2.0) {\n c = mix(vec4(0.), texture2D(hatch6, uv), 12. * tone);\n }\n else if (tone <= step) {\n c = mix(texture2D(hatch6, uv), texture2D(hatch5, uv), 6. * tone);\n }\n if(tone > step && tone <= 2. * step){\n c = mix(texture2D(hatch5, uv), texture2D(hatch4, uv) , 6. * (tone - step));\n }\n if(tone > 2. * step && tone <= 3. * step){\n c = mix(texture2D(hatch4, uv), texture2D(hatch3, uv), 6. * (tone - 2. * step));\n }\n if(tone > 3. * step && tone <= 4. * step){\n c = mix(texture2D(hatch3, uv), texture2D(hatch2, uv), 6. * (tone - 3. * step));\n }\n if(tone > 4. * step && tone <= 5. * step){\n c = mix(texture2D(hatch2, uv), texture2D(hatch1, uv), 6. * (tone - 4. * step));\n }\n if(tone > 5. * step){\n c = mix(texture2D(hatch1, uv), vec4(1.), 6. * (tone - 5. * step));\n }\n\n return c.r;\n}\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n vec4 inkColor = sRGBToLinear(color);\n#else\n vec4 inkColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n #ifdef SRGB_DECODE\n inkColor *= sRGBToLinear(v_Color);\n #else\n inkColor *= v_Color;\n #endif\n#endif\n\n vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n float tone = 0.0;\n\n float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n ambientFactor = dot(v_Normal, N);\n#endif\n\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\n\n @import ecgl.common.ssaoMap.main\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\n {\n tone += dot(ambientLightColor[i], w) * ambientFactor * ao;\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n tone += dot(calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_], w) * ao;\n }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n float lightTone = dot(directionalLightColor[i], w);\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\n\n tone += lightTone * clamp(ndl, 0.0, 1.0);\n }\n#endif\n\n gl_FragColor = mix(inkColor, paperColor, shade(clamp(tone, 0.0, 1.0)));\n }\n@end\n"},function(e,t,r){"use strict";t["a"]="@export ecgl.sm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nuniform float percent : 1.0;\n#endif\n\nvarying vec4 v_ViewPosition;\nvarying vec2 v_Texcoord;\n\nvoid main(){\n\n#ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n#else\n vec3 pos = position;\n#endif\n\n v_ViewPosition = worldViewProjection * vec4(pos, 1.0);\n gl_Position = v_ViewPosition;\n\n v_Texcoord = texcoord;\n\n}\n@end\n\n\n\n@export ecgl.sm.depth.fragment\n\n@import clay.sm.depth.fragment\n\n@end"},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=["bar3D","line3D","map3D","scatter3D","surface","lines3D","scatterGL","scatter3D"];function o(e,t){if(e&&e[t]&&(e[t].normal||e[t].emphasis)){var r=e[t].normal,n=e[t].emphasis;r&&(e[t]=r),n&&(e.emphasis=e.emphasis||{},e.emphasis[t]=n)}}function s(e){o(e,"itemStyle"),o(e,"lineStyle"),o(e,"areaStyle"),o(e,"label")}function l(e){e&&(e instanceof Array||(e=[e]),i.a.util.each(e,(function(e){if(e.axisLabel){var t=e.axisLabel;i.a.util.extend(t,t.textStyle),t.textStyle=null}})))}t["a"]=function(e){i.a.util.each(e.series,(function(t){i.a.util.indexOf(a,t.type)>=0&&(s(t),"mapbox"===t.coordinateSystem&&(t.coordinateSystem="mapbox3D",e.mapbox3D=e.mapbox))})),l(e.xAxis3D),l(e.yAxis3D),l(e.zAxis3D),l(e.grid3D),o(e.geo3D)}},function(e,t,r){"use strict";r(155),r(159),r(160),r(167);var n=r(0),i=r.n(n);i.a.registerAction({type:"grid3DChangeCamera",event:"grid3dcamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"grid3D",query:e},(function(t){t.setView(e)}))})),i.a.registerAction({type:"grid3DShowAxisPointer",event:"grid3dshowaxispointer",update:"grid3D:showAxisPointer"},(function(e,t){})),i.a.registerAction({type:"grid3DHideAxisPointer",event:"grid3dhideaxispointer",update:"grid3D:hideAxisPointer"},(function(e,t){}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(156),o=i.a.extendComponentModel({type:"cartesian3DAxis",axis:null,getCoordSysModel:function(){return this.ecModel.queryComponents({mainType:"grid3D",index:this.option.gridIndex,id:this.option.gridId})[0]}});function s(e,t){return t.type||(t.data?"category":"value")}i.a.helper.mixinAxisModelCommonMethods(o),Object(a["a"])("x",o,s,{name:"X"}),Object(a["a"])("y",o,s,{name:"Y"}),Object(a["a"])("z",o,s,{name:"Z"})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(157),o=r(158),s=r.n(o),l=["value","category","time","log"];t["a"]=function(e,t,r,n){i.a.util.each(l,(function(o){t.extend({type:e+"Axis3D."+o,__ordinalMeta:null,mergeDefaultAndTheme:function(t,n){var a=n.getTheme();i.a.util.merge(t,a.get(o+"Axis3D")),i.a.util.merge(t,this.getDefaultOption()),t.type=r(e,t)},optionUpdated:function(){var e=this.option;"category"===e.type&&(this.__ordinalMeta=s.a.createByAxisModel(this))},getCategories:function(){if("category"===this.option.type)return this.__ordinalMeta.categories},getOrdinalMeta:function(){return this.__ordinalMeta},defaultOption:i.a.util.merge(i.a.util.clone(a["a"][o+"Axis3D"]),n||{},!0)})})),t.superClass.registerSubTypeDefaulter(e+"Axis3D",i.a.util.curry(r,e))}},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a={show:!0,grid3DIndex:0,inverse:!1,name:"",nameLocation:"middle",nameTextStyle:{fontSize:16},nameGap:20,axisPointer:{},axisLine:{},axisTick:{},axisLabel:{},splitArea:{}},o=i.a.util.merge({boundaryGap:!0,axisTick:{alignWithLabel:!1,interval:"auto"},axisLabel:{interval:"auto"},axisPointer:{label:{show:!1}}},a),s=i.a.util.merge({boundaryGap:[0,0],splitNumber:5,axisPointer:{label:{}}},a),l=i.a.util.defaults({scale:!0,min:"dataMin",max:"dataMax"},s),u=i.a.util.defaults({logBase:10},s);u.scale=!0,t["a"]={categoryAxis3D:o,valueAxis3D:s,timeAxis3D:l,logAxis3D:u}},function(e,t,r){var n=r(13),i=n.createHashMap,a=n.isObject,o=n.map;function s(e){this.categories=e.categories||[],this._needCollect=e.needCollect,this._deduplication=e.deduplication,this._map}s.createByAxisModel=function(e){var t=e.option,r=t.data,n=r&&o(r,c);return new s({categories:n,needCollect:!n,deduplication:!1!==t.dedplication})};var l=s.prototype;function u(e){return e._map||(e._map=i(e.categories))}function c(e){return a(e)&&null!=e.value?e.value:e+""}l.getOrdinal=function(e){return u(this).get(e)},l.parseAndCollect=function(e){var t,r=this._needCollect;if("string"!==typeof e&&!r)return e;if(r&&!this._deduplication)return t=this.categories.length,this.categories[t]=e,t;var n=u(this);return t=n.get(e),null==t&&(r?(t=this.categories.length,this.categories[t]=e,n.set(e,t)):t=NaN),t};var h=s;e.exports=h},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(44),o=r(28),s=r(29),l=i.a.extendComponentModel({type:"grid3D",dependencies:["xAxis3D","yAxis3D","zAxis3D"],defaultOption:{show:!0,zlevel:-10,left:0,top:0,width:"100%",height:"100%",environment:"auto",boxWidth:100,boxHeight:100,boxDepth:100,axisPointer:{show:!0,lineStyle:{color:"rgba(0, 0, 0, 0.8)",width:1},label:{show:!0,formatter:null,margin:8,textStyle:{fontSize:14,color:"#fff",backgroundColor:"rgba(0,0,0,0.5)",padding:3,borderRadius:3}}},axisLine:{show:!0,lineStyle:{color:"#333",width:2,type:"solid"}},axisTick:{show:!0,inside:!1,length:3,lineStyle:{width:1}},axisLabel:{show:!0,inside:!1,rotate:0,margin:8,textStyle:{fontSize:12}},splitLine:{show:!0,lineStyle:{color:["#ccc"],width:1,type:"solid"}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}},light:{main:{alpha:30,beta:40},ambient:{intensity:.4}},viewControl:{alpha:20,beta:40,autoRotate:!1,distance:200,minDistance:40,maxDistance:400}}});i.a.util.merge(l.prototype,a["a"]),i.a.util.merge(l.prototype,o["a"]),i.a.util.merge(l.prototype,s["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(45),s=r(25),l=r(2),u=r(81),c=r(30),h=r(162),d=r(164),f=r(63),p=r(46),m=l["a"].firstNotNull;a["a"].Shader.import(p["a"]),["x","y","z"].forEach((function(e){i.a.extendComponentView({type:e+"Axis3D"})}));var g={x:0,y:2,z:1};i.a.extendComponentView({type:"grid3D",__ecgl__:!0,init:function(e,t){var r=[["y","z","x",-1,"left"],["y","z","x",1,"right"],["x","y","z",-1,"bottom"],["x","y","z",1,"top"],["x","z","y",-1,"far"],["x","z","y",1,"near"]],n=["x","y","z"],i=new a["a"].Material({shader:a["a"].createShader("ecgl.color"),depthMask:!1,transparent:!0}),l=new a["a"].Material({shader:a["a"].createShader("ecgl.meshLines3D"),depthMask:!1,transparent:!0});i.define("fragment","DOUBLE_SIDED"),i.define("both","VERTEX_COLOR"),this.groupGL=new a["a"].Node,this._control=new o["a"]({zr:t.getZr()}),this._control.init(),this._faces=r.map((function(e){var t=new h["a"](e,l,i);return this.groupGL.add(t.rootNode),t}),this),this._axes=n.map((function(e){var t=new d["a"](e,l);return this.groupGL.add(t.rootNode),t}),this);var p=t.getDevicePixelRatio();this._axisLabelSurface=new u["a"]({width:256,height:256,devicePixelRatio:p}),this._axisLabelSurface.onupdate=function(){t.getZr().refresh()},this._axisPointerLineMesh=new a["a"].Mesh({geometry:new s["a"]({useNativeLine:!1}),material:l,castShadow:!1,ignorePicking:!0,renderOrder:3}),this.groupGL.add(this._axisPointerLineMesh),this._axisPointerLabelsSurface=new u["a"]({width:128,height:128,devicePixelRatio:p}),this._axisPointerLabelsMesh=new f["a"]({ignorePicking:!0,renderOrder:4,castShadow:!1}),this._axisPointerLabelsMesh.material.set("textureAtlas",this._axisPointerLabelsSurface.getTexture()),this.groupGL.add(this._axisPointerLabelsMesh),this._lightRoot=new a["a"].Node,this._sceneHelper=new c["a"],this._sceneHelper.initLight(this._lightRoot)},render:function(e,t,r){this._model=e,this._api=r;var n=e.coordinateSystem;n.viewGL.add(this._lightRoot),e.get("show")?n.viewGL.add(this.groupGL):n.viewGL.remove(this.groupGL);var i=this._control;i.setViewGL(n.viewGL);var a=e.getModel("viewControl");i.setFromViewControlModel(a,0),this._axisLabelSurface.clear(),i.off("update"),e.get("show")&&(this._faces.forEach((function(n){n.update(e,t,r)}),this),this._axes.forEach((function(t){t.update(e,this._axisLabelSurface,r)}),this)),i.on("update",this._onCameraChange.bind(this,e,r),this),this._sceneHelper.setScene(n.viewGL.scene),this._sceneHelper.updateLight(e),n.viewGL.setPostEffect(e.getModel("postEffect"),r),n.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._initMouseHandler(e)},afterRender:function(e,t,r,n){var i=n.renderer;this._sceneHelper.updateAmbientCubemap(i,e,r),this._sceneHelper.updateSkybox(i,e,r)},showAxisPointer:function(e,t,r,n){this._doShowAxisPointer(),this._updateAxisPointer(n.value)},hideAxisPointer:function(e,t,r,n){this._doHideAxisPointer()},_initMouseHandler:function(e){var t=e.coordinateSystem,r=t.viewGL;e.get("show")&&e.get("axisPointer.show")?r.on("mousemove",this._updateAxisPointerOnMousePosition,this):r.off("mousemove",this._updateAxisPointerOnMousePosition)},_updateAxisPointerOnMousePosition:function(e){if(!e.target){for(var t,r=this._model,n=r.coordinateSystem,i=n.viewGL,o=i.castRay(e.offsetX,e.offsetY,new a["a"].Ray),s=0;s<this._faces.length;s++){var l=this._faces[s];if(!l.rootNode.invisible){l.plane.normal.dot(i.camera.worldTransform.z)<0&&l.plane.normal.negate();var u=o.intersectPlane(l.plane);if(u){var c=n.getAxis(l.faceInfo[0]),h=n.getAxis(l.faceInfo[1]),d=g[l.faceInfo[0]],f=g[l.faceInfo[1]];c.contain(u.array[d])&&h.contain(u.array[f])&&(t=u)}}}if(t){var p=n.pointToData(t.array,[],!0);this._updateAxisPointer(p),this._doShowAxisPointer()}else this._doHideAxisPointer()}},_onCameraChange:function(e,t){e.get("show")&&(this._updateFaceVisibility(),this._updateAxisLinePosition());var r=this._control;t.dispatchAction({type:"grid3DChangeCamera",alpha:r.getAlpha(),beta:r.getBeta(),distance:r.getDistance(),center:r.getCenter(),from:this.uid,grid3DId:e.id})},_updateFaceVisibility:function(){var e=this._control.getCamera(),t=new a["a"].Vector3;e.update();for(var r=0;r<this._faces.length/2;r++){for(var n=[],i=0;i<2;i++){var o=this._faces[2*r+i];o.rootNode.getWorldPosition(t),t.transformMat4(e.viewMatrix),n[i]=t.z}var s=n[0]>n[1]?0:1,l=this._faces[2*r+s],u=this._faces[2*r+1-s];l.rootNode.invisible=!0,u.rootNode.invisible=!1}},_updateAxisLinePosition:function(){var e=this._model.coordinateSystem,t=e.getAxis("x"),r=e.getAxis("y"),n=e.getAxis("z"),i=n.getExtentMax(),a=n.getExtentMin(),o=t.getExtentMin(),s=t.getExtentMax(),l=r.getExtentMax(),u=r.getExtentMin(),c=this._axes[0].rootNode,h=this._axes[1].rootNode,d=this._axes[2].rootNode,f=this._faces,p=f[4].rootNode.invisible?u:l,m=f[2].rootNode.invisible?i:a,g=f[0].rootNode.invisible?o:s,_=f[2].rootNode.invisible?i:a,v=f[0].rootNode.invisible?s:o,y=f[4].rootNode.invisible?u:l;c.rotation.identity(),h.rotation.identity(),d.rotation.identity(),f[4].rootNode.invisible&&(this._axes[0].flipped=!0,c.rotation.rotateX(Math.PI)),f[0].rootNode.invisible&&(this._axes[1].flipped=!0,h.rotation.rotateZ(Math.PI)),f[4].rootNode.invisible&&(this._axes[2].flipped=!0,d.rotation.rotateY(Math.PI)),c.position.set(0,m,p),h.position.set(g,_,0),d.position.set(v,0,y),c.update(),h.update(),d.update(),this._updateAxisLabelAlign()},_updateAxisLabelAlign:function(){var e=this._control.getCamera(),t=[new a["a"].Vector4,new a["a"].Vector4],r=new a["a"].Vector4;this.groupGL.getWorldPosition(r),r.w=1,r.transformMat4(e.viewMatrix).transformMat4(e.projectionMatrix),r.x/=r.w,r.y/=r.w,this._axes.forEach((function(n){for(var i=n.axisLineCoords,a=(n.labelsMesh.geometry,0);a<t.length;a++)t[a].setArray(i[a]),t[a].w=1,t[a].transformMat4(n.rootNode.worldTransform).transformMat4(e.viewMatrix).transformMat4(e.projectionMatrix),t[a].x/=t[a].w,t[a].y/=t[a].w;var o,s,l=t[1].x-t[0].x,u=t[1].y-t[0].y,c=(t[1].x+t[0].x)/2,h=(t[1].y+t[0].y)/2;Math.abs(u/l)<.5?(o="center",s=h>r.y?"bottom":"top"):(s="middle",o=c>r.x?"left":"right"),n.setSpriteAlign(o,s,this._api)}),this)},_doShowAxisPointer:function(){this._axisPointerLineMesh.invisible&&(this._axisPointerLineMesh.invisible=!1,this._axisPointerLabelsMesh.invisible=!1,this._api.getZr().refresh())},_doHideAxisPointer:function(){this._axisPointerLineMesh.invisible||(this._axisPointerLineMesh.invisible=!0,this._axisPointerLabelsMesh.invisible=!0,this._api.getZr().refresh())},_updateAxisPointer:function(e){var t=this._model.coordinateSystem,r=t.dataToPoint(e),n=this._axisPointerLineMesh,i=n.geometry,o=this._model.getModel("axisPointer"),s=this._api.getDevicePixelRatio();function u(e){return l["a"].firstNotNull(e.model.get("axisPointer.show"),o.get("show"))}function c(e){var t=e.model.getModel("axisPointer",o),r=t.getModel("lineStyle"),n=a["a"].parseColor(r.get("color")),i=m(r.get("width"),1),s=m(r.get("opacity"),1);return n[3]*=s,{color:n,lineWidth:i}}i.convertToDynamicArray(!0);for(var h=0;h<this._faces.length;h++){var d=this._faces[h];if(!d.rootNode.invisible){for(var f=d.faceInfo,p=f[3]<0?t.getAxis(f[2]).getExtentMin():t.getAxis(f[2]).getExtentMax(),_=g[f[2]],v=0;v<2;v++){var y=f[v],x=f[1-v],T=t.getAxis(y),b=t.getAxis(x);if(u(T)){var w=[0,0,0],E=[0,0,0],S=g[y],M=g[x];w[S]=E[S]=r[S],w[_]=E[_]=p,w[M]=b.getExtentMin(),E[M]=b.getExtentMax();var A=c(T);i.addLine(w,E,A.color,A.lineWidth*s)}}if(u(t.getAxis(f[2]))){w=r.slice(),E=r.slice();E[_]=p;A=c(t.getAxis(f[2]));i.addLine(w,E,A.color,A.lineWidth*s)}}}i.convertToTypedArray(),this._updateAxisPointerLabelsMesh(e),this._api.getZr().refresh()},_updateAxisPointerLabelsMesh:function(e){var t=this._model,r=this._axisPointerLabelsMesh,n=this._axisPointerLabelsSurface,a=t.coordinateSystem,o=t.getModel("axisPointer");r.geometry.convertToDynamicArray(!0),n.clear();var s={x:"y",y:"x",z:"y"};this._axes.forEach((function(t,l){var u=a.getAxis(t.dim),c=u.model,h=c.getModel("axisPointer",o),d=h.getModel("label"),f=h.get("lineStyle.color");if(d.get("show")&&h.get("show")){var p=e[l],m=d.get("formatter"),_=u.scale.getLabel(p);if(null!=m)_=m(_,e);else if("interval"===u.scale.type||"log"===u.scale.type){var v=i.a.number.getPrecisionSafe(u.scale.getTicks()[0]);_=p.toFixed(v+2)}var y=d.getModel("textStyle"),x=y.get("color"),T=new i.a.graphic.Text;i.a.graphic.setTextStyle(T.style,y,{text:_,textFill:x||f,textAlign:"left",textVerticalAlign:"top"});var b=n.add(T),w=T.getBoundingRect(),E=this._api.getDevicePixelRatio(),S=t.rootNode.position.toArray(),M=g[s[t.dim]];S[M]+=(t.flipped?-1:1)*d.get("margin"),S[g[t.dim]]=u.dataToCoord(e[l]),r.geometry.addSprite(S,[w.width*E,w.height*E],b,t.textAlign,t.textVerticalAlign)}}),this),n.getZr().refreshImmediately(),r.material.set("uvScale",n.getCoordsScale()),r.geometry.convertToTypedArray()},dispose:function(){this.groupGL.removeAll(),this._control.dispose()}})},function(e,t,r){"use strict";var n=r(70),i=r(12),a=r(33),o=r(78),s=r(79),l=r(34),u=r(21),c=r(55);t["a"]={vec2:n["a"],vec3:i["a"],vec4:a["a"],mat2:o["a"],mat2d:s["a"],mat3:l["a"],mat4:u["a"],quat:c["a"]}},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(2),s=r(25),l=r(163),u=o["a"].firstNotNull,c={x:0,y:2,z:1};function h(e,t,r,n){var i=[0,0,0],a=n<0?r.getExtentMin():r.getExtentMax();i[c[r.dim]]=a,e.position.setArray(i),e.rotation.identity(),t.distance=-Math.abs(a),t.normal.set(0,0,0),"x"===r.dim?(e.rotation.rotateY(n*Math.PI/2),t.normal.x=-n):"z"===r.dim?(e.rotation.rotateX(-n*Math.PI/2),t.normal.y=-n):(n>0&&e.rotation.rotateY(Math.PI),t.normal.z=-n)}function d(e,t,r){this.rootNode=new a["a"].Node;var n=new a["a"].Mesh({geometry:new s["a"]({useNativeLine:!1}),material:t,castShadow:!1,ignorePicking:!0,$ignorePicking:!0,renderOrder:1}),i=new a["a"].Mesh({geometry:new l["a"],material:r,castShadow:!1,culling:!1,ignorePicking:!0,$ignorePicking:!0,renderOrder:0});this.rootNode.add(i),this.rootNode.add(n),this.faceInfo=e,this.plane=new a["a"].Plane,this.linesMesh=n,this.quadsMesh=i}d.prototype.update=function(e,t,r){var n=e.coordinateSystem,i=[n.getAxis(this.faceInfo[0]),n.getAxis(this.faceInfo[1])],a=this.linesMesh.geometry,o=this.quadsMesh.geometry;a.convertToDynamicArray(!0),o.convertToDynamicArray(!0),this._updateSplitLines(a,i,e,r),this._udpateSplitAreas(o,i,e,r),a.convertToTypedArray(),o.convertToTypedArray();var s=n.getAxis(this.faceInfo[2]);h(this.rootNode,this.plane,s,this.faceInfo[3])},d.prototype._updateSplitLines=function(e,t,r,n){var o=n.getDevicePixelRatio();t.forEach((function(n,s){var l=n.model,c=t[1-s].getExtent();if(!n.scale.isBlank()){var h=l.getModel("splitLine",r.getModel("splitLine"));if(h.get("show")){var d=h.getModel("lineStyle"),f=d.get("color"),p=u(d.get("opacity"),1),m=u(d.get("width"),1);f=i.a.util.isArray(f)?f:[f];for(var g=n.getTicksCoords({tickModel:h}),_=0,v=0;v<g.length;v++){var y=g[v].coord,x=a["a"].parseColor(f[_%f.length]);x[3]*=p;var T=[0,0,0],b=[0,0,0];T[s]=b[s]=y,T[1-s]=c[0],b[1-s]=c[1],e.addLine(T,b,x,m*o),_++}}}}))},d.prototype._udpateSplitAreas=function(e,t,r,n){t.forEach((function(n,o){var s=n.model,l=t[1-o].getExtent();if(!n.scale.isBlank()){var c=s.getModel("splitArea",r.getModel("splitArea"));if(c.get("show")){var h=c.getModel("areaStyle"),d=h.get("color"),f=u(h.get("opacity"),1);d=i.a.util.isArray(d)?d:[d];for(var p=n.getTicksCoords({tickModel:c,clamp:!0}),m=0,g=[0,0,0],_=[0,0,0],v=0;v<p.length;v++){var y=p[v].coord,x=[0,0,0],T=[0,0,0];if(x[o]=T[o]=y,x[1-o]=l[0],T[1-o]=l[1],0!==v){var b=a["a"].parseColor(d[m%d.length]);b[3]*=f,e.addQuad([g,x,T,_],b),g=x,_=T,m++}else g=x,_=T}}}}))},t["a"]=d},function(e,t,r){"use strict";var n=r(15),i=r(0),a=r.n(i),o=r(38),s=r(6),l=s["a"].vec3,u=n["a"].extend((function(){return{segmentScale:1,useNativeLine:!0,attributes:{position:new n["a"].Attribute("position","float",3,"POSITION"),normal:new n["a"].Attribute("normal","float",3,"NORMAL"),color:new n["a"].Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setQuadCount:function(e){var t=this.attributes,r=this.getQuadVertexCount()*e,n=this.getQuadTriangleCount()*e;this.vertexCount!==r&&(t.position.init(r),t.normal.init(r),t.color.init(r)),this.triangleCount!==n&&(this.indices=r>65535?new Uint32Array(3*n):new Uint16Array(3*n))},getQuadVertexCount:function(){return 4},getQuadTriangleCount:function(){return 2},addQuad:function(){var e=l.create(),t=l.create(),r=l.create(),n=[0,3,1,3,2,1];return function(i,a){var o=this.attributes.position,s=this.attributes.normal,u=this.attributes.color;l.sub(e,i[1],i[0]),l.sub(t,i[2],i[1]),l.cross(r,e,t),l.normalize(r,r);for(var c=0;c<4;c++)o.set(this._vertexOffset+c,i[c]),u.set(this._vertexOffset+c,a),s.set(this._vertexOffset+c,r);var h=3*this._faceOffset;for(c=0;c<6;c++)this.indices[h+c]=n[c]+this._vertexOffset;this._vertexOffset+=4,this._faceOffset+=2}}()});a.a.util.defaults(u.prototype,o["a"]),t["a"]=u},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(25),s=r(2),l=r(63),u=s["a"].firstNotNull,c={x:0,y:2,z:1};function h(e,t){var r=new a["a"].Mesh({geometry:new o["a"]({useNativeLine:!1}),material:t,castShadow:!1,ignorePicking:!0,renderOrder:2}),n=new l["a"];n.material.depthMask=!1;var i=new a["a"].Node;i.add(r),i.add(n),this.rootNode=i,this.dim=e,this.linesMesh=r,this.labelsMesh=n,this.axisLineCoords=null,this.labelElements=[]}var d={x:"y",y:"x",z:"y"};h.prototype.update=function(e,t,r){var n=e.coordinateSystem,o=n.getAxis(this.dim),s=this.linesMesh.geometry,l=this.labelsMesh.geometry;s.convertToDynamicArray(!0),l.convertToDynamicArray(!0);var h=o.model,f=o.getExtent(),p=r.getDevicePixelRatio(),m=h.getModel("axisLine",e.getModel("axisLine")),g=h.getModel("axisTick",e.getModel("axisTick")),_=h.getModel("axisLabel",e.getModel("axisLabel")),v=m.get("lineStyle.color");if(m.get("show")){var y=m.getModel("lineStyle"),x=[0,0,0],T=[0,0,0],b=c[o.dim];x[b]=f[0],T[b]=f[1],this.axisLineCoords=[x,T];var w=a["a"].parseColor(v),E=u(y.get("width"),1),S=u(y.get("opacity"),1);w[3]*=S,s.addLine(x,T,w,E*p)}if(g.get("show")){var M=g.getModel("lineStyle"),A=a["a"].parseColor(u(M.get("color"),v));E=u(M.get("width"),1);A[3]*=u(M.get("opacity"),1);for(var N=o.getTicksCoords(),C=g.get("length"),L=0;L<N.length;L++){var P=N[L].coord,D=(x=[0,0,0],T=[0,0,0],b=c[o.dim],c[d[o.dim]]);x[b]=T[b]=P,T[D]=C,s.addLine(x,T,A,E*p)}}this.labelElements=[];p=r.getDevicePixelRatio();if(_.get("show")){N=o.getTicksCoords();var O=h.get("data"),R=_.get("margin"),I=o.getViewLabels();for(L=0;L<I.length;L++){var F=I[L].tickValue,B=I[L].formattedLabel,U=I[L].rawLabel,z=(P=o.dataToCoord(F),[0,0,0]);b=c[o.dim],D=c[d[o.dim]];z[b]=z[b]=P,z[D]=R;var G=_;O&&O[F]&&O[F].textStyle&&(G=new i.a.Model(O[F].textStyle,_,h.ecModel));var H=u(G.get("color"),v),k=new i.a.graphic.Text;i.a.graphic.setTextStyle(k.style,G,{text:B,textFill:"function"===typeof H?H("category"===o.type?U:"value"===o.type?F+"":F,L):H,textVerticalAlign:"top",textAlign:"left"});var V=t.add(k),W=k.getBoundingRect();l.addSprite(z,[W.width*p,W.height*p],V),this.labelElements.push(k)}}if(h.get("name")){var j=h.getModel("nameTextStyle"),X=(z=[0,0,0],b=c[o.dim],D=c[d[o.dim]],u(j.get("color"),v)),q=j.get("borderColor");E=j.get("borderWidth");z[b]=z[b]=(f[0]+f[1])/2,z[D]=h.get("nameGap");k=new i.a.graphic.Text;i.a.graphic.setTextStyle(k.style,j,{text:h.get("name"),textFill:X,textStroke:q,lineWidth:E});V=t.add(k),W=k.getBoundingRect();l.addSprite(z,[W.width*p,W.height*p],V),k.__idx=this.labelElements.length,this.nameLabelElement=k}this.labelsMesh.material.set("textureAtlas",t.getTexture()),this.labelsMesh.material.set("uvScale",t.getCoordsScale()),s.convertToTypedArray(),l.convertToTypedArray()},h.prototype.setSpriteAlign=function(e,t,r){for(var n=r.getDevicePixelRatio(),i=this.labelsMesh.geometry,a=0;a<this.labelElements.length;a++){var o=this.labelElements[a],s=o.getBoundingRect();i.setSpriteAlign(a,[s.width*n,s.height*n],e,t)}var l=this.nameLabelElement;if(l){s=l.getBoundingRect();i.setSpriteAlign(l.__idx,[s.width*n,s.height*n],e,t),i.dirty()}this.textAlign=e,this.textVerticalAlign=t},t["a"]=h},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(15),o=r(38),s=[0,1,2,0,2,3],l=a["a"].extend((function(){return{attributes:{position:new a["a"].Attribute("position","float",3,"POSITION"),texcoord:new a["a"].Attribute("texcoord","float",2,"TEXCOORD_0"),offset:new a["a"].Attribute("offset","float",2),color:new a["a"].Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setSpriteCount:function(e){this._spriteCount=e;var t=4*e,r=2*e;this.vertexCount!==t&&(this.attributes.position.init(t),this.attributes.offset.init(t),this.attributes.color.init(t)),this.triangleCount!==r&&(this.indices=t>65535?new Uint32Array(3*r):new Uint16Array(3*r))},setSpriteAlign:function(e,t,r,n,i){var a,o,s,l;switch(null==r&&(r="left"),null==n&&(n="top"),i=i||0,r){case"left":a=i,s=t[0]+i;break;case"center":case"middle":a=-t[0]/2,s=t[0]/2;break;case"right":a=-t[0]-i,s=-i;break}switch(n){case"bottom":o=i,l=t[1]+i;break;case"middle":o=-t[1]/2,l=t[1]/2;break;case"top":o=-t[1]-i,l=-i;break}var u=4*e,c=this.attributes.offset;c.set(u,[a,l]),c.set(u+1,[s,l]),c.set(u+2,[s,o]),c.set(u+3,[a,o])},addSprite:function(e,t,r,n,i,a){var o=this._vertexOffset;this.setSprite(this._vertexOffset/4,e,t,r,n,i,a);for(var l=0;l<s.length;l++)this.indices[3*this._faceOffset+l]=s[l]+o;return this._faceOffset+=2,this._vertexOffset+=4,o/4},setSprite:function(e,t,r,n,i,a,o){for(var s=4*e,l=this.attributes,u=0;u<4;u++)l.position.set(s+u,t);var c=l.texcoord;c.set(s,[n[0][0],n[0][1]]),c.set(s+1,[n[1][0],n[0][1]]),c.set(s+2,[n[1][0],n[1][1]]),c.set(s+3,[n[0][0],n[1][1]]),this.setSpriteAlign(e,r,i,a,o)}});i.a.util.defaults(l.prototype,o["a"]),t["a"]=l},function(e,t,r){"use strict";t["a"]="@export ecgl.labels.vertex\n\nattribute vec3 position: POSITION;\nattribute vec2 texcoord: TEXCOORD_0;\nattribute vec2 offset;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n vec4 proj = worldViewProjection * vec4(position, 1.0);\n\n vec2 screen = (proj.xy / abs(proj.w) + 1.0) * 0.5 * viewport.zw;\n\n screen += offset;\n\n proj.xy = (screen / viewport.zw - 0.5) * 2.0 * abs(proj.w);\n gl_Position = proj;\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n v_Texcoord = texcoord;\n}\n@end\n\n\n@export ecgl.labels.fragment\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\nuniform sampler2D textureAtlas;\nuniform vec2 uvScale: [1.0, 1.0];\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\nvarying float v_Miter;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n gl_FragColor = vec4(color, alpha) * texture2D(textureAtlas, v_Texcoord * uvScale);\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n#endif\n}\n\n@end"},function(e,t,r){"use strict";var n=r(168),i=r(170),a=r(0),o=r.n(a),s=r(47),l=r.n(s),u=r(22),c=r(2);function h(e,t){var r=e.getBoxLayoutParams(),n=l.a.getLayoutRect(r,{width:t.getWidth(),height:t.getHeight()});n.y=t.getHeight()-n.y-n.height,this.viewGL.setViewport(n.x,n.y,n.width,n.height,t.getDevicePixelRatio());var i=e.get("boxWidth"),a=e.get("boxHeight"),o=e.get("boxDepth");["x","y","z"].forEach((function(t){if(!this.getAxis(t))throw new Error("Grid"+e.id+" don't have "+t+"Axis")}),this),this.getAxis("x").setExtent(-i/2,i/2),this.getAxis("y").setExtent(o/2,-o/2),this.getAxis("z").setExtent(-a/2,a/2),this.size=[i,a,o]}function d(e,t){var r={};function n(e,t){r[e]=r[e]||[1/0,-1/0],r[e][0]=Math.min(t[0],r[e][0]),r[e][1]=Math.max(t[1],r[e][1])}e.eachSeries((function(e){if(e.coordinateSystem===this){var t=e.getData();["x","y","z"].forEach((function(e){t.mapDimension(e,!0).forEach((function(r){n(e,t.getDataExtent(r,!0))}))}))}}),this),["xAxis3D","yAxis3D","zAxis3D"].forEach((function(t){e.eachComponent(t,(function(e){var n=t.charAt(0),a=e.getReferringComponents("grid3D")[0],s=a.coordinateSystem;if(s===this){var l=s.getAxis(n);if(l)console.warn("Can't have two %s in one grid3D",t);else{var u=o.a.helper.createScale(r[n]||[1/0,-1/0],e);l=new i["a"](n,u),l.type=e.get("type");var c="category"===l.type;l.onBand=c&&e.get("boundaryGap"),l.inverse=e.get("inverse"),e.axis=l,l.model=e,l.getLabelModel=function(){return e.getModel("axisLabel",a.getModel("axisLabel"))},l.getTickModel=function(){return e.getModel("axisTick",a.getModel("axisTick"))},s.addAxis(l)}}}),this)}),this),this.resize(this.model,t)}var f={dimensions:n["a"].prototype.dimensions,create:function(e,t){var r=[];e.eachComponent("grid3D",(function(e){e.__viewGL=e.__viewGL||new u["a"];var t=new n["a"];t.model=e,t.viewGL=e.__viewGL,e.coordinateSystem=t,r.push(t),t.resize=h,t.update=d}));var i=["xAxis3D","yAxis3D","zAxis3D"];function a(e,t){return i.map((function(r){var n=e.getReferringComponents(r)[0];if(null==n&&(n=t.getComponent(r)),!n)throw new Error(r+' "'+c["a"].firstNotNull(e.get(r+"Index"),e.get(r+"Id"),0)+'" not found');return n}))}return e.eachSeries((function(t){if("cartesian3D"===t.get("coordinateSystem")){var r=t.getReferringComponents("grid3D")[0];if(null==r){var n=a(t,e);r=n[0].getCoordSysModel();n.forEach((function(e){var t=e.getCoordSysModel();if(!t)throw new Error('grid3D "'+c["a"].firstNotNull(e.get("gridIndex"),e.get("gridId"),0)+'" not found');if(t!==r)throw new Error("xAxis3D, yAxis3D, zAxis3D must use the same grid")}))}var i=r.coordinateSystem;t.coordinateSystem=i}})),r}};o.a.registerCoordinateSystem("grid3D",f)},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(169),o=r.n(a);function s(e){o.a.call(this,e),this.size=[0,0,0]}s.prototype={constructor:s,type:"cartesian3D",dimensions:["x","y","z"],model:null,containPoint:function(e){return this.getAxis("x").contain(e[0])&&this.getAxis("y").contain(e[2])&&this.getAxis("z").contain(e[1])},containData:function(e){return this.getAxis("x").containData(e[0])&&this.getAxis("y").containData(e[1])&&this.getAxis("z").containData(e[2])},dataToPoint:function(e,t,r){return t=t||[],t[0]=this.getAxis("x").dataToCoord(e[0],r),t[2]=this.getAxis("y").dataToCoord(e[1],r),t[1]=this.getAxis("z").dataToCoord(e[2],r),t},pointToData:function(e,t,r){return t=t||[],t[0]=this.getAxis("x").coordToData(e[0],r),t[1]=this.getAxis("y").coordToData(e[2],r),t[2]=this.getAxis("z").coordToData(e[1],r),t}},i.a.util.inherits(s,o.a),t["a"]=s},function(e,t,r){var n=r(13);function i(e){return this._axes[e]}var a=function(e){this._axes={},this._dimList=[],this.name=e||""};a.prototype={constructor:a,type:"cartesian",getAxis:function(e){return this._axes[e]},getAxes:function(){return n.map(this._dimList,i,this)},getAxesByScale:function(e){return e=e.toLowerCase(),n.filter(this.getAxes(),(function(t){return t.scale.type===e}))},addAxis:function(e){var t=e.dim;this._axes[t]=e,this._dimList.push(t)},dataToCoord:function(e){return this._dataCoordConvert(e,"dataToCoord")},coordToData:function(e){return this._dataCoordConvert(e,"coordToData")},_dataCoordConvert:function(e,t){for(var r=this._dimList,n=e instanceof Array?[]:{},i=0;i<r.length;i++){var a=r[i],o=this._axes[a];n[a]=o[t](e[a])}return n}};var o=a;e.exports=o},function(e,t,r){"use strict";var n=r(0),i=r.n(n);function a(e,t,r){i.a.Axis.call(this,e,t,r)}a.prototype={constructor:a,getExtentMin:function(){var e=this._extent;return Math.min(e[0],e[1])},getExtentMax:function(){var e=this._extent;return Math.max(e[0],e[1])},calculateCategoryInterval:function(){return Math.floor(this.scale.count()/8)}},i.a.util.inherits(a,i.a.Axis),t["a"]=a},function(e,t,r){var n=r(13),i=r(172),a=r(85);function o(e){return isNaN(e)?"-":(e=(e+"").split("."),e[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g,"$1,")+(e.length>1?"."+e[1]:""))}function s(e,t){return e=(e||"").toLowerCase().replace(/-(.)/g,(function(e,t){return t.toUpperCase()})),t&&e&&(e=e.charAt(0).toUpperCase()+e.slice(1)),e}var l=n.normalizeCssArray,u=/([&<>"'])/g,c={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};function h(e){return null==e?"":(e+"").replace(u,(function(e,t){return c[t]}))}var d=["a","b","c","d","e","f","g"],f=function(e,t){return"{"+e+(null==t?"":t)+"}"};function p(e,t,r){n.isArray(t)||(t=[t]);var i=t.length;if(!i)return"";for(var a=t[0].$vars||[],o=0;o<a.length;o++){var s=d[o];e=e.replace(f(s),f(s,0))}for(var l=0;l<i;l++)for(var u=0;u<a.length;u++){var c=t[l][a[u]];e=e.replace(f(d[u],l),r?h(c):c)}return e}function m(e,t,r){return n.each(t,(function(t,n){e=e.replace("{"+n+"}",r?h(t):t)})),e}function g(e,t){e=n.isString(e)?{color:e,extraCssText:t}:e||{};var r=e.color,i=e.type;t=e.extraCssText;return r?"subItem"===i?'<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:'+h(r)+";"+(t||"")+'"></span>':'<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:'+h(r)+";"+(t||"")+'"></span>':""}function _(e,t){return e+="","0000".substr(0,t-e.length)+e}function v(e,t,r){"week"!==e&&"month"!==e&&"quarter"!==e&&"half-year"!==e&&"year"!==e||(e="MM-dd\nyyyy");var n=a.parseDate(t),i=r?"UTC":"",o=n["get"+i+"FullYear"](),s=n["get"+i+"Month"]()+1,l=n["get"+i+"Date"](),u=n["get"+i+"Hours"](),c=n["get"+i+"Minutes"](),h=n["get"+i+"Seconds"](),d=n["get"+i+"Milliseconds"]();return e=e.replace("MM",_(s,2)).replace("M",s).replace("yyyy",o).replace("yy",o%100).replace("dd",_(l,2)).replace("d",l).replace("hh",_(u,2)).replace("h",u).replace("mm",_(c,2)).replace("m",c).replace("ss",_(h,2)).replace("s",h).replace("SSS",_(d,3)),e}function y(e){return e?e.charAt(0).toUpperCase()+e.substr(1):e}var x=i.truncateText,T=i.getBoundingRect;t.addCommas=o,t.toCamelCase=s,t.normalizeCssArray=l,t.encodeHTML=h,t.formatTpl=p,t.formatTplSimple=m,t.getTooltipMarker=g,t.formatTime=v,t.capitalFirst=y,t.truncateText=x,t.getTextRect=T},function(e,t,r){var n=r(82),i=r(173),a=r(13),o=a.getContext,s=a.extend,l=a.retrieve2,u=a.retrieve3,c=a.trim,h={},d=0,f=5e3,p=/\{([a-zA-Z0-9_]+)\|([^}]*)\}/g,m="12px sans-serif",g={};function _(e,t){g[e]=t}function v(e,t){t=t||m;var r=e+":"+t;if(h[r])return h[r];for(var n=(e+"").split("\n"),i=0,a=0,o=n.length;a<o;a++)i=Math.max(L(n[a],t).width,i);return d>f&&(d=0,h={}),d++,h[r]=i,i}function y(e,t,r,n,i,a,o){return a?T(e,t,r,n,i,a,o):x(e,t,r,n,i,o)}function x(e,t,r,i,a,o){var s=P(e,t,a,o),l=v(e,t);a&&(l+=a[1]+a[3]);var u=s.outerHeight,c=b(0,l,r),h=w(0,u,i),d=new n(c,h,l,u);return d.lineHeight=s.lineHeight,d}function T(e,t,r,i,a,o,s){var l=D(e,{rich:o,truncate:s,font:t,textAlign:r,textPadding:a}),u=l.outerWidth,c=l.outerHeight,h=b(0,u,r),d=w(0,c,i);return new n(h,d,u,c)}function b(e,t,r){return"right"===r?e-=t:"center"===r&&(e-=t/2),e}function w(e,t,r){return"middle"===r?e-=t/2:"bottom"===r&&(e-=t),e}function E(e,t,r){var n=t.x,i=t.y,a=t.height,o=t.width,s=a/2,l="left",u="top";switch(e){case"left":n-=r,i+=s,l="right",u="middle";break;case"right":n+=r+o,i+=s,u="middle";break;case"top":n+=o/2,i-=r,l="center",u="bottom";break;case"bottom":n+=o/2,i+=a+r,l="center";break;case"inside":n+=o/2,i+=s,l="center",u="middle";break;case"insideLeft":n+=r,i+=s,u="middle";break;case"insideRight":n+=o-r,i+=s,l="right",u="middle";break;case"insideTop":n+=o/2,i+=r,l="center";break;case"insideBottom":n+=o/2,i+=a-r,l="center",u="bottom";break;case"insideTopLeft":n+=r,i+=r;break;case"insideTopRight":n+=o-r,i+=r,l="right";break;case"insideBottomLeft":n+=r,i+=a-r,u="bottom";break;case"insideBottomRight":n+=o-r,i+=a-r,l="right",u="bottom";break}return{x:n,y:i,textAlign:l,textVerticalAlign:u}}function S(e,t,r,n,i){if(!t)return"";var a=(e+"").split("\n");i=M(t,r,n,i);for(var o=0,s=a.length;o<s;o++)a[o]=A(a[o],i);return a.join("\n")}function M(e,t,r,n){n=s({},n),n.font=t;r=l(r,"...");n.maxIterations=l(n.maxIterations,2);var i=n.minChar=l(n.minChar,0);n.cnCharWidth=v("国",t);var a=n.ascCharWidth=v("a",t);n.placeholder=l(n.placeholder,"");for(var o=e=Math.max(0,e-1),u=0;u<i&&o>=a;u++)o-=a;var c=v(r);return c>o&&(r="",c=0),o=e-c,n.ellipsis=r,n.ellipsisWidth=c,n.contentWidth=o,n.containerWidth=e,n}function A(e,t){var r=t.containerWidth,n=t.font,i=t.contentWidth;if(!r)return"";var a=v(e,n);if(a<=r)return e;for(var o=0;;o++){if(a<=i||o>=t.maxIterations){e+=t.ellipsis;break}var s=0===o?N(e,i,t.ascCharWidth,t.cnCharWidth):a>0?Math.floor(e.length*i/a):0;e=e.substr(0,s),a=v(e,n)}return""===e&&(e=t.placeholder),e}function N(e,t,r,n){for(var i=0,a=0,o=e.length;a<o&&i<t;a++){var s=e.charCodeAt(a);i+=0<=s&&s<=127?r:n}return a}function C(e){return v("国",e)}function L(e,t){return g.measureText(e,t)}function P(e,t,r,n){null!=e&&(e+="");var i=C(t),a=e?e.split("\n"):[],o=a.length*i,s=o;if(r&&(s+=r[0]+r[2]),e&&n){var l=n.outerHeight,u=n.outerWidth;if(null!=l&&s>l)e="",a=[];else if(null!=u)for(var c=M(u-(r?r[1]+r[3]:0),t,n.ellipsis,{minChar:n.minChar,placeholder:n.placeholder}),h=0,d=a.length;h<d;h++)a[h]=A(a[h],c)}return{lines:a,height:o,outerHeight:s,lineHeight:i}}function D(e,t){var r={lines:[],width:0,height:0};if(null!=e&&(e+=""),!e)return r;var n,a=p.lastIndex=0;while(null!=(n=p.exec(e))){var o=n.index;o>a&&O(r,e.substring(a,o)),O(r,n[2],n[1]),a=p.lastIndex}a<e.length&&O(r,e.substring(a,e.length));var s=r.lines,c=0,h=0,d=[],f=t.textPadding,m=t.truncate,g=m&&m.outerWidth,_=m&&m.outerHeight;f&&(null!=g&&(g-=f[1]+f[3]),null!=_&&(_-=f[0]+f[2]));for(var y=0;y<s.length;y++){for(var x=s[y],T=0,b=0,w=0;w<x.tokens.length;w++){var E=x.tokens[w],M=E.styleName&&t.rich[E.styleName]||{},A=E.textPadding=M.textPadding,N=E.font=M.font||t.font,L=E.textHeight=l(M.textHeight,C(N));if(A&&(L+=A[0]+A[2]),E.height=L,E.lineHeight=u(M.textLineHeight,t.textLineHeight,L),E.textAlign=M&&M.textAlign||t.textAlign,E.textVerticalAlign=M&&M.textVerticalAlign||"middle",null!=_&&c+E.lineHeight>_)return{lines:[],width:0,height:0};E.textWidth=v(E.text,N);var P=M.textWidth,D=null==P||"auto"===P;if("string"===typeof P&&"%"===P.charAt(P.length-1))E.percentWidth=P,d.push(E),P=0;else{if(D){P=E.textWidth;var R=M.textBackgroundColor,I=R&&R.image;I&&(I=i.findExistImage(I),i.isImageReady(I)&&(P=Math.max(P,I.width*L/I.height)))}var F=A?A[1]+A[3]:0;P+=F;var B=null!=g?g-b:null;null!=B&&B<P&&(!D||B<F?(E.text="",E.textWidth=P=0):(E.text=S(E.text,B-F,N,m.ellipsis,{minChar:m.minChar}),E.textWidth=v(E.text,N),P=E.textWidth+F))}b+=E.width=P,M&&(T=Math.max(T,E.lineHeight))}x.width=b,x.lineHeight=T,c+=T,h=Math.max(h,b)}r.outerWidth=r.width=l(t.textWidth,h),r.outerHeight=r.height=l(t.textHeight,c),f&&(r.outerWidth+=f[1]+f[3],r.outerHeight+=f[0]+f[2]);for(y=0;y<d.length;y++){E=d[y];var U=E.percentWidth;E.width=parseInt(U,10)/100*h}return r}function O(e,t,r){for(var n=""===t,i=t.split("\n"),a=e.lines,o=0;o<i.length;o++){var s=i[o],l={styleName:r,text:s,isLineHolder:!s&&!n};if(o)a.push({tokens:[l]});else{var u=(a[a.length-1]||(a[0]={tokens:[]})).tokens,c=u.length;1===c&&u[0].isLineHolder?u[0]=l:(s||!c||n)&&u.push(l)}}}function R(e){var t=(e.fontSize||e.fontFamily)&&[e.fontStyle,e.fontWeight,(e.fontSize||12)+"px",e.fontFamily||"sans-serif"].join(" ");return t&&c(t)||e.textFont||e.font}g.measureText=function(e,t){var r=o();return r.font=t||m,r.measureText(e)},t.DEFAULT_FONT=m,t.$override=_,t.getWidth=v,t.getBoundingRect=y,t.adjustTextX=b,t.adjustTextY=w,t.adjustTextPositionOnRect=E,t.truncateText=S,t.getLineHeight=C,t.measureText=L,t.parsePlainText=P,t.parseRichText=D,t.makeFont=R},function(e,t,r){var n=r(60),i=new n(50);function a(e){if("string"===typeof e){var t=i.get(e);return t&&t.image}return e}function o(e,t,r,n,a){if(e){if("string"===typeof e){if(t&&t.__zrImageSrc===e||!r)return t;var o=i.get(e),u={hostEl:r,cb:n,cbPayload:a};return o?(t=o.image,!l(t)&&o.pending.push(u)):(!t&&(t=new Image),t.onload=s,i.put(e,t.__cachedImgObj={image:t,pending:[u]}),t.src=t.__zrImageSrc=e),t}return e}return t}function s(){var e=this.__cachedImgObj;this.onload=this.__cachedImgObj=null;for(var t=0;t<e.pending.length;t++){var r=e.pending[t],n=r.cb;n&&n(this,r.cbPayload),r.hostEl.dirty()}e.pending.length=0}function l(e){return e&&e.width&&e.height}t.findExistImage=a,t.createOrUpdateImage=o,t.isImageReady=l},function(e,t,r){"use strict";var n=r(7),i=r(11),a=r(3),o=r(18),s=r(59),l=r(9),u=r(52),c=r(8),h=r(19),d=r(10),f=r(4),p=r(5),m=r(27),g=r(41),_=r(37),v=r(16),y=r(86),x=r(21),T=r(175),b=["px","nx","py","ny","pz","nz"];function w(e,t,r){if("alphaMap"===r)return e.material.get("diffuseMap");if("alphaCutoff"===r){if(e.material.isDefined("fragment","ALPHA_TEST")&&e.material.get("diffuseMap")){var n=e.material.get("alphaCutoff");return n||0}return 0}return t.get(r)}function E(e,t){var r=e.material,n=t.material;return r.get("diffuseMap")!==n.get("diffuseMap")||(r.get("alphaCutoff")||0)!==(n.get("alphaCutoff")||0)}c["a"]["import"](T["a"]);var S=n["a"].extend((function(){return{softShadow:S.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"highp",_lastRenderNotCastShadow:!1,_frameBuffer:new d["a"],_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_depthMaterials:{},_distanceMaterials:{},_receivers:[],_lightsCastShadow:[],_lightCameras:{},_lightMaterials:{},_texturePool:new y["a"]}}),(function(){this._gaussianPassH=new v["a"]({fragment:c["a"].source("clay.compositor.gaussian_blur")}),this._gaussianPassV=new v["a"]({fragment:c["a"].source("clay.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new v["a"]({fragment:c["a"].source("clay.sm.debug_depth")})}),{render:function(e,t,r,n){r||(r=t.getMainCamera()),this.trigger("beforerender",this,e,t,r),this._renderShadowPass(e,t,r,n),this.trigger("afterrender",this,e,t,r)},renderDebug:function(e,t){e.saveClear();var r=e.viewport,n=0,i=0,a=t||r.width/4,o=a;for(var s in this.softShadow===S.VSM?this._outputDepthPass.material.define("fragment","USE_VSM"):this._outputDepthPass.material.undefine("fragment","USE_VSM"),this._textures){var l=this._textures[s];e.setViewport(n,i,a*l.width/l.height,o),this._outputDepthPass.setUniform("depthMap",l),this._outputDepthPass.render(e),n+=a*l.width/l.height}e.setViewport(r),e.restoreClear()},_updateReceivers:function(e,t){if(t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1),t.material.set("pcfKernel",this.kernelPCF)):t.material.set("shadowEnabled",0),this.softShadow===S.VSM)t.material.define("fragment","USE_VSM"),t.material.undefine("fragment","PCF_KERNEL_SIZE");else{t.material.undefine("fragment","USE_VSM");var r=this.kernelPCF;r&&r.length?t.material.define("fragment","PCF_KERNEL_SIZE",r.length/2):t.material.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(e,t){var r=this;t.traverse((function(t){t.isRenderable()&&r._updateReceivers(e,t)}));for(var n=0;n<t.lights.length;n++){var i=t.lights[n];i.castShadow&&!i.invisible&&this._lightsCastShadow.push(i)}},_renderShadowPass:function(e,t,r,n){for(var i in this._shadowMapNumber)this._shadowMapNumber[i]=0;this._lightsCastShadow.length=0,this._receivers.length=0;var a=e.gl;if(n||t.update(),r&&r.update(),t.updateLights(),this._update(e,t),this._lightsCastShadow.length||!this._lastRenderNotCastShadow){this._lastRenderNotCastShadow=0===this._lightsCastShadow,a.enable(a.DEPTH_TEST),a.depthMask(!0),a.disable(a.BLEND),a.clearColor(1,1,1,1);for(var o,s=[],l=[],u=[],c=[],h=[],d=[],f=0;f<this._lightsCastShadow.length;f++){var p=this._lightsCastShadow[f];if("DIRECTIONAL_LIGHT"===p.type){if(o){console.warn("Only one direectional light supported with shadow cascade");continue}if(p.shadowCascade>4){console.warn("Support at most 4 cascade");continue}p.shadowCascade>1&&(o=p),this.renderDirectionalLightShadow(e,t,r,p,h,c,u)}else"SPOT_LIGHT"===p.type?this.renderSpotLightShadow(e,t,p,l,s):"POINT_LIGHT"===p.type&&this.renderPointLightShadow(e,t,p,d);this._shadowMapNumber[p.type]++}for(var m in this._shadowMapNumber){var g=this._shadowMapNumber[m],_=m+"_SHADOWMAP_COUNT";for(f=0;f<this._receivers.length;f++){var v=this._receivers[f],y=v.material;y.fragmentDefines[_]!==g&&(g>0?y.define("fragment",_,g):y.isDefined("fragment",_)&&y.undefine("fragment",_))}}for(f=0;f<this._receivers.length;f++){v=this._receivers[f],y=v.material;o?y.define("fragment","SHADOW_CASCADE",o.shadowCascade):y.undefine("fragment","SHADOW_CASCADE")}var x=t.shadowUniforms;if(u.length>0){var T=u.map(S);if(x.directionalLightShadowMaps={value:u,type:"tv"},x.directionalLightMatrices={value:c,type:"m4v"},x.directionalLightShadowMapSizes={value:T,type:"1fv"},o){var b=h.slice(),w=h.slice();b.pop(),w.shift(),b.reverse(),w.reverse(),c.reverse(),x.shadowCascadeClipsNear={value:b,type:"1fv"},x.shadowCascadeClipsFar={value:w,type:"1fv"}}}if(s.length>0){var E=s.map(S);x=t.shadowUniforms;x.spotLightShadowMaps={value:s,type:"tv"},x.spotLightMatrices={value:l,type:"m4v"},x.spotLightShadowMapSizes={value:E,type:"1fv"}}d.length>0&&(x.pointLightShadowMaps={value:d,type:"tv"})}function S(e){return e.height}},renderDirectionalLightShadow:function(){var e=new s["a"],t=new l["a"],r=new o["a"],n=new l["a"],i=new l["a"],a=new l["a"],c=new l["a"];return function(o,s,h,d,f,p,m){var _=this._getDepthMaterial(d),v={getMaterial:function(e){return e.shadowDepthMaterial||_},isMaterialChanged:E,getUniform:w,ifRender:function(e){return e.castShadow},sortCompare:u["a"].opaqueSortCompare};if(!s.viewBoundingBoxLastFrame.isFinite()){var y=s.getBoundingBox();s.viewBoundingBoxLastFrame.copy(y).applyTransform(h.viewMatrix)}var T=Math.min(-s.viewBoundingBoxLastFrame.min.z,h.far),b=Math.max(-s.viewBoundingBoxLastFrame.max.z,h.near),M=this._getDirectionalLightCamera(d,s,h),A=a.array;c.copy(M.projectionMatrix),x["a"].invert(i.array,M.worldTransform.array),x["a"].multiply(i.array,i.array,h.worldTransform.array),x["a"].multiply(A,c.array,i.array);for(var N=[],C=h instanceof g["a"],L=(h.near+h.far)/(h.near-h.far),P=2*h.near*h.far/(h.near-h.far),D=0;D<=d.shadowCascade;D++){var O=b*Math.pow(T/b,D/d.shadowCascade),R=b+(T-b)*D/d.shadowCascade,I=O*d.cascadeSplitLogFactor+R*(1-d.cascadeSplitLogFactor);N.push(I),f.push(-(-I*L+P)/-I)}var F=this._getTexture(d,d.shadowCascade);m.push(F);var B=o.viewport,U=o.gl;this._frameBuffer.attach(F),this._frameBuffer.bind(o),U.clear(U.COLOR_BUFFER_BIT|U.DEPTH_BUFFER_BIT);for(D=0;D<d.shadowCascade;D++){var z=N[D],G=N[D+1];C?x["a"].perspective(t.array,h.fov/180*Math.PI,h.aspect,z,G):x["a"].ortho(t.array,h.left,h.right,h.bottom,h.top,z,G),e.setFromProjection(t),e.getTransformedBoundingBox(r,i),r.applyProjection(c);var H=r.min.array,k=r.max.array;H[0]=Math.max(H[0],-1),H[1]=Math.max(H[1],-1),k[0]=Math.min(k[0],1),k[1]=Math.min(k[1],1),n.ortho(H[0],k[0],H[1],k[1],1,-1),M.projectionMatrix.multiplyLeft(n);var V=d.shadowResolution||512;o.setViewport((d.shadowCascade-D-1)*V,0,V,V,1);var W=s.updateRenderList(M);o.renderPass(W.opaque,M,v),this.softShadow===S.VSM&&this._gaussianFilter(o,F,F.width);var j=new l["a"];j.copy(M.viewMatrix).multiplyLeft(M.projectionMatrix),p.push(j.array),M.projectionMatrix.copy(c)}this._frameBuffer.unbind(o),o.setViewport(B)}}(),renderSpotLightShadow:function(e,t,r,n,i){var a=this._getTexture(r),o=this._getSpotLightCamera(r),s=e.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(e),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT);var c=this._getDepthMaterial(r),h={getMaterial:function(e){return e.shadowDepthMaterial||c},isMaterialChanged:E,getUniform:w,ifRender:function(e){return e.castShadow},sortCompare:u["a"].opaqueSortCompare},d=t.updateRenderList(o);e.renderPass(d.opaque,o,h),this._frameBuffer.unbind(e),this.softShadow===S.VSM&&this._gaussianFilter(e,a,a.width);var f=new l["a"];f.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),n.push(f.array)},renderPointLightShadow:function(e,t,r,n){var i=this._getTexture(r),s=e.gl;n.push(i);var l=this._getDepthMaterial(r),c={getMaterial:function(e){return e.shadowDepthMaterial||l},getUniform:w,sortCompare:u["a"].opaqueSortCompare},h={px:[],py:[],pz:[],nx:[],ny:[],nz:[]},d=new o["a"],f=r.getWorldPosition().array,p=new o["a"],m=r.range;p.min.setArray(f),p.max.setArray(f);var g=new a["a"](m,m,m);p.max.add(g),p.min.sub(g);var _={px:!1,py:!1,pz:!1,nx:!1,ny:!1,nz:!1};t.traverse((function(e){if(e.isRenderable()&&e.castShadow){var t=e.geometry;if(!t.boundingBox){for(var r=0;r<b.length;r++)h[b[r]].push(e);return}if(d.transformFrom(t.boundingBox,e.worldTransform),!d.intersectBoundingBox(p))return;d.updateVertices();for(r=0;r<b.length;r++)_[b[r]]=!1;for(r=0;r<8;r++){var n=d.vertices[r],i=n[0]-f[0],a=n[1]-f[1],o=n[2]-f[2],s=Math.abs(i),l=Math.abs(a),u=Math.abs(o);s>l?s>u?_[i>0?"px":"nx"]=!0:_[o>0?"pz":"nz"]=!0:l>u?_[a>0?"py":"ny"]=!0:_[o>0?"pz":"nz"]=!0}for(r=0;r<b.length;r++)_[b[r]]&&h[b[r]].push(e)}}));for(var v=0;v<6;v++){var y=b[v],x=this._getPointLightCamera(r,y);this._frameBuffer.attach(i,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+v),this._frameBuffer.bind(e),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),e.renderPass(h[y],x,c)}this._frameBuffer.unbind(e)},_getDepthMaterial:function(e){var t=this._lightMaterials[e.__uid__],r="POINT_LIGHT"===e.type;if(!t){var n=r?"clay.sm.distance.":"clay.sm.depth.";t=new h["a"]({precision:this.precision,shader:new c["a"](c["a"].source(n+"vertex"),c["a"].source(n+"fragment"))}),this._lightMaterials[e.__uid__]=t}return null!=e.shadowSlopeScale&&t.setUniform("slopeScale",e.shadowSlopeScale),null!=e.shadowBias&&t.setUniform("bias",e.shadowBias),this.softShadow===S.VSM?t.define("fragment","USE_VSM"):t.undefine("fragment","USE_VSM"),r&&(t.set("lightPosition",e.getWorldPosition().array),t.set("range",e.range)),t},_gaussianFilter:function(e,t,r){var n={width:r,height:r,type:f["a"].FLOAT},i=this._texturePool.get(n);this._frameBuffer.attach(i),this._frameBuffer.bind(e),this._gaussianPassH.setUniform("texture",t),this._gaussianPassH.setUniform("textureWidth",r),this._gaussianPassH.render(e),this._frameBuffer.attach(t),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",r),this._gaussianPassV.render(e),this._frameBuffer.unbind(e),this._texturePool.put(i)},_getTexture:function(e,t){var r=e.__uid__,n=this._textures[r],a=e.shadowResolution||512;return t=t||1,n||(n="POINT_LIGHT"===e.type?new m["a"]:new p["a"],n.width=a*t,n.height=a,this.softShadow===S.VSM?(n.type=f["a"].FLOAT,n.anisotropic=4):(n.minFilter=i["a"].NEAREST,n.magFilter=i["a"].NEAREST,n.useMipmap=!1),this._textures[r]=n),n},_getPointLightCamera:function(e,t){this._lightCameras.point||(this._lightCameras.point={px:new g["a"],nx:new g["a"],py:new g["a"],ny:new g["a"],pz:new g["a"],nz:new g["a"]});var r=this._lightCameras.point[t];switch(r.far=e.range,r.fov=90,r.position.set(0,0,0),t){case"px":r.lookAt(a["a"].POSITIVE_X,a["a"].NEGATIVE_Y);break;case"nx":r.lookAt(a["a"].NEGATIVE_X,a["a"].NEGATIVE_Y);break;case"py":r.lookAt(a["a"].POSITIVE_Y,a["a"].POSITIVE_Z);break;case"ny":r.lookAt(a["a"].NEGATIVE_Y,a["a"].NEGATIVE_Z);break;case"pz":r.lookAt(a["a"].POSITIVE_Z,a["a"].NEGATIVE_Y);break;case"nz":r.lookAt(a["a"].NEGATIVE_Z,a["a"].NEGATIVE_Y);break}return e.getWorldPosition(r.position),r.update(),r},_getDirectionalLightCamera:function(){var e=new l["a"],t=new o["a"],r=new o["a"];return function(n,i,a){this._lightCameras.directional||(this._lightCameras.directional=new _["a"]);var o=this._lightCameras.directional;t.copy(i.viewBoundingBoxLastFrame),t.intersection(a.frustum.boundingBox),o.position.copy(t.min).add(t.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(n.rotation),o.scale.copy(n.scale),o.updateWorldTransform(),l["a"].invert(e,o.worldTransform),l["a"].multiply(e,e,a.worldTransform),r.copy(t).applyTransform(e);var s=r.min.array,u=r.max.array;return o.position.set((s[0]+u[0])/2,(s[1]+u[1])/2,u[2]).transformMat4(o.worldTransform),o.near=0,o.far=-s[2]+u[2],isNaN(this.lightFrustumBias)?o.far*=4:o.far+=this.lightFrustumBias,o.left=s[0],o.right=u[0],o.top=u[1],o.bottom=s[1],o.update(!0),o}}(),_getSpotLightCamera:function(e){this._lightCameras.spot||(this._lightCameras.spot=new g["a"]);var t=this._lightCameras.spot;return t.fov=2*e.penumbraAngle,t.far=e.range,t.worldTransform.copy(e.worldTransform),t.updateProjectionMatrix(),x["a"].invert(t.viewMatrix.array,t.worldTransform.array),t},dispose:function(e){var t=e.gl||e;for(var r in this._frameBuffer&&this._frameBuffer.dispose(t),this._textures)this._textures[r].dispose(t);this._texturePool.clear(e.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var n=0;n<this._receivers.length;n++){var i=this._receivers[n];if(i.material){var a=i.material;a.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),a.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),a.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),a.set("shadowEnabled",0)}}this._receivers=[],this._lightsCastShadow=[]}});S.VSM=1,S.PCF=2,t["a"]=S},function(e,t,r){"use strict";t["a"]="@export clay.sm.depth.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n@import clay.chunk.skinning_header\nvarying vec4 v_ViewPosition;\nvarying vec2 v_Texcoord;\nvoid main(){\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n gl_Position = v_ViewPosition;\n v_Texcoord = texcoord;\n}\n@end\n@export clay.sm.depth.fragment\nvarying vec4 v_ViewPosition;\nvarying vec2 v_Texcoord;\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\nuniform sampler2D alphaMap;\nuniform float alphaCutoff: 0.0;\n@import clay.util.encode_float\nvoid main(){\n float depth = v_ViewPosition.z / v_ViewPosition.w;\n if (alphaCutoff > 0.0) {\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\n discard;\n }\n }\n#ifdef USE_VSM\n depth = depth * 0.5 + 0.5;\n float moment1 = depth;\n float moment2 = depth * depth;\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n moment2 += 0.25*(dx*dx+dy*dy);\n gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n@export clay.sm.debug_depth\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n@import clay.util.decode_float\nvoid main() {\n vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n float depth = decodeFloat(tex);\n gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n@end\n@export clay.sm.distance.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\n@import clay.chunk.skinning_header\nvarying vec3 v_WorldPosition;\nvoid main (){\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n@end\n@export clay.sm.distance.fragment\nuniform vec3 lightPosition;\nuniform float range : 100;\nvarying vec3 v_WorldPosition;\n@import clay.util.encode_float\nvoid main(){\n float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n dist = dist / range;\n gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n@export clay.plugin.shadow_map_common\n@import clay.util.decode_float\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n vec4 tex = texture2D(map, uv);\n return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n float shadowContrib = tapShadowMap(map, uv, z);\n vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n }}\n return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n return shadowContrib / 9.0;\n#endif\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n return pcf(map, uv, z, textureSize, vec2(1.0));\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n float p = 0.0;\n z = z * 0.5 + 0.5;\n if (z <= moments.x) {\n p = 1.0;\n }\n float variance = moments.y - moments.x * moments.x;\n variance = max(variance, 0.0000001);\n float mD = moments.x - z;\n float pMax = variance / (variance + mD * mD);\n pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n return max(p, pMax);\n}\nfloat computeShadowContrib(\n sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n posInLightSpace.xyz /= posInLightSpace.w;\n float z = posInLightSpace.z;\n if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n #ifdef USE_VSM\n vec2 moments = texture2D(map, uv * scale + offset).xy;\n return chebyshevUpperBound(moments, z);\n #else\n return pcf(map, uv * scale + offset, z, textureSize, scale);\n #endif\n }\n return 1.0;\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n float dist = length(direction);\n vec4 shadowTex = textureCube(map, direction);\n#ifdef USE_VSM\n vec2 moments = shadowTex.xy;\n float variance = moments.y - moments.x * moments.x;\n float mD = moments.x - dist;\n float p = variance / (variance + mD * mD);\n if(moments.x + 0.001 < dist){\n return clamp(p, 0.0, 1.0);\n }else{\n return 1.0;\n }\n#else\n return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n@end\n@export clay.plugin.compute_shadow_map\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1]:unconfigurable;\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE]:unconfigurable;\nuniform float directionalLightShadowMapSizes[1]:unconfigurable;\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE]:unconfigurable;\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE]:unconfigurable;\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\n#endif\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\nuniform bool shadowEnabled : true;\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n@import clay.plugin.shadow_map_common\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n spotLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n#ifdef SHADOW_CASCADE\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n / (gl_DepthRange.far - gl_DepthRange.near);\n float shadowContrib;\n shadowContribs[0] = 1.0;\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n if (\n depth >= shadowCascadeClipsNear[_idx_] &&\n depth <= shadowCascadeClipsFar[_idx_]\n ) {\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[0],\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n );\n shadowContribs[0] = shadowContrib;\n }\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#else\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#endif\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n vec3 lightPosition;\n vec3 direction;\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n lightPosition = pointLightPosition[_idx_];\n direction = position - lightPosition;\n shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n }}\n for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#endif\n@end"},function(e,t,r){"use strict";var n=r(8),i=r(5),a=r(4),o=r(10),s=r(177),l=r(189),u=r(191),c=r(193),h=r(1),d=r(194),f=r(196),p=(r(9),r(197)),m=r(87),g=r(88),_=r(89),v=r(90),y=r(91),x=r(92),T=r(93),b=r(94),w=r(95),E=r(198),S=r(199);n["a"]["import"](m["a"]),n["a"]["import"](g["a"]),n["a"]["import"](_["a"]),n["a"]["import"](v["a"]),n["a"]["import"](y["a"]),n["a"]["import"](x["a"]),n["a"]["import"](T["a"]),n["a"]["import"](b["a"]),n["a"]["import"](w["a"]),n["a"]["import"](E["a"]),n["a"]["import"](S["a"]);var M={color:{parameters:{width:function(e){return e.getWidth()},height:function(e){return e.getHeight()}}}},A=["composite","FXAA"];function N(){this._sourceTexture=new i["a"]({type:a["a"].HALF_FLOAT}),this._depthTexture=new i["a"]({format:a["a"].DEPTH_COMPONENT,type:a["a"].UNSIGNED_INT}),this._framebuffer=new o["a"],this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,o["a"].DEPTH_ATTACHMENT),this._normalPass=new d["a"],this._compositor=Object(s["a"])(p["a"]);var e=this._compositor.getNodeByName("source");e.texture=this._sourceTexture;var t=this._compositor.getNodeByName("coc");this._sourceNode=e,this._cocNode=t,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._dofBlurNodes=["dof_far_blur","dof_near_blur","dof_coc_blur"].map((function(e){return this._compositor.getNodeByName(e)}),this),this._dofBlurKernel=0,this._dofBlurKernelSize=new Float32Array(0),this._finalNodesChain=A.map((function(e){return this._compositor.getNodeByName(e)}),this);var r={normalTexture:this._normalPass.getNormalTexture(),depthTexture:this._normalPass.getDepthTexture()};this._ssaoPass=new l["a"](r),this._ssrPass=new u["a"](r),this._edgePass=new f["a"](r)}N.prototype.resize=function(e,t,r){r=r||1;e*=r,t*=r;var n=this._sourceTexture,i=this._depthTexture;n.width=e,n.height=t,i.width=e,i.height=t},N.prototype._ifRenderNormalPass=function(){return this._enableSSAO||this._enableEdge||this._enableSSR},N.prototype._getPrevNode=function(e){var t=A.indexOf(e.name)-1,r=this._finalNodesChain[t];while(r&&!this._compositor.getNodeByName(r.name))t-=1,r=this._finalNodesChain[t];return r},N.prototype._getNextNode=function(e){var t=A.indexOf(e.name)+1,r=this._finalNodesChain[t];while(r&&!this._compositor.getNodeByName(r.name))t+=1,r=this._finalNodesChain[t];return r},N.prototype._addChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(t.outputs=M,e.inputs.texture=t.name,r?(e.outputs=M,r.inputs.texture=e.name):e.outputs=null,this._compositor.addNode(e))},N.prototype._removeChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(r?(t.outputs=M,r.inputs.texture=t.name):t.outputs=null,this._compositor.removeNode(e))},N.prototype.updateNormal=function(e,t,r,n){this._ifRenderNormalPass()&&this._normalPass.update(e,t,r)},N.prototype.updateSSAO=function(e,t,r,n){this._ssaoPass.update(e,r,n)},N.prototype.enableSSAO=function(){this._enableSSAO=!0},N.prototype.disableSSAO=function(){this._enableSSAO=!1},N.prototype.enableSSR=function(){this._enableSSR=!0},N.prototype.disableSSR=function(){this._enableSSR=!1},N.prototype.getSSAOTexture=function(){return this._ssaoPass.getTargetTexture()},N.prototype.getSourceFrameBuffer=function(){return this._framebuffer},N.prototype.getSourceTexture=function(){return this._sourceTexture},N.prototype.disableFXAA=function(){this._removeChainNode(this._fxaaNode)},N.prototype.enableFXAA=function(){this._addChainNode(this._fxaaNode)},N.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite",this._compositor.dirty()},N.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null,this._compositor.dirty()},N.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite",this._compositor.dirty()},N.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source",this._compositor.dirty()},N.prototype.enableColorCorrection=function(){this._compositeNode.define("COLOR_CORRECTION"),this._enableColorCorrection=!0},N.prototype.disableColorCorrection=function(){this._compositeNode.undefine("COLOR_CORRECTION"),this._enableColorCorrection=!1},N.prototype.enableEdge=function(){this._enableEdge=!0},N.prototype.disableEdge=function(){this._enableEdge=!1},N.prototype.setBloomIntensity=function(e){this._compositeNode.setParameter("bloomIntensity",e)},N.prototype.setSSAOParameter=function(e,t){switch(e){case"quality":var r={low:6,medium:12,high:32,ultra:62}[t]||12;this._ssaoPass.setParameter("kernelSize",r);break;case"radius":this._ssaoPass.setParameter(e,t),this._ssaoPass.setParameter("bias",t/200);break;case"intensity":this._ssaoPass.setParameter(e,t);break;default:console.warn("Unkown SSAO parameter "+e)}},N.prototype.setDOFParameter=function(e,t){switch(e){case"focalDistance":case"focalRange":case"fstop":this._cocNode.setParameter(e,t);break;case"blurRadius":for(var r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].setParameter("blurRadius",t);break;case"quality":var n={low:4,medium:8,high:16,ultra:32}[t]||8;this._dofBlurKernelSize=n;for(r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].pass.material.define("POISSON_KERNEL_SIZE",n);this._dofBlurKernel=new Float32Array(2*n);break;default:console.warn("Unkown DOF parameter "+e)}},N.prototype.setSSRParameter=function(e,t){if(null!=t)switch(e){case"quality":var r={low:10,medium:15,high:30,ultra:80}[t]||20,n={low:32,medium:16,high:8,ultra:4}[t]||16;this._ssrPass.setParameter("maxIteration",r),this._ssrPass.setParameter("pixelStride",n);break;case"maxRoughness":this._ssrPass.setParameter("minGlossiness",Math.max(Math.min(1-t,1),0));break;case"physical":this.setPhysicallyCorrectSSR(t);break;default:console.warn("Unkown SSR parameter "+e)}},N.prototype.setPhysicallyCorrectSSR=function(e){this._ssrPass.setPhysicallyCorrect(e)},N.prototype.setEdgeColor=function(e){var t=h["a"].parseColor(e);this._edgePass.setParameter("edgeColor",t)},N.prototype.setExposure=function(e){this._compositeNode.setParameter("exposure",Math.pow(2,e))},N.prototype.setColorLookupTexture=function(e,t){this._compositeNode.pass.material.setTextureImage("lut",this._enableColorCorrection?e:"none",t,{minFilter:h["a"].Texture.NEAREST,magFilter:h["a"].Texture.NEAREST,flipY:!1})},N.prototype.setColorCorrection=function(e,t){this._compositeNode.setParameter(e,t)},N.prototype.isSSREnabled=function(){return this._enableSSR},N.prototype.composite=function(e,t,r,n,i){var a=this._sourceTexture,o=a;this._enableEdge&&(this._edgePass.update(e,r,a,i),a=o=this._edgePass.getTargetTexture()),this._enableSSR&&(this._ssrPass.update(e,r,a,i),o=this._ssrPass.getTargetTexture(),this._ssrPass.setSSAOTexture(this._enableSSAO?this._ssaoPass.getTargetTexture():null)),this._sourceNode.texture=o,this._cocNode.setParameter("depth",this._depthTexture);for(var s=this._dofBlurKernel,l=this._dofBlurKernelSize,u=Math.floor(c["a"].length/2/l),h=i%u,d=0;d<2*l;d++)s[d]=c["a"][d+h*l*2];for(d=0;d<this._dofBlurNodes.length;d++)this._dofBlurNodes[d].setParameter("percent",i/30),this._dofBlurNodes[d].setParameter("poissonKernel",s);this._cocNode.setParameter("zNear",r.near),this._cocNode.setParameter("zFar",r.far),this._compositor.render(e,n)},N.prototype.dispose=function(e){this._sourceTexture.dispose(e),this._depthTexture.dispose(e),this._framebuffer.dispose(e),this._compositor.dispose(e),this._normalPass.dispose(e),this._ssaoPass.dispose(e)},t["a"]=N},function(e,t,r){"use strict";var n=r(178);t["a"]=n["a"]},function(e,t,r){"use strict";var n=r(23),i=r(179),a=r(181),o=r(182),s=r(183),l=r(8),u=r(4),c=r(5),h=r(27),d=r(184);Object(d["a"])(l["a"]);var f=/^#source\((.*?)\)/;function p(e,t){var r=new i["a"];t=t||{};var n={textures:{},parameters:{}},a=function(i,a){for(var o=0;o<e.nodes.length;o++){var s=e.nodes[o],l=m(s,n,t);l&&r.addNode(l)}};for(var o in e.parameters){var s=e.parameters[o];n.parameters[o]=v(s)}return y(e,n,t,(function(e){n.textures=e,a()})),r}function m(e,t,r){var n,i,u,c,h=e.type||"filter";if("filter"===h){var d=e.shader.trim(),p=f.exec(d);if(p?n=l["a"].source(p[1].trim()):"#"===d.charAt(0)&&(n=t.shaders[d.substr(1)]),n||(n=d),!n)return}if(e.inputs)for(var m in i={},e.inputs)"string"===typeof e.inputs[m]?i[m]=e.inputs[m]:i[m]={node:e.inputs[m].node,pin:e.inputs[m].pin};if(e.outputs)for(var m in u={},e.outputs){var g=e.outputs[m];u[m]={},null!=g.attachment&&(u[m].attachment=g.attachment),null!=g.keepLastFrame&&(u[m].keepLastFrame=g.keepLastFrame),null!=g.outputLastFrame&&(u[m].outputLastFrame=g.outputLastFrame),g.parameters&&(u[m].parameters=v(g.parameters))}if(c="scene"===h?new a["a"]({name:e.name,scene:r.scene,camera:r.camera,outputs:u}):"texture"===h?new o["a"]({name:e.name,outputs:u}):new s["a"]({name:e.name,shader:n,inputs:i,outputs:u}),c){if(e.parameters)for(var m in e.parameters){var _=e.parameters[m];"string"===typeof _&&(_=_.trim(),"#"===_.charAt(0)?_=t.textures[_.substr(1)]:c.on("beforerender",x(m,b(_)))),c.setParameter(m,_)}if(e.defines&&c.pass)for(var m in e.defines){_=e.defines[m];c.pass.material.define("fragment",m,_)}}return c}function g(e,t){return e}function _(e,t){return t}function v(e){var t={};if(!e)return t;["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach((function(r){var n=e[r];null!=n&&("string"===typeof n&&(n=u["a"][n]),t[r]=n)}));var r=e.scale||1;return["width","height"].forEach((function(n){if(null!=e[n]){var i=e[n];"string"===typeof i?(i=i.trim(),t[n]=T(n,b(i),r)):t[n]=i}})),t.width||(t.width=g),t.height||(t.height=_),null!=e.useMipmap&&(t.useMipmap=e.useMipmap),t}function y(e,t,r,i){if(e.textures){var a={},o=0,s=!1,l=r.textureRootPath;n["a"].each(e.textures,(function(e,t){var r,u=e.path,d=v(e.parameters);if(Array.isArray(u)&&6===u.length)l&&(u=u.map((function(e){return n["a"].relative2absolute(e,l)}))),r=new h["a"](d);else{if("string"!==typeof u)return;l&&(u=n["a"].relative2absolute(u,l)),r=new c["a"](d)}r.load(u),o++,r.once("success",(function(){a[t]=r,o--,0===o&&(i(a),s=!0)}))})),0!==o||s||i(a)}else i({})}function x(e,t){return function(r){var n=r.getDevicePixelRatio(),i=r.getWidth(),a=r.getHeight(),o=t(i,a,n);this.setParameter(e,o)}}function T(e,t,r){return r=r||1,function(e){var n=e.getDevicePixelRatio(),i=e.getWidth()*r,a=e.getHeight()*r;return t(i,a,n)}}function b(e){var t=/^expr\((.*)\)$/.exec(e);if(t)try{var r=new Function("width","height","dpr","return "+t[1]);return r(1,1),r}catch(n){throw new Error("Invalid expression.")}}t["a"]=p},function(e,t,r){"use strict";var n=r(180),i=r(86),a=r(10),o=n["a"].extend((function(){return{_outputs:[],_texturePool:new i["a"],_frameBuffer:new a["a"]({depthBuffer:!1})}}),{addNode:function(e){n["a"].prototype.addNode.call(this,e),e._compositor=this},render:function(e,t){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var r=0;r<this.nodes.length;r++)this.nodes[r].outputs||this._outputs.push(this.nodes[r])}for(r=0;r<this.nodes.length;r++)this.nodes[r].beforeFrame();for(r=0;r<this._outputs.length;r++)this._outputs[r].updateReference();for(r=0;r<this._outputs.length;r++)this._outputs[r].render(e,t);for(r=0;r<this.nodes.length;r++)this.nodes[r].afterFrame()},allocateTexture:function(e){return this._texturePool.get(e)},releaseTexture:function(e){this._texturePool.put(e)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(e){this._texturePool.clear(e)}});t["a"]=o},function(e,t,r){"use strict";var n=r(7),i=r(48),a=n["a"].extend((function(){return{nodes:[]}}),{dirty:function(){this._dirty=!0},addNode:function(e){this.nodes.indexOf(e)>=0||(this.nodes.push(e),this._dirty=!0)},removeNode:function(e){"string"===typeof e&&(e=this.getNodeByName(e));var t=this.nodes.indexOf(e);t>=0&&(this.nodes.splice(t,1),this._dirty=!0)},getNodeByName:function(e){for(var t=0;t<this.nodes.length;t++)if(this.nodes[t].name===e)return this.nodes[t]},update:function(){for(var e=0;e<this.nodes.length;e++)this.nodes[e].clear();for(e=0;e<this.nodes.length;e++){var t=this.nodes[e];if(t.inputs)for(var r in t.inputs)if(t.inputs[r])if(!t.pass||t.pass.material.isUniformEnabled(r)){var n=t.inputs[r],i=this.findPin(n);i?t.link(r,i.node,i.pin):"string"===typeof n?console.warn("Node "+n+" not exist"):console.warn("Pin of "+n.node+"."+n.pin+" not exist")}else console.warn("Pin "+t.name+"."+r+" not used.")}},findPin:function(e){var t;if(("string"===typeof e||e instanceof i["a"])&&(e={node:e}),"string"===typeof e.node)for(var r=0;r<this.nodes.length;r++){var n=this.nodes[r];n.name===e.node&&(t=n)}else t=e.node;if(t){var a=e.pin;if(a||t.outputs&&(a=Object.keys(t.outputs)[0]),t.outputs[a])return{node:t,pin:a}}}});t["a"]=a},function(e,t,r){"use strict";var n=r(48),i=r(11),a=r(10),o=n["a"].extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},(function(){this.frameBuffer=new a["a"]}),{render:function(e){this._rendering=!0;var t,r=e.gl;if(this.trigger("beforerender"),this.outputs){var n=this.frameBuffer;for(var a in this.outputs){var o=this.updateParameter(a,e),s=this.outputs[a],l=this._compositor.allocateTexture(o);this._outputTextures[a]=l;var u=s.attachment||r.COLOR_ATTACHMENT0;"string"==typeof u&&(u=r[u]),n.attach(l,u)}n.bind(e);var c=e.getGLExtension("EXT_draw_buffers");if(c){var h=[];for(var u in this.outputs)u=parseInt(u),u>=r.COLOR_ATTACHMENT0&&u<=r.COLOR_ATTACHMENT0+8&&h.push(u);c.drawBuffersEXT(h)}e.saveClear(),e.clearBit=i["a"].DEPTH_BUFFER_BIT|i["a"].COLOR_BUFFER_BIT,t=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.restoreClear(),n.unbind(e)}else t=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",t),this._rendering=!1,this._rendered=!0}});t["a"]=o},function(e,t,r){"use strict";var n=r(48),i=n["a"].extend((function(){return{texture:null,outputs:{color:{}}}}),(function(){}),{getOutput:function(e,t){return this.texture},beforeFrame:function(){},afterFrame:function(){}});t["a"]=i},function(e,t,r){"use strict";var n=r(16),i=r(48),a=i["a"].extend((function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}}),(function(){var e=new n["a"]({fragment:this.shader});this.pass=e}),{render:function(e,t){this.trigger("beforerender",e),this._rendering=!0;var r=e.gl;for(var n in this.inputLinks){var i=this.inputLinks[n],a=i.node.getOutput(e,i.pin);this.pass.setUniform(n,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var l=this.updateParameter(s,e);isNaN(l.width)&&this.updateParameter(s,e);var u=this.outputs[s],c=this._compositor.allocateTexture(l);this._outputTextures[s]=c;var h=u.attachment||r.COLOR_ATTACHMENT0;"string"===typeof h&&(h=r[h]),o[h]=c}for(var h in this._compositor.getFrameBuffer().bind(e),o)this._compositor.getFrameBuffer().attach(o[h],h);this.pass.render(e),this._compositor.getFrameBuffer().updateMipmap(e)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(e),this.pass.render(e,t);for(var n in this.inputLinks){i=this.inputLinks[n];i.node.removeReference(i.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",e)},updateParameter:function(e,t){var r,n,i=this.outputs[e],a=i.parameters,o=i._parametersCopy;if(o||(o=i._parametersCopy={}),a)for(var s in a)"width"!==s&&"height"!==s&&(o[s]=a[s]);return r=a.width instanceof Function?a.width.call(this,t):a.width,n=a.height instanceof Function?a.height.call(this,t):a.height,r=Math.ceil(r),n=Math.ceil(n),o.width===r&&o.height===n||this._outputTextures[e]&&this._outputTextures[e].dispose(t),o.width=r,o.height=n,o},setParameter:function(e,t){this.pass.setUniform(e,t)},getParameter:function(e){return this.pass.getUniform(e)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},define:function(e,t){this.pass.material.define("fragment",e,t)},undefine:function(e){this.pass.material.undefine("fragment",e)},removeReference:function(e){if(this._outputReferences[e]--,0===this._outputReferences[e]){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},clear:function(){i["a"].prototype.clear.call(this),this.pass.material.disableTexturesAll()}});t["a"]=a},function(e,t,r){"use strict";t["a"]=g;var n=r(185),i=r(87),a=r(186),o=r(88),s=r(187),l=r(89),u=r(90),c=r(91),h=r(92),d=r(93),f=r(188),p=r(94),m=r(95);function g(e){e["import"](n["a"]),e["import"](i["a"]),e["import"](a["a"]),e["import"](o["a"]),e["import"](s["a"]),e["import"](l["a"]),e["import"](u["a"]),e["import"](c["a"]),e["import"](h["a"]),e["import"](d["a"]),e["import"](f["a"]),e["import"](p["a"]),e["import"](m["a"])}},function(e,t,r){"use strict";t["a"]="@export clay.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n float luminance = dot( color, w );\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = tex.rgb + vec3(brightness);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb * pow(2.0, exposure);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = pow(tex.rgb, vec3(gamma));\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb;\n float luminance = dot(color, w);\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n float luminance = dot(tex.rgb, w);\n luminance = log(luminance + 0.001);\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export clay.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import clay.util.rgbm\nvoid main()\n{\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export clay.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord );\n float luminance = dot(tex.rgb, w);\n gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = texel.rgb;\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end"},function(e,t,r){"use strict";t["a"]="@export clay.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvec4 textureDistorted(\n in vec2 texcoord,\n in vec2 direction,\n in vec3 distortion\n) {\n return vec4(\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n 1.0\n );\n}\nvoid main()\n{\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n vec2 haloVec = normalize(ghostVec) * haloWidth;\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n vec4 result = vec4(0.0);\n for (int i = 0; i < SAMPLE_NUMBER; i++)\n {\n vec2 offset = fract(texcoord + ghostVec * float(i));\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n }\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n vec2 offset = fract(texcoord + haloVec);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n gl_FragColor = result;\n}\n@end"},function(e,t,r){"use strict";var n=r(9),i=r(3),a=r(5),o=r(4),s=r(16),l=r(8),u=r(10),c=r(49),h=r(190);function d(e){for(var t=new Uint8Array(e*e*4),r=0,n=new i["a"],a=0;a<e;a++)for(var o=0;o<e;o++)n.set(2*Math.random()-1,2*Math.random()-1,0).normalize(),t[r++]=255*(.5*n.x+.5),t[r++]=255*(.5*n.y+.5),t[r++]=0,t[r++]=255;return t}function f(e){return new a["a"]({pixels:d(e),wrapS:o["a"].REPEAT,wrapT:o["a"].REPEAT,width:e,height:e})}function p(e,t,r){var n=new Float32Array(3*e);t=t||0;for(var i=0;i<e;i++){var a=Object(c["a"])(i+t,2)*(r?1:2)*Math.PI,o=Object(c["a"])(i+t,3)*Math.PI,s=Math.random(),l=Math.cos(a)*Math.sin(o)*s,u=Math.cos(o)*s,h=Math.sin(a)*Math.sin(o)*s;n[3*i]=l,n[3*i+1]=u,n[3*i+2]=h}return n}function m(e){e=e||{},this._ssaoPass=new s["a"]({fragment:l["a"].source("ecgl.ssao.estimate")}),this._blurPass=new s["a"]({fragment:l["a"].source("ecgl.ssao.blur")}),this._framebuffer=new u["a"]({depthBuffer:!1}),this._ssaoTexture=new a["a"],this._blurTexture=new a["a"],this._blurTexture2=new a["a"],this._depthTex=e.depthTexture,this._normalTex=e.normalTexture,this.setNoiseSize(4),this.setKernelSize(e.kernelSize||12),null!=e.radius&&this.setParameter("radius",e.radius),null!=e.power&&this.setParameter("power",e.power),this._normalTex||(this._ssaoPass.material.disableTexture("normalTex"),this._blurPass.material.disableTexture("normalTex")),this._depthTex||this._blurPass.material.disableTexture("depthTex"),this._blurPass.material.setUniform("normalTex",this._normalTex),this._blurPass.material.setUniform("depthTex",this._depthTex)}l["a"].import(h["a"]),m.prototype.setDepthTexture=function(e){this._depthTex=e},m.prototype.setNormalTexture=function(e){this._normalTex=e,this._ssaoPass.material[e?"enableTexture":"disableTexture"]("normalTex"),this.setKernelSize(this._kernelSize)},m.prototype.update=function(e,t,r){var i=e.getWidth(),a=e.getHeight(),o=this._ssaoPass,s=this._blurPass;o.setUniform("kernel",this._kernels[r%this._kernels.length]),o.setUniform("depthTex",this._depthTex),null!=this._normalTex&&o.setUniform("normalTex",this._normalTex),o.setUniform("depthTexSize",[this._depthTex.width,this._depthTex.height]);var l=new n["a"];n["a"].transpose(l,t.worldTransform),o.setUniform("projection",t.projectionMatrix.array),o.setUniform("projectionInv",t.invProjectionMatrix.array),o.setUniform("viewInverseTranspose",l.array);var u=this._ssaoTexture,c=this._blurTexture,h=this._blurTexture2;u.width=i/2,u.height=a/2,c.width=i,c.height=a,h.width=i,h.height=a,this._framebuffer.attach(u),this._framebuffer.bind(e),e.gl.clearColor(1,1,1,1),e.gl.clear(e.gl.COLOR_BUFFER_BIT),o.render(e),s.setUniform("textureSize",[i/2,a/2]),s.setUniform("projection",t.projectionMatrix.array),this._framebuffer.attach(c),s.setUniform("direction",0),s.setUniform("ssaoTexture",u),s.render(e),this._framebuffer.attach(h),s.setUniform("textureSize",[i,a]),s.setUniform("direction",1),s.setUniform("ssaoTexture",c),s.render(e),this._framebuffer.unbind(e);var d=e.clearColor;e.gl.clearColor(d[0],d[1],d[2],d[3])},m.prototype.getTargetTexture=function(){return this._blurTexture2},m.prototype.setParameter=function(e,t){"noiseTexSize"===e?this.setNoiseSize(t):"kernelSize"===e?this.setKernelSize(t):"intensity"===e?this._ssaoPass.material.set("intensity",t):this._ssaoPass.setUniform(e,t)},m.prototype.setKernelSize=function(e){this._kernelSize=e,this._ssaoPass.material.define("fragment","KERNEL_SIZE",e),this._kernels=this._kernels||[];for(var t=0;t<30;t++)this._kernels[t]=p(e,t*e,!!this._normalTex)},m.prototype.setNoiseSize=function(e){var t=this._ssaoPass.getUniform("noiseTex");t?(t.data=d(e),t.width=t.height=e,t.dirty()):(t=f(e),this._ssaoPass.setUniform("noiseTex",f(e))),this._ssaoPass.setUniform("noiseTexSize",[e,e])},m.prototype.dispose=function(e){this._blurTexture.dispose(e),this._ssaoTexture.dispose(e),this._blurTexture2.dispose(e)},t["a"]=m},function(e,t,r){"use strict";t["a"]="@export ecgl.ssao.estimate\n\nuniform sampler2D depthTex;\n\nuniform sampler2D normalTex;\n\nuniform sampler2D noiseTex;\n\nuniform vec2 depthTexSize;\n\nuniform vec2 noiseTexSize;\n\nuniform mat4 projection;\n\nuniform mat4 projectionInv;\n\nuniform mat4 viewInverseTranspose;\n\nuniform vec3 kernel[KERNEL_SIZE];\n\nuniform float radius : 1;\n\nuniform float power : 1;\n\nuniform float bias: 1e-2;\n\nuniform float intensity: 1.0;\n\nvarying vec2 v_Texcoord;\n\nfloat ssaoEstimator(in vec3 originPos, in mat3 kernelBasis) {\n float occlusion = 0.0;\n\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec3 samplePos = kernel[i];\n#ifdef NORMALTEX_ENABLED\n samplePos = kernelBasis * samplePos;\n#endif\n samplePos = samplePos * radius + originPos;\n\n vec4 texCoord = projection * vec4(samplePos, 1.0);\n texCoord.xy /= texCoord.w;\n\n vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);\n\n float sampleDepth = depthTexel.r * 2.0 - 1.0;\n if (projection[3][3] == 0.0) {\n sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);\n }\n else {\n sampleDepth = (sampleDepth - projection[3][2]) / projection[2][2];\n }\n \n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));\n occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);\n }\n#ifdef NORMALTEX_ENABLED\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\n#else\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\n#endif\n return pow(occlusion, power);\n}\n\nvoid main()\n{\n\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\n\n#ifdef NORMALTEX_ENABLED\n vec4 tex = texture2D(normalTex, v_Texcoord);\n if (dot(tex.rgb, tex.rgb) == 0.0) {\n gl_FragColor = vec4(1.0);\n return;\n }\n vec3 N = tex.rgb * 2.0 - 1.0;\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\n\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\n vec3 T = normalize(rvec - N * dot(rvec, N));\n vec3 BT = normalize(cross(N, T));\n mat3 kernelBasis = mat3(T, BT, N);\n#else\n if (depthTexel.r > 0.99999) {\n gl_FragColor = vec4(1.0);\n return;\n }\n mat3 kernelBasis;\n#endif\n\n float z = depthTexel.r * 2.0 - 1.0;\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n\n vec3 position = p4.xyz / p4.w;\n\n float ao = ssaoEstimator(position, kernelBasis);\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\n gl_FragColor = vec4(vec3(ao), 1.0);\n}\n\n@end\n\n\n@export ecgl.ssao.blur\n#define SHADER_NAME SSAO_BLUR\n\nuniform sampler2D ssaoTexture;\n\n#ifdef NORMALTEX_ENABLED\nuniform sampler2D normalTex;\n#endif\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\nuniform int direction: 0.0;\n\n#ifdef DEPTHTEX_ENABLED\nuniform sampler2D depthTex;\nuniform mat4 projection;\nuniform float depthRange : 0.5;\n\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n#endif\n\nvoid main()\n{\n float kernel[5];\n kernel[0] = 0.122581;\n kernel[1] = 0.233062;\n kernel[2] = 0.288713;\n kernel[3] = 0.233062;\n kernel[4] = 0.122581;\n\n vec2 off = vec2(0.0);\n if (direction == 0) {\n off[0] = blurSize / textureSize.x;\n }\n else {\n off[1] = blurSize / textureSize.y;\n }\n\n vec2 coord = v_Texcoord;\n\n float sum = 0.0;\n float weightAll = 0.0;\n\n#ifdef NORMALTEX_ENABLED\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\n#endif\n#if defined(DEPTHTEX_ENABLED)\n float centerDepth = getLinearDepth(v_Texcoord);\n#endif\n\n for (int i = 0; i < 5; i++) {\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));\n\n float w = kernel[i];\n#ifdef NORMALTEX_ENABLED\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\n w *= clamp(dot(normal, centerNormal), 0.0, 1.0);\n#endif\n#ifdef DEPTHTEX_ENABLED\n float d = getLinearDepth(coord);\n w *= (1.0 - smoothstep(abs(centerDepth - d) / depthRange, 0.0, 1.0));\n#endif\n\n weightAll += w;\n sum += texture2D(ssaoTexture, coord).r * w;\n }\n\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\n}\n\n@end\n"},function(e,t,r){"use strict";var n=r(9),i=(r(3),r(5)),a=r(4),o=r(16),s=r(8),l=r(10),u=(r(49),r(77)),c=r(192);function h(e){e=e||{},this._ssrPass=new o["a"]({fragment:s["a"].source("ecgl.ssr.main"),clearColor:[0,0,0,0]}),this._blurPass1=new o["a"]({fragment:s["a"].source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blurPass2=new o["a"]({fragment:s["a"].source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blendPass=new o["a"]({fragment:s["a"].source("clay.compositor.blend")}),this._blendPass.material.disableTexturesAll(),this._blendPass.material.enableTexture(["texture1","texture2"]),this._ssrPass.setUniform("gBufferTexture1",e.normalTexture),this._ssrPass.setUniform("gBufferTexture2",e.depthTexture),this._blurPass1.setUniform("gBufferTexture1",e.normalTexture),this._blurPass1.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.material.define("fragment","VERTICAL"),this._blurPass2.material.define("fragment","BLEND"),this._ssrTexture=new i["a"]({type:a["a"].HALF_FLOAT}),this._texture2=new i["a"]({type:a["a"].HALF_FLOAT}),this._texture3=new i["a"]({type:a["a"].HALF_FLOAT}),this._prevTexture=new i["a"]({type:a["a"].HALF_FLOAT}),this._currentTexture=new i["a"]({type:a["a"].HALF_FLOAT}),this._frameBuffer=new l["a"]({depthBuffer:!1}),this._normalDistribution=null,this._totalSamples=256,this._samplePerFrame=4,this._ssrPass.material.define("fragment","SAMPLE_PER_FRAME",this._samplePerFrame),this._ssrPass.material.define("fragment","TOTAL_SAMPLES",this._totalSamples),this._downScale=1}s["a"].import(c["a"]),h.prototype.setAmbientCubemap=function(e,t){this._ssrPass.material.set("specularCubemap",e),this._ssrPass.material.set("specularIntensity",t);var r=e&&t;this._ssrPass.material[r?"enableTexture":"disableTexture"]("specularCubemap")},h.prototype.update=function(e,t,r,i){var a=e.getWidth(),o=e.getHeight(),s=this._ssrTexture,l=this._texture2,u=this._texture3;s.width=this._prevTexture.width=this._currentTexture.width=a/this._downScale,s.height=this._prevTexture.height=this._currentTexture.height=o/this._downScale,l.width=u.width=a,l.height=u.height=o;var c=this._frameBuffer,h=this._ssrPass,d=this._blurPass1,f=this._blurPass2,p=this._blendPass,m=new n["a"],g=new n["a"];n["a"].transpose(m,t.worldTransform),n["a"].transpose(g,t.viewMatrix),h.setUniform("sourceTexture",r),h.setUniform("projection",t.projectionMatrix.array),h.setUniform("projectionInv",t.invProjectionMatrix.array),h.setUniform("toViewSpace",m.array),h.setUniform("toWorldSpace",g.array),h.setUniform("nearZ",t.near);var _=i/this._totalSamples*this._samplePerFrame;if(h.setUniform("jitterOffset",_),h.setUniform("sampleOffset",i*this._samplePerFrame),d.setUniform("textureSize",[s.width,s.height]),f.setUniform("textureSize",[a,o]),f.setUniform("sourceTexture",r),d.setUniform("projection",t.projectionMatrix.array),f.setUniform("projection",t.projectionMatrix.array),c.attach(s),c.bind(e),h.render(e),this._physicallyCorrect&&(c.attach(this._currentTexture),p.setUniform("texture1",this._prevTexture),p.setUniform("texture2",s),p.material.set({weight1:i>=1?.95:0,weight2:i>=1?.05:1}),p.render(e)),c.attach(l),d.setUniform("texture",this._physicallyCorrect?this._currentTexture:s),d.render(e),c.attach(u),f.setUniform("texture",l),f.render(e),c.unbind(e),this._physicallyCorrect){var v=this._prevTexture;this._prevTexture=this._currentTexture,this._currentTexture=v}},h.prototype.getTargetTexture=function(){return this._texture3},h.prototype.setParameter=function(e,t){"maxIteration"===e?this._ssrPass.material.define("fragment","MAX_ITERATION",t):this._ssrPass.setUniform(e,t)},h.prototype.setPhysicallyCorrect=function(e){e?(this._normalDistribution||(this._normalDistribution=u["a"].generateNormalDistribution(64,this._totalSamples)),this._ssrPass.material.define("fragment","PHYSICALLY_CORRECT"),this._ssrPass.material.set("normalDistribution",this._normalDistribution),this._ssrPass.material.set("normalDistributionSize",[64,this._totalSamples])):this._ssrPass.material.undefine("fragment","PHYSICALLY_CORRECT"),this._physicallyCorrect=e},h.prototype.setSSAOTexture=function(e){var t=this._blurPass2;e?(t.material.enableTexture("ssaoTex"),t.material.set("ssaoTex",e)):t.material.disableTexture("ssaoTex")},h.prototype.isFinished=function(e){return!this._physicallyCorrect||e>this._totalSamples/this._samplePerFrame},h.prototype.dispose=function(e){this._ssrTexture.dispose(e),this._texture2.dispose(e),this._texture3.dispose(e),this._prevTexture.dispose(e),this._currentTexture.dispose(e),this._frameBuffer.dispose(e)},t["a"]=h},function(e,t,r){"use strict";t["a"]="@export ecgl.ssr.main\n\n#define SHADER_NAME SSR\n#define MAX_ITERATION 20;\n#define SAMPLE_PER_FRAME 5;\n#define TOTAL_SAMPLES 128;\n\nuniform sampler2D sourceTexture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform samplerCube specularCubemap;\nuniform float specularIntensity: 1;\n\nuniform mat4 projection;\nuniform mat4 projectionInv;\nuniform mat4 toViewSpace;\nuniform mat4 toWorldSpace;\n\nuniform float maxRayDistance: 200;\n\nuniform float pixelStride: 16;\nuniform float pixelStrideZCutoff: 50; \nuniform float screenEdgeFadeStart: 0.9; \nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;\n\nuniform float nearZ;\nuniform vec2 viewportSize : VIEWPORT_SIZE;\n\nuniform float jitterOffset: 0;\n\nvarying vec2 v_Texcoord;\n\n#ifdef DEPTH_DECODE\n@import clay.util.decode_float\n#endif\n\n#ifdef PHYSICALLY_CORRECT\nuniform sampler2D normalDistribution;\nuniform float sampleOffset: 0;\nuniform vec2 normalDistributionSize;\n\nvec3 transformNormal(vec3 H, vec3 N) {\n vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nvec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {\n float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));\n vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;\n return transformNormal(H, N);\n}\nfloat G_Smith(float g, float ndv, float ndl) {\n float roughness = 1.0 - g;\n float k = roughness * roughness / 2.0;\n float G1V = ndv / (ndv * (1.0 - k) + k);\n float G1L = ndl / (ndl * (1.0 - k) + k);\n return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n#endif\n\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\n{\n vec4 depthTexel = texture2D(depthTexture, uv);\n return depthTexel.r * 2.0 - 1.0;\n}\n\nfloat linearDepth(float depth)\n{\n if (projection[3][3] == 0.0) {\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n }\n else {\n return (depth - projection[3][2]) / projection[2][2];\n }\n}\n\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\n{\n if (rayZFar > rayZNear)\n {\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\n }\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\n}\n\n\nbool traceScreenSpaceRay(\n vec3 rayOrigin, vec3 rayDir, float jitter,\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\n)\n{\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\n\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\n\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\n vec4 H1 = projection * vec4(rayEnd, 1.0);\n\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\n\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\n\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\n\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\n vec2 delta = P1 - P0;\n\n bool permute = false;\n if (abs(delta.x) < abs(delta.y)) {\n permute = true;\n delta = delta.yx;\n P0 = P0.yx;\n P1 = P1.yx;\n }\n float stepDir = sign(delta.x);\n float invdx = stepDir / delta.x;\n\n vec3 dQ = (Q1 - Q0) * invdx;\n float dk = (k1 - k0) * invdx;\n\n vec2 dP = vec2(stepDir, delta.y * invdx);\n\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\n float pixStride = 1.0 + strideScaler * pixelStride;\n\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\n\n vec4 pqk = vec4(P0, Q0.z, k0);\n vec4 dPQK = vec4(dP, dQ.z, dk);\n\n pqk += dPQK * jitter;\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n float rayZNear;\n\n bool intersect = false;\n\n vec2 texelSize = 1.0 / viewportSize;\n\n iterationCount = 0.0;\n\n for (int i = 0; i < MAX_ITERATION; i++)\n {\n pqk += dPQK;\n\n rayZNear = rayZFar;\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n\n hitPixel = permute ? pqk.yx : pqk.xy;\n hitPixel *= texelSize;\n\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\n\n iterationCount += 1.0;\n\n dPQK *= 1.2;\n\n if (intersect) {\n break;\n }\n }\n\n Q0.xy += dQ.xy * iterationCount;\n Q0.z = pqk.z;\n hitPoint = Q0 / pqk.w;\n\n return intersect;\n}\n\nfloat calculateAlpha(\n float iterationCount, float reflectivity,\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\n)\n{\n float alpha = clamp(reflectivity, 0.0, 1.0);\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\n\n float _eyeFadeStart = eyeFadeStart;\n float _eyeFadeEnd = eyeFadeEnd;\n if (_eyeFadeStart > _eyeFadeEnd) {\n float tmp = _eyeFadeEnd;\n _eyeFadeEnd = _eyeFadeStart;\n _eyeFadeStart = tmp;\n }\n\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\n\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\n\n return alpha;\n}\n\n@import clay.util.rand\n\n@import clay.util.rgbm\n\nvoid main()\n{\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\n\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n\n float g = normalAndGloss.a;\n#if !defined(PHYSICALLY_CORRECT)\n if (g <= minGlossiness) {\n discard;\n }\n#endif\n\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\n\n vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);\n N = normalize((toViewSpace * vec4(N, 0.0)).xyz);\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\n vec4 pos = projectionInv * projectedPos;\n vec3 rayOrigin = pos.xyz / pos.w;\n vec3 V = -normalize(rayOrigin);\n\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n float iterationCount;\n float jitter = rand(fract(v_Texcoord + jitterOffset));\n\n#ifdef PHYSICALLY_CORRECT\n vec4 color = vec4(vec3(0.0), 1.0);\n vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);\n vec3 albedo = albedoMetalness.rgb;\n float m = albedoMetalness.a;\n vec3 diffuseColor = albedo * (1.0 - m);\n vec3 spec = mix(vec3(0.04), albedo, m);\n\n float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);\n\n for (int i = 0; i < SAMPLE_PER_FRAME; i++) {\n vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);\n vec3 rayDir = normalize(reflect(-V, H));\n#else\n vec3 rayDir = normalize(reflect(-V, N));\n#endif\n vec2 hitPixel;\n vec3 hitPoint;\n\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\n\n float dist = distance(rayOrigin, hitPoint);\n\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\n hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);\n#ifdef PHYSICALLY_CORRECT\n float ndl = clamp(dot(N, rayDir), 0.0, 1.0);\n float vdh = clamp(dot(V, H), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n vec3 litTexel = vec3(0.0);\n if (dot(hitNormal, rayDir) < 0.0 && intersect) {\n litTexel = texture2D(sourceTexture, hitPixel).rgb;\n litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);\n\n }\n else {\n #ifdef SPECULARCUBEMAP_ENABLED\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\n litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;\n#endif\n }\n color.rgb += ndl * litTexel * (\n F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)\n );\n }\n color.rgb /= float(SAMPLE_PER_FRAME);\n#else\n #if !defined(SPECULARCUBEMAP_ENABLED)\n if (dot(hitNormal, rayDir) >= 0.0) {\n discard;\n }\n if (!intersect) {\n discard;\n }\n#endif\n float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);\n vec4 color = texture2D(sourceTexture, hitPixel);\n color.rgb *= alpha;\n\n#ifdef SPECULARCUBEMAP_ENABLED\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\n alpha = alpha * (intersect ? 1.0 : 0.0);\n float bias = (1.0 -g) * 5.0;\n color.rgb += (1.0 - alpha)\n * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb\n * specularIntensity;\n#endif\n\n#endif\n\n gl_FragColor = encodeHDR(color);\n}\n@end\n\n@export ecgl.ssr.blur\n\nuniform sampler2D texture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform mat4 projection;\nuniform float depthRange : 0.05;\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\n#ifdef BLEND\n #ifdef SSAOTEX_ENABLED\nuniform sampler2D ssaoTex;\n #endif\nuniform sampler2D sourceTexture;\n#endif\n\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n\n@import clay.util.rgbm\n\n\nvoid main()\n{\n @import clay.compositor.kernel.gaussian_9\n\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\n float g = centerNTexel.a;\n float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;\n#ifdef VERTICAL\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\n#else\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\n#endif\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\n float cD = getLinearDepth(v_Texcoord);\n for (int i = 0; i < 9; i++) {\n vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\n float w = gaussianKernel[i]\n * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\n float d = getLinearDepth(coord);\n w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));\n\n weightAll += w;\n sum += decodeHDR(texture2D(texture, coord)) * w;\n }\n\n#ifdef BLEND\n float aoFactor = 1.0;\n #ifdef SSAOTEX_ENABLED\n aoFactor = texture2D(ssaoTex, v_Texcoord).r;\n #endif\n gl_FragColor = encodeHDR(\n sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))\n );\n#else\n gl_FragColor = encodeHDR(sum / weightAll);\n#endif\n}\n\n@end"},function(e,t,r){"use strict";t["a"]=[0,0,-.321585265978,-.154972575841,.458126042375,.188473391593,.842080129861,.527766490688,.147304551086,-.659453822776,-.331943915203,-.940619700594,.0479226680259,.54812163202,.701581552186,-.709825561388,-.295436780218,.940589268233,-.901489676764,.237713156085,.973570876096,-.109899459384,-.866792314779,-.451805525005,.330975007087,.800048655954,-.344275183665,.381779221166,-.386139432542,-.437418421534,-.576478634965,-.0148463392551,.385798197415,-.262426961053,-.666302061145,.682427250835,-.628010632582,-.732836215494,.10163141741,-.987658134403,.711995289051,-.320024291314,.0296005138058,.950296523438,.0130612307608,-.351024443122,-.879596633704,-.10478487883,.435712737232,.504254490347,.779203817497,.206477676721,.388264289969,-.896736162545,-.153106280781,-.629203242522,-.245517550697,.657969239148,.126830499058,.26862328493,-.634888119007,-.302301223431,.617074219636,.779817204925]},function(e,t,r){"use strict";var n=r(5),i=r(4),a=r(8),o=r(10),s=r(19),l=r(16),u=r(61),c=r(195);function h(e,t,r,n,i){var a=e.gl;t.setUniform(a,"1i",r,i),a.activeTexture(a.TEXTURE0+i),n.isRenderable()?n.bind(e):n.unbind(e)}function d(e,t,r,n,i){var a,o,s,l,u=e.gl;return function(i,c,d){if(!l||l.material!==i.material){var f=i.material,p=i.__program,m=f.get("roughness");null==m&&(m=1);var g=f.get("normalMap")||t,_=f.get("roughnessMap"),v=f.get("bumpMap"),y=f.get("uvRepeat"),x=f.get("uvOffset"),T=f.get("detailUvRepeat"),b=f.get("detailUvOffset"),w=!!v&&f.isTextureEnabled("bumpMap"),E=!!_&&f.isTextureEnabled("roughnessMap"),S=f.isDefined("fragment","DOUBLE_SIDED");v=v||r,_=_||n,d!==c?(c.set("normalMap",g),c.set("bumpMap",v),c.set("roughnessMap",_),c.set("useBumpMap",w),c.set("useRoughnessMap",E),c.set("doubleSide",S),null!=y&&c.set("uvRepeat",y),null!=x&&c.set("uvOffset",x),null!=T&&c.set("detailUvRepeat",T),null!=b&&c.set("detailUvOffset",b),c.set("roughness",m)):(p.setUniform(u,"1f","roughness",m),a!==g&&h(e,p,"normalMap",g,0),o!==v&&v&&h(e,p,"bumpMap",v,1),s!==_&&_&&h(e,p,"roughnessMap",_,2),null!=y&&p.setUniform(u,"2f","uvRepeat",y),null!=x&&p.setUniform(u,"2f","uvOffset",x),null!=T&&p.setUniform(u,"2f","detailUvRepeat",T),null!=b&&p.setUniform(u,"2f","detailUvOffset",b),p.setUniform(u,"1i","useBumpMap",+w),p.setUniform(u,"1i","useRoughnessMap",+E),p.setUniform(u,"1i","doubleSide",+S)),a=g,o=v,s=_,l=i}}}function f(e){e=e||{},this._depthTex=new n["a"]({format:i["a"].DEPTH_COMPONENT,type:i["a"].UNSIGNED_INT}),this._normalTex=new n["a"]({type:i["a"].HALF_FLOAT}),this._framebuffer=new o["a"],this._framebuffer.attach(this._normalTex),this._framebuffer.attach(this._depthTex,o["a"].DEPTH_ATTACHMENT),this._normalMaterial=new s["a"]({shader:new a["a"](a["a"].source("ecgl.normal.vertex"),a["a"].source("ecgl.normal.fragment"))}),this._normalMaterial.enableTexture(["normalMap","bumpMap","roughnessMap"]),this._defaultNormalMap=u["a"].createBlank("#000"),this._defaultBumpMap=u["a"].createBlank("#000"),this._defaultRoughessMap=u["a"].createBlank("#000"),this._debugPass=new l["a"]({fragment:a["a"].source("clay.compositor.output")}),this._debugPass.setUniform("texture",this._normalTex),this._debugPass.material.undefine("fragment","OUTPUT_ALPHA")}a["a"].import(c["a"]),f.prototype.getDepthTexture=function(){return this._depthTex},f.prototype.getNormalTexture=function(){return this._normalTex},f.prototype.update=function(e,t,r){var n=e.getWidth(),i=e.getHeight(),a=this._depthTex,o=this._normalTex,s=this._normalMaterial;a.width=n,a.height=i,o.width=n,o.height=i;var l=t.getRenderList(r).opaque;this._framebuffer.bind(e),e.gl.clearColor(0,0,0,0),e.gl.clear(e.gl.COLOR_BUFFER_BIT|e.gl.DEPTH_BUFFER_BIT),e.gl.disable(e.gl.BLEND),e.renderPass(l,r,{getMaterial:function(){return s},ifRender:function(e){return e.renderNormal},beforeRender:d(e,this._defaultNormalMap,this._defaultBumpMap,this._defaultRoughessMap,this._normalMaterial),sort:e.opaqueSortCompare}),this._framebuffer.unbind(e)},f.prototype.renderDebug=function(e){this._debugPass.render(e)},f.prototype.dispose=function(e){this._depthTex.dispose(e),this._normalTex.dispose(e)},t["a"]=f},function(e,t,r){"use strict";t["a"]="@export ecgl.normal.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n@import ecgl.common.attributes\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n@import ecgl.common.normalMap.vertexHeader\n\n@import ecgl.common.vertexAnimation.header\n\nvoid main()\n{\n\n @import ecgl.common.vertexAnimation.main\n\n @import ecgl.common.uv.main\n\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\n\n @import ecgl.common.normalMap.vertexMain\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n}\n\n\n@end\n\n\n@export ecgl.normal.fragment\n\n#define ROUGHNESS_CHANEL 0\n\nuniform bool useBumpMap;\nuniform bool useRoughnessMap;\nuniform bool doubleSide;\nuniform float roughness;\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n@import ecgl.common.normalMap.fragmentHeader\n@import ecgl.common.bumpMap.header\n\nuniform sampler2D roughnessMap;\n\nvoid main()\n{\n vec3 N = v_Normal;\n \n bool flipNormal = false;\n if (doubleSide) {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n if (dot(N, V) < 0.0) {\n flipNormal = true;\n }\n }\n\n @import ecgl.common.normalMap.fragmentMain\n\n if (useBumpMap) {\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n }\n\n float g = 1.0 - roughness;\n\n if (useRoughnessMap) {\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n }\n\n if (flipNormal) {\n N = -N;\n }\n\n gl_FragColor.rgb = (N.xyz + 1.0) * 0.5;\n gl_FragColor.a = g;\n}\n@end"},function(e,t,r){"use strict";r(9),r(3);var n=r(5),i=r(4),a=r(16),o=r(8),s=r(10);function l(e){e=e||{},this._edgePass=new a["a"]({fragment:o["a"].source("ecgl.edge")}),this._edgePass.setUniform("normalTexture",e.normalTexture),this._edgePass.setUniform("depthTexture",e.depthTexture),this._targetTexture=new n["a"]({type:i["a"].HALF_FLOAT}),this._frameBuffer=new s["a"],this._frameBuffer.attach(this._targetTexture)}l.prototype.update=function(e,t,r,n){var i=e.getWidth(),a=e.getHeight(),o=this._targetTexture;o.width=i,o.height=a;var s=this._frameBuffer;s.bind(e),this._edgePass.setUniform("projectionInv",t.invProjectionMatrix.array),this._edgePass.setUniform("textureSize",[i,a]),this._edgePass.setUniform("texture",r),this._edgePass.render(e),s.unbind(e)},l.prototype.getTargetTexture=function(){return this._targetTexture},l.prototype.setParameter=function(e,t){this._edgePass.setUniform(e,t)},l.prototype.dispose=function(e){this._targetTexture.dispose(e),this._frameBuffer.dispose(e)},t["a"]=l},function(e,t,r){"use strict";t["a"]={type:"compositor",nodes:[{name:"source",type:"texture",outputs:{color:{}}},{name:"source_half",shader:"#source(clay.compositor.downsample)",inputs:{texture:"source"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bright",shader:"#source(clay.compositor.bright)",inputs:{texture:"source_half"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{threshold:2,scale:4,textureSize:"expr([width * 1.0 / 2, height / 2])"}},{name:"bright_downsample_4",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 2, height / 2] )"}},{name:"bright_downsample_8",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 4, height / 4] )"}},{name:"bright_downsample_16",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 8, height / 8] )"}},{name:"bright_downsample_32",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 32)",height:"expr(height * 1.0 / 32)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 16, height / 16] )"}},{name:"bright_upsample_16_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_32"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 32, height / 32] )"}},{name:"bright_upsample_16_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_16_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_8_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_8_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_8_blur_v",texture2:"bright_upsample_16_blur_v"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_4_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_4_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_4_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_4_blur_v",texture2:"bright_upsample_8_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_2_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_2_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_2_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_2_blur_v",texture2:"bright_upsample_4_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_full_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_full_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_full_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bloom_composite",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_full_blur_v",texture2:"bright_upsample_2_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"coc",shader:"#source(ecgl.dof.coc)",outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{focalDist:50,focalRange:30}},{name:"dof_far_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"dof_near_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_NEARFIELD:null}},{name:"dof_coc_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"coc"},outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_COC:null}},{name:"dof_composite",shader:"#source(ecgl.dof.composite)",inputs:{original:"source",blurred:"dof_far_blur",nearfield:"dof_near_blur",coc:"coc",nearcoc:"dof_coc_blur"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}}},{name:"composite",shader:"#source(clay.compositor.hdr.composite)",inputs:{texture:"source",bloom:"bloom_composite"},defines:{}},{name:"FXAA",shader:"#source(clay.compositor.fxaa)",inputs:{texture:"composite"}}]}},function(e,t,r){"use strict";t["a"]="@export ecgl.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDistance: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\n\nvarying vec2 v_Texcoord;\n\n@import clay.util.encode_float\n\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n float aperture = focalLength / fstop;\n\n float coc;\n\n float uppper = focalDistance + focalRange;\n float lower = focalDistance - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\n\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n\n gl_FragColor = encodeFloat(coc);\n}\n@end\n\n\n@export ecgl.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import clay.util.rgbm\n@import clay.util.float\n\nvoid main()\n{\n vec4 blurredColor = texture2D(blurred, v_Texcoord);\n vec4 originalColor = texture2D(original, v_Texcoord);\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n fCoc = abs(fCoc * 2.0 - 1.0);\n\n float weight = smoothstep(0.0, 1.0, fCoc);\n \n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = texture2D(nearfield, v_Texcoord);\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n\n}\n\n@end\n\n\n\n@export ecgl.dof.diskBlur\n\n#define POISSON_KERNEL_SIZE 16;\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurRadius : 10.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\n\nuniform float percent;\n\nfloat nrand(const in vec2 n) {\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n@import clay.util.rgbm\n@import clay.util.float\n\n\nvoid main()\n{\n vec2 offset = blurRadius / textureSize;\n\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\n float cosa = cos(rnd);\n float sina = sin(rnd);\n vec4 basis = vec4(cosa, -sina, sina, cosa);\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n\n\n float weightSum = 0.0;\n\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\n vec2 ofs = poissonKernel[i];\n\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\n\n vec2 uv = v_Texcoord + ofs * offset;\n vec4 texel = texture2D(texture, uv);\n\n float w = 1.0;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n texel = texel;\n #if !defined(BLUR_NEARFIELD)\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\n w *= abs(fCoc);\n #endif\n texel.rgb *= texel.a;\n color += texel * w;\n#endif\n\n weightSum += w;\n }\n\n#ifdef BLUR_COC\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n color /= weightSum;\n color.rgb /= (color.a + 0.0001);\n gl_FragColor = color;\n#endif\n}\n\n@end"},function(e,t,r){"use strict";t["a"]="@export ecgl.edge\n\nuniform sampler2D texture;\n\nuniform sampler2D normalTexture;\nuniform sampler2D depthTexture;\n\nuniform mat4 projectionInv;\n\nuniform vec2 textureSize;\n\nuniform vec4 edgeColor: [0,0,0,0.8];\n\nvarying vec2 v_Texcoord;\n\nvec3 packColor(vec2 coord) {\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * p;\n\n return vec3(\n texture2D(normalTexture, coord).rg,\n -p4.z / p4.w / 5.0\n );\n}\n\nvoid main() {\n vec2 cc = v_Texcoord;\n vec3 center = packColor(cc);\n\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\n float dx = size / textureSize.x;\n float dy = size / textureSize.y;\n\n vec2 coord;\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\n vec3 top = packColor(cc+vec2(0.0, -dy));\n vec3 topRight = packColor(cc+vec2(dx, -dy));\n vec3 left = packColor(cc+vec2(-dx, 0.0));\n vec3 right = packColor(cc+vec2(dx, 0.0));\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\n vec3 bottom = packColor(cc+vec2(0.0, dy));\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\n\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\n\n float edge = sqrt(dot(h, h) + dot(v, v));\n\n edge = smoothstep(0.8, 1.0, edge);\n\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\n}\n@end"},function(e,t,r){"use strict";var n=r(49),i=r(16),a=r(10),o=r(5),s=r(8),l=r(9);function u(e){for(var t=[],r=0;r<30;r++)t.push([Object(n["a"])(r,2),Object(n["a"])(r,3)]);this._haltonSequence=t,this._frame=0,this._sourceTex=new o["a"],this._sourceFb=new a["a"],this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new o["a"],this._outputTex=new o["a"];var l=this._blendPass=new i["a"]({fragment:s["a"].source("clay.compositor.blend")});l.material.disableTexturesAll(),l.material.enableTexture(["texture1","texture2"]),this._blendFb=new a["a"]({depthBuffer:!1}),this._outputPass=new i["a"]({fragment:s["a"].source("clay.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(e){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}}u.prototype={constructor:u,jitterProjection:function(e,t){var r=e.viewport,n=r.devicePixelRatio||e.getDevicePixelRatio(),i=r.width*n,a=r.height*n,o=this._haltonSequence[this._frame%this._haltonSequence.length],s=new l["a"];s.array[12]=(2*o[0]-1)/i,s.array[13]=(2*o[1]-1)/a,l["a"].mul(t.projectionMatrix,s,t.projectionMatrix),l["a"].invert(t.invProjectionMatrix,t.projectionMatrix)},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},getOutputTexture:function(){return this._outputTex},resize:function(e,t){this._prevFrameTex.width=e,this._prevFrameTex.height=t,this._outputTex.width=e,this._outputTex.height=t,this._sourceTex.width=e,this._sourceTex.height=t,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty()},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(e,t,r){var n=this._blendPass;0===this._frame?(n.setUniform("weight1",0),n.setUniform("weight2",1)):(n.setUniform("weight1",.9),n.setUniform("weight2",.1)),n.setUniform("texture1",this._prevFrameTex),n.setUniform("texture2",t||this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(e),n.render(e),this._blendFb.unbind(e),r||(this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(e));var i=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=i,this._frame++},dispose:function(e){this._sourceFb.dispose(e),this._blendFb.dispose(e),this._prevFrameTex.dispose(e),this._outputTex.dispose(e),this._sourceTex.dispose(e),this._outputPass.dispose(e),this._blendPass.dispose(e)}},t["a"]=u},function(e,t,r){"use strict";var n=r(0),i=r.n(n);r(202),r(203),r(98);i.a.registerAction({type:"geo3DChangeCamera",event:"geo3dcamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"geo3D",query:e},(function(t){t.setView(e)}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(44),o=r(28),s=r(29),l=r(31),u=r(96),c=i.a.extendComponentModel({type:"geo3D",layoutMode:"box",coordinateSystem:null,optionUpdated:function(){var e=this.option;e.regions=this.getFilledRegions(e.regions,e.map);var t=i.a.helper.completeDimensions(["value"],e.data,{encodeDef:this.get("encode"),dimsDef:this.get("dimensions")}),r=new i.a.List(t,this);r.initData(e.regions);var n={};r.each((function(e){var t=r.getName(e),i=r.getItemModel(e);n[t]=i})),this._regionModelMap=n,this._data=r},getData:function(){return this._data},getRegionModel:function(e){var t=this.getData().getName(e);return this._regionModelMap[t]||new i.a.Model(null,this)},getRegionPolygonCoords:function(e){var t=this.getData().getName(e),r=this.coordinateSystem.getRegion(t);return r?r.geometries:[]},getFormattedLabel:function(e,t){var r=this._data.getName(e),n=this.getRegionModel(r),i=n.get("normal"===t?["label","formatter"]:["emphasis","label","formatter"]);null==i&&(i=n.get(["label","formatter"]));var a={name:r};if("function"===typeof i)return a.status=t,i(a);if("string"===typeof i){var o=a.seriesName;return i.replace("{a}",null!=o?o:"")}return r},defaultOption:{regions:[]}});i.a.util.merge(c.prototype,u["a"]),i.a.util.merge(c.prototype,a["a"]),i.a.util.merge(c.prototype,o["a"]),i.a.util.merge(c.prototype,s["a"]),i.a.util.merge(c.prototype,l["a"])},function(e,t,r){"use strict";var n=r(64),i=r(0),a=r.n(i),o=r(1),s=r(45),l=r(30);a.a.extendComponentView({type:"geo3D",__ecgl__:!0,init:function(e,t){this._geo3DBuilder=new n["a"](t),this.groupGL=new o["a"].Node,this._lightRoot=new o["a"].Node,this._sceneHelper=new l["a"](this._lightRoot),this._sceneHelper.initLight(this._lightRoot),this._control=new s["a"]({zr:t.getZr()}),this._control.init()},render:function(e,t,r){this.groupGL.add(this._geo3DBuilder.rootNode);var n=e.coordinateSystem;if(n&&n.viewGL){n.viewGL.add(this._lightRoot),e.get("show")?n.viewGL.add(this.groupGL):n.viewGL.remove(this.groupGL);var i=this._control;i.setViewGL(n.viewGL);var a=e.getModel("viewControl");i.setFromViewControlModel(a,0),this._sceneHelper.setScene(n.viewGL.scene),this._sceneHelper.updateLight(e),n.viewGL.setPostEffect(e.getModel("postEffect"),r),n.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._geo3DBuilder.update(e,t,r,0,e.getData().count());var o=n.viewGL.isLinearSpace()?"define":"undefine";this._geo3DBuilder.rootNode.traverse((function(e){e.material&&e.material[o]("fragment","SRGB_DECODE")})),i.off("update"),i.on("update",(function(){r.dispatchAction({type:"geo3DChangeCamera",alpha:i.getAlpha(),beta:i.getBeta(),distance:i.getDistance(),center:i.getCenter(),from:this.uid,geo3DId:e.id})})),i.update()}},afterRender:function(e,t,r,n){var i=n.renderer;this._sceneHelper.updateAmbientCubemap(i,e,r),this._sceneHelper.updateSkybox(i,e,r)},dispose:function(){this._control.dispose()}})},function(e,t,r){"use strict";function n(e,t,r){r=r||2;var n,a,s,l,u,c,d,f=t&&t.length,p=f?t[0]*r:e.length,m=i(e,0,p,r,!0),g=[];if(!m)return g;if(f&&(m=h(e,t,m,r)),e.length>80*r){n=s=e[0],a=l=e[1];for(var _=r;_<p;_+=r)u=e[_],c=e[_+1],u<n&&(n=u),c<a&&(a=c),u>s&&(s=u),c>l&&(l=c);d=Math.max(s-n,l-a)}return o(m,g,r,n,a,d),g}function i(e,t,r,n,i){var a,o;if(i===P(e,t,r,n)>0)for(a=t;a<r;a+=n)o=N(a,e[a],e[a+1],o);else for(a=r-n;a>=t;a-=n)o=N(a,e[a],e[a+1],o);return o&&b(o,o.next)&&(C(o),o=o.next),o}function a(e,t){if(!e)return e;t||(t=e);var r,n=e;do{if(r=!1,n.steiner||!b(n,n.next)&&0!==T(n.prev,n,n.next))n=n.next;else{if(C(n),n=t=n.prev,n===n.next)return null;r=!0}}while(r||n!==t);return t}function o(e,t,r,n,i,h,d){if(e){!d&&h&&m(e,n,i,h);var f,p,g=e;while(e.prev!==e.next)if(f=e.prev,p=e.next,h?l(e,n,i,h):s(e))t.push(f.i/r),t.push(e.i/r),t.push(p.i/r),C(e),e=p.next,g=p.next;else if(e=p,e===g){d?1===d?(e=u(e,t,r),o(e,t,r,n,i,h,2)):2===d&&c(e,t,r,n,i,h):o(a(e),t,r,n,i,h,1);break}}}function s(e){var t=e.prev,r=e,n=e.next;if(T(t,r,n)>=0)return!1;var i=e.next.next;while(i!==e.prev){if(y(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&T(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function l(e,t,r,n){var i=e.prev,a=e,o=e.next;if(T(i,a,o)>=0)return!1;var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,l=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,u=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,c=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,h=_(s,l,t,r,n),d=_(u,c,t,r,n),f=e.nextZ;while(f&&f.z<=d){if(f!==e.prev&&f!==e.next&&y(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&T(f.prev,f,f.next)>=0)return!1;f=f.nextZ}f=e.prevZ;while(f&&f.z>=h){if(f!==e.prev&&f!==e.next&&y(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&T(f.prev,f,f.next)>=0)return!1;f=f.prevZ}return!0}function u(e,t,r){var n=e;do{var i=n.prev,a=n.next.next;!b(i,a)&&w(i,n,n.next,a)&&S(i,a)&&S(a,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(a.i/r),C(n),C(n.next),n=e=a),n=n.next}while(n!==e);return n}function c(e,t,r,n,i,s){var l=e;do{var u=l.next.next;while(u!==l.prev){if(l.i!==u.i&&x(l,u)){var c=A(l,u);return l=a(l,l.next),c=a(c,c.next),o(l,t,r,n,i,s),void o(c,t,r,n,i,s)}u=u.next}l=l.next}while(l!==e)}function h(e,t,r,n){var o,s,l,u,c,h=[];for(o=0,s=t.length;o<s;o++)l=t[o]*n,u=o<s-1?t[o+1]*n:e.length,c=i(e,l,u,n,!1),c===c.next&&(c.steiner=!0),h.push(v(c));for(h.sort(d),o=0;o<h.length;o++)f(h[o],r),r=a(r,r.next);return r}function d(e,t){return e.x-t.x}function f(e,t){if(t=p(e,t),t){var r=A(t,e);a(r,r.next)}}function p(e,t){var r,n=t,i=e.x,a=e.y,o=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){var s=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=i&&s>o){if(o=s,s===i){if(a===n.y)return n;if(a===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!r)return null;if(i===o)return r.prev;var l,u=r,c=r.x,h=r.y,d=1/0;n=r.next;while(n!==u)i>=n.x&&n.x>=c&&i!==n.x&&y(a<h?i:o,a,c,h,a<h?o:i,a,n.x,n.y)&&(l=Math.abs(a-n.y)/(i-n.x),(l<d||l===d&&n.x>r.x)&&S(n,e)&&(r=n,d=l)),n=n.next;return r}function m(e,t,r,n){var i=e;do{null===i.z&&(i.z=_(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,g(i)}function g(e){var t,r,n,i,a,o,s,l,u=1;do{r=e,e=null,a=null,o=0;while(r){for(o++,n=r,s=0,t=0;t<u;t++)if(s++,n=n.nextZ,!n)break;l=u;while(s>0||l>0&&n)0!==s&&(0===l||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;r=n}a.nextZ=null,u*=2}while(o>1);return e}function _(e,t,r,n,i){return e=32767*(e-r)/i,t=32767*(t-n)/i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function v(e){var t=e,r=e;do{t.x<r.x&&(r=t),t=t.next}while(t!==e);return r}function y(e,t,r,n,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(n-s)-(r-o)*(t-s)>=0&&(r-o)*(a-s)-(i-o)*(n-s)>=0}function x(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!E(e,t)&&S(e,t)&&S(t,e)&&M(e,t)}function T(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function b(e,t){return e.x===t.x&&e.y===t.y}function w(e,t,r,n){return!!(b(e,t)&&b(r,n)||b(e,n)&&b(r,t))||T(e,t,r)>0!==T(e,t,n)>0&&T(r,n,e)>0!==T(r,n,t)>0}function E(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&w(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function S(e,t){return T(e.prev,e,e.next)<0?T(e,t,e.next)>=0&&T(e,e.prev,t)>=0:T(e,t,e.prev)<0||T(e,e.next,t)<0}function M(e,t){var r=e,n=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{r.y>a!==r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next}while(r!==e);return n}function A(e,t){var r=new L(e.i,e.x,e.y),n=new L(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function N(e,t,r,n){var i=new L(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function C(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function L(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function P(e,t,r,n){for(var i=0,a=t,o=r-n;a<r;a+=n)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}t["a"]=n,n.deviation=function(e,t,r,n){var i=t&&t.length,a=i?t[0]*r:e.length,o=Math.abs(P(e,0,a,r));if(i)for(var s=0,l=t.length;s<l;s++){var u=t[s]*r,c=s<l-1?t[s+1]*r:e.length;o-=Math.abs(P(e,u,c,r))}var h=0;for(s=0;s<n.length;s+=3){var d=n[s]*r,f=n[s+1]*r,p=n[s+2]*r;h+=Math.abs((e[d]-e[p])*(e[f+1]-e[d+1])-(e[d]-e[f])*(e[p+1]-e[d+1]))}return 0===o&&0===h?0:Math.abs((h-o)/o)}},function(e,t,r){var n=r(13),i={"南海诸岛":[32,80],"广东":[0,-10],"香港":[10,5],"澳门":[-10,10],"天津":[5,5]};function a(e){n.each(e.regions,(function(e){var t=i[e.name];if(t){var r=e.center;r[0]+=t[0]/10.5,r[1]+=-t[1]/14}}))}e.exports=a},function(e,t,r){var n=r(13),i={Russia:[100,60],"United States":[-99,38],"United States of America":[-99,38]};function a(e){n.each(e.regions,(function(e){var t=i[e.name];if(t){var r=e.center;r[0]=t[0],r[1]=t[1]}}))}e.exports=a},function(e,t,r){"use strict";var n=r(0),i=r.n(n);r(208),r(209),r(211);i.a.registerAction({type:"globeChangeCamera",event:"globecamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"globe",query:e},(function(t){t.setView(e)}))})),i.a.registerAction({type:"globeUpdateDisplacment",event:"globedisplacementupdated",update:"update"},(function(e,t){}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(44),o=r(28),s=r(29),l=r(31);function u(e,t){e.id=e.id||e.name||t+""}var c=i.a.extendComponentModel({type:"globe",layoutMode:"box",coordinateSystem:null,init:function(){c.superApply(this,"init",arguments),i.a.util.each(this.option.layers,(function(e,t){i.a.util.merge(e,this.defaultLayerOption),u(e,t)}),this)},mergeOption:function(e){var t=this.option.layers;function r(e){return i.a.util.reduce(e,(function(e,t,r){return u(t,r),e[t.id]=t,e}),{})}if(this.option.layers=null,c.superApply(this,"mergeOption",arguments),t&&t.length){var n=r(e.layers),a=r(t);for(var o in n)a[o]?i.a.util.merge(a[o],n[o],!0):t.push(e.layers[o]);this.option.layers=t}i.a.util.each(this.option.layers,(function(e){i.a.util.merge(e,this.defaultLayerOption)}),this)},optionUpdated:function(){this.updateDisplacementHash()},defaultLayerOption:{show:!0,type:"overlay"},defaultOption:{show:!0,zlevel:-10,left:0,top:0,width:"100%",height:"100%",environment:"auto",baseColor:"#fff",baseTexture:"",heightTexture:"",displacementTexture:"",displacementScale:0,displacementQuality:"medium",globeRadius:100,globeOuterRadius:150,shading:"lambert",light:{main:{time:""}},viewControl:{autoRotate:!0,panSensitivity:0,targetCoord:null},layers:[]},setDisplacementData:function(e,t,r){this.displacementData=e,this.displacementWidth=t,this.displacementHeight=r},getDisplacementTexture:function(){return this.get("displacementTexture")||this.get("heightTexture")},getDisplacemenScale:function(){var e=this.getDisplacementTexture(),t=this.get("displacementScale");return e&&"none"!==e||(t=0),t},hasDisplacement:function(){return this.getDisplacemenScale()>0},_displacementChanged:!0,_displacementScale:0,updateDisplacementHash:function(){var e=this.getDisplacementTexture(),t=this.getDisplacemenScale();this._displacementChanged=this._displacementTexture!==e||this._displacementScale!==t,this._displacementTexture=e,this._displacementScale=t},isDisplacementChanged:function(){return this._displacementChanged}});i.a.util.merge(c.prototype,a["a"]),i.a.util.merge(c.prototype,o["a"]),i.a.util.merge(c.prototype,s["a"]),i.a.util.merge(c.prototype,l["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(45),s=r(30),l=r(210),u=r(2);i.a.extendComponentView({type:"globe",__ecgl__:!0,_displacementScale:0,init:function(e,t){this.groupGL=new a["a"].Node,this._sphereGeometry=new a["a"].SphereGeometry({widthSegments:200,heightSegments:100,dynamic:!0}),this._overlayGeometry=new a["a"].SphereGeometry({widthSegments:80,heightSegments:40}),this._planeGeometry=new a["a"].PlaneGeometry,this._earthMesh=new a["a"].Mesh({renderNormal:!0}),this._lightRoot=new a["a"].Node,this._sceneHelper=new s["a"],this._sceneHelper.initLight(this._lightRoot),this.groupGL.add(this._earthMesh),this._control=new o["a"]({zr:t.getZr()}),this._control.init(),this._layerMeshes={}},render:function(e,t,r){var n=e.coordinateSystem,i=e.get("shading");n.viewGL.add(this._lightRoot),e.get("show")?n.viewGL.add(this.groupGL):n.viewGL.remove(this.groupGL),this._sceneHelper.setScene(n.viewGL.scene),n.viewGL.setPostEffect(e.getModel("postEffect"),r),n.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling"));var o=this._earthMesh;o.geometry=this._sphereGeometry;var s="ecgl."+i;o.material&&o.material.shader.name===s||(o.material=a["a"].createMaterial(s)),a["a"].setMaterialFromModel(i,o.material,e,r),["roughnessMap","metalnessMap","detailMap","normalMap"].forEach((function(e){var t=o.material.get(e);t&&(t.flipY=!1)})),o.material.set("color",a["a"].parseColor(e.get("baseColor")));var l=.99*n.radius;o.scale.set(l,l,l);var u=o.material.setTextureImage("diffuseMap",e.get("baseTexture"),r,{flipY:!1,anisotropic:8});u&&u.surface&&u.surface.attachToMesh(o);var c=o.material.setTextureImage("bumpMap",e.get("heightTexture"),r,{flipY:!1,anisotropic:8});c&&c.surface&&c.surface.attachToMesh(o),o.material[e.get("postEffect.enable")?"define":"undefine"]("fragment","SRGB_DECODE"),this._updateLight(e,r),this._displaceVertices(e,r),this._updateViewControl(e,r),this._updateLayers(e,r)},afterRender:function(e,t,r,n){var i=n.renderer;this._sceneHelper.updateAmbientCubemap(i,e,r),this._sceneHelper.updateSkybox(i,e,r)},_updateLayers:function(e,t){var r=e.coordinateSystem,n=e.get("layers"),o=r.radius,s=[],l=[],c=[],h=[];i.a.util.each(n,(function(e){var n=new i.a.Model(e),d=n.get("type"),f=a["a"].loadTexture(n.get("texture"),t,{flipY:!1,anisotropic:8});if(f.surface&&f.surface.attachToMesh(this._earthMesh),"blend"===d){var p=n.get("blendTo"),m=u["a"].firstNotNull(n.get("intensity"),1);"emission"===p?(c.push(f),h.push(m)):(s.push(f),l.push(m))}else{var g=n.get("id"),_=this._layerMeshes[g];_||(_=this._layerMeshes[g]=new a["a"].Mesh({geometry:this._overlayGeometry,castShadow:!1,ignorePicking:!0}));var v=n.get("shading");"lambert"===v?(_.material=_.__lambertMaterial||new a["a"].Material({autoUpdateTextureStatus:!1,shader:a["a"].createShader("ecgl.lambert"),transparent:!0,depthMask:!1}),_.__lambertMaterial=_.material):(_.material=_.__colorMaterial||new a["a"].Material({autoUpdateTextureStatus:!1,shader:a["a"].createShader("ecgl.color"),transparent:!0,depthMask:!1}),_.__colorMaterial=_.material),_.material.enableTexture("diffuseMap");var y=n.get("distance"),x=o+(null==y?r.radius/100:y);_.scale.set(x,x,x),o=x;var T=this._blankTexture||(this._blankTexture=a["a"].createBlankTexture("rgba(255, 255, 255, 0)"));_.material.set("diffuseMap",T),a["a"].loadTexture(n.get("texture"),t,{flipY:!1,anisotropic:8},(function(e){e.surface&&e.surface.attachToMesh(_),_.material.set("diffuseMap",e),t.getZr().refresh()})),n.get("show")?this.groupGL.add(_):this.groupGL.remove(_)}}),this);var d=this._earthMesh.material;d.define("fragment","LAYER_DIFFUSEMAP_COUNT",s.length),d.define("fragment","LAYER_EMISSIVEMAP_COUNT",c.length),d.set("layerDiffuseMap",s),d.set("layerDiffuseIntensity",l),d.set("layerEmissiveMap",c),d.set("layerEmissionIntensity",h);var f=e.getModel("debug.wireframe");if(f.get("show")){d.define("both","WIREFRAME_TRIANGLE");var p=a["a"].parseColor(f.get("lineStyle.color")||"rgba(0,0,0,0.5)"),m=u["a"].firstNotNull(f.get("lineStyle.width"),1);d.set("wireframeLineWidth",m),d.set("wireframeLineColor",p)}else d.undefine("both","WIREFRAME_TRIANGLE")},_updateViewControl:function(e,t){var r=e.coordinateSystem,n=e.getModel("viewControl"),i=(r.viewGL.camera,this);function a(){return{type:"globeChangeCamera",alpha:o.getAlpha(),beta:o.getBeta(),distance:o.getDistance()-r.radius,center:o.getCenter(),from:i.uid,globeId:e.id}}var o=this._control;o.setViewGL(r.viewGL);var s,l,u=n.get("targetCoord");null!=u&&(l=u[0]+90,s=u[1]),o.setFromViewControlModel(n,{baseDistance:r.radius,alpha:s,beta:l}),o.off("update"),o.on("update",(function(){t.dispatchAction(a())}))},_displaceVertices:function(e,t){var r=e.get("displacementQuality"),n=e.get("debug.wireframe.show"),i=e.coordinateSystem;if(e.isDisplacementChanged()||r!==this._displacementQuality||n!==this._showDebugWireframe){this._displacementQuality=r,this._showDebugWireframe=n;var a=this._sphereGeometry,o={low:100,medium:200,high:400,ultra:800}[r]||200,s=o/2;(a.widthSegments!==o||n)&&(a.widthSegments=o,a.heightSegments=s,a.build()),this._doDisplaceVertices(a,i),n&&a.generateBarycentric()}},_doDisplaceVertices:function(e,t){var r=e.attributes.position.value,n=e.attributes.texcoord0.value,i=e.__originalPosition;i&&i.length===r.length||(i=new Float32Array(r.length),i.set(r),e.__originalPosition=i);for(var a=t.displacementWidth,o=t.displacementHeight,s=t.displacementData,l=0;l<e.vertexCount;l++){var u=3*l,c=2*l,h=i[u+1],d=i[u+2],f=i[u+3],p=n[c++],m=n[c++],g=Math.round(p*(a-1)),_=Math.round(m*(o-1)),v=_*a+g,y=s?s[v]:0;r[u+1]=h+h*y,r[u+2]=d+d*y,r[u+3]=f+f*y}e.generateVertexNormals(),e.dirty(),e.updateBoundingBox()},_updateLight:function(e,t){var r=this._earthMesh;this._sceneHelper.updateLight(e);var n=this._sceneHelper.mainLight,a=e.get("light.main.time")||new Date,o=l["a"].getPosition(i.a.number.parseDate(a),0,0),s=Math.cos(o.altitude);n.position.y=-s*Math.cos(o.azimuth),n.position.x=Math.sin(o.altitude),n.position.z=s*Math.sin(o.azimuth),n.lookAt(r.getWorldPosition())},dispose:function(e,t){this.groupGL.removeAll(),this._control.dispose()}})},function(e,t,r){"use strict";var n=Math.PI,i=Math.sin,a=Math.cos,o=Math.tan,s=Math.asin,l=Math.atan2,u=n/180,c=864e5,h=2440588,d=2451545;function f(e){return e.valueOf()/c-.5+h}function p(e){return f(e)-d}var m=23.4397*u;function g(e,t){return l(i(e)*a(m)-o(t)*i(m),a(e))}function _(e,t){return s(i(t)*a(m)+a(t)*i(m)*i(e))}function v(e,t,r){return l(i(e),a(e)*i(t)-o(r)*a(t))}function y(e,t,r){return s(i(t)*i(r)+a(t)*a(r)*a(e))}function x(e,t){return u*(280.16+360.9856235*e)-t}function T(e){return u*(357.5291+.98560028*e)}function b(e){var t=u*(1.9148*i(e)+.02*i(2*e)+3e-4*i(3*e)),r=102.9372*u;return e+t+r+n}function w(e){var t=T(e),r=b(t);return{dec:_(r,0),ra:g(r,0)}}var E={getPosition:function(e,t,r){var n=u*-r,i=u*t,a=p(e),o=w(a),s=x(a,n)-o.ra;return{azimuth:v(s,i,o.dec),altitude:y(s,i,o.dec)}}};t["a"]=E},function(e,t,r){"use strict";var n=r(212),i=r(0),a=r.n(i),o=r(47),s=r.n(o),l=r(22),u=r(2),c=r(1);function h(e,t){var r=document.createElement("canvas"),n=r.getContext("2d"),i=e.width,a=e.height;r.width=i,r.height=a,n.drawImage(e,0,0,i,a);for(var o=n.getImageData(0,0,i,a).data,s=new Float32Array(o.length/4),l=0;l<o.length/4;l++){var u=o[4*l];s[l]=u/255*t}return{data:s,width:i,height:a}}function d(e,t){var r=e.getBoxLayoutParams(),n=s.a.getLayoutRect(r,{width:t.getWidth(),height:t.getHeight()});n.y=t.getHeight()-n.y-n.height,this.viewGL.setViewport(n.x,n.y,n.width,n.height,t.getDevicePixelRatio()),this.radius=e.get("globeRadius");var i=e.get("globeOuterRadius");this.altitudeAxis&&this.altitudeAxis.setExtent(0,i-this.radius)}function f(e,t){var r=[1/0,-1/0];if(e.eachSeries((function(e){if(e.coordinateSystem===this){var t=e.getData(),n=e.coordDimToDataDim("alt"),i=n&&n[0];if(i){var a=t.getDataExtent(i,!0);r[0]=Math.min(r[0],a[0]),r[1]=Math.max(r[1],a[1])}}}),this),r&&isFinite(r[1]-r[0])){var n=a.a.helper.createScale(r,{type:"value",min:"dataMin",max:"dataMax"});this.altitudeAxis=new a.a.Axis("altitude",n),this.resize(this.model,t)}}var p={dimensions:n["a"].prototype.dimensions,create:function(e,t){var r=[];return e.eachComponent("globe",(function(e){e.__viewGL=e.__viewGL||new l["a"];var i=new n["a"];i.viewGL=e.__viewGL,e.coordinateSystem=i,i.model=e,r.push(i),i.resize=d,i.resize(e,t),i.update=f})),e.eachSeries((function(t){if("globe"===t.get("coordinateSystem")){var r=t.getReferringComponents("globe")[0];if(r||(r=e.getComponent("globe")),!r)throw new Error('globe "'+u["a"].firstNotNull(t.get("globe3DIndex"),t.get("globe3DId"),0)+'" not found');var n=r.coordinateSystem;t.coordinateSystem=n}})),e.eachComponent("globe",(function(e,r){var n=e.coordinateSystem,i=e.getDisplacementTexture(),a=e.getDisplacemenScale();if(e.isDisplacementChanged()){if(e.hasDisplacement()){var o=!0;c["a"].loadTexture(i,t,(function(r){var n=r.image,i=h(n,a);e.setDisplacementData(i.data,i.width,i.height),o||t.dispatchAction({type:"globeUpdateDisplacment"})})),o=!1}else n.setDisplacementData(null,0,0);n.setDisplacementData(e.displacementData,e.displacementWidth,e.displacementHeight)}})),r}};a.a.registerCoordinateSystem("globe",p)},function(e,t,r){"use strict";var n=r(6),i=n["a"].vec3;function a(e){this.radius=e,this.viewGL=null,this.altitudeAxis,this.displacementData=null,this.displacementWidth,this.displacementHeight}a.prototype={constructor:a,dimensions:["lng","lat","alt"],type:"globe",containPoint:function(){},setDisplacementData:function(e,t,r){this.displacementData=e,this.displacementWidth=t,this.displacementHeight=r},_getDisplacementScale:function(e,t){var r=(e+180)/360*(this.displacementWidth-1),n=(90-t)/180*(this.displacementHeight-1),i=Math.round(r)+Math.round(n)*this.displacementWidth;return this.displacementData[i]},dataToPoint:function(e,t){var r=e[0],n=e[1],i=e[2]||0,a=this.radius;this.displacementData&&(a*=1+this._getDisplacementScale(r,n)),this.altitudeAxis&&(a+=this.altitudeAxis.dataToCoord(i)),r=r*Math.PI/180,n=n*Math.PI/180;var o=Math.cos(n)*a;return t=t||[],t[0]=-o*Math.cos(r+Math.PI),t[1]=Math.sin(n)*a,t[2]=o*Math.sin(r+Math.PI),t},pointToData:function(e,t){var r=e[0],n=e[1],a=e[2],o=i.len(e);r/=o,n/=o,a/=o;var s=Math.asin(n),l=Math.atan2(a,-r);l<0&&(l=2*Math.PI+l);var u=180*s/Math.PI,c=180*l/Math.PI-180;return t=t||[],t[0]=c,t[1]=u,t[2]=o-this.radius,this.altitudeAxis&&(t[2]=this.altitudeAxis.coordToData(t[2])),t}},t["a"]=a},function(e,t,r){"use strict";var n=r(0),i=r.n(n);r(214),r(216),r(217);i.a.registerAction({type:"mapbox3DChangeCamera",event:"mapbox3dcamerachanged",update:"mapbox3D:updateCamera"},(function(e,t){t.eachComponent({mainType:"mapbox3D",query:e},(function(t){t.setMapboxCameraOption(e)}))}))},function(e,t,r){"use strict";var n=r(215),i=r(0),a=r.n(i),o=r(101),s=Object(o["a"])("mapbox3D",n["a"],(function(e){e.forEach((function(e){e.setCameraOption(e.model.getMapboxCameraOption())}))}));a.a.registerCoordinateSystem("mapbox3D",s)},function(e,t,r){"use strict";var n=r(100);function i(){n["a"].apply(this,arguments)}i.prototype=new n["a"],i.prototype.constructor=i,i.prototype.type="mapbox3D",t["a"]=i},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(28),o=r(29),s=["zoom","center","pitch","bearing"],l=i.a.extendComponentModel({type:"mapbox3D",layoutMode:"box",coordinateSystem:null,defaultOption:{zlevel:-10,style:"mapbox://styles/mapbox/light-v9",center:[0,0],zoom:0,pitch:0,bearing:0,light:{main:{alpha:20,beta:30}},altitudeScale:1,boxHeight:"auto"},getMapboxCameraOption:function(){var e=this;return s.reduce((function(t,r){return t[r]=e.get(r),t}),{})},setMapboxCameraOption:function(e){null!=e&&s.forEach((function(t){null!=e[t]&&(this.option[t]=e[t])}),this)},getMapbox:function(){return this._mapbox},setMapbox:function(e){this._mapbox=e}});i.a.util.merge(l.prototype,a["a"]),i.a.util.merge(l.prototype,o["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(218),o=r(30),s=r(1),l=r(102);s["a"].Shader.import(l["a"]);i.a.extendComponentView({type:"mapbox3D",__ecgl__:!0,init:function(e,t){var r=t.getZr();this._zrLayer=new a["a"]("mapbox3D",r),r.painter.insertLayer(-1e3,this._zrLayer),this._lightRoot=new s["a"].Node,this._sceneHelper=new o["a"](this._lightRoot),this._sceneHelper.initLight(this._lightRoot);var n=this._zrLayer.getMapbox(),i=this._dispatchInteractAction.bind(this,t,n);["zoom","rotate","drag","pitch","rotate","move"].forEach((function(e){n.on(e,i)})),this._groundMesh=new s["a"].Mesh({geometry:new s["a"].PlaneGeometry,material:new s["a"].Material({shader:new s["a"].Shader({vertex:s["a"].Shader.source("ecgl.displayShadow.vertex"),fragment:s["a"].Shader.source("ecgl.displayShadow.fragment")}),depthMask:!1}),renderOrder:-100,culling:!1,castShadow:!1,$ignorePicking:!0,renderNormal:!0})},render:function(e,t,r){var n=this._zrLayer.getMapbox(),i=e.get("style"),a=JSON.stringify(i);a!==this._oldStyleStr&&i&&n.setStyle(i),this._oldStyleStr=a,n.setCenter(e.get("center")),n.setZoom(e.get("zoom")),n.setPitch(e.get("pitch")),n.setBearing(e.get("bearing")),e.setMapbox(n);var o=e.coordinateSystem;o.viewGL.scene.add(this._lightRoot),o.viewGL.add(this._groundMesh),this._updateGroundMesh(),this._sceneHelper.setScene(o.viewGL.scene),this._sceneHelper.updateLight(e),o.viewGL.setPostEffect(e.getModel("postEffect"),r),o.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._mapbox3DModel=e},afterRender:function(e,t,r,n){var i=n.renderer;this._sceneHelper.updateAmbientCubemap(i,e,r),this._sceneHelper.updateSkybox(i,e,r),e.coordinateSystem.viewGL.scene.traverse((function(e){e.material&&(e.material.define("fragment","NORMAL_UP_AXIS",2),e.material.define("fragment","NORMAL_FRONT_AXIS",1))}))},updateCamera:function(e,t,r,n){e.coordinateSystem.setCameraOption(n),this._updateGroundMesh(),r.getZr().refresh()},_dispatchInteractAction:function(e,t,r){e.dispatchAction({type:"mapbox3DChangeCamera",pitch:t.getPitch(),zoom:t.getZoom(),center:t.getCenter().toArray(),bearing:t.getBearing(),mapbox3DId:this._mapbox3DModel&&this._mapbox3DModel.id})},_updateGroundMesh:function(){if(this._mapbox3DModel){var e=this._mapbox3DModel.coordinateSystem,t=e.dataToPoint(e.center);this._groundMesh.position.set(t[0],t[1],-.001);var r=new s["a"].Plane(new s["a"].Vector3(0,0,1),0),n=e.viewGL.camera.castRay(new s["a"].Vector2(-1,-1)),i=e.viewGL.camera.castRay(new s["a"].Vector2(1,1)),a=n.intersectPlane(r),o=i.intersectPlane(r),l=a.dist(o)/e.viewGL.rootNode.scale.x;this._groundMesh.scale.set(l,l,1)}},dispose:function(e,t){this._zrLayer&&this._zrLayer.dispose(),t.getZr().painter.delLayer(-1e3)}})},function(e,t,r){"use strict";function n(e,t){if(this.id=e,this.zr=t,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute;left:0;right:0;top:0;bottom:0;",!mapboxgl)throw new Error("Mapbox GL library must be included. See https://www.mapbox.com/mapbox-gl-js/api/");this._mapbox=new mapboxgl.Map({container:this.dom}),this._initEvents()}n.prototype.resize=function(){this._mapbox.resize()},n.prototype.getMapbox=function(){return this._mapbox},n.prototype.clear=function(){},n.prototype.refresh=function(){this._mapbox.resize()};var i=["mousedown","mouseup","click","dblclick","mousemove","mousewheel","wheel","touchstart","touchend","touchmove","touchcancel"];n.prototype._initEvents=function(){var e=this._mapbox.getCanvasContainer();this._handlers=this._handlers||{contextmenu:function(e){return e.preventDefault(),!1}},i.forEach((function(t){this._handlers[t]=function(t){var r={};for(var n in t)r[n]=t[n];r.bubbles=!1;var i=new t.constructor(t.type,r);e.dispatchEvent(i)},this.zr.dom.addEventListener(t,this._handlers[t])}),this),this.zr.dom.addEventListener("contextmenu",this._handlers.contextmenu)},n.prototype.dispose=function(){i.forEach((function(e){this.zr.dom.removeEventListener(e,this._handlers[e])}),this)},t["a"]=n},function(e,t,r){"use strict";var n=r(0),i=r.n(n);r(220),r(222),r(223);i.a.registerAction({type:"maptalks3DChangeCamera",event:"maptalks3dcamerachanged",update:"maptalks3D:updateCamera"},(function(e,t){t.eachComponent({mainType:"maptalks3D",query:e},(function(t){t.setMaptalksCameraOption(e)}))}))},function(e,t,r){"use strict";var n=r(221),i=r(0),a=r.n(i),o=r(101),s=Object(o["a"])("maptalks3D",n["a"],(function(e){e.forEach((function(e){e.setCameraOption(e.model.getMaptalksCameraOption())}))}));a.a.registerCoordinateSystem("maptalks3D",s)},function(e,t,r){"use strict";var n=r(100);function i(){n["a"].apply(this,arguments),this.maxPitch=85,this.zoomOffset=1}i.prototype=new n["a"],i.prototype.constructor=i,i.prototype.type="maptalks3D",t["a"]=i},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(28),o=r(29),s=["zoom","center","pitch","bearing"],l=i.a.extendComponentModel({type:"maptalks3D",layoutMode:"box",coordinateSystem:null,defaultOption:{zlevel:-10,urlTemplate:"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",attribution:'&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>',center:[0,0],zoom:0,pitch:0,bearing:0,light:{main:{alpha:20,beta:30}},altitudeScale:1,boxHeight:"auto"},getMaptalksCameraOption:function(){var e=this;return s.reduce((function(t,r){return t[r]=e.get(r),t}),{})},setMaptalksCameraOption:function(e){null!=e&&s.forEach((function(t){null!=e[t]&&(this.option[t]=e[t])}),this)},getMaptalks:function(){return this._maptalks},setMaptalks:function(e){this._maptalks=e}});i.a.util.merge(l.prototype,a["a"]),i.a.util.merge(l.prototype,o["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(224),o=r(30),s=r(1),l=r(102);s["a"].Shader.import(l["a"]);i.a.extendComponentView({type:"maptalks3D",__ecgl__:!0,init:function(e,t){this._groundMesh=new s["a"].Mesh({geometry:new s["a"].PlaneGeometry,material:new s["a"].Material({shader:new s["a"].Shader({vertex:s["a"].Shader.source("ecgl.displayShadow.vertex"),fragment:s["a"].Shader.source("ecgl.displayShadow.fragment")}),depthMask:!1}),renderOrder:-100,culling:!1,castShadow:!1,$ignorePicking:!0,renderNormal:!0})},_initMaptalksLayer:function(e,t){var r=t.getZr();this._zrLayer=new a["a"]("maptalks3D",r,e.get("center"),e.get("zoom")),r.painter.insertLayer(-1e3,this._zrLayer),this._lightRoot=new s["a"].Node,this._sceneHelper=new o["a"](this._lightRoot),this._sceneHelper.initLight(this._lightRoot);var n=this._zrLayer.getMaptalks(),i=this._dispatchInteractAction.bind(this,t,n);["zoomend","zooming","zoomstart","dragrotating","pitch","pitchend","movestart","moving","moveend","resize","touchstart","touchmove","touchend"].forEach((function(e){n.on(e,i)}))},render:function(e,t,r){this._zrLayer||this._initMaptalksLayer(e,r);var n=this._zrLayer.getMaptalks(),i=e.get("urlTemplate"),a=n.getBaseLayer();i!==this._oldUrlTemplate&&(a?a.setOptions({urlTemplate:i,attribution:e.get("attribution")}):(a=new maptalks.TileLayer("maptalks-echarts-gl-baselayer",{urlTemplate:i,subdomains:["a","b","c"],attribution:e.get("attribution")}),n.setBaseLayer(a))),this._oldUrlTemplate=i,n.setCenter(e.get("center")),n.setZoom(e.get("zoom"),{animation:!1}),n.setPitch(e.get("pitch")),n.setBearing(e.get("bearing")),e.setMaptalks(n);var o=e.coordinateSystem;o.viewGL.scene.add(this._lightRoot),o.viewGL.add(this._groundMesh),this._updateGroundMesh(),this._sceneHelper.setScene(o.viewGL.scene),this._sceneHelper.updateLight(e),o.viewGL.setPostEffect(e.getModel("postEffect"),r),o.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._maptalks3DModel=e},afterRender:function(e,t,r,n){var i=n.renderer;this._sceneHelper.updateAmbientCubemap(i,e,r),this._sceneHelper.updateSkybox(i,e,r),e.coordinateSystem.viewGL.scene.traverse((function(e){e.material&&(e.material.define("fragment","NORMAL_UP_AXIS",2),e.material.define("fragment","NORMAL_FRONT_AXIS",1))}))},updateCamera:function(e,t,r,n){e.coordinateSystem.setCameraOption(n),this._updateGroundMesh(),r.getZr().refresh()},_dispatchInteractAction:function(e,t,r){e.dispatchAction({type:"maptalks3DChangeCamera",pitch:t.getPitch(),zoom:t.getZoom(),center:t.getCenter().toArray(),bearing:t.getBearing(),maptalks3DId:this._maptalks3DModel&&this._maptalks3DModel.id})},_updateGroundMesh:function(){if(this._maptalks3DModel){var e=this._maptalks3DModel.coordinateSystem,t=e.dataToPoint(e.center);this._groundMesh.position.set(t[0],t[1],-.001);var r=new s["a"].Plane(new s["a"].Vector3(0,0,1),0),n=e.viewGL.camera.castRay(new s["a"].Vector2(-1,-1)),i=e.viewGL.camera.castRay(new s["a"].Vector2(1,1)),a=n.intersectPlane(r),o=i.intersectPlane(r),l=a.dist(o)/e.viewGL.rootNode.scale.x;this._groundMesh.scale.set(l,l,1)}},dispose:function(e,t){this._zrLayer&&this._zrLayer.dispose(),t.getZr().painter.delLayer(-1e3)}})},function(e,t,r){"use strict";function n(e,t,r,n){if(this.id=e,this.zr=t,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute;left:0;right:0;top:0;bottom:0;",!maptalks)throw new Error("Maptalks library must be included. See https://maptalks.org");this._maptalks=new maptalks.Map(this.dom,{center:r,zoom:n,fog:!1}),this._initEvents()}n.prototype.resize=function(){this._maptalks.checkSize()},n.prototype.getMaptalks=function(){return this._maptalks},n.prototype.clear=function(){},n.prototype.refresh=function(){this._maptalks.checkSize()};var i=["mousedown","mouseup","click","dblclick","mousemove","mousewheel","DOMMouseScroll","touchstart","touchend","touchmove","touchcancel"];n.prototype._initEvents=function(){var e=this.dom;this._handlers=this._handlers||{contextmenu:function(e){return e.preventDefault(),!1}},i.forEach((function(t){this._handlers[t]=function(r){var n={};for(var i in r)n[i]=r[i];n.bubbles=!1;var a=new r.constructor(r.type,n);"mousewheel"===t||"DOMMouseScroll"===t?e.dispatchEvent(a):e.firstElementChild.dispatchEvent(a)},this.zr.dom.addEventListener(t,this._handlers[t])}),this),this.zr.dom.addEventListener("contextmenu",this._handlers.contextmenu)},n.prototype.dispose=function(){i.forEach((function(e){this.zr.dom.removeEventListener(e,this._handlers[e])}),this),this._maptalks.remove()},t["a"]=n},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(226),r(229),r(231),r(17));i.a.registerVisual(Object(a["a"])("bar3D")),i.a.registerProcessor((function(e,t){e.eachSeriesByType("bar3d",(function(e){var t=e.getData();t.filterSelf((function(e){return t.hasValue(e)}))}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(3),o=r(6),s=r(227),l=r(228),u=o["a"].vec3,c=i.a.helper.dataStack.isDimensionStacked;function h(e,t){var r=e.getData(),n=e.get("minHeight")||0,o=e.get("barSize"),s=["lng","lat","alt"].map((function(t){return e.coordDimToDataDim(t)[0]}));if(null==o){var c=t.radius*Math.PI,h=Object(l["a"])(r,s[0],s[1]);o=[c/Math.sqrt(r.count()/h),c/Math.sqrt(r.count()/h)]}else i.a.util.isArray(o)||(o=[o,o]);var d=p(r,s);r.each(s,(function(e,i,a,s){var l=r.get(d.dimension,s),c=d.isStacked?l-a:t.altitudeAxis.scale.getExtent()[0],h=Math.max(t.altitudeAxis.dataToCoord(a),n),f=t.dataToPoint([e,i,c]),p=t.dataToPoint([e,i,l]),m=u.sub([],p,f);u.normalize(m,m);var g=[o[0],h,o[1]];r.setItemLayout(s,[f,m,g])})),r.setLayout("orient",a["a"].UP.array)}function d(e,t){var r=e.getData(),n=e.get("barSize"),a=e.get("minHeight")||0,o=["lng","lat","alt"].map((function(t){return e.coordDimToDataDim(t)[0]}));if(null==n){var s=Math.min(t.size[0],t.size[2]),u=Object(l["a"])(r,o[0],o[1]);n=[s/Math.sqrt(r.count()/u),s/Math.sqrt(r.count()/u)]}else i.a.util.isArray(n)||(n=[n,n]);var c=[0,1,0],h=p(r,o);r.each(o,(function(e,i,o,s){var l=r.get(h.dimension,s),u=h.isStacked?l-o:t.altitudeAxis.scale.getExtent()[0],d=Math.max(t.altitudeAxis.dataToCoord(o),a),f=t.dataToPoint([e,i,u]),p=[n[0],d,n[1]];r.setItemLayout(s,[f,c,p])})),r.setLayout("orient",[1,0,0])}function f(e,t){var r=e.getData(),n=e.coordDimToDataDim("lng")[0],a=e.coordDimToDataDim("lat")[0],o=e.coordDimToDataDim("alt")[0],s=e.get("barSize"),u=e.get("minHeight")||0;if(null==s){var c=r.getDataExtent(n),h=r.getDataExtent(a),d=t.dataToPoint([c[0],h[0]]),f=t.dataToPoint([c[1],h[1]]),m=Math.min(Math.abs(d[0]-f[0]),Math.abs(d[1]-f[1]))||1,g=Object(l["a"])(r,n,a);s=[m/Math.sqrt(r.count()/g),m/Math.sqrt(r.count()/g)]}else i.a.util.isArray(s)||(s=[s,s]),s[0]/=t.getScale()/16,s[1]/=t.getScale()/16;var _=[0,0,1],v=[n,a,o],y=p(r,v);r.each(v,(function(e,n,i,a){var o=r.get(y.dimension,a),l=y.isStacked?o-i:0,c=t.dataToPoint([e,n,l]),h=t.dataToPoint([e,n,o]),d=Math.max(h[2]-c[2],u),f=[s[0],d,s[1]];r.setItemLayout(a,[c,_,f])})),r.setLayout("orient",[1,0,0])}function p(e,t){var r=c(e,t[2]);return{dimension:r?e.getCalculationInfo("stackResultDimension"):t[2],isStacked:r}}i.a.registerLayout((function(e,t){e.eachSeriesByType("bar3D",(function(e){var t=e.coordinateSystem,r=t&&t.type;if("globe"===r)h(e,t);else if("cartesian3D"===r)Object(s["a"])(e,t);else if("geo3D"===r)d(e,t);else{if("mapbox3D"!==r&&"maptalks3D"!==r)throw t?new Error("bar3D doesn't support coordinate system "+t.type):new Error("bar3D doesn't have coordinate system.");f(e,t)}}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(6),o=a["a"].vec3,s=i.a.helper.dataStack.isDimensionStacked;function l(e){var t=e[0],r=e[1];return!(t>0&&r>0||t<0&&r<0)}function u(e,t){var r=e.getData(),n=e.get("barSize");if(null==n){var a,u,c=t.size,h=t.getAxis("x"),d=t.getAxis("y");a="category"===h.type?.7*h.getBandWidth():.6*Math.round(c[0]/Math.sqrt(r.count())),u="category"===d.type?.7*d.getBandWidth():.6*Math.round(c[1]/Math.sqrt(r.count())),n=[a,u]}else i.a.util.isArray(n)||(n=[n,n]);var f=t.getAxis("z").scale.getExtent(),p=l(f),m=["x","y","z"].map((function(t){return e.coordDimToDataDim(t)[0]})),g=s(r,m[2]),_=g?r.getCalculationInfo("stackResultDimension"):m[2];r.each(m,(function(e,i,a,s){var l=r.get(_,s),u=g?l-a:p?0:f[0],c=t.dataToPoint([e,i,u]),h=t.dataToPoint([e,i,l]),d=o.dist(c,h),m=[0,h[1]<c[1]?-1:1,0];0===Math.abs(d)&&(d=.1);var v=[n[0],d,n[1]];r.setItemLayout(s,[c,m,v])})),r.setLayout("orient",[1,0,0])}t["a"]=u},function(e,t,r){"use strict";t["a"]=function(e,t,r){for(var n=e.getDataExtent(t),i=e.getDataExtent(r),a=n[1]-n[0]||n[0],o=i[1]-i[0]||i[0],s=50,l=new Uint8Array(s*s),u=0;u<e.count();u++){var c=e.get(t,u),h=e.get(r,u),d=Math.floor((c-n[0])/a*(s-1)),f=Math.floor((h-i[0])/o*(s-1)),p=f*s+d;l[p]=l[p]||1}var m=0;for(u=0;u<l.length;u++)l[u]&&m++;return m/l.length}},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(2),s=r(32),l=r(230),u=r(66),c=r(6),h=c["a"].vec3;i.a.extendChartView({type:"bar3D",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node,this._api=t,this._labelsBuilder=new u["a"](256,256,t);var r=this;this._labelsBuilder.getLabelPosition=function(e,t,n){if(r._data){var i=r._data.getItemLayout(e),a=i[0],o=i[1],s=i[2][1];return h.scaleAndAdd([],a,o,n+s)}return[0,0]},this._labelsBuilder.getMesh().renderOrder=100},render:function(e,t,r){var n=this._prevBarMesh;this._prevBarMesh=this._barMesh,this._barMesh=n,this._barMesh||(this._barMesh=new a["a"].Mesh({geometry:new l["a"],shadowDepthMaterial:new a["a"].Material({shader:new a["a"].Shader(a["a"].Shader.source("ecgl.sm.depth.vertex"),a["a"].Shader.source("ecgl.sm.depth.fragment"))}),culling:"cartesian3D"===e.coordinateSystem.type,renderOrder:10,renderNormal:!0})),this.groupGL.remove(this._prevBarMesh),this.groupGL.add(this._barMesh),this.groupGL.add(this._labelsBuilder.getMesh());var i=e.coordinateSystem;if(this._doRender(e,r),i&&i.viewGL){i.viewGL.add(this.groupGL);var o=i.viewGL.isLinearSpace()?"define":"undefine";this._barMesh.material[o]("fragment","SRGB_DECODE")}this._data=e.getData(),this._labelsBuilder.updateData(this._data),this._labelsBuilder.updateLabels(),this._updateAnimation(e)},_updateAnimation:function(e){a["a"].updateVertexAnimation([["prevPosition","position"],["prevNormal","normal"]],this._prevBarMesh,this._barMesh,e)},_doRender:function(e,t){var r=e.getData(),n=e.get("shading"),i="color"!==n,o=this,s=this._barMesh,l="ecgl."+n;s.material&&s.material.shader.name===l||(s.material=a["a"].createMaterial(l,["VERTEX_COLOR"])),a["a"].setMaterialFromModel(n,s.material,e,t),s.geometry.enableNormal=i,s.geometry.resetOffset();var u=e.get("bevelSize"),c=e.get("bevelSmoothness");s.geometry.bevelSegments=c,s.geometry.bevelSize=u;var h=[],d=new Float32Array(4*r.count()),f=0,p=0,m=!1;r.each((function(e){if(r.hasValue(e)){var t=r.getItemVisual(e,"color"),n=r.getItemVisual(e,"opacity");null==n&&(n=1),a["a"].parseColor(t,h),h[3]*=n,d[f++]=h[0],d[f++]=h[1],d[f++]=h[2],d[f++]=h[3],h[3]>0&&(p++,h[3]<.99&&(m=!0))}})),s.geometry.setBarCount(p);var g=r.getLayout("orient"),_=this._barIndexOfData=new Int32Array(r.count());p=0;r.each((function(e){if(r.hasValue(e)){var t=r.getItemLayout(e),n=t[0],i=t[1],a=t[2],s=4*e;h[0]=d[s++],h[1]=d[s++],h[2]=d[s++],h[3]=d[s++],h[3]>0&&(o._barMesh.geometry.addBar(n,i,g,a,h,e),_[e]=p++)}else _[e]=-1})),s.geometry.dirty(),s.geometry.updateBoundingBox();var v=s.material;v.transparent=m,v.depthMask=!m,s.geometry.sortTriangles=m,this._initHandler(e,t)},_initHandler:function(e,t){var r=e.getData(),n=this._barMesh,i="cartesian3D"===e.coordinateSystem.type;n.seriesIndex=e.seriesIndex;var a=-1;n.off("mousemove"),n.off("mouseout"),n.on("mousemove",(function(e){var o=n.geometry.getDataIndexOfVertex(e.triangle[0]);o!==a&&(this._downplay(a),this._highlight(o),this._labelsBuilder.updateLabels([o]),i&&t.dispatchAction({type:"grid3DShowAxisPointer",value:[r.get("x",o),r.get("y",o),r.get("z",o,!0)]})),a=o,n.dataIndex=o}),this),n.on("mouseout",(function(e){this._downplay(a),this._labelsBuilder.updateLabels(),a=-1,n.dataIndex=-1,i&&t.dispatchAction({type:"grid3DHideAxisPointer"})}),this)},_highlight:function(e){var t=this._data;if(t){var r=this._barIndexOfData[e];if(!(r<0)){var n=t.getItemModel(e),o=n.getModel("emphasis.itemStyle"),s=o.get("color"),l=o.get("opacity");if(null==s){var u=t.getItemVisual(e,"color");s=i.a.color.lift(u,-.4)}null==l&&(l=t.getItemVisual(e,"opacity"));var c=a["a"].parseColor(s);c[3]*=l,this._barMesh.geometry.setColor(r,c),this._api.getZr().refresh()}}},_downplay:function(e){var t=this._data;if(t){var r=this._barIndexOfData[e];if(!(r<0)){var n=t.getItemVisual(e,"color"),i=t.getItemVisual(e,"opacity"),o=a["a"].parseColor(n);o[3]*=i,this._barMesh.geometry.setColor(r,o),this._api.getZr().refresh()}}},highlight:function(e,t,r,n){this._toggleStatus("highlight",e,t,r,n)},downplay:function(e,t,r,n){this._toggleStatus("downplay",e,t,r,n)},_toggleStatus:function(e,t,r,n,a){var l=t.getData(),u=o["a"].queryDataIndex(l,a),c=this;null!=u?i.a.util.each(s["a"].normalizeToArray(u),(function(t){"highlight"===e?this._highlight(t):this._downplay(t)}),this):l.each((function(t){"highlight"===e?c._highlight(t):c._downplay(t)}))},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(38),o=r(65),s=r(15),l=r(6),u=l["a"].vec3,c=l["a"].mat3,h=s["a"].extend((function(){return{attributes:{position:new s["a"].Attribute("position","float",3,"POSITION"),normal:new s["a"].Attribute("normal","float",3,"NORMAL"),color:new s["a"].Attribute("color","float",4,"COLOR"),prevPosition:new s["a"].Attribute("prevPosition","float",3),prevNormal:new s["a"].Attribute("prevNormal","float",3)},dynamic:!0,enableNormal:!1,bevelSize:1,bevelSegments:0,_dataIndices:null,_vertexOffset:0,_triangleOffset:0}}),{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0},setBarCount:function(e){var t=this.enableNormal,r=this.getBarVertexCount()*e,n=this.getBarTriangleCount()*e;this.vertexCount!==r&&(this.attributes.position.init(r),t?this.attributes.normal.init(r):this.attributes.normal.value=null,this.attributes.color.init(r)),this.triangleCount!==n&&(this.indices=r>65535?new Uint32Array(3*n):new Uint16Array(3*n),this._dataIndices=new Uint32Array(r))},getBarVertexCount:function(){var e=this.bevelSize>0?this.bevelSegments:0;return e>0?this._getBevelBarVertexCount(e):this.enableNormal?24:8},getBarTriangleCount:function(){var e=this.bevelSize>0?this.bevelSegments:0;return e>0?this._getBevelBarTriangleCount(e):12},_getBevelBarVertexCount:function(e){return 4*(e+1)*(e+1)*2},_getBevelBarTriangleCount:function(e){var t=4*e+3,r=2*e+1;return(t+1)*r*2+4},setColor:function(e,t){for(var r=this.getBarVertexCount(),n=r*e,i=r*(e+1),a=n;a<i;a++)this.attributes.color.set(a,t);this.dirtyAttribute("color")},getDataIndexOfVertex:function(e){return this._dataIndices?this._dataIndices[e]:null},addBar:function(){for(var e=u.create,t=u.scaleAndAdd,r=e(),n=e(),i=e(),a=e(),o=e(),s=e(),l=e(),c=[],h=[],d=0;d<8;d++)c[d]=e();var f=[[0,1,5,4],[2,3,7,6],[4,5,6,7],[3,2,1,0],[0,4,7,3],[1,2,6,5]],p=[0,1,2,0,2,3],m=[];for(d=0;d<f.length;d++)for(var g=f[d],_=0;_<2;_++){for(var v=[],y=0;y<3;y++)v.push(g[p[3*_+y]]);m.push(v)}return function(e,d,g,_,v,y){var x=this._vertexOffset;if(this.bevelSize>0&&this.bevelSegments>0)this._addBevelBar(e,d,g,_,this.bevelSize,this.bevelSegments,v);else{u.copy(i,d),u.normalize(i,i),u.cross(a,g,i),u.normalize(a,a),u.cross(n,i,a),u.normalize(a,a),u.negate(o,n),u.negate(s,i),u.negate(l,a),t(c[0],e,n,_[0]/2),t(c[0],c[0],a,_[2]/2),t(c[1],e,n,_[0]/2),t(c[1],c[1],l,_[2]/2),t(c[2],e,o,_[0]/2),t(c[2],c[2],l,_[2]/2),t(c[3],e,o,_[0]/2),t(c[3],c[3],a,_[2]/2),t(r,e,i,_[1]),t(c[4],r,n,_[0]/2),t(c[4],c[4],a,_[2]/2),t(c[5],r,n,_[0]/2),t(c[5],c[5],l,_[2]/2),t(c[6],r,o,_[0]/2),t(c[6],c[6],l,_[2]/2),t(c[7],r,o,_[0]/2),t(c[7],c[7],a,_[2]/2);var T=this.attributes;if(this.enableNormal){h[0]=n,h[1]=o,h[2]=i,h[3]=s,h[4]=a,h[5]=l;for(var b=this._vertexOffset,w=0;w<f.length;w++){for(var E=3*this._triangleOffset,S=0;S<6;S++)this.indices[E++]=b+p[S];b+=4,this._triangleOffset+=2}for(w=0;w<f.length;w++){var M=h[w];for(S=0;S<4;S++){var A=f[w][S];T.position.set(this._vertexOffset,c[A]),T.normal.set(this._vertexOffset,M),T.color.set(this._vertexOffset++,v)}}}else{for(w=0;w<m.length;w++){for(E=3*this._triangleOffset,S=0;S<3;S++)this.indices[E+S]=m[w][S]+this._vertexOffset;this._triangleOffset++}for(w=0;w<c.length;w++)T.position.set(this._vertexOffset,c[w]),T.color.set(this._vertexOffset++,v)}}var N=this._vertexOffset;for(w=x;w<N;w++)this._dataIndices[w]=y}}(),_addBevelBar:function(){var e=u.create(),t=u.create(),r=u.create(),n=c.create(),i=[],a=[1,-1,-1,1],o=[1,1,-1,-1],s=[2,0];return function(l,c,h,d,f,p,m){u.copy(t,c),u.normalize(t,t),u.cross(r,h,t),u.normalize(r,r),u.cross(e,t,r),u.normalize(r,r),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=t[0],n[4]=t[1],n[5]=t[2],n[6]=r[0],n[7]=r[1],n[8]=r[2],f=Math.min(d[0],d[2])/2*f;for(var g=0;g<3;g++)i[g]=Math.max(d[g]-2*f,0);var _=(d[0]-i[0])/2,v=(d[1]-i[1])/2,y=(d[2]-i[2])/2,x=[],T=[],b=this._vertexOffset,w=[];for(g=0;g<2;g++){w[g]=w[g]=[];for(var E=0;E<=p;E++)for(var S=0;S<4;S++){(0===E&&0===g||1===g&&E===p)&&w[g].push(b);for(var M=0;M<=p;M++){var A=M/p*Math.PI/2+Math.PI/2*S,N=E/p*Math.PI/2+Math.PI/2*g;T[0]=_*Math.cos(A)*Math.sin(N),T[1]=v*Math.cos(N),T[2]=y*Math.sin(A)*Math.sin(N),x[0]=T[0]+a[S]*i[0]/2,x[1]=T[1]+v+s[g]*i[1]/2,x[2]=T[2]+o[S]*i[2]/2,Math.abs(_-v)<1e-6&&Math.abs(v-y)<1e-6||(T[0]/=_*_,T[1]/=v*v,T[2]/=y*y),u.normalize(T,T),u.transformMat3(x,x,n),u.transformMat3(T,T,n),u.add(x,x,l),this.attributes.position.set(b,x),this.enableNormal&&this.attributes.normal.set(b,T),this.attributes.color.set(b,m),b++}}}var C=4*p+3,L=2*p+1,P=C+1;for(S=0;S<L;S++)for(g=0;g<=C;g++){var D=S*P+g+this._vertexOffset,O=S*P+(g+1)%P+this._vertexOffset,R=(S+1)*P+(g+1)%P+this._vertexOffset,I=(S+1)*P+g+this._vertexOffset;this.setTriangleIndices(this._triangleOffset++,[R,D,O]),this.setTriangleIndices(this._triangleOffset++,[R,I,D])}this.setTriangleIndices(this._triangleOffset++,[w[0][0],w[0][2],w[0][1]]),this.setTriangleIndices(this._triangleOffset++,[w[0][0],w[0][3],w[0][2]]),this.setTriangleIndices(this._triangleOffset++,[w[1][0],w[1][1],w[1][2]]),this.setTriangleIndices(this._triangleOffset++,[w[1][0],w[1][2],w[1][3]]),this._vertexOffset=b}}()});i.a.util.defaults(h.prototype,a["a"]),i.a.util.defaults(h.prototype,o["a"]),t["a"]=h},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(31),o=r(32),s=r(39),l=r(50),u=i.a.extendSeriesModel({type:"series.bar3D",dependencies:["globe"],visualColorAccessPath:"itemStyle.color",getInitialData:function(e,t){return Object(l["a"])(this)},getFormattedLabel:function(e,t,r,n){var i=o["a"].getFormattedLabel(this,e,t,r,n);return null==i&&(i=this.getData().get("z",e)),i},formatTooltip:function(e){return Object(s["a"])(this,e)},defaultOption:{coordinateSystem:"cartesian3D",globeIndex:0,grid3DIndex:0,zlevel:-10,bevelSize:0,bevelSmoothness:2,onGridPlane:"xy",shading:"color",minHeight:0,itemStyle:{opacity:1},label:{show:!1,distance:2,textStyle:{fontSize:14,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:3}},emphasis:{label:{show:!0}},animationDurationUpdate:500}});i.a.util.merge(u.prototype,a["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(233),r(234),r(51)),o=r.n(a),s=r(17);i.a.registerVisual(o()("line3D","circle",null)),i.a.registerVisual(Object(s["a"])("line3D")),i.a.registerLayout((function(e,t){e.eachSeriesByType("line3D",(function(e){var t=e.getData(),r=e.coordinateSystem;if(r){if("cartesian3D"!==r.type)return void console.error("line3D needs cartesian3D coordinateSystem");var n=new Float32Array(3*t.count()),i=[],a=[],o=r.dimensions,s=o.map((function(t){return e.coordDimToDataDim(t)[0]}));r&&t.each(s,(function(e,t,o,s){i[0]=e,i[1]=t,i[2]=o,r.dataToPoint(i,a),n[3*s]=a[0],n[3*s+1]=a[1],n[3*s+2]=a[2]})),t.setLayout("points",n)}}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(39),o=r(50);i.a.extendSeriesModel({type:"series.line3D",dependencies:["grid3D"],visualColorAccessPath:"lineStyle.color",getInitialData:function(e,t){return Object(o["a"])(this)},formatTooltip:function(e){return Object(a["a"])(this,e)},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,grid3DIndex:0,lineStyle:{width:2},animationDurationUpdate:500}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(2),s=r(25),l=r(9),u=r(3),c=r(235),h=r.n(c),d=r(6),f=r(46),p=d["a"].vec3;a["a"].Shader.import(f["a"]);i.a.extendChartView({type:"line3D",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node,this._api=t},render:function(e,t,r){var n=this._prevLine3DMesh;this._prevLine3DMesh=this._line3DMesh,this._line3DMesh=n,this._line3DMesh||(this._line3DMesh=new a["a"].Mesh({geometry:new s["a"]({useNativeLine:!1,sortTriangles:!0}),material:new a["a"].Material({shader:a["a"].createShader("ecgl.meshLines3D")}),renderOrder:10}),this._line3DMesh.geometry.pick=this._pick.bind(this)),this.groupGL.remove(this._prevLine3DMesh),this.groupGL.add(this._line3DMesh);var i=e.coordinateSystem;if(i&&i.viewGL){i.viewGL.add(this.groupGL);var o=i.viewGL.isLinearSpace()?"define":"undefine";this._line3DMesh.material[o]("fragment","SRGB_DECODE")}this._doRender(e,r),this._data=e.getData(),this._camera=i.viewGL.camera,this.updateCamera(),this._updateAnimation(e)},updateCamera:function(){this._updateNDCPosition()},_doRender:function(e,t){var r=e.getData(),n=this._line3DMesh;n.geometry.resetOffset();var i=r.getLayout("points"),s=[],l=new Float32Array(i.length/3*4),u=0,c=!1;r.each((function(e){var t=r.getItemVisual(e,"color"),n=r.getItemVisual(e,"opacity");null==n&&(n=1),a["a"].parseColor(t,s),s[3]*=n,l[u++]=s[0],l[u++]=s[1],l[u++]=s[2],l[u++]=s[3],s[3]<.99&&(c=!0)})),n.geometry.setVertexCount(n.geometry.getPolylineVertexCount(i)),n.geometry.setTriangleCount(n.geometry.getPolylineTriangleCount(i)),n.geometry.addPolyline(i,l,o["a"].firstNotNull(e.get("lineStyle.width"),1)),n.geometry.dirty(),n.geometry.updateBoundingBox();var h=n.material;h.transparent=c,h.depthMask=!c;var d=e.getModel("debug.wireframe");d.get("show")?(n.geometry.createAttribute("barycentric","float",3),n.geometry.generateBarycentric(),n.material.set("both","WIREFRAME_TRIANGLE"),n.material.set("wireframeLineColor",a["a"].parseColor(d.get("lineStyle.color")||"rgba(0,0,0,0.5)")),n.material.set("wireframeLineWidth",o["a"].firstNotNull(d.get("lineStyle.width"),1))):n.material.set("both","WIREFRAME_TRIANGLE"),this._points=i,this._initHandler(e,t)},_updateAnimation:function(e){a["a"].updateVertexAnimation([["prevPosition","position"],["prevPositionPrev","positionPrev"],["prevPositionNext","positionNext"]],this._prevLine3DMesh,this._line3DMesh,e)},_initHandler:function(e,t){var r=e.getData(),n=e.coordinateSystem,i=this._line3DMesh,a=-1;i.seriesIndex=e.seriesIndex,i.off("mousemove"),i.off("mouseout"),i.on("mousemove",(function(e){var o=n.pointToData(e.point.array),s=r.indicesOfNearest("x",o[0])[0];s!==a&&(t.dispatchAction({type:"grid3DShowAxisPointer",value:[r.get("x",s),r.get("y",s),r.get("z",s)]}),i.dataIndex=s),a=s}),this),i.on("mouseout",(function(e){a=-1,i.dataIndex=-1,t.dispatchAction({type:"grid3DHideAxisPointer"})}),this)},_updateNDCPosition:function(){var e=new l["a"],t=this._camera;l["a"].multiply(e,t.projectionMatrix,t.viewMatrix);var r=this._positionNDC,n=this._points,i=n.length/3;r&&r.length/2===i||(r=this._positionNDC=new Float32Array(2*i));for(var a=[],o=0;o<i;o++){var s=3*o,u=2*o;a[0]=n[s],a[1]=n[s+1],a[2]=n[s+2],a[3]=1,p.transformMat4(a,a,e.array),r[u]=a[0]/a[3],r[u+1]=a[1]/a[3]}},_pick:function(e,t,r,n,i,a){var o=this._positionNDC,s=this._data.hostModel,l=s.get("lineStyle.width"),c=-1,d=r.viewport.width,f=r.viewport.height,p=.5*d,m=.5*f;e=(e+1)*p,t=(t+1)*m;for(var g=1;g<o.length/2;g++){var _=(o[2*(g-1)]+1)*p,v=(o[2*(g-1)+1]+1)*m,y=(o[2*g]+1)*p,x=(o[2*g+1]+1)*m;if(h.a.containStroke(_,v,y,x,l,e,t)){var T=(_-e)*(_-e)+(v-t)*(v-t),b=(y-e)*(y-e)+(x-t)*(x-t);c=T<b?g-1:g}}if(c>=0){var w=3*c,E=new u["a"](this._points[w],this._points[w+1],this._points[w+2]);a.push({dataIndex:c,point:E,pointWorld:E.clone(),target:this._line3DMesh,distance:this._camera.getWorldPosition().dist(E)})}},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}})},function(e,t){function r(e,t,r,n,i,a,o){if(0===i)return!1;var s=i,l=0,u=e;if(o>t+s&&o>n+s||o<t-s&&o<n-s||a>e+s&&a>r+s||a<e-s&&a<r-s)return!1;if(e===r)return Math.abs(a-e)<=s/2;l=(t-n)/(e-r),u=(e*n-r*t)/(e-r);var c=l*a-o+u,h=c*c/(l*l+1);return h<=s/2*s/2}t.containStroke=r},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(237),r(238),r(51)),o=r.n(a),s=r(17);i.a.registerVisual(o()("scatter3D","circle",null)),i.a.registerVisual(Object(s["a"])("scatter3D")),i.a.registerLayout({seriesType:"scatter3D",reset:function(e){var t=e.coordinateSystem;if(t){var r=t.dimensions;if(r.length<3)return void console.error("scatter3D needs 3D coordinateSystem");var n=r.map((function(t){return e.coordDimToDataDim(t)[0]})),i=[],a=[];return{progress:function(e,r){for(var o=new Float32Array(3*(e.end-e.start)),s=e.start;s<e.end;s++){var l=3*(s-e.start);i[0]=r.get(n[0],s),i[1]=r.get(n[1],s),i[2]=r.get(n[2],s),t.dataToPoint(i,a),o[l]=a[0],o[l+1]=a[1],o[l+2]=a[2]}r.setLayout("points",o)}}}}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(32),o=r(39),s=r(50);i.a.extendSeriesModel({type:"series.scatter3D",dependencies:["globe","grid3D","geo3D"],visualColorAccessPath:"itemStyle.color",getInitialData:function(e,t){return Object(s["a"])(this)},getFormattedLabel:function(e,t,r,n){var i=a["a"].getFormattedLabel(this,e,t,r,n);if(null==i){var o=this.getData(),s=o.dimensions[o.dimensions.length-1];i=o.get(s,e)}return i},formatTooltip:function(e){return Object(o["a"])(this,e)},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,progressive:1e5,progressiveThreshold:1e5,grid3DIndex:0,globeIndex:0,symbol:"circle",symbolSize:10,blendMode:"source-over",label:{show:!1,position:"right",distance:5,textStyle:{fontSize:14,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:3}},itemStyle:{opacity:.8},emphasis:{label:{show:!0}},animationDurationUpdate:500}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(2),s=r(32),l=r(67);i.a.extendChartView({type:"scatter3D",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node,this._pointsBuilderList=[],this._currentStep=0},render:function(e,t,r){if(this.groupGL.removeAll(),e.getData().count()){var n=e.coordinateSystem;if(!n||!n.viewGL)throw new Error("Invalid coordinate system");n.viewGL.add(this.groupGL),this._camera=n.viewGL.camera;var i=this._pointsBuilderList[0];i||(i=this._pointsBuilderList[0]=new l["a"](!1,r)),this._pointsBuilderList.length=1,this.groupGL.add(i.rootNode),i.update(e,t,r),i.updateView(n.viewGL.camera)}},incrementalPrepareRender:function(e,t,r){var n=e.coordinateSystem;if(!n||!n.viewGL)throw new Error("Invalid coordinate system");n.viewGL.add(this.groupGL),this._camera=n.viewGL.camera,this.groupGL.removeAll(),this._currentStep=0},incrementalRender:function(e,t,r,n){if(!(e.end<=e.start)){var i=this._pointsBuilderList[this._currentStep];i||(i=new l["a"](!1,n),this._pointsBuilderList[this._currentStep]=i),this.groupGL.add(i.rootNode),i.update(t,r,n,e.start,e.end),i.updateView(t.coordinateSystem.viewGL.camera),this._currentStep++}},updateCamera:function(){this._pointsBuilderList.forEach((function(e){e.updateView(this._camera)}),this)},highlight:function(e,t,r,n){this._toggleStatus("highlight",e,t,r,n)},downplay:function(e,t,r,n){this._toggleStatus("downplay",e,t,r,n)},_toggleStatus:function(e,t,r,n,a){var l=t.getData(),u=o["a"].queryDataIndex(l,a),c="highlight"===e;null!=u?i.a.util.each(s["a"].normalizeToArray(u),(function(e){for(var t=0;t<this._pointsBuilderList.length;t++){var r=this._pointsBuilderList[t];c?r.highlight(l,e):r.downplay(l,e)}}),this):l.each((function(e){for(var t=0;t<this._pointsBuilderList.length;t++){var r=this._pointsBuilderList[t];c?r.highlight(l,e):r.downplay(l,e)}}))},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n);function a(e,t,r){t=t||document.createElement("canvas");t.width=e,t.height=e;var n=t.getContext("2d");return r&&r(n),t}function o(e,t,r,n){i.a.util.isArray(t)||(t=[t,t]);var a=l.getMarginByStyle(r,n),o=t[0]+a.left+a.right,s=t[1]+a.top+a.bottom,u=i.a.helper.createSymbol(e,0,0,t[0],t[1]),c=Math.max(o,s);u.position=[a.left,a.top],o>s?u.position[1]+=(c-s)/2:u.position[0]+=(c-o)/2;var h=u.getBoundingRect();return u.position[0]-=h.x,u.position[1]-=h.y,u.setStyle(r),u.update(),u.__size=c,u}function s(e,t,r){var n=t.width,i=t.height,a=e.canvas.width,o=e.canvas.height,s=n/a,l=i/o;function u(e){return e<128?1:-1}function c(e,a){var o=1/0;e=Math.floor(e*s),a=Math.floor(a*l);for(var c=a*n+e,h=t.data[4*c],d=u(h),f=Math.max(a-r,0);f<Math.min(a+r,i);f++)for(var p=Math.max(e-r,0);p<Math.min(e+r,n);p++){c=f*n+p;var m=t.data[4*c],g=u(m),_=p-e,v=f-a;if(d!==g){var y=_*_+v*v;y<o&&(o=y)}}return d*Math.sqrt(o)}for(var h=e.createImageData(a,o),d=0;d<o;d++)for(var f=0;f<a;f++){var p=c(f,d),m=p/r*.5+.5,g=4*(d*a+f);h.data[g++]=255*(1-m),h.data[g++]=255*(1-m),h.data[g++]=255*(1-m),h.data[g++]=255}return h}var l={getMarginByStyle:function(e){var t=e.minMargin||0,r=0;e.stroke&&"none"!==e.stroke&&(r=null==e.lineWidth?1:e.lineWidth);var n=e.shadowBlur||0,i=e.shadowOffsetX||0,a=e.shadowOffsetY||0,o={};return o.left=Math.max(r/2,-i+n,t),o.right=Math.max(r/2,i+n,t),o.top=Math.max(r/2,-a+n,t),o.bottom=Math.max(r/2,a+n,t),o},createSymbolSprite:function(e,t,r,n){var i=o(e,t,r),s=l.getMarginByStyle(r);return{image:a(i.__size,n,(function(e){i.brush(e)})),margin:s}},createSDFFromCanvas:function(e,t,r,n){return a(t,n,(function(t){var n=e.getContext("2d"),i=n.getImageData(0,0,e.width,e.height);t.putImageData(s(t,i,r),0,0)}))},createSimpleSprite:function(e,t){return a(e,t,(function(t){var r=e/2;t.beginPath(),t.arc(r,r,60,0,2*Math.PI,!1),t.closePath();var n=t.createRadialGradient(r,r,0,r,r,r);n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),n.addColorStop(1,"rgba(255, 255, 255, 0)"),t.fillStyle=n,t.fill()}))}};t["a"]=l},function(e,t,r){"use strict";var n=r(1),i=r(241),a=r(0),o=r.n(a),s=r(6),l=r(242),u=s["a"].vec4;n["a"].Shader.import(l["a"]);var c=n["a"].Mesh.extend((function(){var e=new n["a"].Geometry({dynamic:!0,attributes:{color:new n["a"].Geometry.Attribute("color","float",4,"COLOR"),position:new n["a"].Geometry.Attribute("position","float",3,"POSITION"),size:new n["a"].Geometry.Attribute("size","float",1),prevPosition:new n["a"].Geometry.Attribute("prevPosition","float",3),prevSize:new n["a"].Geometry.Attribute("prevSize","float",1)}});o.a.util.extend(e,i["a"]);var t=new n["a"].Material({shader:n["a"].createShader("ecgl.sdfSprite"),transparent:!0,depthMask:!1});t.enableTexture("sprite"),t.define("both","VERTEX_COLOR"),t.define("both","VERTEX_SIZE");var r=new n["a"].Texture2D({image:document.createElement("canvas"),flipY:!1});return t.set("sprite",r),e.pick=this._pick.bind(this),{geometry:e,material:t,mode:n["a"].Mesh.POINTS,sizeScale:1}}),{_pick:function(e,t,r,i,a,o){var s=this._positionNDC;if(s)for(var l=r.viewport,u=2/l.width,c=2/l.height,h=this.geometry.vertexCount-1;h>=0;h--){var d;d=this.geometry.indices?this.geometry.indices[h]:h;var f=s[2*d],p=s[2*d+1],m=this.geometry.attributes.size.get(d)/this.sizeScale,g=m/2;if(e>f-g*u&&e<f+g*u&&t>p-g*c&&t<p+g*c){var _=new n["a"].Vector3,v=new n["a"].Vector3;this.geometry.attributes.position.get(d,_.array),n["a"].Vector3.transformMat4(v,_,this.worldTransform),o.push({vertexIndex:d,point:_,pointWorld:v,target:this,distance:v.distance(i.getWorldPosition())})}}},updateNDCPosition:function(e,t,r){var n=this._positionNDC,i=this.geometry;n&&n.length/2===i.vertexCount||(n=this._positionNDC=new Float32Array(2*i.vertexCount));for(var a=u.create(),o=0;o<i.vertexCount;o++)i.attributes.position.get(o,a),a[3]=1,u.transformMat4(a,a,e.array),u.scale(a,a,1/a[3]),n[2*o]=a[0],n[2*o+1]=a[1]}});t["a"]=c},function(e,t,r){"use strict";var n=r(97),i=r(6),a=i["a"].vec3;t["a"]={needsSortVertices:function(){return this.sortVertices},needsSortVerticesProgressively:function(){return this.needsSortVertices()&&this.vertexCount>=2e4},doSortVertices:function(e,t){var r=this.indices,n=a.create();if(!r){r=this.indices=this.vertexCount>65535?new Uint32Array(this.vertexCount):new Uint16Array(this.vertexCount);for(var i=0;i<r.length;i++)r[i]=i}if(0===t){var o,s=this.attributes.position,l=(e=e.array,0);this._zList&&this._zList.length===this.vertexCount||(this._zList=new Float32Array(this.vertexCount));for(i=0;i<this.vertexCount;i++){s.get(i,n);var u=a.sqrDist(n,e);isNaN(u)&&(u=1e7,l++),0===i?(o=u,u=0):u-=o,this._zList[i]=u}this._noneCount=l}if(this.vertexCount<2e4)0===t&&this._simpleSort(this._noneCount/this.vertexCount>.05);else for(i=0;i<3;i++)this._progressiveQuickSort(3*t+i);this.dirtyIndices()},_simpleSort:function(e){var t=this._zList,r=this.indices;function i(e,r){return t[r]-t[e]}e?Array.prototype.sort.call(r,i):n["a"].sort(r,i,0,r.length-1)},_progressiveQuickSort:function(e){var t=this._zList,r=this.indices;this._quickSort=this._quickSort||new n["a"],this._quickSort.step(r,(function(e,r){return t[r]-t[e]}),e)}}},function(e,t,r){"use strict";t["a"]="@export ecgl.sdfSprite.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform float elapsedTime : 0;\n\nattribute vec3 position : POSITION;\n\n#ifdef VERTEX_SIZE\nattribute float size;\n#else\nuniform float u_Size;\n#endif\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_FillColor: COLOR;\nvarying vec4 v_Color;\n#endif\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute float prevSize;\nuniform float percent : 1.0;\n#endif\n\n\n#ifdef POSITIONTEXTURE_ENABLED\nuniform sampler2D positionTexture;\n#endif\n\nvarying float v_Size;\n\nvoid main()\n{\n\n#ifdef POSITIONTEXTURE_ENABLED\n gl_Position = worldViewProjection * vec4(texture2D(positionTexture, position.xy).xy, -10.0, 1.0);\n#else\n\n #ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n #else\n vec3 pos = position;\n #endif\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n#endif\n\n#ifdef VERTEX_SIZE\n#ifdef VERTEX_ANIMATION\n v_Size = mix(prevSize, size, percent);\n#else\n v_Size = size;\n#endif\n#else\n v_Size = u_Size;\n#endif\n\n#ifdef VERTEX_COLOR\n v_Color = a_FillColor;\n #endif\n\n gl_PointSize = v_Size;\n}\n\n@end\n\n@export ecgl.sdfSprite.fragment\n\nuniform vec4 color: [1, 1, 1, 1];\nuniform vec4 strokeColor: [1, 1, 1, 1];\nuniform float smoothing: 0.07;\n\nuniform float lineWidth: 0.0;\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\nvarying float v_Size;\n\nuniform sampler2D sprite;\n\n@import clay.util.srgb\n\nvoid main()\n{\n gl_FragColor = color;\n\n vec4 _strokeColor = strokeColor;\n\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n #endif\n\n#ifdef SPRITE_ENABLED\n float d = texture2D(sprite, gl_PointCoord).r;\n gl_FragColor.a *= smoothstep(0.5 - smoothing, 0.5 + smoothing, d);\n\n if (lineWidth > 0.0) {\n float sLineWidth = lineWidth / 2.0;\n\n float outlineMaxValue0 = 0.5 + sLineWidth;\n float outlineMaxValue1 = 0.5 + sLineWidth + smoothing;\n float outlineMinValue0 = 0.5 - sLineWidth - smoothing;\n float outlineMinValue1 = 0.5 - sLineWidth;\n\n if (d <= outlineMaxValue1 && d >= outlineMinValue0) {\n float a = _strokeColor.a;\n if (d <= outlineMinValue1) {\n a = a * smoothstep(outlineMinValue0, outlineMinValue1, d);\n }\n else {\n a = a * smoothstep(outlineMaxValue1, outlineMaxValue0, d);\n }\n gl_FragColor.rgb = mix(gl_FragColor.rgb * gl_FragColor.a, _strokeColor.rgb, a);\n gl_FragColor.a = gl_FragColor.a * (1.0 - a) + a;\n }\n }\n#endif\n\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(gl_FragColor);\n#endif\n}\n@end"},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(244),r(245),r(248),r(17));i.a.registerVisual(Object(a["a"])("lines3D")),i.a.registerAction({type:"lines3DPauseEffect",event:"lines3deffectpaused",update:"series.lines3D:pauseEffect"},(function(){})),i.a.registerAction({type:"lines3DResumeEffect",event:"lines3deffectresumed",update:"series.lines3D:resumeEffect"},(function(){})),i.a.registerAction({type:"lines3DToggleEffect",event:"lines3deffectchanged",update:"series.lines3D:toggleEffect"},(function(){}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(6),o=a["a"].vec3,s=a["a"].vec2,l=o.normalize,u=o.cross,c=o.sub,h=o.add,d=o.create,f=d(),p=d(),m=d(),g=d(),_=[],v=[];function y(e,t){s.copy(_,e[0]),s.copy(v,e[1]);var r=[],n=r[0]=d(),i=r[1]=d(),a=r[2]=d(),y=r[3]=d();t.dataToPoint(_,n),t.dataToPoint(v,y),l(f,n),c(p,y,n),l(p,p),u(m,p,f),l(m,m),u(p,f,m),h(i,f,p),l(i,i),l(f,y),c(p,n,y),l(p,p),u(m,p,f),l(m,m),u(p,f,m),h(a,f,p),l(a,a),h(g,n,y),l(g,g);var x=o.dot(n,g),T=o.dot(g,i),b=(Math.max(o.len(n),o.len(y))-x)/T*2;return o.scaleAndAdd(i,n,i,b),o.scaleAndAdd(a,y,a,b),r}function x(e,t,r){var n=[],i=n[0]=o.create(),a=n[1]=o.create(),s=n[2]=o.create(),l=n[3]=o.create();t.dataToPoint(e[0],i),t.dataToPoint(e[1],l);var u=o.dist(i,l);return o.lerp(a,i,l,.3),o.lerp(s,i,l,.3),o.scaleAndAdd(a,a,r,Math.min(.1*u,10)),o.scaleAndAdd(s,s,r,Math.min(.1*u,10)),n}function T(e,t){for(var r=new Float32Array(3*e.length),n=0,i=[],a=0;a<e.length;a++)t.dataToPoint(e[a],i),r[n++]=i[0],r[n++]=i[1],r[n++]=i[2];return r}function b(e){var t=[];return e.each((function(r){var n=e.getItemModel(r),i=n.option instanceof Array?n.option:n.getShallow("coords",!0);if(!(i instanceof Array&&i.length>0&&i[0]instanceof Array))throw new Error("Invalid coords "+JSON.stringify(i)+". Lines must have 2d coords array in data item.");t.push(i)})),{coordsList:t}}function w(e,t){var r=e.getData(),n=e.get("polyline");r.setLayout("lineType",n?"polyline":"cubicBezier");var i=b(r);r.each((function(e){var a=i.coordsList[e],o=n?T:y;r.setItemLayout(e,o(a,t))}))}function E(e,t,r){var n=e.getData(),i=e.get("polyline"),a=b(n);n.setLayout("lineType",i?"polyline":"cubicBezier"),n.each((function(e){var o=a.coordsList[e],s=i?T(o,t):x(o,t,r);n.setItemLayout(e,s)}))}i.a.registerLayout((function(e,t){e.eachSeriesByType("lines3D",(function(e){var t=e.coordinateSystem;"globe"===t.type?w(e,t):"geo3D"===t.type?E(e,t,[0,1,0]):"mapbox3D"!==t.type&&"maptalks3D"!==t.type||E(e,t,[0,0,1])}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(25),s=r(246),l=r(46);function u(e){return null!=e.radius?e.radius:null!=e.size?Math.max(e.size[0],e.size[1],e.size[2]):100}a["a"].Shader.import(l["a"]);i.a.extendChartView({type:"lines3D",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node,this._meshLinesMaterial=new a["a"].Material({shader:a["a"].createShader("ecgl.meshLines3D"),transparent:!0,depthMask:!1}),this._linesMesh=new a["a"].Mesh({geometry:new o["a"],material:this._meshLinesMaterial,$ignorePicking:!0}),this._trailMesh=new s["a"]},render:function(e,t,r){this.groupGL.add(this._linesMesh);var n=e.coordinateSystem,i=e.getData();if(n&&n.viewGL){var o=n.viewGL;o.add(this.groupGL),this._updateLines(e,t,r);var s=n.viewGL.isLinearSpace()?"define":"undefine";this._linesMesh.material[s]("fragment","SRGB_DECODE"),this._trailMesh.material[s]("fragment","SRGB_DECODE")}var l=this._trailMesh;if(l.stopAnimation(),e.get("effect.show")){this.groupGL.add(l),l.updateData(i,r,this._linesMesh.geometry),l.__time=l.__time||0;var u=36e5;this._curveEffectsAnimator=l.animate("",{loop:!0}).when(u,{__time:u}).during((function(){l.setAnimationTime(l.__time)})).start()}else this.groupGL.remove(l),this._curveEffectsAnimator=null;this._linesMesh.material.blend=this._trailMesh.material.blend="lighter"===e.get("blendMode")?a["a"].additiveBlend:null},pauseEffect:function(){this._curveEffectsAnimator&&this._curveEffectsAnimator.pause()},resumeEffect:function(){this._curveEffectsAnimator&&this._curveEffectsAnimator.resume()},toggleEffect:function(){var e=this._curveEffectsAnimator;e&&(e.isPaused()?e.resume():e.pause())},_updateLines:function(e,t,r){var n=e.getData(),i=e.coordinateSystem,o=this._linesMesh.geometry,s=e.get("polyline");o.expandLine=!0;var l=u(i);o.segmentScale=l/20;var c="lineStyle.width".split("."),h=r.getDevicePixelRatio(),d=0;n.each((function(e){var t=n.getItemModel(e),r=t.get(c);null==r&&(r=1),n.setItemVisual(e,"lineWidth",r),d=Math.max(r,d)})),o.useNativeLine=!1;var f=0,p=0;n.each((function(e){var t=n.getItemLayout(e);s?(f+=o.getPolylineVertexCount(t),p+=o.getPolylineTriangleCount(t)):(f+=o.getCubicCurveVertexCount(t[0],t[1],t[2],t[3]),p+=o.getCubicCurveTriangleCount(t[0],t[1],t[2],t[3]))})),o.setVertexCount(f),o.setTriangleCount(p),o.resetOffset();var m=[];n.each((function(e){var t=n.getItemLayout(e),r=n.getItemVisual(e,"color"),i=n.getItemVisual(e,"opacity"),l=n.getItemVisual(e,"lineWidth")*h;null==i&&(i=1),m=a["a"].parseColor(r,m),m[3]*=i,s?o.addPolyline(t,m,l):o.addCubicCurve(t[0],t[1],t[2],t[3],m,l)})),o.dirty()},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(0),i=(r.n(n),r(1)),a=r(6),o=r(25),s=r(247),l=a["a"].vec3;function u(e){return e>0?1:-1}i["a"].Shader.import(s["a"]),t["a"]=i["a"].Mesh.extend((function(){var e=new i["a"].Material({shader:new i["a"].Shader(i["a"].Shader.source("ecgl.trail2.vertex"),i["a"].Shader.source("ecgl.trail2.fragment")),transparent:!0,depthMask:!1}),t=new o["a"]({dynamic:!0});return t.createAttribute("dist","float",1),t.createAttribute("distAll","float",1),t.createAttribute("start","float",1),{geometry:t,material:e,culling:!1,$ignorePicking:!0}}),{updateData:function(e,t,r){var n=e.hostModel,a=this.geometry,o=n.getModel("effect"),s=o.get("trailWidth")*t.getDevicePixelRatio(),c=o.get("trailLength"),h=n.get("effect.constantSpeed"),d=1e3*n.get("effect.period"),f=null!=h;this.getScene()||console.error("TrailMesh must been add to scene before updateData"),f?this.material.set("speed",h/1e3):this.material.set("period",d),this.material[f?"define":"undefine"]("vertex","CONSTANT_SPEED");var p=n.get("polyline");a.trailLength=c,this.material.set("trailLength",c),a.resetOffset(),["position","positionPrev","positionNext"].forEach((function(e){a.attributes[e].value=r.attributes[e].value}));var m=["dist","distAll","start","offset","color"];m.forEach((function(e){a.attributes[e].init(a.vertexCount)})),a.indices=r.indices;var g=[],_=o.get("trailColor"),v=o.get("trailOpacity"),y=null!=_,x=null!=v;this.updateWorldTransform();var T=this.worldTransform.x.len(),b=this.worldTransform.y.len(),w=this.worldTransform.z.len(),E=0,S=0;e.each((function(t){var n=e.getItemLayout(t),o=x?v:e.getItemVisual(t,"opacity"),c=e.getItemVisual(t,"color");null==o&&(o=1),g=i["a"].parseColor(y?_:c,g),g[3]*=o;for(var h=p?r.getPolylineVertexCount(n):r.getCubicCurveVertexCount(n[0],n[1],n[2],n[3]),m=0,M=[],A=[],N=E;N<E+h;N++)a.attributes.position.get(N,M),M[0]*=T,M[1]*=b,M[2]*=w,N>E&&(m+=l.dist(M,A)),a.attributes.dist.set(N,m),l.copy(A,M);S=Math.max(S,m);var C=Math.random()*(f?m:d);for(N=E;N<E+h;N++)a.attributes.distAll.set(N,m),a.attributes.start.set(N,C),a.attributes.offset.set(N,u(r.attributes.offset.get(N))*s/2),a.attributes.color.set(N,g);E+=h})),this.material.set("spotSize",.1*S*c),this.material.set("spotIntensity",o.get("spotIntensity")),a.dirty()},setAnimationTime:function(e){this.material.set("time",e)}})},function(e,t,r){"use strict";t["a"]="@export ecgl.trail2.vertex\nattribute vec3 position: POSITION;\nattribute vec3 positionPrev;\nattribute vec3 positionNext;\nattribute float offset;\nattribute float dist;\nattribute float distAll;\nattribute float start;\n\nattribute vec4 a_Color : COLOR;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\nuniform float near : NEAR;\n\nuniform float speed : 0;\nuniform float trailLength: 0.3;\nuniform float time;\nuniform float period: 1000;\n\nuniform float spotSize: 1;\n\nvarying vec4 v_Color;\nvarying float v_Percent;\nvarying float v_SpotPercent;\n\n@import ecgl.common.wireframe.vertexHeader\n\n@import ecgl.lines3D.clipNear\n\nvoid main()\n{\n @import ecgl.lines3D.expandLine\n\n gl_Position = currProj;\n\n v_Color = a_Color;\n\n @import ecgl.common.wireframe.vertexMain\n\n#ifdef CONSTANT_SPEED\n float t = mod((speed * time + start) / distAll, 1. + trailLength) - trailLength;\n#else\n float t = mod((time + start) / period, 1. + trailLength) - trailLength;\n#endif\n\n float trailLen = distAll * trailLength;\n\n v_Percent = (dist - t * distAll) / trailLen;\n\n v_SpotPercent = spotSize / distAll;\n\n }\n@end\n\n\n@export ecgl.trail2.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform float spotIntensity: 5;\n\nvarying vec4 v_Color;\nvarying float v_Percent;\nvarying float v_SpotPercent;\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.util.srgb\n\nvoid main()\n{\n if (v_Percent > 1.0 || v_Percent < 0.0) {\n discard;\n }\n\n float fade = v_Percent;\n\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n\n @import ecgl.common.wireframe.fragmentMain\n\n if (v_Percent > (1.0 - v_SpotPercent)) {\n gl_FragColor.rgb *= spotIntensity;\n }\n\n gl_FragColor.a *= fade;\n}\n\n@end"},function(e,t,r){"use strict";var n=r(0),i=r.n(n);i.a.extendSeriesModel({type:"series.lines3D",dependencies:["globe"],visualColorAccessPath:"lineStyle.color",getInitialData:function(e,t){var r=new i.a.List(["value"],this);return r.hasItemOption=!1,r.initData(e.data,[],(function(e,t,n,i){if(e instanceof Array)return NaN;r.hasItemOption=!0;var a=e.value;return null!=a?a instanceof Array?a[i]:a:void 0})),r},defaultOption:{coordinateSystem:"globe",globeIndex:0,geo3DIndex:0,zlevel:-10,polyline:!1,effect:{show:!1,period:4,trailWidth:4,trailLength:.2,spotIntensity:6},silent:!0,blendMode:"source-over",lineStyle:{width:1,opacity:.5}}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(250),r(251),r(17));i.a.registerVisual(Object(a["a"])("polygons3D"))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(31);function o(e,t){for(var r=[],n=0;n<t.length;n++)r.push(e.dataToPoint(t[n]));return r}var s=i.a.extendSeriesModel({type:"series.polygons3D",getRegionModel:function(e){return this.getData().getItemModel(e)},getRegionPolygonCoords:function(e){var t=this.coordinateSystem,r=this.getData().getItemModel(e),n=r.option instanceof Array?r.option:r.getShallow("coords");r.get("multiPolygon")||(n=[n]);for(var i=[],a=0;a<n.length;a++){for(var s=[],l=1;l<n[a].length;l++)s.push(o(t,n[a][l]));i.push({exterior:o(t,n[a][0]),interiors:s})}return i},getInitialData:function(e){var t=new i.a.List(["value"],this);return t.hasItemOption=!1,t.initData(e.data,[],(function(e,r,n,i){if(e instanceof Array)return NaN;t.hasItemOption=!0;var a=e.value;return null!=a?a instanceof Array?a[i]:a:void 0})),t},defaultOption:{show:!0,data:null,multiPolygon:!1,progressiveThreshold:1e3,progressive:1e3,zlevel:-10,label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:4}},itemStyle:{color:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{color:"#639fc0"},label:{show:!0}}}});i.a.util.merge(s.prototype,a["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(64),o=r(1);i.a.extendChartView({type:"polygons3D",__ecgl__:!0,init:function(e,t){this.groupGL=new o["a"].Node,this._geo3DBuilderList=[],this._currentStep=0},render:function(e,t,r){this.groupGL.removeAll();var n=e.coordinateSystem;n&&n.viewGL&&n.viewGL.add(this.groupGL);var i=this._geo3DBuilderList[0];i||(i=new a["a"](r),i.extrudeY="mapbox3D"!==n.type&&"maptalks3D"!==n.type,this._geo3DBuilderList[0]=i),this._updateShaderDefines(n,i),i.update(e,t,r),this._geo3DBuilderList.length=1,this.groupGL.add(i.rootNode)},incrementalPrepareRender:function(e,t,r){this.groupGL.removeAll();var n=e.coordinateSystem;n&&n.viewGL&&n.viewGL.add(this.groupGL),this._currentStep=0},incrementalRender:function(e,t,r,n){var i=this._geo3DBuilderList[this._currentStep],o=t.coordinateSystem;i||(i=new a["a"](n),i.extrudeY="mapbox3D"!==o.type&&"maptalks3D"!==o.type,this._geo3DBuilderList[this._currentStep]=i),i.update(t,r,n,e.start,e.end),this.groupGL.add(i.rootNode),this._updateShaderDefines(o,i),this._currentStep++},_updateShaderDefines:function(e,t){var r=e.viewGL.isLinearSpace()?"define":"undefine";t.rootNode.traverse((function(t){t.material&&(t.material[r]("fragment","SRGB_DECODE"),"mapbox3D"!==e.type&&"maptalks3D"!==e.type||(t.material.define("fragment","NORMAL_UP_AXIS",2),t.material.define("fragment","NORMAL_FRONT_AXIS",1)))}))},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(253),r(254),r(255),r(17));i.a.registerVisual(Object(a["a"])("surface"))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(31),o=r(39),s=r(50),l=i.a.extendSeriesModel({type:"series.surface",dependencies:["globe","grid3D","geo3D"],visualColorAccessPath:"itemStyle.color",formatTooltip:function(e){return Object(o["a"])(this,e)},getInitialData:function(e,t){var r=e.data;function n(e){return!(isNaN(e.min)||isNaN(e.max)||isNaN(e.step))}function a(e){var t=i.a.number.getPrecisionSafe;return Math.max(t(e.min),t(e.max),t(e.step))+1}if(!r)if(e.parametric){var o=e.parametricEquation||{},l=o.u||{},u=o.v||{};["u","v"].forEach((function(e){n(o[e])||console.error("Invalid parametricEquation.%s",e)})),["x","y","z"].forEach((function(e){"function"===typeof o[e]||console.error("parametricEquation.%s needs to be function",e)}));var c=Math.floor((l.max+l.step-l.min)/l.step),h=Math.floor((u.max+u.step-u.min)/u.step);r=new Float32Array(c*h*5);var d=a(l),f=a(u);for(S=0,M=0;M<h;M++)for(A=0;A<c;A++){var p=A*l.step+l.min,m=M*u.step+u.min,g=i.a.number.round(Math.min(p,l.max),d),_=i.a.number.round(Math.min(m,u.max),f);N=o.x(g,_),C=o.y(g,_),D=o.z(g,_);r[S++]=N,r[S++]=C,r[S++]=D,r[S++]=g,r[S++]=_}}else{var v=e.equation||{},y=v.x||{},x=v.y||{};if(["x","y"].forEach((function(e){n(v[e])||console.error("Invalid equation.%s",e)})),"function"!==typeof v.z)return void console.error("equation.z needs to be function");var T=Math.floor((y.max+y.step-y.min)/y.step),b=Math.floor((x.max+x.step-x.min)/x.step);r=new Float32Array(T*b*3);for(var w=a(y),E=a(x),S=0,M=0;M<b;M++)for(var A=0;A<T;A++){var N=A*y.step+y.min,C=M*x.step+x.min,L=i.a.number.round(Math.min(N,y.max),w),P=i.a.number.round(Math.min(C,x.max),E),D=v.z(L,P);r[S++]=L,r[S++]=P,r[S++]=D}}var O=["x","y","z"];e.parametric&&O.push("u","v");var R=Object(s["a"])(this,O,r);return R},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,grid3DIndex:0,shading:"lambert",parametric:!1,wireframe:{show:!0,lineStyle:{color:"rgba(0,0,0,0.5)",width:1}},equation:{x:{min:-1,max:1,step:.1},y:{min:-1,max:1,step:.1},z:null},parametricEquation:{u:{min:-1,max:1,step:.1},v:{min:-1,max:1,step:.1},x:null,y:null,z:null},itemStyle:{},animationDurationUpdate:500}});i.a.util.merge(l.prototype,a["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=(r(2),r(6)),s=r(65),l=o["a"].vec3;function u(e){return isNaN(e[0])||isNaN(e[1])||isNaN(e[2])}i.a.extendChartView({type:"surface",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node},render:function(e,t,r){var n=this._prevSurfaceMesh;this._prevSurfaceMesh=this._surfaceMesh,this._surfaceMesh=n,this._surfaceMesh||(this._surfaceMesh=this._createSurfaceMesh()),this.groupGL.remove(this._prevSurfaceMesh),this.groupGL.add(this._surfaceMesh);var i=e.coordinateSystem,o=e.get("shading"),s=e.getData(),l="ecgl."+o;if(this._surfaceMesh.material&&this._surfaceMesh.material.shader.name===l||(this._surfaceMesh.material=a["a"].createMaterial(l,["VERTEX_COLOR","DOUBLE_SIDED"])),a["a"].setMaterialFromModel(o,this._surfaceMesh.material,e,r),i&&i.viewGL){i.viewGL.add(this.groupGL);var u=i.viewGL.isLinearSpace()?"define":"undefine";this._surfaceMesh.material[u]("fragment","SRGB_DECODE")}var c=e.get("parametric"),h=this._getDataShape(s,c),d=e.getModel("wireframe"),f=d.get("lineStyle.width"),p=d.get("show")&&f>0;this._updateSurfaceMesh(this._surfaceMesh,e,h,p);var m=this._surfaceMesh.material;p?(m.define("WIREFRAME_QUAD"),m.set("wireframeLineWidth",f),m.set("wireframeLineColor",a["a"].parseColor(d.get("lineStyle.color")))):m.undefine("WIREFRAME_QUAD"),this._initHandler(e,r),this._updateAnimation(e)},_updateAnimation:function(e){a["a"].updateVertexAnimation([["prevPosition","position"],["prevNormal","normal"]],this._prevSurfaceMesh,this._surfaceMesh,e)},_createSurfaceMesh:function(){var e=new a["a"].Mesh({geometry:new a["a"].Geometry({dynamic:!0,sortTriangles:!0}),shadowDepthMaterial:new a["a"].Material({shader:new a["a"].Shader(a["a"].Shader.source("ecgl.sm.depth.vertex"),a["a"].Shader.source("ecgl.sm.depth.fragment"))}),culling:!1,renderOrder:10,renderNormal:!0});return e.geometry.createAttribute("barycentric","float",4),e.geometry.createAttribute("prevPosition","float",3),e.geometry.createAttribute("prevNormal","float",3),i.a.util.extend(e.geometry,s["a"]),e},_initHandler:function(e,t){var r=e.getData(),n=this._surfaceMesh,i=e.coordinateSystem;function a(e,t){for(var r=1/0,i=-1,a=[],o=0;o<e.length;o++){n.geometry.attributes.position.get(e[o],a);var s=l.dist(t.array,a);s<r&&(r=s,i=e[o])}return i}n.seriesIndex=e.seriesIndex;var o=-1;n.off("mousemove"),n.off("mouseout"),n.on("mousemove",(function(e){var s=a(e.triangle,e.point);if(s>=0){var u=[];n.geometry.attributes.position.get(s,u);for(var c=i.pointToData(u),h=1/0,d=-1,f=[],p=0;p<r.count();p++){f[0]=r.get("x",p),f[1]=r.get("y",p),f[2]=r.get("z",p);var m=l.squaredDistance(f,c);m<h&&(d=p,h=m)}d!==o&&t.dispatchAction({type:"grid3DShowAxisPointer",value:c}),o=d,n.dataIndex=d}else n.dataIndex=-1}),this),n.on("mouseout",(function(e){o=-1,n.dataIndex=-1,t.dispatchAction({type:"grid3DHideAxisPointer"})}),this)},_updateSurfaceMesh:function(e,t,r,n){var i=e.geometry,o=t.getData(),s=o.getLayout("points"),c=0;o.each((function(e){o.hasValue(e)||c++}));var h=c||n,d=i.attributes.position,f=i.attributes.normal,p=i.attributes.texcoord0,m=i.attributes.barycentric,g=i.attributes.color,_=r.row,v=r.column,y=t.get("shading"),x="color"!==y;if(h){var T=(_-1)*(v-1)*4;d.init(T),n&&m.init(T)}else d.value=new Float32Array(s);g.init(i.vertexCount),p.init(i.vertexCount);var b=[0,3,1,1,3,2],w=[[1,1,0,0],[0,1,0,1],[1,0,0,1],[1,0,1,0]],E=i.indices=new(i.vertexCount>65535?Uint32Array:Uint16Array)((_-1)*(v-1)*6),S=function(e,t,r){r[1]=e*v+t,r[0]=e*v+t+1,r[3]=(e+1)*v+t+1,r[2]=(e+1)*v+t},M=!1;if(h){var A=[],N=[],C=0;x?f.init(i.vertexCount):f.value=null;for(var L=[[],[],[]],P=[],D=[],O=l.create(),R=function(e,t,r){var n=3*t;return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r},I=new Float32Array(s.length),F=new Float32Array(s.length/3*4),B=0;B<o.count();B++)if(o.hasValue(B)){var U=a["a"].parseColor(o.getItemVisual(B,"color")),z=o.getItemVisual(B,"opacity");U[3]*=z,U[3]<.99&&(M=!0);for(var G=0;G<4;G++)F[4*B+G]=U[G]}var H=[1e7,1e7,1e7];for(B=0;B<_-1;B++)for(var k=0;k<v-1;k++){var V=B*(v-1)+k,W=4*V;S(B,k,A);var j=!1;for(G=0;G<4;G++)R(s,A[G],N),u(N)&&(j=!0);for(G=0;G<4;G++)j?d.set(W+G,H):(R(s,A[G],N),d.set(W+G,N)),n&&m.set(W+G,w[G]);for(G=0;G<6;G++)E[C++]=b[G]+W;if(x&&!j)for(G=0;G<2;G++){for(var X=3*G,q=0;q<3;q++){var Z=A[b[X]+q];R(s,Z,L[q])}l.sub(P,L[0],L[1]),l.sub(D,L[1],L[2]),l.cross(O,P,D);for(q=0;q<3;q++){var Y=3*A[b[X]+q];I[Y]=I[Y]+O[0],I[Y+1]=I[Y+1]+O[1],I[Y+2]=I[Y+2]+O[2]}}}if(x)for(B=0;B<I.length/3;B++)R(I,B,O),l.normalize(O,O),I[3*B]=O[0],I[3*B+1]=O[1],I[3*B+2]=O[2];U=[];var K=[];for(B=0;B<_-1;B++)for(k=0;k<v-1;k++){V=B*(v-1)+k,W=4*V;S(B,k,A);for(G=0;G<4;G++){for(q=0;q<4;q++)U[q]=F[4*A[G]+q];g.set(W+G,U),x&&(R(I,A[G],O),f.set(W+G,O));Z=A[G];K[0]=Z%v/(v-1),K[1]=Math.floor(Z/v)/(_-1),p.set(W+G,K)}V++}}else{for(K=[],B=0;B<o.count();B++){K[0]=B%v/(v-1),K[1]=Math.floor(B/v)/(_-1);U=a["a"].parseColor(o.getItemVisual(B,"color")),z=o.getItemVisual(B,"opacity");U[3]*=z,U[3]<.99&&(M=!0),g.set(B,U),p.set(B,K)}A=[];var Q=0;for(B=0;B<_-1;B++)for(k=0;k<v-1;k++){S(B,k,A);for(G=0;G<6;G++)E[Q++]=A[b[G]]}x?i.generateVertexNormals():f.value=null}e.material.get("normalMap")&&i.generateTangents(),i.updateBoundingBox(),i.dirty(),e.material.transparent=M,e.material.depthMask=!M},_getDataShape:function(e,t){for(var r=-1/0,n=0,i=0,a=0,o=t?"u":"x",s=0;s<e.count();s++){var l=e.get(o,s);if(l<r){if(a&&a!==i)throw new Error("Invalid data. data should be a row major 2d array.");a=i,i=0,n++}r=l,i++}return{row:n+1,column:i}},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n);i.a.registerLayout((function(e,t){e.eachSeriesByType("surface",(function(e){var t=e.coordinateSystem;t&&"cartesian3D"===t.type||console.error("Surface chart only support cartesian3D coordinateSystem");var r=e.getData(),n=new Float32Array(3*r.count()),i=[NaN,NaN,NaN];if(t&&"cartesian3D"===t.type){var a=t.dimensions,o=a.map((function(t){return e.coordDimToDataDim(t)[0]}));r.each(o,(function(e,a,o,s){var l;l=r.hasValue(s)?t.dataToPoint([e,a,o]):i,n[3*s]=l[0],n[3*s+1]=l[1],n[3*s+2]=l[2]}))}r.setLayout("points",n)}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(99),r(257),r(258),r(17));i.a.registerVisual(Object(a["a"])("map3D")),i.a.registerAction({type:"map3DChangeCamera",event:"map3dcamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"series",subType:"map3D",query:e},(function(t){t.setView(e)}))}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(44),o=r(28),s=r(29),l=r(31),u=r(96),c=r(32),h=r(39),d=r(98);function f(e,t){for(var r=[],n=0;n<t.length;n++)r.push(e.dataToPoint(t[n]));return r}var p=i.a.extendSeriesModel({type:"series.map3D",layoutMode:"box",coordinateSystem:null,visualColorAccessPath:"itemStyle.color",optionUpdated:function(e){e=e||{};var t=this.get("coordinateSystem");if(null!=t&&"geo3D"!==t){var r=["left","top","width","height","boxWidth","boxDepth","boxHeight","light","viewControl","postEffect","temporalSuperSampling","environment","groundPlane"],n=[];r.forEach((function(t){null!=e[t]&&n.push(t)})),n.length&&console.warn("Property %s in map3D series will be ignored if coordinate system is %s",n.join(", "),t),this.get("groundPlane.show")&&(this.option.groundPlane.show=!1),this._geo=null}},getInitialData:function(e){e.data=this.getFilledRegions(e.data,e.map);var t=i.a.helper.completeDimensions(["value"],e.data),r=new i.a.List(t,this);r.initData(e.data);var n={};return r.each((function(e){var t=r.getName(e),i=r.getItemModel(e);n[t]=i})),this._regionModelMap=n,r},formatTooltip:function(e){return Object(h["a"])(this,e)},getRegionModel:function(e){var t=this.getData().getName(e);return this._regionModelMap[t]||new i.a.Model(null,this)},getRegionPolygonCoords:function(e){var t=this.coordinateSystem,r=this.getData().getName(e);if(t.transform){var n=t.getRegion(r);return n?n.geometries:[]}this._geo||(this._geo=d["a"].createGeo3D(this));n=this._geo.getRegion(r);for(var i=[],a=0;a<n.geometries.length;a++){var o=n.geometries[a],s=[],l=f(t,o.exterior);if(s&&s.length)for(var u=0;u<o.interiors.length;u++)s.push(f(t,s[u]));i.push({interiors:s,exterior:l})}return i},getFormattedLabel:function(e,t){var r=c["a"].getFormattedLabel(this,e,t);return null==r&&(r=this.getData().getName(e)),r},defaultOption:{coordinateSystem:"geo3D",data:null}});i.a.util.merge(p.prototype,u["a"]),i.a.util.merge(p.prototype,a["a"]),i.a.util.merge(p.prototype,o["a"]),i.a.util.merge(p.prototype,s["a"]),i.a.util.merge(p.prototype,l["a"])},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(45),s=r(30),l=r(64);i.a.extendChartView({type:"map3D",__ecgl__:!0,init:function(e,t){this._geo3DBuilder=new l["a"](t),this.groupGL=new a["a"].Node},render:function(e,t,r){var n=e.coordinateSystem;if(n&&n.viewGL){if(this.groupGL.add(this._geo3DBuilder.rootNode),n.viewGL.add(this.groupGL),"geo3D"===n.type){n,this._sceneHelper||(this._sceneHelper=new s["a"],this._sceneHelper.initLight(this.groupGL)),this._sceneHelper.setScene(n.viewGL.scene),this._sceneHelper.updateLight(e),n.viewGL.setPostEffect(e.getModel("postEffect"),r),n.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling"));var i=this._control;i||(i=this._control=new o["a"]({zr:r.getZr()}),this._control.init());var a=e.getModel("viewControl");i.setViewGL(n.viewGL),i.setFromViewControlModel(a,0),i.off("update"),i.on("update",(function(){r.dispatchAction({type:"map3DChangeCamera",alpha:i.getAlpha(),beta:i.getBeta(),distance:i.getDistance(),from:this.uid,map3DId:e.id})})),this._geo3DBuilder.extrudeY=!0}else this._control&&(this._control.dispose(),this._control=null),this._sceneHelper&&(this._sceneHelper.dispose(),this._sceneHelper=null),e.getData().getLayout("geo3D"),this._geo3DBuilder.extrudeY=!1;this._geo3DBuilder.update(e,t,r,0,e.getData().count());var l=n.viewGL.isLinearSpace()?"define":"undefine";this._geo3DBuilder.rootNode.traverse((function(e){e.material&&e.material[l]("fragment","SRGB_DECODE")}))}},afterRender:function(e,t,r,n){var i=n.renderer,a=e.coordinateSystem;a&&"geo3D"===a.type&&(this._sceneHelper.updateAmbientCubemap(i,e,r),this._sceneHelper.updateSkybox(i,e,r))},dispose:function(){this.groupGL.removeAll(),this._control.dispose()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(260),r(261),r(51)),o=r.n(a),s=r(17);i.a.registerVisual(o()("scatterGL","circle",null)),i.a.registerVisual(Object(s["a"])("scatterGL")),i.a.registerLayout({seriesType:"scatterGL",reset:function(e){var t,r=e.coordinateSystem;if(r){var n=r.dimensions,i=[];1===n.length?t=function(e,t){for(var i=new Float32Array(2*(e.end-e.start)),a=e.start;a<e.end;a++){var o=2*(a-e.start),s=t.get(n[0],a),l=r.dataToPoint(s);i[o]=l[0],i[o+1]=l[1]}t.setLayout("points",i)}:2===n.length&&(t=function(e,t){for(var a=new Float32Array(2*(e.end-e.start)),o=e.start;o<e.end;o++){var s=2*(o-e.start),l=t.get(n[0],o),u=t.get(n[1],o);i[0]=l,i[1]=u,i=r.dataToPoint(i),a[s]=i[0],a[s+1]=i[1]}t.setLayout("points",a)})}return{progress:t}}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n);i.a.extendSeriesModel({type:"series.scatterGL",dependencies:["grid","polar","geo","singleAxis"],visualColorAccessPath:"itemStyle.color",getInitialData:function(){return i.a.helper.createList(this)},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,progressive:1e5,progressiveThreshold:1e5,large:!1,symbol:"circle",symbolSize:10,zoomScale:0,blendMode:"source-over",itemStyle:{opacity:.8},postEffect:{enable:!1,colorCorrection:{exposure:0,brightness:0,contrast:1,saturation:1,enable:!0}}}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(22),s=r(67),l=r(103);r(2);i.a.extendChartView({type:"scatterGL",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node,this.viewGL=new o["a"]("orthographic"),this.viewGL.add(this.groupGL),this._pointsBuilderList=[],this._currentStep=0,this._sizeScale=1,this._glViewHelper=new l["a"](this.viewGL)},render:function(e,t,r){if(this.groupGL.removeAll(),this._glViewHelper.reset(e,r),e.getData().count()){var n=this._pointsBuilderList[0];n||(n=this._pointsBuilderList[0]=new s["a"](!0,r)),this._pointsBuilderList.length=1,this.groupGL.add(n.rootNode),this._removeTransformInPoints(e.getData().getLayout("points")),n.update(e,t,r),this.viewGL.setPostEffect(e.getModel("postEffect"),r)}},incrementalPrepareRender:function(e,t,r){this.groupGL.removeAll(),this._glViewHelper.reset(e,r),this._currentStep=0,this.viewGL.setPostEffect(e.getModel("postEffect"),r)},incrementalRender:function(e,t,r,n){if(!(e.end<=e.start)){var i=this._pointsBuilderList[this._currentStep];i||(i=new s["a"](!0,n),this._pointsBuilderList[this._currentStep]=i),this.groupGL.add(i.rootNode),this._removeTransformInPoints(t.getData().getLayout("points")),i.setSizeScale(this._sizeScale),i.update(t,r,n,e.start,e.end),n.getZr().refresh(),this._currentStep++}},updateTransform:function(e,t,r){if(e.coordinateSystem.getRoamTransform){this._glViewHelper.updateTransform(e,r);var n=this._glViewHelper.getZoom(),i=Math.max((e.get("zoomScale")||0)*(n-1)+1,0);this._sizeScale=i,this._pointsBuilderList.forEach((function(e){e.setSizeScale(i)}))}},_removeTransformInPoints:function(e){if(e)for(var t=[],r=0;r<e.length;r+=2)t[0]=e[r],t[1]=e[r+1],this._glViewHelper.removeTransformInPoint(t),e[r]=t[0],e[r+1]=t[1]},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(263),r(268),r(51)),o=r.n(a),s=r(17);function l(){}i.a.registerVisual(o()("graphGL","circle",null)),i.a.registerVisual(Object(s["a"])("graphGL")),i.a.registerVisual((function(e){var t={};e.eachSeriesByType("graphGL",(function(e){var r=e.getCategoriesData(),n=e.getData(),i={};r.each((function(n){var a=r.getName(n);i[a]=n;var o=r.getItemModel(n),s=o.get("itemStyle.color")||e.getColorFromPalette(a,t);r.setItemVisual(n,"color",s)})),r.count()&&n.each((function(e){var t=n.getItemModel(e),a=t.getShallow("category");null!=a&&("string"===typeof a&&(a=i[a]),n.getItemVisual(e,"color",!0)||n.setItemVisual(e,"color",r.getItemVisual(a,"color")))}))}))})),i.a.registerVisual((function(e){e.eachSeriesByType("graphGL",(function(e){var t=e.getGraph(),r=e.getEdgeData(),n="lineStyle.color".split("."),i="lineStyle.opacity".split(".");r.setVisual("color",e.get(n)),r.setVisual("opacity",e.get(i)),r.each((function(e){var a=r.getItemModel(e),o=t.getEdgeByIndex(e),s=a.get(n),l=a.get(i);switch(s){case"source":s=o.node1.getVisual("color");break;case"target":s=o.node2.getVisual("color");break}o.setVisual("color",s),o.setVisual("opacity",l)}))}))})),i.a.registerAction({type:"graphGLRoam",event:"graphglroam",update:"series.graphGL:roam"},(function(e,t){t.eachComponent({mainType:"series",query:e},(function(t){t.setView(e)}))})),i.a.registerAction({type:"graphGLStartLayout",event:"graphgllayoutstarted",update:"series.graphGL:startLayout"},l),i.a.registerAction({type:"graphGLStopLayout",event:"graphgllayoutstopped",update:"series.graphGL:stopLayout"},l),i.a.registerAction({type:"graphGLFocusNodeAdjacency",event:"graphGLFocusNodeAdjacency",update:"series.graphGL:focusNodeAdjacency"},l),i.a.registerAction({type:"graphGLUnfocusNodeAdjacency",event:"graphGLUnfocusNodeAdjacency",update:"series.graphGL:unfocusNodeAdjacency"},l)},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(264),o=r(32),s=i.a.extendSeriesModel({type:"series.graphGL",visualColorAccessPath:"itemStyle.color",init:function(e){s.superApply(this,"init",arguments),this.legendDataProvider=function(){return this._categoriesData},this._updateCategoriesData()},mergeOption:function(e){s.superApply(this,"mergeOption",arguments),this._updateCategoriesData()},getFormattedLabel:function(e,t,r,n){var i=o["a"].getFormattedLabel(this,e,t,r,n);if(null==i){var a=this.getData(),s=a.dimensions[a.dimensions.length-1];i=a.get(s,e)}return i},getInitialData:function(e,t){var r=e.edges||e.links||[],n=e.data||e.nodes||[],o=this;if(n&&r)return Object(a["a"])(n,r,this,!0,s).data;function s(e,r){e.wrapMethod("getItemModel",(function(e){var t=o._categoriesModels,r=e.getShallow("category"),n=t[r];return n&&(n.parentModel=e.parentModel,e.parentModel=n),e}));var n=o.getModel("edgeLabel"),a=new i.a.Model({label:n.option},n.parentModel,t);function s(e){return e=this.parsePath(e),e&&"label"===e[0]?a:this.parentModel}r.wrapMethod("getItemModel",(function(e){return e.customizeGetParent(s),e}))}},getGraph:function(){return this.getData().graph},getEdgeData:function(){return this.getGraph().edgeData},getCategoriesData:function(){return this._categoriesData},formatTooltip:function(e,t,r){if("edge"===r){var n=this.getData(),a=this.getDataParams(e,r),o=n.graph.getEdgeByIndex(e),l=n.getName(o.node1.dataIndex),u=n.getName(o.node2.dataIndex),c=[];return null!=l&&c.push(l),null!=u&&c.push(u),c=i.a.format.encodeHTML(c.join(" > ")),a.value&&(c+=" : "+i.a.format.encodeHTML(a.value)),c}return s.superApply(this,"formatTooltip",arguments)},_updateCategoriesData:function(){var e=(this.option.categories||[]).map((function(e){return null!=e.value?e:i.a.util.extend({value:0},e)})),t=new i.a.List(["value"],this);t.initData(e),this._categoriesData=t,this._categoriesModels=t.mapArray((function(e){return t.getItemModel(e,!0)}))},setView:function(e){null!=e.zoom&&(this.option.zoom=e.zoom),null!=e.offset&&(this.option.offset=e.offset)},setNodePosition:function(e){for(var t=0;t<e.length/2;t++){var r=e[2*t],n=e[2*t+1],i=this.getData().getRawDataItem(t);i.x=r,i.y=n}},isAnimationEnabled:function(){return s.superCall(this,"isAnimationEnabled")&&!("force"===this.get("layout")&&this.get("force.layoutAnimation"))},defaultOption:{zlevel:10,z:2,legendHoverLink:!0,layout:"forceAtlas2",forceAtlas2:{initLayout:null,GPU:!0,steps:1,maxSteps:1e3,repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,edgeWeightInfluence:1,edgeWeight:[1,4],nodeWeight:[1,4],preventOverlap:!1,gravityCenter:null},focusNodeAdjacency:!0,focusNodeAdjacencyOn:"mouseover",left:"center",top:"center",symbol:"circle",symbolSize:5,roam:!1,center:null,zoom:1,label:{show:!1,formatter:"{b}",position:"right",distance:5,textStyle:{fontSize:14}},itemStyle:{},lineStyle:{color:"#aaa",width:1,opacity:.5},emphasis:{label:{show:!0}},animation:!1}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(265),o=r.n(a),s=r(267),l=r.n(s),u=r(2);t["a"]=function(e,t,r,n,a){for(var s=new o.a(n),c=0;c<e.length;c++)s.addNode(u["a"].firstNotNull(e[c].id,e[c].name,c),c);var h,d=[],f=[],p=0;for(c=0;c<t.length;c++){var m=t[c],g=m.source,_=m.target;s.addEdge(g,_,p)&&(f.push(m),d.push(u["a"].firstNotNull(m.id,g+" > "+_)),p++)}var v=i.a.helper.completeDimensions(["value"],e);h=new i.a.List(v,r),h.initData(e);var y=new i.a.List(["value"],r);return y.initData(f,d),a&&a(h,y),l()({mainData:h,struct:s,structAttr:"graph",datas:{node:h,edge:y},datasAttr:{node:"data",edge:"edgeData"}}),s.update(),s}},function(e,t,r){var n=r(104),i=(n.__DEV__,r(13)),a=r(266),o=a.enableClassCheck;function s(e){return"_EC_"+e}var l=function(e){this._directed=e||!1,this.nodes=[],this.edges=[],this._nodesMap={},this._edgesMap={},this.data,this.edgeData},u=l.prototype;function c(e,t){this.id=null==e?"":e,this.inEdges=[],this.outEdges=[],this.edges=[],this.hostGraph,this.dataIndex=null==t?-1:t}function h(e,t,r){this.node1=e,this.node2=t,this.dataIndex=null==r?-1:r}u.type="graph",u.isDirected=function(){return this._directed},u.addNode=function(e,t){e=e||""+t;var r=this._nodesMap;if(!r[s(e)]){var n=new c(e,t);return n.hostGraph=this,this.nodes.push(n),r[s(e)]=n,n}},u.getNodeByIndex=function(e){var t=this.data.getRawIndex(e);return this.nodes[t]},u.getNodeById=function(e){return this._nodesMap[s(e)]},u.addEdge=function(e,t,r){var n=this._nodesMap,i=this._edgesMap;if("number"===typeof e&&(e=this.nodes[e]),"number"===typeof t&&(t=this.nodes[t]),c.isInstance(e)||(e=n[s(e)]),c.isInstance(t)||(t=n[s(t)]),e&&t){var a=e.id+"-"+t.id;if(!i[a]){var o=new h(e,t,r);return o.hostGraph=this,this._directed&&(e.outEdges.push(o),t.inEdges.push(o)),e.edges.push(o),e!==t&&t.edges.push(o),this.edges.push(o),i[a]=o,o}}},u.getEdgeByIndex=function(e){var t=this.edgeData.getRawIndex(e);return this.edges[t]},u.getEdge=function(e,t){c.isInstance(e)&&(e=e.id),c.isInstance(t)&&(t=t.id);var r=this._edgesMap;return this._directed?r[e+"-"+t]:r[e+"-"+t]||r[t+"-"+e]},u.eachNode=function(e,t){for(var r=this.nodes,n=r.length,i=0;i<n;i++)r[i].dataIndex>=0&&e.call(t,r[i],i)},u.eachEdge=function(e,t){for(var r=this.edges,n=r.length,i=0;i<n;i++)r[i].dataIndex>=0&&r[i].node1.dataIndex>=0&&r[i].node2.dataIndex>=0&&e.call(t,r[i],i)},u.breadthFirstTraverse=function(e,t,r,n){if(c.isInstance(t)||(t=this._nodesMap[s(t)]),t){for(var i="out"===r?"outEdges":"in"===r?"inEdges":"edges",a=0;a<this.nodes.length;a++)this.nodes[a].__visited=!1;if(!e.call(n,t,null)){var o=[t];while(o.length){var l=o.shift(),u=l[i];for(a=0;a<u.length;a++){var h=u[a],d=h.node1===l?h.node2:h.node1;if(!d.__visited){if(e.call(n,d,l))return;o.push(d),d.__visited=!0}}}}}},u.update=function(){for(var e=this.data,t=this.edgeData,r=this.nodes,n=this.edges,i=0,a=r.length;i<a;i++)r[i].dataIndex=-1;for(i=0,a=e.count();i<a;i++)r[e.getRawIndex(i)].dataIndex=i;t.filterSelf((function(e){var r=n[t.getRawIndex(e)];return r.node1.dataIndex>=0&&r.node2.dataIndex>=0}));for(i=0,a=n.length;i<a;i++)n[i].dataIndex=-1;for(i=0,a=t.count();i<a;i++)n[t.getRawIndex(i)].dataIndex=i},u.clone=function(){for(var e=new l(this._directed),t=this.nodes,r=this.edges,n=0;n<t.length;n++)e.addNode(t[n].id,t[n].dataIndex);for(n=0;n<r.length;n++){var i=r[n];e.addEdge(i.node1.id,i.node2.id,i.dataIndex)}return e},c.prototype={constructor:c,degree:function(){return this.edges.length},inDegree:function(){return this.inEdges.length},outDegree:function(){return this.outEdges.length},getModel:function(e){if(!(this.dataIndex<0)){var t=this.hostGraph,r=t.data.getItemModel(this.dataIndex);return r.getModel(e)}}},h.prototype.getModel=function(e){if(!(this.dataIndex<0)){var t=this.hostGraph,r=t.edgeData.getItemModel(this.dataIndex);return r.getModel(e)}};var d=function(e,t){return{getValue:function(r){var n=this[e][t];return n.get(n.getDimension(r||"value"),this.dataIndex)},setVisual:function(r,n){this.dataIndex>=0&&this[e][t].setItemVisual(this.dataIndex,r,n)},getVisual:function(r,n){return this[e][t].getItemVisual(this.dataIndex,r,n)},setLayout:function(r,n){this.dataIndex>=0&&this[e][t].setItemLayout(this.dataIndex,r,n)},getLayout:function(){return this[e][t].getItemLayout(this.dataIndex)},getGraphicEl:function(){return this[e][t].getItemGraphicEl(this.dataIndex)},getRawIndex:function(){return this[e][t].getRawIndex(this.dataIndex)}}};i.mixin(c,d("hostGraph","data")),i.mixin(h,d("hostGraph","edgeData")),l.Node=c,l.Edge=h,o(c),o(h);var f=l;e.exports=f},function(e,t,r){var n=r(104),i=(n.__DEV__,r(13)),a=".",o="___EC__COMPONENT__CONTAINER___";function s(e){var t={main:"",sub:""};return e&&(e=e.split(a),t.main=e[0]||"",t.sub=e[1]||""),t}function l(e){i.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(e),'componentType "'+e+'" illegal')}function u(e,t){e.$constructor=e,e.extend=function(e){var t=this,r=function(){e.$constructor?e.$constructor.apply(this,arguments):t.apply(this,arguments)};return i.extend(r.prototype,e),r.extend=this.extend,r.superCall=d,r.superApply=f,i.inherits(r,this),r.superClass=t,r}}var c=0;function h(e){var t=["__\0is_clz",c++,Math.random().toFixed(3)].join("_");e.prototype[t]=!0,e.isInstance=function(e){return!(!e||!e[t])}}function d(e,t){var r=i.slice(arguments,2);return this.superClass.prototype[t].apply(e,r)}function f(e,t,r){return this.superClass.prototype[t].apply(e,r)}function p(e,t){t=t||{};var r={};function n(e){var t=r[e.main];return t&&t[o]||(t=r[e.main]={},t[o]=!0),t}if(e.registerClass=function(e,t){if(t)if(l(t),t=s(t),t.sub){if(t.sub!==o){var i=n(t);i[t.sub]=e}}else r[t.main]=e;return e},e.getClass=function(e,t,n){var i=r[e];if(i&&i[o]&&(i=t?i[t]:null),n&&!i)throw new Error(t?"Component "+e+"."+(t||"")+" not exists. Load it first.":e+".type should be specified.");return i},e.getClassesByMainType=function(e){e=s(e);var t=[],n=r[e.main];return n&&n[o]?i.each(n,(function(e,r){r!==o&&t.push(e)})):t.push(n),t},e.hasClass=function(e){return e=s(e),!!r[e.main]},e.getAllClassMainTypes=function(){var e=[];return i.each(r,(function(t,r){e.push(r)})),e},e.hasSubTypes=function(e){e=s(e);var t=r[e.main];return t&&t[o]},e.parseClassType=s,t.registerWhenExtend){var a=e.extend;a&&(e.extend=function(t){var r=a.call(this,t);return e.registerClass(r,t.type)})}return e}function m(e,t){}t.parseClassType=s,t.enableClassExtend=u,t.enableClassCheck=h,t.enableClassManagement=p,t.setReadOnly=m},function(e,t,r){var n=r(13),i=n.each,a="\0__link_datas",o="\0__link_mainData";function s(e){var t=e.mainData,r=e.datas;r||(r={main:t},e.datasAttr={main:"data"}),e.datas=e.mainData=null,f(t,r,e),i(r,(function(r){i(t.TRANSFERABLE_METHODS,(function(t){r.wrapMethod(t,n.curry(l,e))}))})),t.wrapMethod("cloneShallow",n.curry(c,e)),i(t.CHANGABLE_METHODS,(function(r){t.wrapMethod(r,n.curry(u,e))})),n.assert(r[t.dataType]===t)}function l(e,t){if(d(this)){var r=n.extend({},this[a]);r[this.dataType]=t,f(t,r,e)}else p(t,this.dataType,this[o],e);return t}function u(e,t){return e.struct&&e.struct.update(this),t}function c(e,t){return i(t[a],(function(r,n){r!==t&&p(r.cloneShallow(),n,t,e)})),t}function h(e){var t=this[o];return null==e||null==t?t:t[a][e]}function d(e){return e[o]===e}function f(e,t,r){e[a]={},i(t,(function(t,n){p(t,n,e,r)}))}function p(e,t,r,n){r[a][t]=e,e[o]=r,e.dataType=t,n.struct&&(e[n.structAttr]=n.struct,n.struct[n.datasAttr[t]]=e),e.getLinkedData=h}var m=s;e.exports=m},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(47),o=r.n(a),s=r(1),l=r(22),u=r(105),c=r(2),h=r(269),d=r(271),f=r(80),p=r.n(f),m=r(6),g=r(273),_=r(67),v=r(274),y=m["a"].vec2;s["a"].Shader.import(v["a"]);var x=1;i.a.extendChartView({type:"graphGL",__ecgl__:!0,init:function(e,t){this.groupGL=new s["a"].Node,this.viewGL=new l["a"]("orthographic"),this.viewGL.camera.left=this.viewGL.camera.right=0,this.viewGL.add(this.groupGL),this._pointsBuilder=new _["a"](!0,t),this._forceEdgesMesh=new s["a"].Mesh({material:new s["a"].Material({shader:s["a"].createShader("ecgl.forceAtlas2.edges"),transparent:!0,depthMask:!1,depthTest:!1}),$ignorePicking:!0,geometry:new s["a"].Geometry({attributes:{node:new s["a"].Geometry.Attribute("node","float",2),color:new s["a"].Geometry.Attribute("color","float",4,"COLOR")},dynamic:!0,mainAttribute:"node"}),renderOrder:-1,mode:s["a"].Mesh.LINES}),this._edgesMesh=new s["a"].Mesh({material:new s["a"].Material({shader:s["a"].createShader("ecgl.meshLines2D"),transparent:!0,depthMask:!1,depthTest:!1}),$ignorePicking:!0,geometry:new u["a"]({useNativeLine:!1,dynamic:!0}),renderOrder:-1,culling:!1}),this._layoutId=0,this._control=new g["a"]({zr:t.getZr(),viewGL:this.viewGL}),this._control.setTarget(this.groupGL),this._control.init(),this._clickHandler=this._clickHandler.bind(this)},render:function(e,t,r){this.groupGL.add(this._pointsBuilder.rootNode),this._model=e,this._api=r,this._initLayout(e,t,r),this._pointsBuilder.update(e,t,r),this._forceLayoutInstance instanceof h["a"]||this.groupGL.remove(this._forceEdgesMesh),this._updateCamera(e,r),this._control.off("update"),this._control.on("update",(function(){r.dispatchAction({type:"graphGLRoam",seriesId:e.id,zoom:this._control.getZoom(),offset:this._control.getOffset()}),this._pointsBuilder.updateView(this.viewGL.camera)}),this),this._control.setZoom(c["a"].firstNotNull(e.get("zoom"),1)),this._control.setOffset(e.get("offset")||[0,0]);var n=this._pointsBuilder.getPointsMesh();if(n.off("mousemove",this._mousemoveHandler),n.off("mouseout",this._mouseOutHandler,this),r.getZr().off("click",this._clickHandler),this._pointsBuilder.highlightOnMouseover=!0,e.get("focusNodeAdjacency")){var i=e.get("focusNodeAdjacencyOn");"click"===i?r.getZr().on("click",this._clickHandler):"mouseover"===i?(n.on("mousemove",this._mousemoveHandler,this),n.on("mouseout",this._mouseOutHandler,this),this._pointsBuilder.highlightOnMouseover=!1):console.warn("Unkown focusNodeAdjacencyOn value s"+i)}this._lastMouseOverDataIndex=-1},_clickHandler:function(e){if(!this._layouting){var t=this._pointsBuilder.getPointsMesh().dataIndex;t>=0?this._api.dispatchAction({type:"graphGLFocusNodeAdjacency",seriesId:this._model.id,dataIndex:t}):this._api.dispatchAction({type:"graphGLUnfocusNodeAdjacency",seriesId:this._model.id})}},_mousemoveHandler:function(e){if(!this._layouting){var t=this._pointsBuilder.getPointsMesh().dataIndex;t>=0?t!==this._lastMouseOverDataIndex&&this._api.dispatchAction({type:"graphGLFocusNodeAdjacency",seriesId:this._model.id,dataIndex:t}):this._mouseOutHandler(e),this._lastMouseOverDataIndex=t}},_mouseOutHandler:function(e){this._layouting||(this._api.dispatchAction({type:"graphGLUnfocusNodeAdjacency",seriesId:this._model.id}),this._lastMouseOverDataIndex=-1)},_updateForceEdgesGeometry:function(e,t){var r=this._forceEdgesMesh.geometry,n=t.getEdgeData(),i=0,a=this._forceLayoutInstance,o=2*n.count();r.attributes.node.init(o),r.attributes.color.init(o),n.each((function(t){var o=e[t];r.attributes.node.set(i,a.getNodeUV(o.node1)),r.attributes.node.set(i+1,a.getNodeUV(o.node2));var l=n.getItemVisual(o.dataIndex,"color"),u=s["a"].parseColor(l);u[3]*=c["a"].firstNotNull(n.getItemVisual(o.dataIndex,"opacity"),1),r.attributes.color.set(i,u),r.attributes.color.set(i+1,u),i+=2})),r.dirty()},_updateMeshLinesGeometry:function(){var e=this._model.getEdgeData(),t=this._edgesMesh.geometry,r=(e=this._model.getEdgeData(),this._model.getData().getLayout("points"));t.resetOffset(),t.setVertexCount(e.count()*t.getLineVertexCount()),t.setTriangleCount(e.count()*t.getLineTriangleCount());var n=[],i=[],a=["lineStyle","width"];this._originalEdgeColors=new Float32Array(4*e.count()),this._edgeIndicesMap=new Float32Array(e.count()),e.each((function(o){var l=e.graph.getEdgeByIndex(o),u=2*l.node1.dataIndex,h=2*l.node2.dataIndex;n[0]=r[u],n[1]=r[u+1],i[0]=r[h],i[1]=r[h+1];var d=e.getItemVisual(l.dataIndex,"color"),f=s["a"].parseColor(d);f[3]*=c["a"].firstNotNull(e.getItemVisual(l.dataIndex,"opacity"),1);var p=e.getItemModel(l.dataIndex),m=c["a"].firstNotNull(p.get(a),1)*this._api.getDevicePixelRatio();t.addLine(n,i,f,m);for(var g=0;g<4;g++)this._originalEdgeColors[4*l.dataIndex+g]=f[g];this._edgeIndicesMap[l.dataIndex]=o}),this),t.dirty()},_updateForceNodesGeometry:function(e){for(var t=this._pointsBuilder.getPointsMesh(),r=[],n=0;n<e.count();n++)this._forceLayoutInstance.getNodeUV(n,r),t.geometry.attributes.position.set(n,r);t.geometry.dirty("position")},_initLayout:function(e,t,r){var n=e.get("layout"),a=e.getGraph(),s=e.getBoxLayoutParams(),l=o.a.getLayoutRect(s,{width:r.getWidth(),height:r.getHeight()});"force"===n&&(console.warn("Currently only forceAtlas2 layout supported."),n="forceAtlas2"),this.stopLayout(e,t,r,{beforeLayout:!0});var u=e.getData(),f=e.getData();if("forceAtlas2"===n){var p=e.getModel("forceAtlas2"),m=this._forceLayoutInstance,g=[],_=[],v=u.getDataExtent("value"),y=f.getDataExtent("value"),x=c["a"].firstNotNull(p.get("edgeWeight"),1),T=c["a"].firstNotNull(p.get("nodeWeight"),1);"number"===typeof x&&(x=[x,x]),"number"===typeof T&&(T=[T,T]);var b=0,w={},E=new Float32Array(2*u.count());if(a.eachNode((function(e){var t,r,n=e.dataIndex,a=u.get("value",n);if(u.hasItemOption){var o=u.getItemModel(n);t=o.get("x"),r=o.get("y")}null==t&&(t=l.x+Math.random()*l.width,r=l.y+Math.random()*l.height),E[2*b]=t,E[2*b+1]=r,w[e.id]=b++;var s=i.a.number.linearMap(a,v,T);isNaN(s)&&(s=isNaN(T[0])?1:T[0]),g.push({x:t,y:r,mass:s,size:u.getItemVisual(n,"symbolSize")})})),u.setLayout("points",E),a.eachEdge((function(e){var t=e.dataIndex,r=u.get("value",t),n=i.a.number.linearMap(r,y,x);isNaN(n)&&(n=isNaN(x[0])?1:x[0]),_.push({node1:w[e.node1.id],node2:w[e.node2.id],weight:n,dataIndex:t})})),!m){var S=p.get("GPU");this._forceLayoutInstance&&((!S||this._forceLayoutInstance instanceof h["a"])&&(S||this._forceLayoutInstance instanceof d["a"])||(this._forceLayoutInstanceToDispose=this._forceLayoutInstance)),m=this._forceLayoutInstance=S?new h["a"]:new d["a"]}m.initData(g,_),m.updateOption(p.option),this._updateForceEdgesGeometry(m.getEdges(),e),this._updatePositionTexture(),r.dispatchAction({type:"graphGLStartLayout",from:this.uid})}else{E=new Float32Array(2*u.count()),b=0;a.eachNode((function(e){var t,r,n=e.dataIndex;if(u.hasItemOption){var i=u.getItemModel(n);t=i.get("x"),r=i.get("y")}E[b++]=t,E[b++]=r})),u.setLayout("points",E),this._updateAfterLayout(e,t,r)}},_updatePositionTexture:function(){var e=this._forceLayoutInstance.getNodePositionTexture();this._pointsBuilder.setPositionTexture(e),this._forceEdgesMesh.material.set("positionTex",e)},startLayout:function(e,t,r,n){if(!n||null==n.from||n.from===this.uid){var i=this.viewGL,a=(r=this._api,this._forceLayoutInstance),o=this._model.getData(),s=this._model.getModel("forceAtlas2");if(a){if(this.groupGL.remove(this._edgesMesh),this.groupGL.add(this._forceEdgesMesh),this._forceLayoutInstance){this._updateForceNodesGeometry(e.getData()),this._pointsBuilder.hideLabels();var l=this,u=this._layoutId=x++,c=s.getShallow("maxSteps"),h=s.getShallow("steps"),d=0,f=Math.max(2*h,20),m=function(t){if(t===l._layoutId)return a.isFinished(c)?(r.dispatchAction({type:"graphGLStopLayout",from:l.uid}),void r.dispatchAction({type:"graphGLFinishLayout",points:o.getLayout("points"),from:l.uid})):void a.update(i.layer.renderer,h,(function(){l._updatePositionTexture(),d+=h,d>=f&&(l._syncNodePosition(e),d=0),r.getZr().refresh(),p()((function(){m(t)}))}))};p()((function(){l._forceLayoutInstanceToDispose&&(l._forceLayoutInstanceToDispose.dispose(i.layer.renderer),l._forceLayoutInstanceToDispose=null),m(u)})),this._layouting=!0}}else console.error("None layout don't have startLayout action")}},stopLayout:function(e,t,r,n){n&&null!=n.from&&n.from!==this.uid||(this._layoutId=0,this.groupGL.remove(this._forceEdgesMesh),this.groupGL.add(this._edgesMesh),this._forceLayoutInstance&&this.viewGL.layer&&(n&&n.beforeLayout||(this._syncNodePosition(e),this._updateAfterLayout(e,t,r)),this._api.getZr().refresh(),this._layouting=!1))},_syncNodePosition:function(e){var t=this._forceLayoutInstance.getNodePosition(this.viewGL.layer.renderer);e.getData().setLayout("points",t),e.setNodePosition(t)},_updateAfterLayout:function(e,t,r){this._updateMeshLinesGeometry(),this._pointsBuilder.removePositionTexture(),this._pointsBuilder.updateLayout(e,t,r),this._pointsBuilder.updateView(this.viewGL.camera),this._pointsBuilder.updateLabels(),this._pointsBuilder.showLabels()},focusNodeAdjacency:function(e,t,r,n){var i=this._model.getData();this._downplayAll();var a=n.dataIndex,o=i.graph,s=[],l=o.getNodeByIndex(a);s.push(l),l.edges.forEach((function(e){e.dataIndex<0||(e.node1!==l&&s.push(e.node1),e.node2!==l&&s.push(e.node2))}),this),this._pointsBuilder.fadeOutAll(.05),this._fadeOutEdgesAll(.05),s.forEach((function(e){this._pointsBuilder.highlight(i,e.dataIndex)}),this),this._pointsBuilder.updateLabels(s.map((function(e){return e.dataIndex})));var u=[];l.edges.forEach((function(e){e.dataIndex>=0&&(this._highlightEdge(e.dataIndex),u.push(e))}),this),this._focusNodes=s,this._focusEdges=u},unfocusNodeAdjacency:function(e,t,r,n){this._downplayAll(),this._pointsBuilder.fadeInAll(),this._fadeInEdgesAll(),this._pointsBuilder.updateLabels()},_highlightEdge:function(e){var t=this._model.getEdgeData().getItemModel(e),r=s["a"].parseColor(t.get("emphasis.lineStyle.color")||t.get("lineStyle.color")),n=c["a"].firstNotNull(t.get("emphasis.lineStyle.opacity"),t.get("lineStyle.opacity"),1);r[3]*=n,this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[e],r)},_downplayAll:function(){this._focusNodes&&this._focusNodes.forEach((function(e){this._pointsBuilder.downplay(this._model.getData(),e.dataIndex)}),this),this._focusEdges&&this._focusEdges.forEach((function(e){this._downplayEdge(e.dataIndex)}),this)},_downplayEdge:function(e){var t=this._getColor(e,[]);this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[e],t)},_setEdgeFade:function(){var e=[];return function(t,r){this._getColor(t,e),e[3]*=r,this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[t],e)}}(),_getColor:function(e,t){for(var r=0;r<4;r++)t[r]=this._originalEdgeColors[4*e+r];return t},_fadeOutEdgesAll:function(e){var t=this._model.getData().graph;t.eachEdge((function(t){this._setEdgeFade(t.dataIndex,e)}),this)},_fadeInEdgesAll:function(){this._fadeOutEdgesAll(1)},_updateCamera:function(e,t){this.viewGL.setViewport(0,0,t.getWidth(),t.getHeight(),t.getDevicePixelRatio());for(var r=this.viewGL.camera,n=e.getData(),i=n.getLayout("points"),a=y.create(1/0,1/0),o=y.create(-1/0,-1/0),s=[],l=0;l<i.length;)s[0]=i[l++],s[1]=i[l++],y.min(a,a,s),y.max(o,o,s);var u=(o[1]+a[1])/2,c=(o[0]+a[0])/2;if(!(c>r.left&&c<r.right&&u<r.bottom&&u>r.top)){var h=Math.max(o[0]-a[0],10),d=h/t.getWidth()*t.getHeight();h*=1.4,d*=1.4,a[0]-=.2*h,r.left=a[0],r.top=u-d/2,r.bottom=u+d/2,r.right=h+a[0],r.near=0,r.far=100}},dispose:function(){var e=this.viewGL.layer.renderer;this._forceLayoutInstance&&this._forceLayoutInstance.dispose(e),this.groupGL.removeAll(),this._layoutId=-1},remove:function(){this.groupGL.removeAll(),this._control.dispose()}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(16),s=r(10),l=r(270);a["a"].Shader.import(l["a"]);var u={repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,scaling:1,edgeWeightInfluence:1,jitterTolerence:.1,preventOverlap:!1,dissuadeHubs:!1,gravityCenter:null};function c(e){var t={type:a["a"].Texture.FLOAT,minFilter:a["a"].Texture.NEAREST,magFilter:a["a"].Texture.NEAREST};this._positionSourceTex=new a["a"].Texture2D(t),this._positionSourceTex.flipY=!1,this._positionTex=new a["a"].Texture2D(t),this._positionPrevTex=new a["a"].Texture2D(t),this._forceTex=new a["a"].Texture2D(t),this._forcePrevTex=new a["a"].Texture2D(t),this._weightedSumTex=new a["a"].Texture2D(t),this._weightedSumTex.width=this._weightedSumTex.height=1,this._globalSpeedTex=new a["a"].Texture2D(t),this._globalSpeedPrevTex=new a["a"].Texture2D(t),this._globalSpeedTex.width=this._globalSpeedTex.height=1,this._globalSpeedPrevTex.width=this._globalSpeedPrevTex.height=1,this._nodeRepulsionPass=new o["a"]({fragment:a["a"].Shader.source("ecgl.forceAtlas2.updateNodeRepulsion")}),this._positionPass=new o["a"]({fragment:a["a"].Shader.source("ecgl.forceAtlas2.updatePosition")}),this._globalSpeedPass=new o["a"]({fragment:a["a"].Shader.source("ecgl.forceAtlas2.calcGlobalSpeed")}),this._copyPass=new o["a"]({fragment:a["a"].Shader.source("clay.compositor.output")});var r=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ONE)};this._edgeForceMesh=new a["a"].Mesh({geometry:new a["a"].Geometry({attributes:{node1:new a["a"].Geometry.Attribute("node1","float",2),node2:new a["a"].Geometry.Attribute("node2","float",2),weight:new a["a"].Geometry.Attribute("weight","float",1)},dynamic:!0,mainAttribute:"node1"}),material:new a["a"].Material({transparent:!0,shader:a["a"].createShader("ecgl.forceAtlas2.updateEdgeAttraction"),blend:r,depthMask:!1,depthText:!1}),mode:a["a"].Mesh.POINTS}),this._weightedSumMesh=new a["a"].Mesh({geometry:new a["a"].Geometry({attributes:{node:new a["a"].Geometry.Attribute("node","float",2)},dynamic:!0,mainAttribute:"node"}),material:new a["a"].Material({transparent:!0,shader:a["a"].createShader("ecgl.forceAtlas2.calcWeightedSum"),blend:r,depthMask:!1,depthText:!1}),mode:a["a"].Mesh.POINTS}),this._framebuffer=new s["a"]({depthBuffer:!1}),this._dummyCamera=new a["a"].OrthographicCamera({left:-1,right:1,top:1,bottom:-1,near:0,far:100}),this._globalSpeed=0}c.prototype.updateOption=function(e){for(var t in u)this[t]=u[t];var r=this._nodes.length;if(this.jitterTolerence=r>5e4?10:r>5e3?1:.1,this.scaling=r>100?2:10,e)for(var t in u)null!=e[t]&&(this[t]=e[t]);if(this.repulsionByDegree)for(var n=this._positionSourceTex.pixels,i=0;i<this._nodes.length;i++)n[4*i+2]=(this._nodes[i].degree||0)+1},c.prototype._updateGravityCenter=function(e){var t=this._nodes,r=this._edges;if(this.gravityCenter)this._gravityCenter=this.gravityCenter;else{for(var n=[1/0,1/0],i=[-1/0,-1/0],a=0;a<t.length;a++)n[0]=Math.min(t[a].x,n[0]),n[1]=Math.min(t[a].y,n[1]),i[0]=Math.max(t[a].x,i[0]),i[1]=Math.max(t[a].y,i[1]);this._gravityCenter=[.5*(n[0]+i[0]),.5*(n[1]+i[1])]}for(a=0;a<r.length;a++){var o=r[a].node1,s=r[a].node2;t[o].degree=(t[o].degree||0)+1,t[s].degree=(t[s].degree||0)+1}},c.prototype.initData=function(e,t){this._nodes=e,this._edges=t,this._updateGravityCenter();var r=Math.ceil(Math.sqrt(e.length)),n=r,i=new Float32Array(r*n*4);this._resize(r,n);for(var a=0,o=0;o<e.length;o++){var s=e[o];i[a++]=s.x||0,i[a++]=s.y||0,i[a++]=s.mass||1,i[a++]=s.size||1}this._positionSourceTex.pixels=i;var l=this._edgeForceMesh.geometry,u=t.length;l.attributes.node1.init(2*u),l.attributes.node2.init(2*u),l.attributes.weight.init(2*u);var c=[];for(o=0;o<t.length;o++){var h=l.attributes,d=t[o].weight;null==d&&(d=1),h.node1.set(o,this.getNodeUV(t[o].node1,c)),h.node2.set(o,this.getNodeUV(t[o].node2,c)),h.weight.set(o,d),h.node1.set(o+u,this.getNodeUV(t[o].node2,c)),h.node2.set(o+u,this.getNodeUV(t[o].node1,c)),h.weight.set(o+u,d)}var f=this._weightedSumMesh.geometry;f.attributes.node.init(e.length);for(o=0;o<e.length;o++)f.attributes.node.set(o,this.getNodeUV(o,c));l.dirty(),f.dirty(),this._nodeRepulsionPass.material.define("fragment","NODE_COUNT",e.length),this._nodeRepulsionPass.material.setUniform("textureSize",[r,n]),this._inited=!1,this._frame=0},c.prototype.getNodes=function(){return this._nodes},c.prototype.getEdges=function(){return this._edges},c.prototype.step=function(e){this._inited||(this._initFromSource(e),this._inited=!0),this._frame++,this._framebuffer.attach(this._forceTex),this._framebuffer.bind(e);var t=this._nodeRepulsionPass;t.setUniform("strongGravityMode",this.strongGravityMode),t.setUniform("gravity",this.gravity),t.setUniform("gravityCenter",this._gravityCenter),t.setUniform("scaling",this.scaling),t.setUniform("preventOverlap",this.preventOverlap),t.setUniform("positionTex",this._positionPrevTex),t.render(e);var r=this._edgeForceMesh;r.material.set("linLogMode",this.linLogMode),r.material.set("edgeWeightInfluence",this.edgeWeightInfluence),r.material.set("preventOverlap",this.preventOverlap),r.material.set("positionTex",this._positionPrevTex),e.gl.enable(e.gl.BLEND),e.renderPass([r],this._dummyCamera),this._framebuffer.attach(this._weightedSumTex),e.gl.clearColor(0,0,0,0),e.gl.clear(e.gl.COLOR_BUFFER_BIT),e.gl.enable(e.gl.BLEND);var n=this._weightedSumMesh;n.material.set("positionTex",this._positionPrevTex),n.material.set("forceTex",this._forceTex),n.material.set("forcePrevTex",this._forcePrevTex),e.renderPass([n],this._dummyCamera),this._framebuffer.attach(this._globalSpeedTex);var i=this._globalSpeedPass;i.setUniform("globalSpeedPrevTex",this._globalSpeedPrevTex),i.setUniform("weightedSumTex",this._weightedSumTex),i.setUniform("jitterTolerence",this.jitterTolerence),e.gl.disable(e.gl.BLEND),i.render(e);var a=this._positionPass;this._framebuffer.attach(this._positionTex),a.setUniform("globalSpeedTex",this._globalSpeedTex),a.setUniform("positionTex",this._positionPrevTex),a.setUniform("forceTex",this._forceTex),a.setUniform("forcePrevTex",this._forcePrevTex),a.render(e),this._framebuffer.unbind(e),this._swapTexture()},c.prototype.update=function(e,t,r){null==t&&(t=1),t=Math.max(t,1);for(var n=0;n<t;n++)this.step(e);r&&r()},c.prototype.getNodePositionTexture=function(){return this._inited?this._positionPrevTex:this._positionSourceTex},c.prototype.getNodeUV=function(e,t){t=t||[];var r=this._positionTex.width,n=this._positionTex.height;return t[0]=e%r/(r-1),t[1]=Math.floor(e/r)/(n-1)||0,t},c.prototype.getNodePosition=function(e,t){var r=this._positionArr,n=this._positionTex.width,i=this._positionTex.height,a=n*i;r&&r.length===4*a||(r=this._positionArr=new Float32Array(4*a)),this._framebuffer.bind(e),this._framebuffer.attach(this._positionPrevTex),e.gl.readPixels(0,0,n,i,e.gl.RGBA,e.gl.FLOAT,r),this._framebuffer.unbind(e),t||(t=new Float32Array(2*this._nodes.length));for(var o=0;o<this._nodes.length;o++)t[2*o]=r[4*o],t[2*o+1]=r[4*o+1];return t},c.prototype.getTextureData=function(e,t){var r=this["_"+t+"Tex"],n=r.width,i=r.height;this._framebuffer.bind(e),this._framebuffer.attach(r);var a=new Float32Array(n*i*4);return e.gl.readPixels(0,0,n,i,e.gl.RGBA,e.gl.FLOAT,a),this._framebuffer.unbind(e),a},c.prototype.getTextureSize=function(){return{width:this._positionTex.width,height:this._positionTex.height}},c.prototype.isFinished=function(e){return this._frame>e},c.prototype._swapTexture=function(){var e=this._positionPrevTex;this._positionPrevTex=this._positionTex,this._positionTex=e;e=this._forcePrevTex;this._forcePrevTex=this._forceTex,this._forceTex=e;e=this._globalSpeedPrevTex;this._globalSpeedPrevTex=this._globalSpeedTex,this._globalSpeedTex=e},c.prototype._initFromSource=function(e){this._framebuffer.attach(this._positionPrevTex),this._framebuffer.bind(e),this._copyPass.setUniform("texture",this._positionSourceTex),this._copyPass.render(e),e.gl.clearColor(0,0,0,0),this._framebuffer.attach(this._forcePrevTex),e.gl.clear(e.gl.COLOR_BUFFER_BIT),this._framebuffer.attach(this._globalSpeedPrevTex),e.gl.clear(e.gl.COLOR_BUFFER_BIT),this._framebuffer.unbind(e)},c.prototype._resize=function(e,t){["_positionSourceTex","_positionTex","_positionPrevTex","_forceTex","_forcePrevTex"].forEach((function(r){this[r].width=e,this[r].height=t,this[r].dirty()}),this)},c.prototype.dispose=function(e){this._framebuffer.dispose(e),this._copyPass.dispose(e),this._nodeRepulsionPass.dispose(e),this._positionPass.dispose(e),this._globalSpeedPass.dispose(e),this._edgeForceMesh.geometry.dispose(e),this._weightedSumMesh.geometry.dispose(e),this._positionSourceTex.dispose(e),this._positionTex.dispose(e),this._positionPrevTex.dispose(e),this._forceTex.dispose(e),this._forcePrevTex.dispose(e),this._weightedSumTex.dispose(e),this._globalSpeedTex.dispose(e),this._globalSpeedPrevTex.dispose(e)},i.a.ForceAtlas2GPU=c,t["a"]=c},function(e,t,r){"use strict";t["a"]="@export ecgl.forceAtlas2.updateNodeRepulsion\n\n#define NODE_COUNT 0\n\nuniform sampler2D positionTex;\n\nuniform vec2 textureSize;\nuniform float gravity;\nuniform float scaling;\nuniform vec2 gravityCenter;\n\nuniform bool strongGravityMode;\nuniform bool preventOverlap;\n\nvarying vec2 v_Texcoord;\n\nvoid main() {\n\n vec4 n0 = texture2D(positionTex, v_Texcoord);\n\n vec2 force = vec2(0.0);\n for (int i = 0; i < NODE_COUNT; i++) {\n vec2 uv = vec2(\n mod(float(i), textureSize.x) / (textureSize.x - 1.0),\n floor(float(i) / textureSize.x) / (textureSize.y - 1.0)\n );\n vec4 n1 = texture2D(positionTex, uv);\n\n vec2 dir = n0.xy - n1.xy;\n float d2 = dot(dir, dir);\n\n if (d2 > 0.0) {\n float factor = 0.0;\n if (preventOverlap) {\n float d = sqrt(d2);\n d = d - n0.w - n1.w;\n if (d > 0.0) {\n factor = scaling * n0.z * n1.z / (d * d);\n }\n else if (d < 0.0) {\n factor = scaling * 100.0 * n0.z * n1.z;\n }\n }\n else {\n factor = scaling * n0.z * n1.z / d2;\n }\n force += dir * factor;\n }\n }\n\n vec2 dir = gravityCenter - n0.xy;\n float d = 1.0;\n if (!strongGravityMode) {\n d = length(dir);\n }\n\n force += dir * n0.z * gravity / (d + 1.0);\n\n gl_FragColor = vec4(force, 0.0, 1.0);\n}\n@end\n\n@export ecgl.forceAtlas2.updateEdgeAttraction.vertex\n\nattribute vec2 node1;\nattribute vec2 node2;\nattribute float weight;\n\nuniform sampler2D positionTex;\nuniform float edgeWeightInfluence;\nuniform bool preventOverlap;\nuniform bool linLogMode;\n\nuniform vec2 windowSize: WINDOW_SIZE;\n\nvarying vec2 v_Force;\n\nvoid main() {\n\n vec4 n0 = texture2D(positionTex, node1);\n vec4 n1 = texture2D(positionTex, node2);\n\n vec2 dir = n1.xy - n0.xy;\n float d = length(dir);\n float w;\n if (edgeWeightInfluence == 0.0) {\n w = 1.0;\n }\n else if (edgeWeightInfluence == 1.0) {\n w = weight;\n }\n else {\n w = pow(weight, edgeWeightInfluence);\n }\n vec2 offset = vec2(1.0 / windowSize.x, 1.0 / windowSize.y);\n vec2 scale = vec2((windowSize.x - 1.0) / windowSize.x, (windowSize.y - 1.0) / windowSize.y);\n vec2 pos = node1 * scale * 2.0 - 1.0;\n gl_Position = vec4(pos + offset, 0.0, 1.0);\n gl_PointSize = 1.0;\n\n float factor;\n if (preventOverlap) {\n d = d - n1.w - n0.w;\n }\n if (d <= 0.0) {\n v_Force = vec2(0.0);\n return;\n }\n\n if (linLogMode) {\n factor = w * log(d) / d;\n }\n else {\n factor = w;\n }\n v_Force = dir * factor;\n}\n@end\n\n@export ecgl.forceAtlas2.updateEdgeAttraction.fragment\n\nvarying vec2 v_Force;\n\nvoid main() {\n gl_FragColor = vec4(v_Force, 0.0, 0.0);\n}\n@end\n\n@export ecgl.forceAtlas2.calcWeightedSum.vertex\n\nattribute vec2 node;\n\nvarying vec2 v_NodeUv;\n\nvoid main() {\n\n v_NodeUv = node;\n gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n gl_PointSize = 1.0;\n}\n@end\n\n@export ecgl.forceAtlas2.calcWeightedSum.fragment\n\nvarying vec2 v_NodeUv;\n\nuniform sampler2D positionTex;\nuniform sampler2D forceTex;\nuniform sampler2D forcePrevTex;\n\nvoid main() {\n vec2 force = texture2D(forceTex, v_NodeUv).rg;\n vec2 forcePrev = texture2D(forcePrevTex, v_NodeUv).rg;\n\n float mass = texture2D(positionTex, v_NodeUv).z;\n float swing = length(force - forcePrev) * mass;\n float traction = length(force + forcePrev) * 0.5 * mass;\n\n gl_FragColor = vec4(swing, traction, 0.0, 0.0);\n}\n@end\n\n@export ecgl.forceAtlas2.calcGlobalSpeed\n\nuniform sampler2D globalSpeedPrevTex;\nuniform sampler2D weightedSumTex;\nuniform float jitterTolerence;\n\nvoid main() {\n vec2 weightedSum = texture2D(weightedSumTex, vec2(0.5)).xy;\n float prevGlobalSpeed = texture2D(globalSpeedPrevTex, vec2(0.5)).x;\n float globalSpeed = jitterTolerence * jitterTolerence\n * weightedSum.y / weightedSum.x;\n if (prevGlobalSpeed > 0.0) {\n globalSpeed = min(globalSpeed / prevGlobalSpeed, 1.5) * prevGlobalSpeed;\n }\n gl_FragColor = vec4(globalSpeed, 0.0, 0.0, 1.0);\n}\n@end\n\n@export ecgl.forceAtlas2.updatePosition\n\nuniform sampler2D forceTex;\nuniform sampler2D forcePrevTex;\nuniform sampler2D positionTex;\nuniform sampler2D globalSpeedTex;\n\nvarying vec2 v_Texcoord;\n\nvoid main() {\n vec2 force = texture2D(forceTex, v_Texcoord).xy;\n vec2 forcePrev = texture2D(forcePrevTex, v_Texcoord).xy;\n vec4 node = texture2D(positionTex, v_Texcoord);\n\n float globalSpeed = texture2D(globalSpeedTex, vec2(0.5)).r;\n float swing = length(force - forcePrev);\n float speed = 0.1 * globalSpeed / (0.1 + globalSpeed * sqrt(swing));\n\n float df = length(force);\n if (df > 0.0) {\n speed = min(df * speed, 10.0) / df;\n\n gl_FragColor = vec4(node.xy + speed * force, node.zw);\n }\n else {\n gl_FragColor = node;\n }\n}\n@end\n\n@export ecgl.forceAtlas2.edges.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec2 node;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\nuniform sampler2D positionTex;\n\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(\n texture2D(positionTex, node).xy, -10.0, 1.0\n );\n v_Color = a_Color;\n}\n@end\n\n@export ecgl.forceAtlas2.edges.fragment\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nvarying vec4 v_Color;\nvoid main() {\n gl_FragColor = color * v_Color;\n}\n@end"},function(e,t,r){"use strict";var n=r(5),i=r(4),a=r(272),o=a["a"].toString();o=o.slice(o.indexOf("{")+1,o.lastIndexOf("}"));var s={barnesHutOptimize:!0,barnesHutTheta:1.5,repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,scaling:1,edgeWeightInfluence:1,jitterTolerence:.1,preventOverlap:!1,dissuadeHubs:!1,gravityCenter:null},l=function(e){for(var t in s)this[t]=s[t];if(e)for(var t in e)this[t]=e[t];this._nodes=[],this._edges=[],this._disposed=!1,this._positionTex=new n["a"]({type:i["a"].FLOAT,flipY:!1,minFilter:i["a"].NEAREST,magFilter:i["a"].NEAREST})};l.prototype.initData=function(e,t){var r=new Blob([o]),n=window.URL.createObjectURL(r);this._worker=new Worker(n),this._worker.onmessage=this._$onupdate.bind(this),this._nodes=e,this._edges=t,this._frame=0;for(var i=e.length,a=t.length,s=new Float32Array(2*i),l=new Float32Array(i),u=new Float32Array(i),c=new Float32Array(2*a),h=new Float32Array(a),d=0;d<e.length;d++){var f=e[d];s[2*d]=f.x,s[2*d+1]=f.y,l[d]=null==f.mass?1:f.mass,u[d]=null==f.size?1:f.size}for(d=0;d<t.length;d++){var p=t[d],m=p.node1,g=p.node2;c[2*d]=m,c[2*d+1]=g,h[d]=null==p.weight?1:p.weight}var _=Math.ceil(Math.sqrt(e.length)),v=_,y=new Float32Array(_*v*4),x=this._positionTex;x.width=_,x.height=v,x.pixels=y,this._worker.postMessage({cmd:"init",nodesPosition:s,nodesMass:l,nodesSize:u,edges:c,edgesWeight:h}),this._globalSpeed=1/0},l.prototype.updateOption=function(e){var t={};for(var r in s)t[r]=s[r];var n=this._nodes,i=this._edges,a=n.length;if(t.jitterTolerence=a>5e4?10:a>5e3?1:.1,t.scaling=a>100?2:10,t.barnesHutOptimize=a>1e3,e)for(var r in s)null!=e[r]&&(t[r]=e[r]);if(!t.gravityCenter){for(var o=[1/0,1/0],l=[-1/0,-1/0],u=0;u<n.length;u++)o[0]=Math.min(n[u].x,o[0]),o[1]=Math.min(n[u].y,o[1]),l[0]=Math.max(n[u].x,l[0]),l[1]=Math.max(n[u].y,l[1]);t.gravityCenter=[.5*(o[0]+l[0]),.5*(o[1]+l[1])]}for(u=0;u<i.length;u++){var c=i[u].node1,h=i[u].node2;n[c].degree=(n[c].degree||0)+1,n[h].degree=(n[h].degree||0)+1}this._worker&&this._worker.postMessage({cmd:"updateConfig",config:t})},l.prototype.update=function(e,t,r){null==t&&(t=1),t=Math.max(t,1),this._frame+=t,this._onupdate=r,this._worker&&this._worker.postMessage({cmd:"update",steps:Math.round(t)})},l.prototype._$onupdate=function(e){if(!this._disposed){var t=new Float32Array(e.data.buffer);this._globalSpeed=e.data.globalSpeed,this._positionArr=t,this._updateTexture(t),this._onupdate&&this._onupdate()}},l.prototype.getNodePositionTexture=function(){return this._positionTex},l.prototype.getNodeUV=function(e,t){t=t||[];var r=this._positionTex.width,n=this._positionTex.height;return t[0]=e%r/(r-1),t[1]=Math.floor(e/r)/(n-1),t},l.prototype.getNodes=function(){return this._nodes},l.prototype.getEdges=function(){return this._edges},l.prototype.isFinished=function(e){return this._frame>e},l.prototype.getNodePosition=function(e,t){if(t||(t=new Float32Array(2*this._nodes.length)),this._positionArr)for(var r=0;r<this._positionArr.length;r++)t[r]=this._positionArr[r];return t},l.prototype._updateTexture=function(e){for(var t=this._positionTex.pixels,r=0,n=0;n<e.length;)t[r++]=e[n++],t[r++]=e[n++],t[r++]=1,t[r++]=1;this._positionTex.dirty()},l.prototype.dispose=function(e){this._disposed=!0,this._worker=null},t["a"]=l},function(e,t,r){"use strict";function n(){var e={create:function(){return new Float32Array(2)},dist:function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)},len:function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},scaleAndAdd:function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e},scale:function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},sub:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e},normalize:function(e,t){var r=t[0],n=t[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),e[0]=t[0]*i,e[1]=t[1]*i),e},negate:function(e,t){return e[0]=-t[0],e[1]=-t[1],e},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e},set:function(e,t,r){return e[0]=t,e[1]=r,e}};function t(){this.subRegions=[],this.nSubRegions=0,this.node=null,this.mass=0,this.centerOfMass=null,this.bbox=new Float32Array(4),this.size=0}var r=t.prototype;function n(){this.position=new Float32Array(2),this.force=e.create(),this.forcePrev=e.create(),this.mass=1,this.inDegree=0,this.outDegree=0}function i(e,t){this.source=e,this.target=t,this.weight=1}function a(){this.autoSettings=!0,this.barnesHutOptimize=!0,this.barnesHutTheta=1.5,this.repulsionByDegree=!0,this.linLogMode=!1,this.strongGravityMode=!1,this.gravity=1,this.scaling=1,this.edgeWeightInfluence=1,this.jitterTolerence=.1,this.preventOverlap=!1,this.dissuadeHubs=!1,this.rootRegion=new t,this.rootRegion.centerOfMass=e.create(),this.nodes=[],this.edges=[],this.bbox=new Float32Array(4),this.gravityCenter=null,this._massArr=null,this._swingingArr=null,this._sizeArr=null,this._globalSpeed=0}r.beforeUpdate=function(){for(var e=0;e<this.nSubRegions;e++)this.subRegions[e].beforeUpdate();this.mass=0,this.centerOfMass&&(this.centerOfMass[0]=0,this.centerOfMass[1]=0),this.nSubRegions=0,this.node=null},r.afterUpdate=function(){this.subRegions.length=this.nSubRegions;for(var e=0;e<this.nSubRegions;e++)this.subRegions[e].afterUpdate()},r.addNode=function(e){if(0===this.nSubRegions){if(null==this.node)return void(this.node=e);this._addNodeToSubRegion(this.node),this.node=null}this._addNodeToSubRegion(e),this._updateCenterOfMass(e)},r.findSubRegion=function(e,t){for(var r=0;r<this.nSubRegions;r++){var n=this.subRegions[r];if(n.contain(e,t))return n}},r.contain=function(e,t){return this.bbox[0]<=e&&this.bbox[2]>=e&&this.bbox[1]<=t&&this.bbox[3]>=t},r.setBBox=function(e,t,r,n){this.bbox[0]=e,this.bbox[1]=t,this.bbox[2]=r,this.bbox[3]=n,this.size=(r-e+n-t)/2},r._newSubRegion=function(){var e=this.subRegions[this.nSubRegions];return e||(e=new t,this.subRegions[this.nSubRegions]=e),this.nSubRegions++,e},r._addNodeToSubRegion=function(e){var t=this.findSubRegion(e.position[0],e.position[1]),r=this.bbox;if(!t){var n=(r[0]+r[2])/2,i=(r[1]+r[3])/2,a=(r[2]-r[0])/2,o=(r[3]-r[1])/2,s=e.position[0]>=n?1:0,l=e.position[1]>=i?1:0;t=this._newSubRegion();t.setBBox(s*a+r[0],l*o+r[1],(s+1)*a+r[0],(l+1)*o+r[1])}t.addNode(e)},r._updateCenterOfMass=function(e){null==this.centerOfMass&&(this.centerOfMass=new Float32Array(2));var t=this.centerOfMass[0]*this.mass,r=this.centerOfMass[1]*this.mass;t+=e.position[0]*e.mass,r+=e.position[1]*e.mass,this.mass+=e.mass,this.centerOfMass[0]=t/this.mass,this.centerOfMass[1]=r/this.mass};var o=a.prototype;o.initNodes=function(e,t,r){var i=t.length;this.nodes.length=0;for(var a="undefined"!=typeof r,o=0;o<i;o++){var s=new n;s.position[0]=e[2*o],s.position[1]=e[2*o+1],s.mass=t[o],a&&(s.size=r[o]),this.nodes.push(s)}this._massArr=t,this._swingingArr=new Float32Array(i),a&&(this._sizeArr=r)},o.initEdges=function(e,t){var r=e.length/2;this.edges.length=0;for(var n=0;n<r;n++){var a=e[2*n],o=e[2*n+1],s=this.nodes[a],l=this.nodes[o];if(!s||!l)return void console.error("Node not exists, try initNodes before initEdges");s.outDegree++,l.inDegree++;var u=new i(s,l);t&&(u.weight=t[n]),this.edges.push(u)}},o.updateSettings=function(){if(this.repulsionByDegree)for(var e=0;e<this.nodes.length;e++){var t=this.nodes[e];t.mass=t.inDegree+t.outDegree+1}else for(e=0;e<this.nodes.length;e++){t=this.nodes[e];t.mass=this._massArr[e]}},o.update=function(){var t=this.nodes.length;if(this.updateSettings(),this.updateBBox(),this.barnesHutOptimize){this.rootRegion.setBBox(this.bbox[0],this.bbox[1],this.bbox[2],this.bbox[3]),this.rootRegion.beforeUpdate();for(var r=0;r<t;r++)this.rootRegion.addNode(this.nodes[r]);this.rootRegion.afterUpdate()}for(r=0;r<t;r++){var n=this.nodes[r];e.copy(n.forcePrev,n.force),e.set(n.force,0,0)}for(r=0;r<t;r++){var i=this.nodes[r];if(this.barnesHutOptimize)this.applyRegionToNodeRepulsion(this.rootRegion,i);else for(var a=r+1;a<t;a++){var o=this.nodes[a];this.applyNodeToNodeRepulsion(i,o,!1)}this.gravity>0&&(this.strongGravityMode?this.applyNodeStrongGravity(i):this.applyNodeGravity(i))}for(r=0;r<this.edges.length;r++)this.applyEdgeAttraction(this.edges[r]);var s=0,l=0,u=e.create();for(r=0;r<t;r++){n=this.nodes[r];var c=e.dist(n.force,n.forcePrev);s+=c*n.mass,e.add(u,n.force,n.forcePrev);var h=.5*e.len(u);l+=h*n.mass,this._swingingArr[r]=c}var d=this.jitterTolerence*this.jitterTolerence*l/s;this._globalSpeed>0&&(d=Math.min(d/this._globalSpeed,1.5)*this._globalSpeed),this._globalSpeed=d;for(r=0;r<t;r++){n=this.nodes[r],c=this._swingingArr[r];var f=.1*d/(1+d*Math.sqrt(c)),p=e.len(n.force);p>0&&(f=Math.min(p*f,10)/p,e.scaleAndAdd(n.position,n.position,n.force,f))}},o.applyRegionToNodeRepulsion=function(){var t=e.create();return function(r,n){if(r.node)this.applyNodeToNodeRepulsion(r.node,n,!0);else{e.sub(t,n.position,r.centerOfMass);var i=t[0]*t[0]+t[1]*t[1];if(i>this.barnesHutTheta*r.size*r.size){var a=this.scaling*n.mass*r.mass/i;e.scaleAndAdd(n.force,n.force,t,a)}else for(var o=0;o<r.nSubRegions;o++)this.applyRegionToNodeRepulsion(r.subRegions[o],n)}}}(),o.applyNodeToNodeRepulsion=function(){var t=e.create();return function(r,n,i){if(r!=n){e.sub(t,r.position,n.position);var a=t[0]*t[0]+t[1]*t[1];if(0!==a){var o;if(this.preventOverlap){var s=Math.sqrt(a);if(s=s-r.size-n.size,s>0)o=this.scaling*r.mass*n.mass/(s*s);else{if(!(s<0))return;o=100*this.scaling*r.mass*n.mass}}else o=this.scaling*r.mass*n.mass/a;e.scaleAndAdd(r.force,r.force,t,o),e.scaleAndAdd(n.force,n.force,t,-o)}}}}(),o.applyEdgeAttraction=function(){var t=e.create();return function(r){var n=r.source,i=r.target;e.sub(t,n.position,i.position);var a,o,s=e.len(t);a=0===this.edgeWeightInfluence?1:1===this.edgeWeightInfluence?r.weight:Math.pow(r.weight,this.edgeWeightInfluence),this.preventOverlap&&(s=s-n.size-i.size,s<=0)||(o=this.linLogMode?-a*Math.log(s+1)/(s+1):-a,e.scaleAndAdd(n.force,n.force,t,o),e.scaleAndAdd(i.force,i.force,t,-o))}}(),o.applyNodeGravity=function(){var t=e.create();return function(r){e.sub(t,this.gravityCenter,r.position);var n=e.len(t);e.scaleAndAdd(r.force,r.force,t,this.gravity*r.mass/(n+1))}}(),o.applyNodeStrongGravity=function(){var t=e.create();return function(r){e.sub(t,this.gravityCenter,r.position),e.scaleAndAdd(r.force,r.force,t,this.gravity*r.mass)}}(),o.updateBBox=function(){for(var e=1/0,t=1/0,r=-1/0,n=-1/0,i=0;i<this.nodes.length;i++){var a=this.nodes[i].position;e=Math.min(e,a[0]),t=Math.min(t,a[1]),r=Math.max(r,a[0]),n=Math.max(n,a[1])}this.bbox[0]=e,this.bbox[1]=t,this.bbox[2]=r,this.bbox[3]=n},o.getGlobalSpeed=function(){return this._globalSpeed};var s=null;self.onmessage=function(e){switch(e.data.cmd){case"init":s=new a,s.initNodes(e.data.nodesPosition,e.data.nodesMass,e.data.nodesSize),s.initEdges(e.data.edges,e.data.edgesWeight);break;case"updateConfig":if(s)for(var t in e.data.config)s[t]=e.data.config[t];break;case"update":var r=e.data.steps;if(s){for(var n=0;n<r;n++)s.update();var i=s.nodes.length,o=new Float32Array(2*i);for(n=0;n<i;n++){var l=s.nodes[n];o[2*n]=l.position[0],o[2*n+1]=l.position[1]}self.postMessage({buffer:o.buffer,globalSpeed:s.getGlobalSpeed()},[o.buffer])}else{var u=new Float32Array;self.postMessage({buffer:u.buffer,globalSpeed:s.getGlobalSpeed()},[u.buffer])}break}}}t["a"]=n},function(e,t,r){"use strict";var n=r(7),i=(r(2),n["a"].extend((function(){return{zr:null,viewGL:null,minZoom:.2,maxZoom:5,_needsUpdate:!1,_dx:0,_dy:0,_zoom:1}}),(function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._update=this._update.bind(this)}),{init:function(){var e=this.zr;e.on("mousedown",this._mouseDownHandler),e.on("mousewheel",this._mouseWheelHandler),e.on("globalout",this._mouseUpHandler),e.animation.on("frame",this._update)},setTarget:function(e){this._target=e},setZoom:function(e){this._zoom=Math.max(Math.min(e,this.maxZoom),this.minZoom),this._needsUpdate=!0},setOffset:function(e){this._dx=e[0],this._dy=e[1],this._needsUpdate=!0},getZoom:function(){return this._zoom},getOffset:function(){return[this._dx,this._dy]},_update:function(){if(this._target&&this._needsUpdate){var e=this._target,t=this._zoom;e.position.x=this._dx,e.position.y=this._dy,e.scale.set(t,t,t),this.zr.refresh(),this._needsUpdate=!1,this.trigger("update")}},_mouseDownHandler:function(e){if(!e.target){var t=e.offsetX,r=e.offsetY;if(!this.viewGL||this.viewGL.containPoint(t,r)){this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler);var n=this._convertPos(t,r);this._x=n.x,this._y=n.y}}},_convertPos:function(e,t){var r=this.viewGL.camera,n=this.viewGL.viewport;return{x:(e-n.x)/n.width*(r.right-r.left)+r.left,y:(t-n.y)/n.height*(r.bottom-r.top)+r.top}},_mouseMoveHandler:function(e){var t=this._convertPos(e.offsetX,e.offsetY);this._dx+=t.x-this._x,this._dy+=t.y-this._y,this._x=t.x,this._y=t.y,this._needsUpdate=!0},_mouseUpHandler:function(e){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_mouseWheelHandler:function(e){e=e.event;var t=e.wheelDelta||-e.detail;if(0!==t){var r=e.offsetX,n=e.offsetY;if(!this.viewGL||this.viewGL.containPoint(r,n)){var i=t>0?1.1:.9,a=Math.max(Math.min(this._zoom*i,this.maxZoom),this.minZoom);i=a/this._zoom;var o=this._convertPos(r,n),s=(o.x-this._dx)*(i-1),l=(o.y-this._dy)*(i-1);this._dx-=s,this._dy-=l,this._zoom=a,this._needsUpdate=!0}}},dispose:function(){var e=this.zr;e.off("mousedown",this._mouseDownHandler),e.off("mousemove",this._mouseMoveHandler),e.off("mouseup",this._mouseUpHandler),e.off("mousewheel",this._mouseWheelHandler),e.off("globalout",this._mouseUpHandler),e.animation.off("frame",this._update)}}));t["a"]=i},function(e,t,r){"use strict";t["a"]="@export ecgl.lines2D.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec2 position: POSITION;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\n#ifdef POSITIONTEXTURE_ENABLED\nuniform sampler2D positionTexture;\n#endif\n\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);\n\n v_Color = a_Color;\n}\n\n@end\n\n@export ecgl.lines2D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n gl_FragColor = color * v_Color;\n}\n@end\n\n\n@export ecgl.meshLines2D.vertex\n\nattribute vec2 position: POSITION;\nattribute vec2 normal;\nattribute float offset;\nattribute vec4 a_Color : COLOR;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec4 v_Color;\nvarying float v_Miter;\n\nvoid main()\n{\n vec4 p2 = worldViewProjection * vec4(position + normal, -10.0, 1.0);\n gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);\n\n p2.xy /= p2.w;\n gl_Position.xy /= gl_Position.w;\n\n vec2 N = normalize(p2.xy - gl_Position.xy);\n gl_Position.xy += N * offset / viewport.zw * 2.0;\n\n gl_Position.xy *= gl_Position.w;\n\n v_Color = a_Color;\n}\n@end\n\n\n@export ecgl.meshLines2D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\nvarying float v_Miter;\n\nvoid main()\n{\n gl_FragColor = color * v_Color;\n}\n\n@end"},function(e,t,r){"use strict";var n=r(0);r.n(n),r(276),r(280)},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(2),s=r(22),l=r(277);i.a.extendChartView({type:"flowGL",__ecgl__:!0,init:function(e,t){this.viewGL=new s["a"]("orthographic"),this.groupGL=new a["a"].Node,this.viewGL.add(this.groupGL),this._particleSurface=new l["a"];var r=new a["a"].Mesh({geometry:new a["a"].PlaneGeometry,material:new a["a"].Material({shader:new a["a"].Shader({vertex:a["a"].Shader.source("ecgl.color.vertex"),fragment:a["a"].Shader.source("ecgl.color.fragment")}),transparent:!0})});r.material.enableTexture("diffuseMap"),this.groupGL.add(r),this._planeMesh=r},render:function(e,t,r){var n=this._particleSurface;n.setParticleType(e.get("particleType")),n.setSupersampling(e.get("supersampling")),this._updateData(e,r),this._updateCamera(r.getWidth(),r.getHeight(),r.getDevicePixelRatio());var i=o["a"].firstNotNull(e.get("particleDensity"),128);n.setParticleDensity(i,i);var s=this._planeMesh,l=+new Date,u=this,c=!0;s.__percent=0,s.stopAnimation(),s.animate("",{loop:!0}).when(1e5,{__percent:1}).during((function(){var e=+new Date,t=Math.min(e-l,20);l+=t,u._renderer&&(n.update(u._renderer,r,t/1e3,c),s.material.set("diffuseMap",n.getSurfaceTexture())),c=!1})).start();var h=e.getModel("itemStyle"),d=a["a"].parseColor(h.get("color"));d[3]*=o["a"].firstNotNull(h.get("opacity"),1),s.material.set("color",d),n.setColorTextureImage(e.get("colorTexture"),r),n.setParticleSize(e.get("particleSize")),n.particleSpeedScaling=e.get("particleSpeed"),n.motionBlurFactor=1-Math.pow(.1,e.get("particleTrail"))},updateTransform:function(e,t,r){this._updateData(e,r)},afterRender:function(e,t,r,n){var i=n.renderer;this._renderer=i},_updateData:function(e,t){var r=e.coordinateSystem,n=r.dimensions.map((function(t){return e.coordDimToDataDim(t)[0]})),i=e.getData(),a=i.getDataExtent(n[0]),o=i.getDataExtent(n[1]),s=e.get("gridWidth"),l=e.get("gridHeight");if(null==s||"auto"===s){var u=(a[1]-a[0])/(o[1]-o[0]);s=Math.round(Math.sqrt(u*i.count()))}null!=l&&"auto"!==l||(l=Math.ceil(i.count()/s));var c=this._particleSurface.vectorFieldTexture,h=c.pixels;if(h&&h.length===l*s*4)for(var d=0;d<h.length;d++)h[d]=0;else h=c.pixels=new Float32Array(s*l*4);var f=0,p=1/0,m=new Float32Array(2*i.count()),g=0,_=[[1/0,1/0],[-1/0,-1/0]];i.each([n[0],n[1],"vx","vy"],(function(e,t,n,i){var a=r.dataToPoint([e,t]);m[g++]=a[0],m[g++]=a[1],_[0][0]=Math.min(a[0],_[0][0]),_[0][1]=Math.min(a[1],_[0][1]),_[1][0]=Math.max(a[0],_[1][0]),_[1][1]=Math.max(a[1],_[1][1]);var o=Math.sqrt(n*n+i*i);f=Math.max(f,o),p=Math.min(p,o)})),i.each(["vx","vy"],(function(e,t,r){var n=Math.round((m[2*r]-_[0][0])/(_[1][0]-_[0][0])*(s-1)),i=l-1-Math.round((m[2*r+1]-_[0][1])/(_[1][1]-_[0][1])*(l-1)),a=4*(i*s+n);h[a]=e/f*.5+.5,h[a+1]=t/f*.5+.5,h[a+3]=1})),c.width=s,c.height=l,"bmap"===e.get("coordinateSystem")&&this._fillEmptyPixels(c),c.dirty(),this._updatePlanePosition(_[0],_[1],e,t),this._updateGradientTexture(i.getVisual("visualMeta"),[p,f])},_fillEmptyPixels:function(e){var t=e.pixels,r=e.width,n=e.height;function i(e,i,a){e=Math.max(Math.min(e,r-1),0),i=Math.max(Math.min(i,n-1),0);var o=4*(i*(r-1)+e);return 0!==t[o+3]&&(a[0]=t[o],a[1]=t[o+1],!0)}function a(e,t,r){r[0]=e[0]+t[0],r[1]=e[1]+t[1]}for(var o=[],s=[],l=[],u=[],c=[],h=0,d=0;d<n;d++)for(var f=0;f<r;f++){var p=4*(d*(r-1)+f);0===t[p+3]&&(h=o[0]=o[1]=0,i(f-1,d,s)&&(h++,a(s,o,o)),i(f+1,d,l)&&(h++,a(l,o,o)),i(f,d-1,u)&&(h++,a(u,o,o)),i(f,d+1,c)&&(h++,a(c,o,o)),o[0]/=h,o[1]/=h,t[p]=o[0],t[p+1]=o[1]),t[p+3]=1}},_updateGradientTexture:function(e,t){if(e&&e.length){this._gradientTexture=this._gradientTexture||new a["a"].Texture2D({image:document.createElement("canvas")});var r=this._gradientTexture,n=r.image;n.width=200,n.height=1;var i=n.getContext("2d"),o=i.createLinearGradient(0,.5,n.width,.5);e[0].stops.forEach((function(e){var r;t[1]===t[0]?r=0:(r=e.value/t[1],r=Math.min(Math.max(r,0),1)),o.addColorStop(r,e.color)})),i.fillStyle=o,i.fillRect(0,0,n.width,n.height),r.dirty(),this._particleSurface.setGradientTexture(this._gradientTexture)}else this._particleSurface.setGradientTexture(null)},_updatePlanePosition:function(e,t,r,n){var i=this._limitInViewportAndFullFill(e,t,r,n);e=i.leftTop,t=i.rightBottom,this._particleSurface.setRegion(i.region),this._planeMesh.position.set((e[0]+t[0])/2,n.getHeight()-(e[1]+t[1])/2,0);var a=t[0]-e[0],o=t[1]-e[1];this._planeMesh.scale.set(a/2,o/2,1),this._particleSurface.resize(Math.max(Math.min(a,2048),1),Math.max(Math.min(o,2048),1)),this._renderer&&this._particleSurface.clearFrame(this._renderer)},_limitInViewportAndFullFill:function(e,t,r,n){var i=[Math.max(e[0],0),Math.max(e[1],0)],a=[Math.min(t[0],n.getWidth()),Math.min(t[1],n.getHeight())];if("bmap"===r.get("coordinateSystem")){var o=r.getData().getDataExtent(r.coordDimToDataDim("lng")[0]),s=Math.floor(o[1]-o[0])>=359;s&&(i[0]>0&&(i[0]=0),a[0]<n.getWidth()&&(a[0]=n.getWidth()))}var l=t[0]-e[0],u=t[1]-e[1],c=a[0]-i[0],h=a[1]-i[1],d=[(i[0]-e[0])/l,1-h/u-(i[1]-e[1])/u,c/l,h/u];return{leftTop:i,rightBottom:a,region:d}},_updateCamera:function(e,t,r){this.viewGL.setViewport(0,0,e,t,r);var n=this.viewGL.camera;n.left=n.bottom=0,n.top=t,n.right=e,n.near=0,n.far=100,n.position.z=10},remove:function(){this._planeMesh.stopAnimation(),this.groupGL.removeAll()},dispose:function(){this._renderer&&this._particleSurface.dispose(this._renderer),this.groupGL.removeAll()}})},function(e,t,r){"use strict";var n=r(16),i=r(15),a=r(40),o=r(19),s=r(8),l=r(5),u=r(4),c=r(37),h=r(43),d=r(10),f=r(278),p=r(279);function m(e){var t=document.createElement("canvas");t.width=t.height=e;var r=t.getContext("2d");return r.fillStyle="#fff",r.arc(e/2,e/2,e/2,0,2*Math.PI),r.fill(),t}s["a"]["import"](p["a"]);var g=function(){this.motionBlurFactor=.99,this.vectorFieldTexture=new l["a"]({type:u["a"].FLOAT,flipY:!1}),this.particleLife=[5,20],this._particleType="point",this._particleSize=1,this.particleColor=[1,1,1,1],this.particleSpeedScaling=1,this._thisFrameTexture=null,this._particlePass=null,this._spawnTexture=null,this._particleTexture0=null,this._particleTexture1=null,this._particlePointsMesh=null,this._surfaceFrameBuffer=null,this._elapsedTime=0,this._scene=null,this._camera=null,this._lastFrameTexture=null,this._supersampling=1,this._downsampleTextures=[],this._width=512,this._height=512,this.init()};g.prototype={constructor:g,init:function(){var e={type:u["a"].FLOAT,minFilter:u["a"].NEAREST,magFilter:u["a"].NEAREST,useMipmap:!1};this._spawnTexture=new l["a"](e),this._particleTexture0=new l["a"](e),this._particleTexture1=new l["a"](e),this._frameBuffer=new d["a"]({depthBuffer:!1}),this._particlePass=new n["a"]({fragment:s["a"].source("ecgl.vfParticle.particle.fragment")}),this._particlePass.setUniform("velocityTexture",this.vectorFieldTexture),this._particlePass.setUniform("spawnTexture",this._spawnTexture),this._downsamplePass=new n["a"]({fragment:s["a"].source("clay.compositor.downsample")});var t=new a["a"]({renderOrder:10,material:new o["a"]({shader:new s["a"](s["a"].source("ecgl.vfParticle.renderPoints.vertex"),s["a"].source("ecgl.vfParticle.renderPoints.fragment"))}),mode:a["a"].POINTS,geometry:new i["a"]({dynamic:!0,mainAttribute:"texcoord0"})}),r=new a["a"]({renderOrder:10,material:new o["a"]({shader:new s["a"](s["a"].source("ecgl.vfParticle.renderLines.vertex"),s["a"].source("ecgl.vfParticle.renderLines.fragment"))}),geometry:new f["a"],culling:!1}),p=new a["a"]({material:new o["a"]({shader:new s["a"](s["a"].source("ecgl.color.vertex"),s["a"].source("ecgl.color.fragment"))}),geometry:new h["a"]});p.material.enableTexture("diffuseMap"),this._particlePointsMesh=t,this._particleLinesMesh=r,this._lastFrameFullQuadMesh=p,this._camera=new c["a"],this._thisFrameTexture=new l["a"],this._lastFrameTexture=new l["a"]},setParticleDensity:function(e,t){for(var r=e*t,n=new Float32Array(4*r),i=0,a=this.particleLife,o=0;o<e;o++)for(var s=0;s<t;s++,i++){n[4*i]=Math.random(),n[4*i+1]=Math.random(),n[4*i+2]=Math.random();var l=(a[1]-a[0])*Math.random()+a[0];n[4*i+3]=l}"line"===this._particleType?this._setLineGeometry(e,t):this._setPointsGeometry(e,t),this._spawnTexture.width=e,this._spawnTexture.height=t,this._spawnTexture.pixels=n,this._particleTexture0.width=this._particleTexture1.width=e,this._particleTexture0.height=this._particleTexture1.height=t,this._particlePass.setUniform("textureSize",[e,t])},_setPointsGeometry:function(e,t){var r=e*t,n=this._particlePointsMesh.geometry,i=n.attributes;i.texcoord0.init(r);for(var a=0,o=0;o<e;o++)for(var s=0;s<t;s++,a++)i.texcoord0.value[2*a]=o/e,i.texcoord0.value[2*a+1]=s/t;n.dirty()},_setLineGeometry:function(e,t){var r=e*t,n=this._getParticleMesh().geometry;n.setLineCount(r),n.resetOffset();for(var i=0;i<e;i++)for(var a=0;a<t;a++)n.addLine([i/e,a/t]);n.dirty()},_getParticleMesh:function(){return"line"===this._particleType?this._particleLinesMesh:this._particlePointsMesh},update:function(e,t,r,n){var i=this._getParticleMesh(),a=this._frameBuffer,o=this._particlePass;n&&this._updateDownsampleTextures(e,t),i.material.set("size",this._particleSize*this._supersampling),i.material.set("color",this.particleColor),o.setUniform("speedScaling",this.particleSpeedScaling),a.attach(this._particleTexture1),o.setUniform("firstFrameTime",n?(this.particleLife[1]+this.particleLife[0])/2:0),o.setUniform("particleTexture",this._particleTexture0),o.setUniform("deltaTime",r),o.setUniform("elapsedTime",this._elapsedTime),o.render(e,a),i.material.set("particleTexture",this._particleTexture1),i.material.set("prevParticleTexture",this._particleTexture0),a.attach(this._thisFrameTexture),a.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT);var s=this._lastFrameFullQuadMesh;s.material.set("diffuseMap",this._lastFrameTexture),s.material.set("color",[1,1,1,this.motionBlurFactor]),this._camera.update(!0),e.renderPass([s,i],this._camera),a.unbind(e),this._downsample(e),this._swapTexture(),this._elapsedTime+=r},_downsample:function(e){var t=this._downsampleTextures;if(0!==t.length){var r=0,n=this._thisFrameTexture,i=t[r];while(i)this._frameBuffer.attach(i),this._downsamplePass.setUniform("texture",n),this._downsamplePass.setUniform("textureSize",[n.width,n.height]),this._downsamplePass.render(e,this._frameBuffer),n=i,i=t[++r]}},getSurfaceTexture:function(){var e=this._downsampleTextures;return e.length>0?e[e.length-1]:this._lastFrameTexture},setRegion:function(e){this._particlePass.setUniform("region",e)},resize:function(e,t){this._lastFrameTexture.width=e*this._supersampling,this._lastFrameTexture.height=t*this._supersampling,this._thisFrameTexture.width=e*this._supersampling,this._thisFrameTexture.height=t*this._supersampling,this._width=e,this._height=t},setParticleSize:function(e){var t=this._getParticleMesh();if(e<=2)return t.material.disableTexture("spriteTexture"),void(t.material.transparent=!1);this._spriteTexture||(this._spriteTexture=new l["a"]),this._spriteTexture.image&&this._spriteTexture.image.width===e||(this._spriteTexture.image=m(e),this._spriteTexture.dirty()),t.material.transparent=!0,t.material.enableTexture("spriteTexture"),t.material.set("spriteTexture",this._spriteTexture),this._particleSize=e},setGradientTexture:function(e){var t=this._getParticleMesh().material;t[e?"enableTexture":"disableTexture"]("gradientTexture"),t.setUniform("gradientTexture",e)},setColorTextureImage:function(e,t){var r=this._getParticleMesh().material;r.setTextureImage("colorTexture",e,t,{flipY:!0})},setParticleType:function(e){this._particleType=e},clearFrame:function(e){var t=this._frameBuffer;t.attach(this._lastFrameTexture),t.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),t.unbind(e)},setSupersampling:function(e){this._supersampling=e,this.resize(this._width,this._height)},_updateDownsampleTextures:function(e,t){for(var r=this._downsampleTextures,n=Math.max(Math.floor(Math.log(this._supersampling/t.getDevicePixelRatio())/Math.log(2)),0),i=2,a=this._width*this._supersampling,o=this._height*this._supersampling,s=0;s<n;s++)r[s]=r[s]||new l["a"],r[s].width=a/i,r[s].height=o/i,i*=2;for(;s<r.length;s++)r[s].dispose(e);r.length=n},_swapTexture:function(){var e=this._particleTexture0;this._particleTexture0=this._particleTexture1,this._particleTexture1=e;e=this._thisFrameTexture;this._thisFrameTexture=this._lastFrameTexture,this._lastFrameTexture=e},dispose:function(e){e.disposeFrameBuffer(this._frameBuffer),e.disposeTexture(this.vectorFieldTexture),e.disposeTexture(this._spawnTexture),e.disposeTexture(this._particleTexture0),e.disposeTexture(this._particleTexture1),e.disposeTexture(this._thisFrameTexture),e.disposeTexture(this._lastFrameTexture),e.disposeGeometry(this._particleLinesMesh.geometry),e.disposeGeometry(this._particlePointsMesh.geometry),e.disposeGeometry(this._lastFrameFullQuadMesh.geometry),this._spriteTexture&&e.disposeTexture(this._spriteTexture),this._particlePass.dispose(e),this._downsamplePass.dispose(e),this._downsampleTextures.forEach((function(t){t.dispose(e)}))}},t["a"]=g},function(e,t,r){"use strict";var n=r(15),i=r(0),a=(r.n(i),n["a"].extend((function(){return{dynamic:!0,attributes:{position:new n["a"].Attribute("position","float",3,"POSITION")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setLineCount:function(e){var t=this.attributes,r=4*e,n=2*e;this.vertexCount!==r&&t.position.init(r),this.triangleCount!==n&&(this.indices=0===n?null:this.vertexCount>65535?new Uint32Array(3*n):new Uint16Array(3*n))},addLine:function(e){var t=this._vertexOffset;this.attributes.position.set(t,[e[0],e[1],1]),this.attributes.position.set(t+1,[e[0],e[1],-1]),this.attributes.position.set(t+2,[e[0],e[1],2]),this.attributes.position.set(t+3,[e[0],e[1],-2]),this.setTriangleIndices(this._faceOffset++,[t,t+1,t+2]),this.setTriangleIndices(this._faceOffset++,[t+1,t+2,t+3]),this._vertexOffset+=4}}));t["a"]=a},function(e,t,r){"use strict";t["a"]="@export ecgl.vfParticle.particle.fragment\n\nuniform sampler2D particleTexture;\nuniform sampler2D spawnTexture;\nuniform sampler2D velocityTexture;\n\nuniform float deltaTime;\nuniform float elapsedTime;\n\nuniform float speedScaling : 1.0;\n\nuniform vec2 textureSize;\nuniform vec4 region : [0, 0, 1, 1];\nuniform float firstFrameTime;\n\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\n vec4 p = texture2D(particleTexture, v_Texcoord);\n bool spawn = false;\n if (p.w <= 0.0) {\n p = texture2D(spawnTexture, fract(v_Texcoord + elapsedTime / 10.0));\n p.w -= firstFrameTime;\n spawn = true;\n }\n vec2 v = texture2D(velocityTexture, fract(p.xy * region.zw + region.xy)).xy;\n v = (v - 0.5) * 2.0;\n p.z = length(v);\n p.xy += v * deltaTime / 10.0 * speedScaling;\n p.w -= deltaTime;\n\n if (spawn || p.xy != fract(p.xy)) {\n p.z = 0.0;\n }\n p.xy = fract(p.xy);\n\n gl_FragColor = p;\n}\n@end\n\n@export ecgl.vfParticle.renderPoints.vertex\n\n#define PI 3.1415926\n\nattribute vec2 texcoord : TEXCOORD_0;\n\nuniform sampler2D particleTexture;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform float size : 1.0;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\nvoid main()\n{\n vec4 p = texture2D(particleTexture, texcoord);\n\n if (p.w > 0.0 && p.z > 1e-5) {\n gl_Position = worldViewProjection * vec4(p.xy * 2.0 - 1.0, 0.0, 1.0);\n }\n else {\n gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);\n }\n\n v_Mag = p.z;\n v_Uv = p.xy;\n\n gl_PointSize = size;\n}\n\n@end\n\n@export ecgl.vfParticle.renderPoints.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform sampler2D gradientTexture;\nuniform sampler2D colorTexture;\nuniform sampler2D spriteTexture;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\nvoid main()\n{\n gl_FragColor = color;\n#ifdef SPRITETEXTURE_ENABLED\n gl_FragColor *= texture2D(spriteTexture, gl_PointCoord);\n if (color.a == 0.0) {\n discard;\n }\n#endif\n#ifdef GRADIENTTEXTURE_ENABLED\n gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));\n#endif\n#ifdef COLORTEXTURE_ENABLED\n gl_FragColor *= texture2D(colorTexture, v_Uv);\n#endif\n}\n\n@end\n\n@export ecgl.vfParticle.renderLines.vertex\n\n#define PI 3.1415926\n\nattribute vec3 position : POSITION;\n\nuniform sampler2D particleTexture;\nuniform sampler2D prevParticleTexture;\n\nuniform float size : 1.0;\nuniform vec4 vp: VIEWPORT;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\n@import clay.util.rand\n\nvoid main()\n{\n vec4 p = texture2D(particleTexture, position.xy);\n vec4 p2 = texture2D(prevParticleTexture, position.xy);\n\n p.xy = p.xy * 2.0 - 1.0;\n p2.xy = p2.xy * 2.0 - 1.0;\n\n if (p.w > 0.0 && p.z > 1e-5) {\n vec2 dir = normalize(p.xy - p2.xy);\n vec2 norm = vec2(dir.y / vp.z, -dir.x / vp.w) * sign(position.z) * size;\n if (abs(position.z) == 2.0) {\n gl_Position = vec4(p.xy + norm, 0.0, 1.0);\n v_Uv = p.xy;\n v_Mag = p.z;\n }\n else {\n gl_Position = vec4(p2.xy + norm, 0.0, 1.0);\n v_Mag = p2.z;\n v_Uv = p2.xy;\n }\n gl_Position = worldViewProjection * gl_Position;\n }\n else {\n gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);\n }\n}\n\n@end\n\n@export ecgl.vfParticle.renderLines.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform sampler2D gradientTexture;\nuniform sampler2D colorTexture;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\nvoid main()\n{\n gl_FragColor = color;\n #ifdef GRADIENTTEXTURE_ENABLED\n gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));\n#endif\n#ifdef COLORTEXTURE_ENABLED\n gl_FragColor *= texture2D(colorTexture, v_Uv);\n#endif\n}\n\n@end\n"},function(e,t,r){"use strict";var n=r(0),i=r.n(n);i.a.extendSeriesModel({type:"series.flowGL",dependencies:["geo","grid","bmap"],visualColorAccessPath:"itemStyle.color",getInitialData:function(e,t){var r=i.a.getCoordinateSystemDimensions(this.get("coordinateSystem"))||["x","y"];if(r.length>2)throw new Error("flowGL can only be used on 2d coordinate systems.");r.push("vx","vy");var n=i.a.helper.completeDimensions(r,this.getSource(),{encodeDef:this.get("encode"),dimsDef:this.get("dimensions")}),a=new i.a.List(n,this);return a.initData(this.getSource()),a},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,supersampling:1,particleType:"point",particleDensity:128,particleSize:1,particleSpeed:1,particleTrail:2,colorTexture:null,gridWidth:"auto",gridHeight:"auto",itemStyle:{color:"#fff",opacity:.8}}})},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=(r(282),r(283),r(17));i.a.registerVisual(Object(a["a"])("linesGL"))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(13),o=(r.n(a),i.a.extendSeriesModel({type:"series.linesGL",dependencies:["grid","geo"],visualColorAccessPath:"lineStyle.color",streamEnabled:!0,init:function(e){var t=this._processFlatCoordsArray(e.data);this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset,t.flatCoords&&(e.data=new Float32Array(t.count)),o.superApply(this,"init",arguments)},mergeOption:function(e){var t=this._processFlatCoordsArray(e.data);this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset,t.flatCoords&&(e.data=new Float32Array(t.count)),o.superApply(this,"mergeOption",arguments)},appendData:function(e){var t=this._processFlatCoordsArray(e.data);t.flatCoords&&(this._flatCoords?(this._flatCoords=Object(a["concatArray"])(this._flatCoords,t.flatCoords),this._flatCoordsOffset=Object(a["concatArray"])(this._flatCoordsOffset,t.flatCoordsOffset)):(this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset),e.data=new Float32Array(t.count)),this.getRawData().appendData(e.data)},_getCoordsFromItemModel:function(e){var t=this.getData().getItemModel(e),r=t.option instanceof Array?t.option:t.getShallow("coords");if(!(r instanceof Array&&r.length>0&&r[0]instanceof Array))throw new Error("Invalid coords "+JSON.stringify(r)+". Lines must have 2d coords array in data item.");return r},getLineCoordsCount:function(e){return this._flatCoordsOffset?this._flatCoordsOffset[2*e+1]:this._getCoordsFromItemModel(e).length},getLineCoords:function(e,t){if(this._flatCoordsOffset){for(var r=this._flatCoordsOffset[2*e],n=this._flatCoordsOffset[2*e+1],i=0;i<n;i++)t[i]=t[i]||[],t[i][0]=this._flatCoords[r+2*i],t[i][1]=this._flatCoords[r+2*i+1];return n}var a=this._getCoordsFromItemModel(e);for(i=0;i<a.length;i++)t[i]=t[i]||[],t[i][0]=a[i][0],t[i][1]=a[i][1];return a.length},_processFlatCoordsArray:function(e){var t=0;if(this._flatCoords&&(t=this._flatCoords.length),"number"===typeof e[0]){for(var r=e.length,n=new Uint32Array(r),i=new Float64Array(r),a=0,o=0,s=0,l=0;l<r;){s++;var u=e[l++];n[o++]=a+t,n[o++]=u;for(var c=0;c<u;c++){var h=e[l++],d=e[l++];if(i[a++]=h,i[a++]=d,l>r)throw new Error("Invalid data format.")}}return{flatCoordsOffset:new Uint32Array(n.buffer,0,o),flatCoords:i,count:s}}return{flatCoordsOffset:null,flatCoords:null,count:e.length}},getInitialData:function(e,t){var r=new i.a.List(["value"],this);return r.hasItemOption=!1,r.initData(e.data,[],(function(e,t,n,i){if(e instanceof Array)return NaN;r.hasItemOption=!0;var a=e.value;return null!=a?a instanceof Array?a[i]:a:void 0})),r},defaultOption:{coordinateSystem:"geo",zlevel:10,progressive:1e4,progressiveThreshold:5e4,blendMode:"source-over",lineStyle:{opacity:.8},postEffect:{enable:!1,colorCorrection:{exposure:0,brightness:0,contrast:1,saturation:1,enable:!0}}}}))},function(e,t,r){"use strict";var n=r(0),i=r.n(n),a=r(1),o=r(22),s=r(105),l=r(103),u=r(2);i.a.extendChartView({type:"linesGL",__ecgl__:!0,init:function(e,t){this.groupGL=new a["a"].Node,this.viewGL=new o["a"]("orthographic"),this.viewGL.add(this.groupGL),this._glViewHelper=new l["a"](this.viewGL),this._nativeLinesShader=a["a"].createShader("ecgl.lines3D"),this._meshLinesShader=a["a"].createShader("ecgl.meshLines3D"),this._linesMeshes=[],this._currentStep=0},render:function(e,t,r){this.groupGL.removeAll(),this._glViewHelper.reset(e,r);var n=this._linesMeshes[0];n||(n=this._linesMeshes[0]=this._createLinesMesh(e)),this._linesMeshes.length=1,this.groupGL.add(n),this._updateLinesMesh(e,n,0,e.getData().count()),this.viewGL.setPostEffect(e.getModel("postEffect"),r)},incrementalPrepareRender:function(e,t,r){this.groupGL.removeAll(),this._glViewHelper.reset(e,r),this._currentStep=0,this.viewGL.setPostEffect(e.getModel("postEffect"),r)},incrementalRender:function(e,t,r,n){var i=this._linesMeshes[this._currentStep];i||(i=this._createLinesMesh(t),this._linesMeshes[this._currentStep]=i),this._updateLinesMesh(t,i,e.start,e.end),this.groupGL.add(i),n.getZr().refresh(),this._currentStep++},updateTransform:function(e,t,r){e.coordinateSystem.getRoamTransform&&this._glViewHelper.updateTransform(e,r)},_createLinesMesh:function(e){var t=new a["a"].Mesh({$ignorePicking:!0,material:new a["a"].Material({shader:a["a"].createShader("ecgl.lines3D"),transparent:!0,depthMask:!1,depthTest:!1}),geometry:new s["a"]({segmentScale:10,useNativeLine:!0,dynamic:!1}),mode:a["a"].Mesh.LINES,culling:!1});return t},_updateLinesMesh:function(e,t,r,n){var i=e.getData();t.material.blend="lighter"===e.get("blendMode")?a["a"].additiveBlend:null;var o=e.get("lineStyle.curveness")||0,s=e.get("polyline"),l=t.geometry,c=e.coordinateSystem,h=u["a"].firstNotNull(e.get("lineStyle.width"),1);h>1?(t.material.shader!==this._meshLinesShader&&t.material.attachShader(this._meshLinesShader),t.mode=a["a"].Mesh.TRIANGLES):(t.material.shader!==this._nativeLinesShader&&t.material.attachShader(this._nativeLinesShader),t.mode=a["a"].Mesh.LINES),r=r||0,n=n||i.count(),l.resetOffset();var d=0,f=0,p=[],m=[],g=[],_=[],v=[],y=.3,x=.7;function T(){m[0]=p[0]*x+_[0]*y-(p[1]-_[1])*o,m[1]=p[1]*x+_[1]*y-(_[0]-p[0])*o,g[0]=p[0]*y+_[0]*x-(p[1]-_[1])*o,g[1]=p[1]*y+_[1]*x-(_[0]-p[0])*o}if(s||0!==o)for(var b=r;b<n;b++)if(s){var w=e.getLineCoordsCount(b);d+=l.getPolylineVertexCount(w),f+=l.getPolylineTriangleCount(w)}else e.getLineCoords(b,v),this._glViewHelper.dataToPoint(c,v[0],p),this._glViewHelper.dataToPoint(c,v[1],_),T(),d+=l.getCubicCurveVertexCount(p,m,g,_),f+=l.getCubicCurveTriangleCount(p,m,g,_);else{var E=n-r;d+=E*l.getLineVertexCount(),f+=E*l.getLineVertexCount()}l.setVertexCount(d),l.setTriangleCount(f);var S=r,M=[];for(b=r;b<n;b++){a["a"].parseColor(i.getItemVisual(S,"color"),M);var A=u["a"].firstNotNull(i.getItemVisual(S,"opacity"),1);M[3]*=A;w=e.getLineCoords(b,v);for(var N=0;N<w;N++)this._glViewHelper.dataToPoint(c,v[N],v[N]);s?l.addPolyline(v,M,h,0,w):0!==o?(p=v[0],_=v[1],T(),l.addCubicCurve(p,m,g,_,M,h)):l.addPolyline(v,M,h,0,2),S++}},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})}])}))},c54d:function(e,t,r){var n,i,a;(function(o,s){i=[t,r("313e")],n=s,a="function"===typeof n?n.apply(t,i):n,void 0===a||(e.exports=a)})(0,(function(e,t){var r=function(e){"undefined"!==typeof console&&console&&console.error&&console.error(e)};t?t.registerMap?t.registerMap("world",{type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:OGC:1.3:CRS84"}},features:[{geometry:{type:"Polygon",coordinates:["@@࠿@ᠳ࡚с̶ʩт˷˔ƹͮɠͲ˖рԜ׷҄̕ҴNܾͰؼ÷۸ήԪҮƴ̮¿ঞɪֶϤϲŹƛе²֭ĝǱƊĠǔōϭñėށ؅ਓɁȥԯ঻ƻԓࣗඩअ৯۝ڻो֑য়ߝล໥ϓ؇UļāļƫȖɩ̌]ᶼ̈́͘ɮ͜ɪ͚®ĞĚ۪ƼɦːϪǰ;Ąߞᢌᣮ"],encodeOffsets:[[49130,8189]]},properties:{name:"Somalia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ƛ¬Ð@ĞÆÒªǱ"],encodeOffsets:[[9810,48188]]},properties:{name:"Liechtenstein",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@⌗øĒ୬ͪࣆيʊˆ҄ؔ^˶ȇɪÈצϲ֌ĐФ؜ְദ׼ҢڴήࡔլİtʍԾ΃ʤ՘ĲʢË΢ǒŎɽĠPĀmǶVǢgΤ̑ĮவňȵǑ¼ýĈå²yĞÇÞ³ëąÍĥʹ೵]É³Ɨ{ΡŉƑcăZÉSÍƫH˃ǨǓѭǇƣġǥÕȿÕǃñÿśıƇħěŽđұĿЍUƉÝåSĵ^čfʉdʇǍ·ণ֣oۋ@Ĺ"],encodeOffsets:[[-8891,28445]]},properties:{name:"Morocco",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@⌘@ķœ@@@Ŕ@@̷@̩@ǕBȍ@ȋ@ƍ@ĩ᫫@@ɋ@΃@ɭ@ŕ@қ@΃Oх̉űƽw½gΉɩķƯtįQJǳ՟TšRšPėRŏᇷCฝCċα`ý§¨Ƙ࢘Ӕ׎ŰшΞ׎ǇĹèƤ࠴݂Ģָ͌܌۴КͲޞŚƀ","@@i˷@@j˸"],encodeOffsets:[[-13351,28480],[-8984,28120]]},properties:{name:"W. Sahara",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@A@ƟwđĵȏÒʁč«Ǔƅ@ã̌Ο˘SǴʒÊÆ`Å_֡˰ϟʊkIDZʪĠɁ˔˶àϷˈȘѬ˻W²ɤ˲ÚͩǀºĬȋːÈĆѠŎǊĘȘoø`Ȓg¤_cº·¶ÙȈėÒ÷´fFfV\\T^Qhɿ՘ɳkĝƱƨ÷YißMµGuODƎĨãɰİÈßĜhŴĬŬ~Ũ±âZ]ãNÇk¹ėǌƽɣȭkěHãƺ˝Ǵč¬­¡İÃƩǝÿďȫẸ̀Qßço}ß]ĕUΥ@Ʌ±@@"],encodeOffsets:[[22080,43262]]},properties:{name:"Serbia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@хǑޟܯőࡡԧ¡á͘з¤̧սշŊƉˏͭąٝ°̺׿ٓɥɓӱз·ʫɫƚν@ӧʟƆƋʇğԻzЛϭĭ޿ॕʳכ]ʛŷѿĘࣻõЍĺٵȀ͋ĠШъȒȢȌȜxèFƆ·ǴăĆˁȡ|ɍZ{ƒZØaŤDĠƲDèĳ̎őͨaŦ̰̚˽êóļ@͒ƂǲȸZíĊ´ubSv\\vÀTÎ hňǞjΔö´ƌFgÈèTɶǓЀ«Ȁǫ͊î̲ǆzĺîĢƘ؜Ɣ˒Ř˞ǈ°òńƲъÖŖ¾ŚǶRɄJǮˊרȋ¦HʲpȮńċľsĺ¤ÚR|¼[þJ¬wNwNÌÛļûĢmǌÂpp^ªô¤ʂĸ®T¸SZ^b\\~VvL¤QȂƓî§R¦¼¶^ê}ĞlôÒÈŒǐ`ƐǢbÀèHĎ±ĸ^ǠŶˌ̆ѨīÞŗ­ɃaÎJĊtÄB~oűځĈʁŔů࠰˨ȦȨˈŢƠ®ĈRľsª_ÂW\\a÷ËvkĄOΘĈ²ʹkÒČÑ¼­§MÕryWJ·oğ}ƽáHiĸã|u^Q"],encodeOffsets:[[76331,37911]]},properties:{name:"Afghanistan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÂR̮cҮƠ͎Åǖ@ǔ|ɔDªĞƶHǊŖ̈ƄĺTǊ|ʖĞGR_¿ƽA½n½¦ʬGɼEҾi°oČ଩ýٵ͔ӑĠճēśnʕ¬ÓIàþÖÚ~ɈqɘM͚Ĳ̴ŐŢdܓ×މoěG±ðƁIĵY൑@ȗ@@ڟ@ˑ@ˑBౝǶ֡া࡙ࢳǑ೟Ƶҧƀ਩¼ҹͺሹTᅍeғ̴ʟÌՋȭǃNOėFǗģµƇo͆ƖËܼɠˌ҆ლζ֌θɌƴȞǀЊ¢ݐс޴˫ߚ̢̤hˊүஒґۤݴɦƌOՎNዲQĮĘÇƈǕϡÐŻĚƉÆ˕Ԃۻ"],["@@̆Ƅ_øęÞËr___ğıͅ˭DeÌ·ӏɫθƅːОΖ"]],encodeOffsets:[[[18002,-8293]],[[12802,-4697]]]},properties:{name:"Angola",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Π˗ä̋ÝԍȄ́ɊßQÙÚŷűŻȉ̍ǝ©¡aquwW@yÐğBƧůÙPÑXkAűˬѽ̨ŚAĹɐȨࠐDŮȡæ½ʮ̾ϦŒŷɴÒ"],encodeOffsets:[[20546,43569]]},properties:{name:"Albania",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ł^ĊĤ³"],["@@ɨ÷ϫƯħƾƊ¡sƜƖ"]],encodeOffsets:[[[20135,61632]],[[20470,61800]]]},properties:{name:"Aland",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Ɵ½íIir[ò\\¢Ö ÈOŢ~y@esQm"],encodeOffsets:[[1747,43524]]},properties:{name:"Andorra",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʙOǘøĂç"],["@@šȆĶãŷ"],["@@ø֟˗ȫÁǸǣïԿƖw´ŷѡĹÂĹ˧څ[˥ççᒣʾ߳४oǪǘÚȱɴѼƸॺí̆ĐȾĚ̌҂ৎࠠŞɦò_m̙ź"]],encodeOffsets:[[[55223,24758]],[[54613,24841]],[[57650,26267]]]},properties:{name:"United Arab Emirates",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ؠQۓƫĵÜǪĢ"],["@@nᇜ͠έǇvµǥˠŸɏ׶УࢸНࢴŧʕȣ࢑įԭņ౳¦"],["@@ȴǛߖȡפϿବӗɒ˳͉ӡȧɇ˽ͫЛoÁıξบɿɮȜǴGƌùÚDæ¶ÌEæ¶Ì rºʒàǞȔɌͦʮbΰƠ¥ʐĒɜũȈԵƛ۩ЧʩхŃɫˇԽ˳ƩǟXࢣ਍ʉƽƯɃƅę¡ě½õĳģă¾ɣÙßdƕqùşȅißlgĝëĿēk©z¿HÃiÉZÇÁEÕáųeû¤ͩɅŷĻҩžѻőēȰ͗آ˯͆˿Ʒ̛fʳɔɧ˜¥ÞщܿਟՍ̍൱ͷઃŻأУƊϋȰŉŁMĒå¯̩ŽÍīʩžБůǻӃǿ֋¥਻ΤɛŧŬਅϘŷƋŴcˎňƗ¢θĖƒƙZ΍Εƻϟ̲ЛŹ³ýתǭѫȁ΋͏Yש͏͍R̅ҧكʗցڛþؖ͟ӁٺóɖɁÛʗΉǁʔ@ľĩൿࡕǿʛş֡γƻ·̒LƷˋÉ͎KƨůԹ˻˃ѹƄƒеίăрýѬ֯ౡ̊࿩fЩϘÊܞƛØգŋ̉Ԩ«֊þŴ˜\\Đʊ͐ƢÌ̮ȒĠvɌǃȞƠ͒ψʔ̶ȬưƧЮȴǨī̀ͮȺȹ̒ϏÚmŎڬRĐǠ«Ĵԛ¶ŞϢȋӨżĢͩȺب̜ǤƉͬiߪȊʼğǤƄž»͖ƲŚ֖Ҙˤʷ۾qޚŘˎմϲUҐŝɶƌČ˺܆ǚÜ߆ɝèÀˊ˻ڨĠł˥͚ÆΞǰłƀ֌ǒFĦƶīĆÉيǘȄƞׄМЪˠ٪Ɉ\\ɰƖɭцƪˈƫ؞Ǫˠƫ̂ʾ̘ݨ̞̈ࢂƽưǢʾɼʚ̆Ē¼ĘİxzEÜ}ǘşöãîSƖ`Ѷ_͘ĳèţħčÔƧ¢ÇdǊʒѾ°࣠Ǽʗî·ƚ÷ƄƣΔӍ׶Ћ"]],encodeOffsets:[[[-66098,-56029]],[[-70300,-56170]],[[-62550,-24224]]]},properties:{name:"Argentina",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@́{ř̮ǯŔfƖ˟§ʭôķƶɛ½Г˲Իðą̘ŸȦʁ͚՚Ú؞ÞǆǀťıÑѢȓǫƣÜşєʣßǫʳ¡Ժ͏ɼīŷȀƭƹúʇ"],encodeOffsets:[[47607,39841]]},properties:{name:"Armenia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@āɆƃë"],encodeOffsets:[[-174823,-14695]]},properties:{name:"American Samoa",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@īƨǜMïƙ"],["@@΂ŜªūȩÃŚÕٸǔȢťƙțȃúͽñȐŵɖ¨ĻƣࠅƦƇƥƫJÌ҈ħĊȜͼŒǗëȃŐy"],["@@ƥÈè þħ"]],encodeOffsets:[[[70946,-50236]],[[70846,-50288]],[[53079,-47554]]]},properties:{name:"Fr. S. Antarctic Lands",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@ťowîÐÒĎŏ"],encodeOffsets:[[-63197,17446]]},properties:{name:"Antigua and Barb.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ēǡÎƮŸÔı"],["@@Ȫb࢈ͥ;ðŀùŢƨϸQƖƂɂyĄþȺÙńଡŇȶʏԑlԟƇñĈ§ĐŸþȏêķǁŻȲ­ΧȻºæĳǡ˱˙Ĕщ£ƞǴ¼˫p͕̮ʏאɨɗ¢ŚƹǪą¥FƪЅՊĵΆÔʸ˚ĩ"],["@@£ÝÏÒĴL"],["@@éżBÑ"],["@@ÞƯ͑êʴĆ"],["@@ʠȓbƿǩõ˵͢ȞĨ"],["@@÷ǲƌ˖Š̻ǳƋ"],["@@Çȏ|ƾ"],["@@˪ZǎŁϟȅƩȩüϡ¥ǷŤĈŢגƀɀyXı"],["@@ĥɩRʨĔ}"],["@@ǿɪcɂȤѫ"],["@@čǘ¾̞ǂǀéǆĨðþ˫ɭֿ"],["@@þCȷǡȸĨ"],["@@ŅÁĮƶXĳ"],["@@ĕPŊÀř"],["@@jɇǗȞƮj"],["@@ľàēģi"],["@@̉ƙŒɲʚÔĢĵǃµ"],["@@ųÈÈĮìƵ"],["@@ÕgIżàœ"],["@@ěWÌŖĽ"],["@@ƪdũʉǤģ³ğҷèö̆Țǂ¸Ņ"],["@@īPþŸnƇ"],["@@ƃ×ʤǮşŕ"],["@@Ŭřҿ|żňƴŢŠƒ˽"],["@@ͼȶŨɪȹӳЩρʸŅΨȠƹ"],["@@Ñ»ɆΪƳ̭"],["@@ğɠĂÌ^˫"],["@@Í̉ʖ˱ƺڭʟǪԝǤĩјȚƦɕ՞ϙŜ௳ˠЉƂǶ؇ÿՙʪɽ¦ΣٌΓɼ^˘͡ࡢѧŀǇŻZĥѪқȾϟɀܥĴ¨ŶƇȰŔŦϸͧxƦĔƞ࢑ʼ˙֬˵ʤЋ˜ǣǔͱɔȗÒ͑ưů¡ਗϬ࢝εӯཝñܹ͓ԡõͥ˫ȩzá̏ťѩ֯W̃ſáĜq̡ЁÉћԟۏɗාϝȯകƍࡧؕ՝ÁĴƕŊ®ÇʱȭɾȉŧȢͥŌŪŢÇŴƷL˩əȯƈǎGǪɆȓǈеȥɨÕृԡࣩκؗĬŋįƛr΍ʌԷưԗնÔӪŅʔٓڔǬ¶ĤóMȢٕɡ˳|˞ӶkɖͳԀͭࠉڷąŌ˘̈́DĒلςӨã͈ŠĚǫѠNȳ̷̉ǡλڵͳҏՋàˑƩĴŧÝѳ̖ĀĊȞÿȗԸˣ˪ĉʢƵŜʳtŅƼÕȘńdNƶӋ˺ϟpϣȒҗ§࣏ј̣ĝഁ±༱ԕ୷ঃӭџŏإݵଗÙ÷İտ¢ಧů͹ͥұģٓэҭģࣃĢѽǊΟ̴ұƞ_ج̬Ŀ˘ϔ`఼Է॔ȃ஖ׇࣀř؞۽঒Ś½ƎȎБŸĒĂbƘϩԴ´ĪɘșVʣŊĬŚʵĊÓŀĖAπڟஔÔӈɤϜшĥɶ˸َĎ¬fջȢŢ˨Ѥغ˨Ұϰא̈́טÉښ̄ҪĨ̒ɢМஊκ˸ʆи۾ј̬ǕӀĪΎϬ̊ɀ̎Ӿ࣫~ЬȨ÷Ǟ͑άŔØeǊĺŊǃƼİɌĻІ]̯ĔXƔƈhÔȲŧďĻǶ¸ɞĺEŌȈ̶ƗTŔƍEÏŲǘƀˊīƫ;ͶȚ¢ȐÞȧƄ¼ÐůŌļѤŊsØƉŨŨƖšǰǤIƖńҰʍ؈֯ġԱðĖĊÕáɊʹɦМğƂɵ¬ʐ̮ɥFʐǲnȳƴþøˍƒ˦Όň΂ΠɪĿƂǀȚɨǾJǺȶŃLǆΘʦŬǫՂGǄĂƂğČƈǞXçö͖ǗƂͷbȿƢŜĸǎŉƬô̌ʁɺĈȊʡ؀ŁќȅˀÌʦǫǂwעͪǽ͑ʮdÖȗƮWÌňáŎǌȆɶɱƬc¨ęΉι¶ǿŏȅƕò̯ƓxՋҥە¤ƑلЗðƓΎīäǫǾ`ל̕ҔС٠ƱȨίڌ̽ЎàˎǮϰߜˬ஀đӲÒˊĹ̘ƢҎˆˈǢɃȼVŠƴ̀úßǨजʎȪŰ©ŁȐȭþץʴŏ"],["@@ëµ¹ĸÈ¤Þĥ"]],encodeOffsets:[[[150893,-44438]],[[148525,-41765]],[[151795,-41487]],[[148260,-41478]],[[151887,-41274]],[[151553,-40711]],[[147383,-41078]],[[148803,-39414]],[[140899,-36596]],[[157224,-28094]],[[115900,-26678]],[[156752,-26368]],[[154775,-24054]],[[118217,-21286]],[[152621,-20778]],[[149789,-18668]],[[142807,-17525]],[[142857,-16970]],[[140384,-16156]],[[127588,-15771]],[[128204,-14929]],[[139996,-14135]],[[139508,-14156]],[[139611,-11880]],[[133591,-11959]],[[133754,-11649]],[[139877,-11651]],[[135776,-11574]],[[146616,-12241]],[[145690,-10961]]]},properties:{name:"Australia",childNum:30}},{geometry:{type:"Polygon",coordinates:["@@ñǱʀ͋ãʣթɊśȝŕV̡ͥťŕƻࣃÑ˿ǥ܋ĶǭśFƵ^׃Čù~·¶½ÚĩČo¦I\\wPͥąȻXā]ǁMġÑÝ½iÇOĉLÍfÏ¬ğPčBuTDÆÅjǹőҫǦ«ǶĈǒď´ȌªúoŎÀvqL±Ŕ{cíƼò¨ŔSƨLêoŌGƚŃ२ȐdxMÀZR¸_ð@Ŝcǌ_î}t_aDuvkÎø}Dd~bÒLÚſÊ²ƘǋǼϤǐĜ|òÀ¦ƞXN`TŲAŲNZJłXhȠƑբE͂ͰࠬȱФΆǓ"],encodeOffsets:[[17360,49766]]},properties:{name:"Austria",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Փň֍ը£¬ɜ¾ĸƵʮóˠ¨eƕǰœŚ̭"],["@@ݒ࢙ˎǻ΀áƸȋϓ̯ĻȏӯɑǓˋŷĔƃʝ\\͹ɵqԃόʞƒǁȆǾƄ˛ʈ౉ٷùʈƺǿƮĬŸɻԹ͐ʴ¢àǬѓʤÛŠǬƤѡȔĲÒƿŦǺŐÂvڲɟ̂ěĔXüÒðT­´ˁƐķǎȸǄˎßӌѽЈéڂը"]],encodeOffsets:[[[47222,39811]],[[49739,42849]]]},properties:{name:"Azerbaijan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@guûƿcy¤«£ŇR§èöcĘÐOōiƃ͇͟ϟչȕů˃LǇԮZپǭ˪ôľʎǳʶ^ƜàÀ̈́ǀÝʔĔŨñ"],encodeOffsets:[[31287,-2457]]},properties:{name:"Burundi",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ʦq̈ʣȋ˥wAá\\ğí£Í}©͋ʁw՝ɸ£̪ɯǉͫVtɴСºÿƞ˓°Ɠȼ̇{ȟ̆ۚɾèōЂ˘ƮڰêƸǅӨŁđͅ"],encodeOffsets:[[5831,51994]]},properties:{name:"Belgium",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ÁÁŏEĕŶǽbmlʻàƋ¿ǃĿQͻɷȍɽ׏ɧÓ֩aлɍÙÃAck_wL˝óVŃjån»k¥cÇ{ȍ࣫ŹžàȹזĀJqႬǷʾ±ՔӇ͞ŚԜѴϠҮyΆДo˚τƌڒׁ"],encodeOffsets:[[3682,11977]]},properties:{name:"Benin",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@­ΏȀɃ ɯǂɥӪ̃ǱNC˕ӠͿҒÈĸȡŹƁˈ΋΅Гҭzѳϟ΃ҽƊȗ¨˟ȩΑê຋WíͿļƇVֽ^óºĽV«ko¥¥D·ØsÜÜ­­ÃĆ¿ÇYʕǫM͟ŕïÅćÕDķÚĉSąґӂɗĚԮȬ˪ϞӶȼɪɘ©ˮɈĸď˚ƬǀǠĄΜǿȎĈ®͆ʢUÞʬʌɸЊ¹Şʎޤ̨ʐȒѲXϠŭ"],encodeOffsets:[[223,15270]]},properties:{name:"Burkina Faso",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@÷r¢ǆǷ"],["@@ç\\ƪnā"],["@@ęÏΒÒ́"],["@@ũĀŠĐȟ"],["@@əqƒɚƫѐĀzɮ͇ùͩ"],["@@|JeƊÊAɪ̻ɖnńĊæŶɫD͍oȉZ¬WɆÕв«ாDΚȍéāőo[Aġğɷ­ĳǽǗĳ|̓ŧǃͱǖӻÞŌİǩÈWŎÖFȠÖŰŦQĀ@ô¦LÆ[ǞLòχzˁĒǍx¥Î՗\\ÏPVЇƉʧŒŵūŨуɣ͐ǉনÇ«ˉӴɛȱɩʑή©ӆ£ƛʉ˔ǃſѝƲ͓͝ҁƇ¶ŜɨɉőþÈ̎ơЛȱǻïђḍūǋɓŶ͸ŉ̜iǰ¥ǔàŬǡÌuȦ¿¶ËľŐˠ\\Ê\\ĮNUå¨ťjƉĜĥNátÉÄ¯ÞL`¤ĖǜLúAºäìȐİ@̚\\ÊõïƂɡ̗ɲ~ȸƶƜĚĦ­ĐXfæŰƒȏɐ"]],encodeOffsets:[[[94157,22025]],[[94079,22357]],[[93339,22708]],[[93755,22920]],[[92957,22620]],[[91076,26876]]]},properties:{name:"Bangladesh",childNum:6}},{geometry:{type:"Polygon",coordinates:["@@ĵ̓˧NǡǭνͻɿѼнҏmƱŐ¥\\ȝéɧuÇËÏŵsySyFyĵxÿckkgÞŵXñg¥ÍţśfɏŧŋiБĦƫòwr§î}FγyoµkQ́ÕċAđZ½SōGëÁȫ^ôͺƕɈЯːà^p~àèRQnół~ǴˬŦƪǞįÄ¢«®ǳĎƹ˞GäĜlĄÀŠŠ˸ƩƇŉ¨ħᓞƏ؀˲ܸƈ˶ŭϬ˴Ƿ̨}"],encodeOffsets:[[29272,44793]]},properties:{name:"Bulgaria",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ÛĝƄHɜĬXl̛"],encodeOffsets:[[51822,26505]]},properties:{name:"Bahrain",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@řǵѡGBņƂôʎƪƄĵ"],["@@ʚďΏ¬Ķ¤"],["@@Ï{̶̀¡ǀĖ`\\ǉ̵˙"],["@@ǽWņɀĭ"],["@@͏ɬþĒƻʹЎٱ"],["@@̻źxÌ̄ȅ"],["@@ĹĉrŖĈ"],["@@ćïŞ¬®áWͯǓ\\ȓϾ˼|"],["@@Ǐ»Ăńˋ΢ΚЩ"],["@@Ƿ`ʊvÑ"],["@@CȳʣƧďǦȃ¨ËêǊvҌȤęȚ̓"],["@@ʰſǾǇЭųƚĚJ¬ʠǫǌɁĴƇIÐŚ¾Ý"],["@@ӐۑǅȯǄǀěǜǺĖÍ"],["@@ƩĸƀŎPͼɫʈη¶Έ@Ͼ̽xǑŇý·˱"]],encodeOffsets:[[[-74779,21702]],[[-74794,22968]],[[-75987,22747]],[[-75834,23269]],[[-76636,23444]],[[-77480,24013]],[[-76215,24646]],[[-79521,24832]],[[-77115,24781]],[[-79203,25615]],[[-79609,25301]],[[-78488,26100]],[[-80376,27371]],[[-79079,26526]]]},properties:{name:"Bahamas",childNum:14}},{geometry:{type:"Polygon",coordinates:["@@˼Xȗѫϸˇ˵ßɂ˓ʩğ{D©OS«^­To_ðƛSÃ¡M®ëNď¿Ù«§ǟœ_nǇäŕġå٥˲çÆÌ̓τࠉ֮Ṷ̌ͬȶªΎȬVɞƱȦǨ͚¼ݨǗ܌@ƤǍƞ["],encodeOffsets:[[19464,45947]]},properties:{name:"Bosnia and Herz.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ŘñࣸįkŻº¹ÎŰÊ®fº@ät¶²ZĘQǈR͢ƭʀąKơãÇUoHyÂ±æïh¥@ůŕs­[¯PmƼóŚ~oÝőĢĪƉĖăȌíƎ¯sX}WÅãyÈeƞJǬ_ɀŅɈˇ»OÇaĝ˝ƭʕ^ƳĂɁI{Uo½ßw¶³øÑüÁ~jȏOȃpw¤mÊāJqǃNȑEŅ¯ȥGŕÿ÷µóåëĿ§ýzÃ»TÃj©ƵåʏǢۃăȳȶC¡uw§SßkıěLd£ðÉh֡~ƅĩSĂͥrubŅŜËRķMƯbࠥŸண±çýŹġůÕwKñÓ\\íHýĭQM¢ѮБȸجОαজØiƦMϨ}æwʬòŮIlpĶvƪWÆlÊºʂàwl¥{ÚǊ¿Ħïd¹BSjj¬êÄÚzNvSņŘǜĘxň`èÚĸ^ʺQ ØņÌ_jáZƻXrX|¦Ü¢ĊpÜFϬƎѲӒ̂"],encodeOffsets:[[28824,57491]]},properties:{name:"Belarus",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÝŝĔɜuĽ"],["@@˵CÒྪzƀ˞KʄИȒv­ħȀOĿƽԭÌÿğݑӥد"]],encodeOffsets:[[[-89961,17841]],[[-91027,16272]]]},properties:{name:"Belize",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ŏgǎĞ½õ"],encodeOffsets:[[-66283,33069]]},properties:{name:"Bermuda",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĭއҀޕU฿̇ѥޗAх̽গǉȤࣟ¯ʑѽǉc¡ÈÓƨČĪçŤ͗Ĵѵ`ƕ_íTõäǗŠÛ|Hwyįė»̅đɻʙǡʽƕǽǷZí´Cˢʯ݀Uˌ̣ͰØɰɗƜ[˾ǖŰDÄgįĮEhļƊĦńMpkx̭ʐġŀUž¡ƀÅ̾«Ŝ¨Āǁî}nǕξ@B@UÒĽŠl¢ԔҸWƔǄŚ̽ǄǡѐȾͼǝɰ^ƘЪՂǟФĂڬʚ͆ݥನ̌G͌±ƜďɾĀ˜ˆä|ƀXĨiʲʘۺЬরǀĈι]ęçś³S·Ħ͕VōÇȅǢх͸ʹؚ̨͋˼ǝɼVʬ˟ծƋnçŴƑÐÁî±ǶBÄaĂ^ʌz¬RӐʥŒՇČ֛ŇIƳI¬ŴƥŚƋΟhȗXŗ൚¹DÖf¢r~AIǥĵƅO§fǭƛlŹ¢¡̜șðgÔj»RĉĲɵÚƥúûßÅŵϟµƳÆŉΏיɪȡuÕi»]ÕăÅ["],encodeOffsets:[[-59555,-20648]]},properties:{name:"Bolivia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ËXȦņƦÑ̯"],["@@åĦłĴș"],["@@ǇMŲƘƉ"],["@@ȗ}İĊĨË"],["@@×§àĬFÓ"],["@@ÚǼÊĥţĕ"],["@@ĉćĮːcȇ"],["@@ř¯ĘĄ§"],["@@ėeɐ̮ŒξʖĞĀĿī̗ҳ΋"],["@@јÆ؊őυࣽǣĽőĐ½ƽɭôçǛǻßɕòχëɅҢĨŸpŏtñƞŴՒͮƀԶĥ"],["@@ɯǑģĐǐƨǄå"],["@@͕f˜ƬŌçÑĩ"],["@@ƯʓΟÈÈǂ҈"],["@@cūƯ¾ɂҌ˧ÿĵ"],["@@ĝiƂȈĺÿȵ"],["@@ƁyǾŰ\\ǟ"],["@@ŁĲǡÀ¿Nwʫ̃şݭĘ˝ŒõXŷOƅI½øŻŌʰ˕ΆƥN¶ƢHLżĢ`¢¶ʲÉªňĠfàǜH¤nȒȦGðnÒvQ°ÍÌgФtϴċ´^~PøLÀ²µÀ­âÁnPptzvĖdffHȐĩ̄¢¸VĈ¢ØORÄvJV¥§¦żQrçArYi¡èʬñ̦ȠܪťːˊɌպ֦݈Ęɀ˞ǽь࿫Ɍʯтƛ¸йͩ˝ϯԧѷʵוઁȻJλǃ׼ࢬհǤەʌɇͺƸɾā;ǎ˓ޥƮŸȸӴȂòʀ˼ȺŁĨŎıôfȾˮ΂ҶÌŜąjŞ࿄ؕṇ̌Ɇɂ̘ɣµÅņ®ĨʳǿǳĀĝȒǤ®ǓśÍƗőՋʈɔǬЊļmñ˅ɔȎВæÚłόõ׀˝̼ͬƛࡌĸєÇనܗΪн΢́˚ķńǗӬƹ࢔ƂķҸ๱Aߑэ੓ΡЅŃ`LƉљՕ̵ƿΑͭơ˭EŶˣ܇ˣЭ͏̿ʏ˾ƉƕôįÑȩǏǽ·ȉĎu¹ίĚ\\įԽƮ৫˓ૃ¤ѳйңŏ્ǽƛͧ۟ͥ˯Ƒ˧ýɣ гףʻɱɩ¿̭ޓiǑȰÍɡ֥ğÙʢ¢ǃĊ٫ŧŵĔÉً˛śǝяNݩχषڣºŏɯȻbĚǻÕƝɋØĻʔėɝȹöùȳŇ÷ǎީÇ݉ƭпЅʝЋЭҭࣁԹۧऱܙoʆ͐²΄ʢĢ̞ƴrǆɄǘwɺŔYdƼϯīɯˬŠˣĿ͗ÛÞŭαϹɹȅуÈʁѱࠃ׿ԕwJÅzË®@РhÀ|ô¸îêĄĚöì´ύɸƇ̄ƃĖʥĈ̶̯ϕǦ±ç͑ͺtqMo]ţģÅßU«B[ôhż΅͞Υ˺ʍÿŝ˳n³Ö¢ƆĚưɄʊƾࢤ਎ǠWƪԾ˴ɬˈцńШʪƜ۪ȇԶɛŪʏđƟ¦JŤŚǴĊžۆƬ¨ÀtfǕŪƻơ̈ƉĉoħgûZã\\£wð@Ö_Ę¹ºi áކŇƆMĐăĒţxǕ@±bűƠ«`˝ƹ঱ŸZʼĦڨíʶÁoǊm¦|¬[²kÖÆ\\ÖĄ¼^ÖjvƙŮďôΒך]ń©F¶ƴŶϠàÆùüÙƦıɶQĊ¼ÓiïhǷŴţæ¡¢kźƜeǮP¨ĶƆJǦ}B¡qÕeC൙ºWŘgȘΠřƌųƦ«ʼTċ֜őՈӏʦ«Qʋyā]ɹ`í²ÏÂųƒmèխƌȿǊ«ŖɹU˽Ǟؙ̧͌ͷʺǡц²̔ĥ͖T¸´èŜ^Ěćκযƿ۹ЫʱʗħjſWã{˛˅ɽÿƛĐ͋²ȝPĭGăEƑlķFė«ŻÃÏa©E¥R·éà¿}୞¶ƶÇs{]ͻ˹×ȉŗۻ]ǕвۣĊĴŪĶŪGńąĢŏƐĉÆ·ƦjŵĦƵЄXþ|¯^Õì©ti|jjp|KńǸ|vŘȖԸτĉ̲vÎ Ąƶʢþњ²zŐxú¶ŜĞĮĬĆΊȴܸżĞĶÈ´à^ǆQłd¾v«à¯Ģ^Ú¤LvLÆfɺ಄ɨఈȟּν̶b׾ӨŶˎÑƅ͢ґRHղචXãŀÀŢɐȧ҈̲ʀ΍ѥǦѼϥʌf͈ǖƄşŽêF̴ΖݲΠǒͶӜȌɌցúƥ࣮ϕΦĳɜǲŕ͒[ƞǓָ^К̍ŨΦʪŜɐ·˨ĊҔːɸfͰΐËǸx{TøhǊ¨nÖUĀ¸ČgŶſƃңϘƱ"]],encodeOffsets:[[[-49649,-28433]],[[-49750,-27035]],[[-46346,-24462]],[[-45188,-23697]],[[-39837,-13796]],[[-39673,-13411]],[[-45567,-3010]],[[-45960,-1349]],[[-53076,-1468]],[[-50819,-234]],[[-51868,-134]],[[-50630,-115]],[[-50931,275]],[[-51636,143]],[[-51356,403]],[[-51506,1986]],[[-61132,4458]]]},properties:{name:"Brazil",childNum:17}},{geometry:{type:"Polygon",coordinates:["@@ıjǜȂųÇÑ"],encodeOffsets:[[-60921,13396]]},properties:{name:"Barbados",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ĩ@ŴҟƷãє"],["@@ɽƳĀ˙ƽ̗ӷҰ̢ÌӒ̤Ĺ"]],encodeOffsets:[[[117788,5018]],[[117788,5018]]]},properties:{name:"Brunei",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ǝŰīĞGČhQ®í×«ÛyÉSLiÅL»q§gſCƝ§ŻJ½º{@ŝÝҟcͥĲşéýƯ}ƭmŻdoºɇÎƹě¤ƵĆĳǶlĸâTf´Ű҄Ԅ² ĮªĆ|ÊÌæêb̰É^w{Ĺh[ľSźPîMʲď´HŰĆ P]¼ɲĉSƍ"],encodeOffsets:[[93832,28427]]},properties:{name:"Bhutan",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@_ƧגࠁȖԋࡔҿĒͅͰqSһ̂Ыࡘȱbȃǎ½àß¦ȡgĭÅÉĭęïՇǳͭΏֵέȿ֍ǽŽƓƽ¯ɡµĉĵͥޑʯÿݏ\\řĠȉNÙtщʺȫFɩƙɿ֥£ÝɇƛŁǇã±ȇ×§ąߣOĉĚŸ۞̧٦ϙ̶EᙶࡄIᵦሶˎ͌ϯզξʌ{͆Ț̌z"],encodeOffsets:[[25865,-18220]]},properties:{name:"Botswana",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ڊअoЛŻȍÎʣԠųŨ̽ҾŻ̈ˡgɁĈŉ࣪ڕ­ƯǦ͗Պ̃ɒԩ˥úȿřટɀϭ́صvݷˣҫ¼ωӵ༩˞˧̰ΛɔʱγȣЋқ`ܱŕŨˁĻ֙ǀ݋Ƴţ֣ʇҽĵ՜޹ޘÃϪ˩ˊƗ֬®ӮƻƤʶȮϾުɰˊВaΞƨƖƶȪ˃ܪζޒ¾ҜԢȇƲÐĒୖǂβɺވݒô̔؈̮̔Ý"],encodeOffsets:[[23409,11182]]},properties:{name:"Central African Rep.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ˣ\\͠¤»¿"],["@@œ­ĂƪĻ"],["@@ĵÌƚR£Ý"],["@@ƍWʈĸĹğ"],["@@ͥyɰĶǰŦùȡ"],["@@ȬǍɽ˒¢ɸǼɭWκ̖Ôī̤nǽۥ̍ԡcƓŤϢҎՂϲǨÜɡƋϻԡ˙"],["@@ŊĀҪŝघAуǿKȍЫøń´ƉĎàüȡſΫÐįƘ̑xsƦɃͨΞÿʉɶʵ"],["@@ŢqȡuìǈѺǲѥ̑"],["@@ĉǔȪĉǥ"],["@@ॴΠͰӮࢨҔ܈Ǥذɶࢢ޺ਞֆႺӲૼkԶˋʡɦųēɣއͷ֕Ƙٹƕ̂іųȰȫԘƪʢĹǫ̙ͿɣЦ§ȧ˺ӧՂÙì·ȋï̔ƍࡄį¥ýɤuѸȸƮǱʆŤħÌŏƯ×ΰÙቱկʡKǟ͝ƒďƁÇĊıTǹ৥ۇɋűȠȧfÉˤ˚Φɹŏ²Î൤ۨˀ˃ǎ؎ŮోSҸИƕ{ųŠūʷगΑȍĀêĎ΍ˑε{ɃĒȯHÇΰ̳ľIଘέɜכœħǸǉٝىʏګӋՓϳhǃʃᥫEA"],["@@zùƓŚ¸"],["@@țûÝâʺZ"],["@@ĦéʯÇPĮƺ"],["@@ʡĦZĴǂLĆȥ"],["@@ਫŌோ֌̔°੮ȣ࢖Οĸŧė"],["@@įˈȒǋġĻ"],["@@෺˕նڋۮʱоաĚôâɓɗó˿Âৡ̀ɪɢƺĩǕҿã˵ƄƺĀʵÀbźӫImǌ΂è͟ ͇ȌǯÃœɒċïıĤͫˊΚjƮӻíʍȸάĮ؄ȃ"],["@@Ŀůϓ¹Șʛ޳ࡵ÷ͥդтdƥֆՙ̧ɪ¨ǽǿײįĪŖĻέ܎ϔ°ǓЬĦ˴ĵƱӳ̓ʸpħĕɔ§΃ɗࣲȬĝțЉǍĳʥËȚIȍȓǈś̌͞ΖĬʭԍȌƌǺňȁϯݥǩÀɡáOю΋ʳƏ˘ҺŝˈǟĔʝϥ\\Ŧ͏ƋϫЕЇŋŲάŦרшӧGǫǏҩɖøRȐޓɇಿƔٽƇǡƔ¤ɒ߈Ѷ۱˚ǂÃąǆ©ˀФΎąĝøĴŸǯzmņǔƀȌ«œǰвڰɈĠĳìɚˀ̔˒րȤˮćrĜǪ"],["@@ȋŸİèĜȟ"],["@@ɓ¸̼Üħœ"],["@@ÑʞǊôķ͑"],["@@વʬǊŖײhͺϩ"],["@@Ĵɯ˳ѢƫœĻ˦ƍ»ĥƪWßřߍՊlǺͷŚژ¸"],["@@ΝƙȕÉЊŹõɵʔŤ˄Ͷƕäơ"],["@@ſrðǂÐǳ"],["@@֛̈́ÈòюǏǆǇÿÝ"],["@@ůĩˍ¢Ɍǔǲŋ"],["@@̒yŘṯ̌ʭ̈¬̌ϼĚʑۧ͝ĵͳĸ˔xΛƜȟˤ˒ͤ"],["@@jŸŰcƙœ"],["@@̤Ɍœǯȏ"],["@@áäВƮͯɑ"],["@@ȩ͋M˞ˁ˳ɧÉȄ˒ϋȣѼծß̟ɞΜ˰˫"],["@@Ěř̽ŎɤL"],["@@ûÓÆƒvý"],["@@ǋã¦ƺŦĕ"],["@@Íʝàĉłΰœ"],["@@őØɾɮɦřΑǫ"],["@@ŗWΪĐʑ÷"],["@@ԋʆդZʟ"],["@@Œū˳ƒǢe"],["@@ɒƏȅЯγϗȊJʔ˪ʆ͎f"],["@@̞oYıΡHÞŚ"],["@@έ¤ϡɶٸŝĘƻ"],["@@sȋҕ˝ϕǋֵ£Ǳʚ҆Ϛୂ¦"],["@@̀ȣ·ĳӿʸֈ "],["@@ֿǎȚĀИƭqğ"],["@@ΘǔΖȫႆӗ̾γǯǑࢸØѶ˟سʧ૧ȶõȄ۱Ǽૡۭٓǃ́Ӧ୏īȂˈְȢĹήʦ߾Ѩ͔͈ƟÁȣːȽ"],["@@Οƴ­ɒͤſêʅ"],["@@аåĉëډŠʍ̠ԶƓ¼ƙ"],["@@ʌMśşůŮ"],["@@ǅNϤłɝŏ"],["@@§ëǛĤĒȢŲə"],["@@ߝŏȨ৴ÇòǧǷS"],["@@ʟĎÉɜɐǤɾĹƣϓ"],["@@ԈűĻ׵ӟƧএ̡κƮɘѼ˨ޜ"],["@@ǇÒȆö}Ƈ"],["@@ѕźϘD¾Ž"],["@@ѥƪĦƌʮĒʣ"],["@@ϱĄʜŦɾÓħƕ"],["@@͇~ɖ̊ȁ"],["@@ǛkŚƄĭ"],["@@Ǣވ˲ϑλγė"],["@@ŋƕƉİʖ¦"],["@@͑ŊǈƔѨ×˝ȅ"],["@@šƮˀĩƝÃ"],["@@ÜǏʗÛǴñǩdɈ̦"],["@@ʳÜˀÆKš"],["@@UěڷĿێȜ"],["@@ĹſгFÎĿۇư̶Ğ࠲S"],["@@फ़ʣҤϑОÓ࣏॑̕Ô܉ʤ͏Ǜň̋ÍȫĆƠࡀǠùȨъĭƅ˺ΈÄ̎ǿ"],["@@̖įٟîΊ"],["@@­Gȟ{ͻǕΗʭ̯ȍՑԩٵ@ܥFɗMĿ˝įöœr­MƟõÆÓɏƇࣗ͏ٽıЕŧϻǵϷǵɁ@ϝʨɲӄ̘̾܌ªĆ̅ౚÇɜ̱ƞ֡ʤļƬūĺ̥ũΘˉGȋǭ̚ǍäӧȬࡩΔ҇ǲ҉ǴՓȰࣝʳૻŔȷÀ˿ŕԱȴ˽sÇ@ïƄ˯ŐΟ¼ĳWˣùŧæ٥ŖûĸùŜµɌNʧÆMͅȣBܑ@Ω@ܑ@੻@⿿@、@、@ᅍ@Χ@Ω@੻@ີ@ć@čąƓʂ̌Ŝͭ¯ö˰˽ʃлǦŐƨűȠĂʕ²¤΂ĵʷʟēсȼɱͰǔϢǗ̝ΕaÁŶďƵϟ̓øҚİԡsŞƄŭzJǈĩšΧ¡յʄʐϨؒĄիHˣȕƳǐ°Ѥ̜ƒǐѺ˫ЕͬȰʚÉúǃ؍̧ʻсɋ̶ːƆĈȒ˧ƵȀҢʽíƇˆұȐùƔˈƞ§ų̃śΈEǢţɻǪϽÒõǊȜĤΫaʣΡʱƕ٫ЈʖΆΖĆϩ£̃Ȭܴ࢔ȟĈɅхݦëƄ˅\\ÁĞƟەʘ̑ǞȧÄĆɳł¸Æ¢®ÍÞšŌěþϛϘɯɲɫɾ֟̆ģøÁÎʅǆɡöěʒˇƒ˭]ԳĽĿǁiĥʵȟCˁğŵ«ƉíçZÓʼ؋͔ҧˮˇŚ¢ö¶Ĝ@ÂŽGχUʟũЕĮÕåȥȩ@Ӭ@݄@௰@݄@௰@݄@௰@݂@݄໒ŕྞҧग़çܨǕ֯ʒ̨¬˭îȀǘͲEŶƈֺT¢ǢѼƥʛɉࡖƴȼǐј|íâ˚ࡸǞЄȄ؄ɨĐxǏহ̃गį݉ˡԍ̣ɾćǕöْZšȚ޲̒϶Ñɘøþȭܒі਀ȸɑƓĔċǜ¨চђУƄưžٞɷࠎف؎ǋ̒ÜƹǖӶ̨ȇμľŰ͑ʂÝǵ˙ںrцΞߦLजŽ۔ɽណϻঘÛƹŘڪےǏր̅ōō֙F̥řʳȕʨëᕊŗ౜ĞޔǞόɓӾƼɥȨƨՀ˻EƉчEਤ׋ϛ˺]ȴӌđک߀ƈǾାƐ֤͢שÛųƅࡕuĩƁӵgͩŦ;˂ᅰʸДùʸΑ،ƷƔƕ࡚ªॺ͇٠ૼŪઘĥђæȁɠপϥȼȨҁļϡ¯ϩφζΤÎŋŘўwθȭҠ²ʕɭلǰͯةȒȧΞµō̦{EţࡇՔιȽː՘ZŢˀͣЎǆʄ׺¦ઞҢ͹͎ǳǹ҇fѢːƝǆՔĔŇǇǺɊاşǎǁÓॣȎӯ΂ɈʨΚOŨ̹©ʓƖĒβ͔ƤмÝƂžϹæग़ΈΪǽҾmڢЗ·஖ٍ֣´Ǉŋ҈Åމ̵ӜJʹţ׮ĪȧĳࡲÍЏǃ́fِͻāͿ̴ǽަ࠼ࢴ˹ΆӍáąϡ˳ߢٯڤʰޘ৾ٴÖȩÒȶȖѳƄĵԨ᝜ŻȔ÷̩ęώíêƉ܌¿ӣʫӜČǉՏǗՙWˤʩǮ¤˧ִ̩ơΫ࿃ו्Ԑʵ²ɣĹ͂xўɃ̖ϿΥà˭ëࠍ̢कpƋؐȯళٻѣT๻ӲşÉಋâ͖ı¶øࢺśߚε࿒ųࣟ࡝ױǅ͏ĸÎũПÀǏŲȗƼƹʿn\\ʏցğছȰ̙ଝ̠ŘɿʒqĝĜਆɍʷŗԼŤܺɉɬ͇ؿɓދ`ΦȑԫǷǑȨƳ֫ǒʦűΫʁȻRɨƥԍʇԅ݃ɃęwਗƙǗ֞̑ΙǬτߎUظ୿ུ̫ͭˮ࿘Ϳܾ͑ӾϑྡྷЗ˺ǇŭɧʰǦॴ|౤ȹƤɉǣӋʄΩųڋ׊ԇȓǫ̤g݆ҋŪɻ΃ɛ̼ƶ̾qٌѩ͝ΤͲϊʢƑŚəƠʠɁɸ҆Фʝ̙ͨࡂĖ̄ȷĆĂÐӅф࿀Զঞބà׊ʅ٠̤̅ଝ֎يזʞ̈́ćŕĚǐ˲ʝÈŐ¶ȓʀƬĬʋĈǜƚӻT֖ئэɶĥϚٖʒಲɍxŗϖŐ׬Ǒ[Ą߈ɘࡤ̉íʅɢèɼùƾŵƩý̎ĐȒÓǹƩδɿ०÷ʊǱЪƸĊǋ̕΁ð̩࠙¥ޞěªӝ˴ƿηĭ£ŕŔ̷Ǐ̬ÑѦǐӖjˈƉŸɑŅˑַɕՄŰͤθŐǃƧſʶɠàΏĞȈ܈ɸ̠ʨ̢̡͞˔Ǡ˴ˇźʎĐÁžξç̳ŶsȦ;KťŘ̖΢ˊ¿äą̉ƅРª¶˓ƜæʲʻǏōƜēȤ²ľřұş؈\\ǙȚVƪǥ֍˽˞ŚԬNǽɯϗƻٴŜƲƳ̆»SʥѷĻӘË±ơզȥˡुĶٔɳǝđў¿ʍŉ̊]Âƙů©̢Ň̄ÚƴǷȄ¶ÉœǼƙΥΝܞȾÎĥɂiͱ̥Ӡ͖ɘ¥Ǿʽ͎ÃμĐҶʅʛǣءƃǕƭৃǷ˓ȧȿ¶ʜƕȕȃඬײ׺Ĩ͍płĨٴÅʀ̷͛ƯǊţЬɪ͂tоʙƘɑIӍѫĉӠÏ}ġȟ~ˈɋ੿ֱಅƋୁࠓ໵ǳǍňڝÌṽ÷Ϗǽαթއŵୣ࠻૿Ɏॸʃú×ȁ̝ׯԋҿ˿ԣğएБзЅһȣɷ|˺ƻ؟˻"],["@@ʻºȘǊäɃ"],["@@ߎ¸ʈʢҐఞɭԿ̛Ȃ±ం̤ϣ̆ոq੆εӊ۝̀ćюɦ޳੊ǬǘಠŹࣈ΁ࡼৱŇљ޲εюĹzŪ଼̓ĪţѨq¼αуƜƏŵ҅ŮΏŅqƕ܁þΔƟÑɣ֤ɬʹWǄυࢍǙඩ¤҅¢ðƊਿĨ͛ȶٿοޥÉछɑᵽƳЩ̀Ý̚ྣôݩŢֵՊᔔɐ࿢ñࡌìᄿ͎ምĕഅ֩ɒIŬ៺ϬᕏďʑÚОǊ۹UͻĬȆؚɸɣƐ̈ǦᰶتδÙžȏЃБ"],["@@൏ҼʶǺઞÒؘǃɡ֕͡"],["@@ੂVࣤƓࡰտ൹®ఝŝсÎ̥ͰӿĠÓ͘ાÇ"],["@@ߐŢҤAɬĻľԒ՝ÈӓʐӸȸࢎǁҷɜȀÌ׽ʷʨ͚ȚࡌƁ৕ʺࢎ̎ՔªƆຆżҒăैܩߝϩ԰ŜˁҗزʨʢȋžɸĪۦƥOȕ΢ƋɷȄƎɀসơ߽ʖؘɊႤŹո̃ܵёࡨ͐׌ķęŗݛŏшʝϧђΰ֤ļ̯͑ТƸ҂ʯćɊ͂Š੖ƋΌƫɟȝϋU׍ɛݞǺ̺ÑҜŒź³õɓे̣ԪÎŹ̻ϘϠࡾɞ௢ȡŎŇ෍ρ੾Ɗȗȋɞֺ͂אʁŤʭڣਗɏئÆ੶įѪůRť෗ÂՑőՀØӪę§ʁ஻ÖञŻɬƭ৒ÇʑōĠɓǎÂÈāƨΚÐșϓтȦàů̘Ğʗ]ǢвŸĉȳ͐¬ڎɱƃǿׇFܨïȶĨҨţ։΋تńӪɌŠ٪̛ƥŋԃîҬɩ͕ÁԅĈhƯҖǇՏgȰƵɵǋѓdʑǐŧȗ¡˂u͗ȱʩةȴÜȔʇʅ܅ծߦҬҷȩۑåƚǪ΁Óޡж÷ďȗèɓփƂךεƕĕБՍʆʏ¥Ҁķ~ǩːąÏǫ̰àϞǟǿÿ՜ѿÀƼΞɹɴƐ֐ɉɉŃϤÉśő̯SΊɟЮ@ĵĥ͚ǫɇϯѷѦļсͬ˹ЫV®ʳफИIĭƻȫȨǏ৏֐ƞʽ٫ʬΕk٨ѿϸá»ë๎ڧť˅ᎋ̦ӷƚЀՋIӅŮʯüƈĲ͵¯թ̎ԤƐޅŮĮƒ˗ÍߥӚƸƸ՝IŻŹÅƸ˥ȁƼȧÅȌɥࡩx©ōࣵŻݻĺʇŞ¥τؠɐɌ఼ȍ͕̈́ĂƖχʐՎ[ࡺȂӲeܫֶ୐ҼȶʬӌȊࣃऒ҉LA˖ʝ^ņŷɽMԻɢƪȦ༳̅zʼԔlʲƴۉɎȚǌё÷̇ÀȚŞ؛ÐƵͦёSڃ̀˵ǟҖƅwɝԿ÷ᅗĶؘ̌եǲؓėܙƠ׫ೕŲ̇ÙҕĞÙːேǿߍȼ֡ӊഢįפÈᖑϜ³ߘঀ࠮ࠢː๨ńࡈŇࢭ΃տӵςۙ৐ҝೇ˻"],["@@܀ǵదƀрÁƚƃԽƏ̒ī९ϑڈòѐͳҊêŬƃ̗ȕǀЩ߿ǡԉšǄľΉϵśһîଷ٠ԩƐџCࠟϘъ˂޲̙ڎªöǢɤÏ΃ʔײ`ғŪѯëՑǲҠĨϢųχ˼ࠈHUŴ"],["@@ס³ϋêขǶӓȫ"],["@@ߔǁഄiȸŃร࣑ჿHφõǺȹЛͣࠃ_ӿܸھ޼νǾƊƈຬĴ"],["@@ѾîôƵӖȖࡼY၊ԧÂƯᱝىҩ͍֕÷σקܑĭɷ²ଃ̍ދӪએʞңLႢຐݯӤᧈǔ࿈ʿơĵ"],["@@ͧ_ˬĮ¼č"],["@@ҙÞ˺°Ǡō"],["@@٣ĤҔʂנȱЏų"],["@@}̟߱ჃͪըΌࣜƾࠂǩ̮ͧ"],["@@۱ŋÉŌԬŨʐŧ"],["@@̽ƴ̨ÆVȹ"],["@@ЧµӟĄ๘к׏҇"],["@@ӛéՊʬ­ȁ"],["@@ȀÛӑƅء_ɰżߋ^ƺĔωVĝŔ഼ŀтʕ"],["@@ࠆőɓđ࢟Yȑɮіºªé"],["@@ǃץМóÒɅˇôȍùǢʏ̷ÖÙƗᄩsȽƲ˴¸Ӈƈ౤ʖ᭣ƹǭðոɴঠÝχ¢ϩȦ̀ŒӛĪׄĀದсȹǌӒzܻĆξÎ܏ǲࡠĞޤƕưȔࡔȑ"],["@@͗t଀ňߧŻ"],["@@ӎ½ʡǅڰðʬǱȤ̂࢜ßĨˁӕҗࢽƋ૑h̙Ĳᶿկॷաɚఐɔ঒ӠȦᔱƿšǆ͖ƂңdŷǍ̃ÀǁӋģͥŜ˅ūعǠࣵ¾ʶȐল޺Ƽઃýاº̤ńຼľඡ¾ϤȦலmࢗĈۖȒڰ̶ȵूI൪չᄘMDƂާȘ͒Ǻ۟ȌৼϊՌ×Ʀֱ"],["@@ۣȒΜĒφą}ȝ"],["@@ੱ¨ߌĎ˦ŵ"],["@@ࣆţʯ˓ҐƢෆ¼ٚƻܻᅌŻĹĥ၁ᅊΥ̱ȗؖģɬǤόūІÂǆùʂŐલȇkŒ႔ʒאË࣪æ໨ǝۀ̳ܻȍ࠘įҗë͹Îîˋඩģڝ´ډ̺SˇݥÝՕĊÓ÷ʷḙ̂ďᔫIģ˴ࡱɵ࠳¶˝ǤɇƗΑL۷ԜǢӪݿѐᆵ÷ٟȈ͜ĈਕżД¸̙ƦކĀಮŹ"],["@@ٹȍѨǕωʲǅࢫƯȟȿّľĦͲމʕʏ͛пǞ°ˡ͗śзσ̜̫Ǘ્¹ǰʻw͒ȀߪĎᐄܐሺǑłѺè߮ƹ"],["@@ͧ±ٟİs˄রŷLȉ"],["@@ցۏҶϖG࢜ͯ_Ǐ"],["@@ᆸ«ȯɯᏋdǩǼ׮ü"],["@@ַÏŸ੊§ǆāׇ"],["@@ϣ׉ǎղƌм˕"],["@@۰y਱ȫ״ÑȧᆣƉڕƔ§̾ᙎǘ"],["@@˦˭ඹÐ̇ģԩúࣻḚ́ƚနɤࢾë"],["@@ઐšΏƑͪűႱɧ֗ʆ״¾कƤʃϖߚRবɁ"],["@@܎νܺǘӚɷ׌fۚȣό؏झqڣ̤ಃ°Ľĺ৹ġۇüūǚ૶YϙĄղĐہǪرƳŰȀڏLlǮńæ࿰O"],["@@ŹɍथƤHǐݴ̤ť"],["@@ਰґஂé͈˿ւ¯˙ʴ܌ȹɱߐǡˋˁߪ°ˤſ̠ŐԘ˝ྑʹևʣΡˎ¶ϫّ¢åͯ৷Ξјϓ٫ƘˉƫรƎйŮࠚèୱÆ̱ŤЌtߣźೊ̔਺ø౫ÞणƅƩĤ࠱ĥҹȦ੖Ǭ૳Ù܋ɌƷȂᅄó͒Ŭॣ¹ࠩư܂ª̔ͅှƉೱɼ҆ǰ෎¨޷Ș়`ॲǳ"],["@@ᣈ÷႟ɯᦜŪˆĒЖĻܨ̧ͨ٬Ð࣪ßȉɏᛏχᇃŁჁ˕ᾆǘ♩टঋƀϔʱຓġద}ۍ˥ࢣÉ࿧ưޠıĢɃᅡ÷୩ĈઞɭऺSƇǍ῅טŏൂÄ๨ɋ͡ǥ಍ਈƷ֟ˉᅫÃÃΩՍƩ༩w࣯ǰ̜Ƴً¡ʨýቒOѦʫ׆îʲȇʩƹᑝͭƥʠرrڿȔʠɍ൷[˵Ȉ§ˋܭ«િɾȏǩ֣ÒŕŚOǗݯhċ̰¥̏ۗ¬ŉ̒ऐɸ೰æܳɂ˯̊੘âখͷ܌čࡤ®ࡖκĬŤহϫ౓vɏ̲޴ɦͤgֿÂņʎڭΗՍyʢɘ࠱ǻ՛¦شԈະŜผţ౪ǦׁÓဇþzĺڶÅᜁږßΎᙲ{ႊҗ৲ã̐ÂݕpဏՊㄾҖ༓ò໦ДℹٳགྷÝ֌ǎᇏȵ໩̑Ĉ߶ɖጎȊᐯħಣ̫֣L঍ɠᗄĂಊɂያǥጉ¡˗ŞتàϷàნǔݍ྿ƅԂȖఃÃ̗ĨᳮΌ࢜ř͢þ೨Ë೑Ȣ฀Țቜ̹ĆƜᣒͫ᠛Қ٢ľλĠੈ³ŭǨቘċ୿Ȝᒌ_ഞ̣όØಷͲᗮJ์ʕڃƸՊƪۢh࢘ǗŧƲपКĉ"]],encodeOffsets:[[[-61222,44995]],[[-68364,45755]],[[-62424,46582]],[[-75463,46680]],[[-75332,46561]],[[-62571,47048]],[[-65342,47584]],[[-63400,48420]],[[-55528,48580]],[[-76501,46084]],[[-129118,50539]],[[-55863,50779]],[[-55391,50939]],[[-129680,50797]],[[-63284,50273]],[[-128188,51300]],[[-130250,51856]],[[-56789,52774]],[[-130994,52710]],[[-81289,53199]],[[-131449,53659]],[[-82669,54014]],[[-134915,54473]],[[-131637,54211]],[[-132267,54393]],[[-132964,54444]],[[-133361,55254]],[[-135839,55427]],[[-134069,55787]],[[-133709,56085]],[[-81897,57557]],[[-80830,57617]],[[-63225,58936]],[[-81629,58896]],[[-70819,60458]],[[-65952,61816]],[[-69871,61687]],[[-80416,62187]],[[-66388,62839]],[[-66591,63365]],[[-81454,63910]],[[-66379,64061]],[[-72025,64050]],[[-83968,64466]],[[-79745,64994]],[[-78517,64916]],[[-86957,66828]],[[-86706,67149]],[[-85735,67376]],[[-110686,68614]],[[-64185,68666]],[[-110489,69020]],[[-75388,69411]],[[-88673,69362]],[[-77492,69963]],[[-80878,69830]],[[-107049,70048]],[[-76678,69990]],[[-104290,70233]],[[-102622,70459]],[[-102394,70670]],[[-81111,70498]],[[-92364,71086]],[[-78843,70804]],[[-103599,71063]],[[-97805,71244]],[[-69544,71210]],[[-79901,71389]],[[-81337,71463]],[[-99778,71315]],[[-88998,71796]],[[-76501,46084]],[[-99105,74688]],[[-117270,74336]],[[-107815,74670]],[[-81446,75423]],[[-88667,72716]],[[-102401,75721]],[[-100628,75642]],[[-95406,75941]],[[-122609,75892]],[[-99692,76315]],[[-97594,76294]],[[-106618,76838]],[[-95787,76829]],[[-98384,77323]],[[-96795,77568]],[[-121168,77394]],[[-80960,77749]],[[-104680,77840]],[[-106519,78422]],[[-100045,78302]],[[-103655,78418]],[[-110891,77883]],[[-91879,78344]],[[-116286,78586]],[[-96558,78759]],[[-118324,79220]],[[-91989,79123]],[[-107067,78994]],[[-97776,79660]],[[-104134,79562]],[[-116564,79621]],[[-113109,79978]],[[-112451,80539]],[[-98513,80417]],[[-105908,81220]],[[-101162,81901]],[[-94090,83081]],[[-71156,85010]]]},properties:{name:"Canada",childNum:110}},{geometry:{type:"Polygon",coordinates:["@@ÅÑ@ĝ«ÏƜBAҬǥǺŒÆiÅCŉOÏĩȟÐ·K¥]u­mÁNwzµfĿ¡STďľ¯Ląků§¹B§TďƨyAā^čɵíǡťǕȍǦÎ®̡ƚóǘÓÇ¿ųíõȫ֑ēǕÕplÉü³ĿĪ[ɀƯlűMěñ½ŝħãIRAÂÆp¼ʌɾǂhÞxĮƘ²nlŐĘŌĔvnj@bč°ÌºƘǨ³ɮƆ۴HĘxX^G\\]NčMVStŘߜɃĐ³ćǑ@A"],encodeOffsets:[[9757,48405]]},properties:{name:"Switzerland",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɫªƎŞĞǇ"],["@@ɓśŽĬәșȬࢲFƔƧ"],["@@ڪĉό¸ŽǑˤċȠ͙ۋǊoǬʫÎƓŅƬƥȗӋʠĄɞƴ"],["@@ƾċ͚¸ĶǣƫÁ߱ʎϐl"],["@@̲áķɗˣŤЍÏɗɈǶƌԚŭ"],["@@ąʹSɶǿǟǑϱĻĚɘɳƑŉXēɎѿƸͰŖѰÓ"],["@@ؚŭѦʅγ ʥǮ͹`ω˪˞ƣ"],["@@mᇛ۩IȥŬٱą૫ƶąĈņĂ؄SʂĮĆƃ͞ҩΘIȐ˰ɎŸ̟ȿeĀŋ̮ȱάÖШɁǬŴߋʢƍȄºƔآʲɿè׉ħʖˀŤȿǆϐËѬˮȸƳ͆úƆÛ"],["@@ʊ˭ƃˁƁPɅМʂƄ"],["@@½ĳΩCȯȑŖ̆ΖÒƬÍ"],["@@ğë_ʄʾ{ƽƛ"],["@@ͥĺ˦Ϛćƭƽ"],["@@ʃ˕ɁźĨăȊАn"],["@@ıܝƙIįʈƀʪȣĝėˍН¼ȲʢƉŔ͌öĽĺɖǀ®Ȓ̌Ð͋"],["@@şƪâЬƲÜȜԑ̏ş"],["@@̙ʏР\\ƖʬŖˢم"],["@@űÖˮƻĩ"],["@@ŷÅȋĂ͈ЬCѧ"],["@@ƽƜĂĜüɷ"],["@@ȯãƙð¡ŐȦʴβƣǫɫ"],["@@ɣǑɲԕʍűԏהĮƦͼìĒȾʔőķ"],["@@ŧāƿ¦˨"],["@@˻Wɭł̎ாђčĖʟ¡ɯˋĳ̔̏ˁȅoƿ"],["@@ƻ_ĦðÖÏ"],["@@ŻĒĢÑ"],["@@ƾƯ̇ࢁݧ̝ʽ̗Ƭ́ǩ˟Ƭ؝Ʃˇɮхɯƕɇ[˟٩ЛЩƝ׃ǗȃÊىĬąĥƵǑEſ֋ǯŁÅΝ˦͙ğŁ˼ڧ¿ˉɞç߅ǙÛ˹܅ƋċŞɵVҏճϱŗˍrޙʸ۽җˣř֕Ʊ¼͕ƃŽĠǣȉʻjߩƊ̛ͫǣاͪȹŻġȌӧŝϡԜµ¬ĳďǟګQnōϐÙȺ̑ͭȹĬ̿ȳǧƨЭȫƯ̵χʓƟ͑ǄȝuɋȑğḘ̈͏ơďʉ˛[ýų¬։̊ԧդŌƜ×ÉܝЪϗ࿪eౢ̉ڟŶ͉ɑথʯǙࡓʩĕ݃ɂȧʂЄĮ¦ʑĎ¨ɄϞǘ¾ȈƉ ݝ̱ɫ˟хǼ˘Кɲ©˰ƐԚ׷ìǱĕɱø·ҍѭȤͼŊİȂĵŕ˻¿έ Ɂ҆βŇŴƀΤãϸǪȌȿęƹżňďʸŔƶɫǈ΁Ĵӌ̃ޗȭȟȶύĬɢÀS̐ܿǠɻ͎΄h÷ǈŎĠɺŃȐˣ˪ĵŶϐ˕˫ǩ˺Ȣq֭ˈʞȂ̀i̫ǰưϢKɏƲƆ΄ʉЕũČtڲ˨ĶϷVġϸৌūǿŸę˴ȋɯʉΫɢĸŔʔģĞö̉ƈ˘ȼŽͦşlµıгŨnȔҳƽĢȡɵȔڂҞţʈކĜɪƒüŐǏԟ̻ƉΨÂöʴŦvɑȫϱĔɆ֖śΚϸŒ˨ęѕǸèɔԾȴ¸ŞbƄԏɤɪžÔȘáʶˊʆ÷̶ØƐŢGşɄŢ¶Ȁǁñ΂˗ÔϴɔŴȋǉ·ƨʏɟ͏NġĤƊƿÄŽͰʜॾɖƤƺӆʙ׸²ЀǓ˼A̜¼Ÿ͖nĊДѾޮƤͲЪȆ޲˴њßҶʒμɋႀʢɨǀìвǟ؊ǲɈȄܞƈȎɼ੒ÇҞɤԤŅѺƴ࣠Ǜʼ~ǖȚǪɄరįՎࡨɕଢаŜľǺ¥ʌƖ®ĊÞÚÈǖν~mǂí§ÿ¬śÆ̽¢ſVŽĢĿȦǟÖ²lwPoħŃĻƉFgİĭhCÃǕů\\˽ɘƛ×ɯ̤ͯVˋʰܿDˡʦÍǾƖ"]],encodeOffsets:[[[-68903,-57115]],[[-68689,-56477]],[[-71375,-56237]],[[-72695,-56184]],[[-73103,-55329]],[[-74673,-54765]],[[-76170,-54192]],[[-70277,-53916]],[[-76618,-52869]],[[-76348,-52507]],[[-77109,-51896]],[[-76856,-51503]],[[-76909,-50008]],[[-76263,-50327]],[[-77322,-49933]],[[-76356,-49758]],[[-76914,-48985]],[[-76096,-46788]],[[-75399,-45897]],[[-74737,-45854]],[[-75504,-45460]],[[-75582,-44879]],[[-75543,-44386]],[[-80695,-34453]],[[-111902,-27791]],[[-68807,-23369]]]},properties:{name:"Chile",childNum:26}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŀ˯̻̩ǃҙ͓ʥҡȕۉˊ٦ԤϨċNðĪބƠΖßÂƌȦū"],["@@ŘScĭȉĖü"],["@@ĳaļòGÏ"],["@@QƜægÓų"],["@@ý§\\Ěâ±"],["@@ĵolǦĮ¡cœ"],["@@ĵoØŢı"],["@@ɭ¦¯ŊˆÙXĕ"],["@@˽´ʷɌնʿ"],["@@ɽǬKŮ˽ĚǙҧ͑̿݅͟§ȴ͉şȁ߿ŦȍȦǱهۏऋϏѷϣɋƍϣڻɽܝҡʯ¥wśУŏ³ǂӖǂ«ĤǈƔҗAQƆɀĂ@ǦʆĘЊӺυζėŅү°׏֛ࣳГΏӏ֯īɍƈƥȽ˳·ȑǬˁȼŇަşŲ˻ŗ̳ˮǋЈbҪϾ¯´аżݠ̻ΖÌԢŁȃ˭Öķƭĩ΃ń݇̇ȱjîǁƹ}ÕʃȵÛÅƤŧsõëǆőܗַɛϝčࣈЋԔ੏c̕ШȣÀǿϞ͝VħƻRˡŬ͇VϟȤПƛְ¢ÔƏܼпǾͷϭŅԅι̹ɉūʦ¾ŜƛՀƞΜ˙ͼĝӛ͕κĸoЃǙĸȗÁǊȫśiĺåƿǭŔ̉˳ÏŁĖƿʑǯuîĳȵʻjƗˡ˅ǉΧǡ»·ȢħįĹ²ʘϙΗɻ˗ÈǊơʌ°á΋êǙω¸ĘǽʷmËɽɫÿhǵӍLåũƏOǶȓΫ΅ƋHĉɃÝłǩŕƟÌ¥ǍșĉÎÛƇĉËȝǿͱƯǱªšőʫĈ˻ǙǝŜćȏʍXɁyͩ̌BɠčsǃǅȈˉG̳ͳų»ŐœʥũȅƗȏǜ¯ȣ̣Ğ˹ʓӯ¡ϙʟſľɍͥǲě«ƓǖŹƕȉϱÎðìʱЀfǸɀ̌ȳķƔkŹͩĥƒˣƭɪħHnɫƫ¼ßŕɱ¥ǳŬ΃͉ˆʵ°ħѮȖɸȧŊə§ŋĦʯ¡Ӊ΢Ήǫƫ˃˅ıȓĆǛɓˑȮŅǋƓƴ́˓ѕʬÃƛȭ»©£ʇRçĒkJQqs³uß©©mǲΩN£HƟqʓÞđaO±¡oMƋìɕ¥\\ovY®RÄÆlĪµ¹ǀЋʃϧRǧɸoɨ؋Ĉ˄۬õĠүĺθŽɾƄǼԻUխǙŦˌƩɚªʄżĂè͎ǆŐɺǆ`˔ɸûǬĸĮ®ԆóڌǕìŻęȣՖϳ˦½MęſÙċgŉėʛȅë»٫˼ϧÜԽ̳࢓ƇϫɝʱҍӁ¢׍rKºÄMlVzÊ¬ÜØ¯îRćgğHůĪǠTƎɻĎ÷°Oůą³GʱĐíNŹOĽTg\\|ĺ]xŃįrĻRéaåÉËą{ĭ©±ӷس· ÉÊaüæȶhĐŜȏðŵçŵői_B¿Ƚ`ȧÑ˧Nűbķøïûûn¤yrÛP»cĹĝãġÀåþ·]ůÍqd¾åŪåîå¶ɣCǕb÷p´ĤôAjVµNǵ³·NӉ̐­ŀ¡ĶuÂáïv̑ăΫή޹Ϝƫɚǁǳrȋ¥Ƌȳß­Ǉǔĥ®ֵɺbĬʃǤɓÜɵĊɿ˶̧áXȐ½ǆȲȗȚîƔy®̈b·ƒšɄŞqш¨Ķm®ƏĶëîå͆³ǢȲǸľÑҍǺƗ˺éǂ̂ȱ`̑gŷǡǯ¾ĥ¢bą¨ËWĪ£QĭœuÕA}fÝżƃÈ¾˪mÜeÂýņËĕ ÿdħZ¡Ū}~ʕÖėe¹_ǓêûB·]]R{vķäGjƾâĢ~¶pXIzÖq¨NȒźȋǺçܠ҅ǘɃĵȋÊėȺĠĪǕɖ|ƘIªǈìøPzĜ¤Gjzz¦°Ď¬Ä۶ʈ{Č°~VŜĚHŊvɾŮCĺˍǎE͘ņ¼áÞìºĈņîdäj¢ĬƐìâ`ԂŚĄŢIƖtȈǦbøäʦŤҨȈЈĮØĆÎhʴdfVXbŊMҜ˰ŜůƜͪĲα޼ń԰ԡƚǀļ൐˾Ɇǁ˒¸Ɍÿøʤʟƞ׸೺ࠤǹմDĴšטȞƠǆŋ֊ȊЂڦŦɒѪўĀQČȸªE¸ƋŇĳô÷ǒ±yãŷˤéĔËĔg¦ÇRćĚ¥ƀËâYŊñδvèqǼƫ®Eâj¢ÎQÚōôĺsdkĂųÒȁŬƹÔąìeÐ}ÑÚœ×Бÿ¤ÓJÍ˷ѕǺˡƢl҆ş۶ÉžDǬrؔù৒ӿ՚Õqȧǚïˬ֫ѴұېÎቚȅѠĠĒMζ­ӖÅͺYê]æo˂ʅƸ·ΘÅмï՜ɉʊʶ¤ǌ@ǿ̦]ĸ£ÌjÆ¢æØİҮȈݸʜ୶ƆѠոlĔdߨˌԜӊܸ˶®ŔѽҬиגŔdäeʤIôĈÿĠ˾ÕɄeǨ{âaÆdȌŐŸ ¨z˶ȚŠǀƮ|ƲȲXѦÌѢʀ´W¦_̌͸ʞĊЌup|AĎ\\`ĞDǎÏˤŰðXŸĄ[ƨWÌTØSĸÌĨsǢąƜqŤZŬmðDlĶ~ƼƽʖՉшÁřĵÍÄĻĸÍؗHΕ˯Å^ǹŞı~§bşbĝIśsœJ½`ïCſËåßăqɿǀûɌĪ²ŬÀVĈIĠ|ĺܦਸ৆ʻӠ˦ڸȈðǲƵńݺ৐ֶжÿЄӳÈvżݢкᔺɘৢ΋ɚÎӘƉ׊ֱӪ੗͐ͣ~̛Ɇş΁Ϙȝע̤ȍθ^הй̜AɑɄɕÑ˓Ȕʹ౞LȚȜξƄ˘Qۚɶ̺ĵċȗƾʵӭ΍ʱࢯΧգȿġÓ̩ƫč࣫ʠͽ˽Ϸŝɰ٭D׋ǁЏէƥĒǇ"],["@@ƅǦüĻ"],["@@ɂzDȵ˥ÎàŮ"],[],["@@těřlĦð"],["@@Ɨ׏ԛژƇδºцބ୊ҬȰ˰ʧѿຩ͝ҩ"]],encodeOffsets:[[[113551,20472]],[[113035,21600]],[[115348,22160]],[[115498,22121]],[[121020,25085]],[[122697,26068]],[[124162,28761]],[[125232,30683]],[[124788,32249]],[[133660,43557]],[[116734,22744]],[[116752,23053]],[],[[121250,25111]],[[123913,23164]]]},properties:{name:"China",childNum:15}},{geometry:{type:"Polygon",coordinates:["@@ҒӁĆĊTĸÙÖCŶŖ͠ŖǬNʖÈZÀÄą®°òŷt¸×¨C¤lpT£gåʱ´iË¤ſĀӻÕoOwfY¯qķ÷ƛБɣףȔࢍǤģƗ»ɻ̑¦ŶŭȉٯưЧ×ӒKܥû͏Ôí¹ʲi܏ĳ്և{ȆÙƼՒ¯ʔƳÈÿXÑĴmÖîÿ¨ʱʧƠɜΰëЮkǆàWĶvøƞUĚĮǰúýXÛZżN¢ʄnŊUîû@oɤșŦZǌľÂkánȐȭäcВƐǄˢɞɶñ̲ǓÈǘɐNpmĶLÆT´nnƞăȜƂºˋC}£ùFcĺ¹èMńĦX¢ªŴŚNƤŁĶL"],encodeOffsets:[[-5388,10568]]},properties:{name:"Côte d'Ivoire",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ɯˉϽީʵȭƼƣ­ӭƘ֫˪ˉÄϩ޺ޗĶ՛ĽӿˉȨ۵Ĉ˗ƾઇÕĂඉǯEgōț@ʱ@ڻ@ġ|KIlsNlȢńҐɵϬĀðĽWïƾƸ°ċĦ¤úǣT·ťΥƚçϴɏİIŽĭ²ƨЌʂܸатʒ˼p®hƐĲĖÚrdjkô]ĶBǊƼ̊ʉàáÖȫ gìZƒêŲƎzǊàÀǢƒāžÖǨȴǼ׌ƞˀƮ|ÎŊŴrÌÎΖ®ļɨŚÒЈŨŔĸθƐɦǊɢöÒÜðHºh̜ȌºքčŮȷ¸óøķՎƲAǼ±͖ѧȠց©ؙĒϷŦʕ͈̋உwɡʍ̘Чڄիθ٧Íɛ"],encodeOffsets:[[15852,7705]]},properties:{name:"Cameroon",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@͔ϵͼʛȢuʦƴмħȴȂǪsѤԕ˂ūàǯƞ@æőÌçŷ̯üǍį͡ϔƻÜȍહ਍Qˏǻͳşణ͉˧ÅЋɉǣdȡĶíǮ˩YٽǈԭBß˵CÁfëǚѡªŵZÓU«ėǃU¹vŭš¦ãĴȇöÙƎģŨĥĚĹĎƓĀɍ̂؝༓ʕyʥϿσǠϡܷɗࡡČȵӦҋΠÍnǆʌÔiઁȃǄ̑űƿ|ʅόƭöśˌ۵ʔΑծ˭͕ڡÚ֩ɢ»ΊމǣWʌͱɒÅģÉ̳͙ĳɗPɇrÙ}ýÕßJ«ÔmʖĔŜğմ͓Ӓþٴċବ¯pҽjɻFʫH¥m¾B¾ÀƾQ^ĝJʕǉ{ĹU̇ƁŕGǉĝƵC©{ɓǓǕ@͍ÆүƟ̫dÁQԁۼÅ˖ęƊÏżϢƇǖėÈĭዱRՍMƋPؙŧȩȰɬծ¨ÒnfȞȮĲĠ``^¤CɺȝȶĮ¶ɢȊ}ΖƼüųëŕȷʠ¥ંबȒآCܒ˚˴˶Ԫܼ֪ˎᓀΚފĴҮ_ܲЌҜδȤʲΜɓ˨̯༪˝ϊӶҬ»ݸˤضuϮ̂ઠȿɀŚ˦ù"],encodeOffsets:[[28061,5232]]},properties:{name:"Dem. Rep. Congo",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĳҭΙމˍᒿܻ֩˵ԩ˙˳Dܑȑءઁफʟ¦ȸìŖûŴΕƻȉ~µɡȵĭɹȞ£D]q`ÝÊ÷Ĝ`̅ƃНΕȫςխղĖȎɨƞƴƋǌb°̆ǿŢǎȇŬÊдϬÏ͐ê]ʹƄĒǠėǖ͋ЊçɦɎź˝ĚsǦŘŘȆ˞øૈԩ̶øҶ̾ɪĚɸȽЀˣ¢ՓƛҒĸ̼ઈ˘ƽ۶ćˊȧľԀʈҾŤ֤݌ƴ֚ƿ˂ļŖŧ"],encodeOffsets:[[19057,3562]]},properties:{name:"Congo",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@՛ǏʑЁχ̣Ư˿ŗם̟ԃʶÆɘųŌЙɴ˹çٙɞŹǜ˳݆͢ĔԜŗמۣߤԨŐ̈́ğPȿ̍և}ٙǌե̎ϕҡԹȬ@΄͹ˬকǥѦɿΎ̱҇ɏȨ¿šäĿඟWGձҒQƆ͡ˍÒӧŵa׽ξ̵ȠֻɧఇɹಃeǛƼÕƘµ~ͩ՜़Ëfã¥°ɿŒÓZµÂǫľ­X·gñgéÉǙkƋĢǋÒ¥[Å½Ã»©ȟ×؇N£°Ƒ¾ϔʥŚƗώǕªÃÒ¹xÉÎŃÅx§Þéɪ¡À£¢½¼ÙÁs®i˱Ųū³Яǒг̌ȉǟݵƄÑȰȡǜГŌ֭ЦƓƘȞȎǺÙ]ӪƦń̌tɆǨئ৔ƽi]ƒãħ§ʬĥƘƼÈ˘ñԐƉǴʈȲȁͮĎͰҁպŜЂȊŏ˾΀ʁѶĔƈѮӋÓįŚ^͊ůɚզΒɀ͚̈́îɼŢЎƛ¿ɚϾԐоќħƻőĬćɐҲۤsࢎԀŞʦΞȚϞíŀʏƵƹ"],encodeOffsets:[[-73031,12147]]},properties:{name:"Colombia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ð½ǏtĆƂ»"],["@@|ɳʇƼɌø"],["@@ȧŲÔ̈́ĀÔЯ"]],encodeOffsets:[[[44840,-12602]],[[45544,-12371]],[[44509,-12186]]]},properties:{name:"Comoros",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŏk±ŪƖlƍ"],["@@yƾú±¿ŋ"],["@@»ûǛ̰ʰˏ"],["@@ȌÉcŁȽDǈ"],["@@°§ǭxãęÙłʼH"],["@@ý¢ŠƵ"],["@@ǥ^Ƃø¤ĕ"],["@@śU{žʬî°åǃů"]],encodeOffsets:[[[-24891,15213]],[[-23738,15501]],[[-24006,15369]],[[-23467,16627]],[[-24665,17022]],[[-23437,17059]],[[-25484,17222]],[[-25773,17354]]]},properties:{name:"Cape Verde",childNum:8}},{geometry:{type:"Polygon",coordinates:["@@ʜԑӌթǸýIecgµƁði_¹{}W]i@͛¸GĊÅZǃƧ¾ėVũaƓĭŰɡȳʂȢʵĲƮʧɃǅƚĶǄĻ̄܁Θő˦ѩ˾Aœ̎ʉǅǿȧǬʹüȍ͞ƶϞȫźƎƐƈń֦ȳɴĎ׸ʻǦ¨ÒŎ"],encodeOffsets:[[-85649,11180]]},properties:{name:"Costa Rica",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ͭŋȋŸǰAğǘúŶɸ«Ÿˋ"],["@@ȽŘʈđ"],["@@ƋØĆĶƝ"],["@@ӚKİďж¢ʈƅҜ³ҚЕӸࢤӍŞQïĎðc̔ȑȅĨŇźĘȚɑ२ȁńĭŅɽۼÁ̴ɡ̄û\\Ľ߳ɡĚśīܱĆಳœԤҬŁȤݗĲ̽ʖȥҎՉMܻʌɉɂҥ¥űǎċƃӃĔȓƤ̰ĠŅƨݱbաϹѫ«ŉȑЅƕBż͕ÕҼǾʮˆʎڎʨஜǐ"]],encodeOffsets:[[[-84543,22090]],[[-79533,22479]],[[-79748,22659]],[[-83801,23719]]]},properties:{name:"Cuba",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@ȳèƍȨ΂ˏ"],encodeOffsets:[[-70401,12350]]},properties:{name:"Curaçao",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɚʡuÐ"],["@@çSƎ°å"]],encodeOffsets:[[[-83322,19814]],[[-81739,20186]]]},properties:{name:"Cayman Is.",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ѹÃýƌϵÙǧìƖRÀǮ֔ߖʶԩ̳Àȑ"],encodeOffsets:[[34821,35907]]},properties:{name:"N. Cyprus",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Ǩë϶ÚþƋѺÄÛ̍eׇͳҹƆōȌ_ňΊö"],encodeOffsets:[[33498,36016]]},properties:{name:"Cyprus",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@òFòrVņ࡜ͷɲŚçǫųήˑ̎Ŕğǆ҈ơʌ¬ÙǅȺŧźÂ҆ſɪ̱֟ɇÙǉ˝ƩԻƵȯ΅ǔУࠫȲ́ͯաFȟƒ¤í¼řêęGnП̒ȡìʓ˚ĺŚ΍θ@m´ÁzrȴǀϼĈƒhী͜£ŜȎ^zGS·oÆcFrXb"],encodeOffsets:[[15165,52080]]},properties:{name:"Czech Rep.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɭćȼ̶ǩ"],["@@CďѣŬ̸˒řªƩ"],["@@ʂŵŹǝܨſʀÂIǕǓęĚáМ§װȊϸʤϠ³ΚɧɶXŢʥͦĻƣĮɭCÉCcýÙáŻÿU¯ŀăɖŗĘį¥ć_ÑhÄyÔƗųȽŘǣyé^iƲ»~yx˷ñēŗIYWaqEÅdpT¸yH]ȍ¤śি͛ƑgϻćȳƿyqÂ±n@SQ@ǤōǾɑĹřʔ˙ȢëР̑mĚHŚéî»£WgIŁYʣK]SYM¥Ɲñ¿ě{ϣǏǌǻ±ƗƀÉKÙaÑc}Cõ~ÏulCv`bsí~Џ¤YQN¿cw॥ȏ½JñÔo~DhŋHépƧKTő©ƻñdîœ|A~Itur¿ō ùpȋ©ߛɄŗTsUĎN^MH[W[åWqa۳GBӄѦۈֹƮ׷R͡ʖŤ̄ʁİÇ¸y¼NðȌ˦̇ʤ°żǅŀɮİÌʬȿ̒ܐƒÛĨʾʦʋìź˔ƒՎĻǐǰǠ؊TČȉŘmôƊƌǱļИӲeӠʩЅʰ͡Ě[ʞɿþ˜Ĩɿξ࣎ß"],["@@ŦɦÓŽɀOˑė"]],encodeOffsets:[[[14539,55214]],[[14039,55688]],[[9974,56142]],[[8508,56102]]]},properties:{name:"Germany",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@˕п̩æٓčKצӰپ~zv|OȌŏÂ¸Ŭ®dAĺĤȤ˻xɳثѿıX¾ÙϬüǠõ"],encodeOffsets:[[44284,11776]]},properties:{name:"Djibouti",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ÿké΀ƴęIɹ"],encodeOffsets:[[-62752,15615]]},properties:{name:"Dominica",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@͆ívŅʷ§ΟŨpƘʬ£"],["@@α§žŲɴĉ"],["@@ɉhsƎɾƵ"],["@@ĥĎˢʰǻͽ"],["@@͹äæǎ̰ŵĻ"],["@@ŠЏ˽íϡĬŅ̐چĂ"],["@@ĩ¢ľÈë"],["@@̓ˋǖƯ˕ĉ̻ǁǩΐ̯dʵѢ̀ʰǢǊɑ ɪ̒Ŵ̠¯Sɻ"],["@@ƭTʨ¼ĹÏ"],["@@࣍à¯ўНƴࡎѐģǼȪƮ¸Ŋû¶ʼɗHȃʓʭ»ƹǀˮɒۄÂѼ΀ծƀ˝भզƫơǛι{ŕ̇ɻkĶçεɣäȑǽȏɺÑPţ"]],encodeOffsets:[[[11635,56210]],[[12851,56285]],[[10303,56204]],[[10992,56065]],[[15450,56343]],[[10901,56945]],[[12970,56931]],[[12871,57124]],[[11318,58627]],[[9974,56142]]]},properties:{name:"Denmark",childNum:10,cp:[10.2768332,56.1773879]}},{geometry:{type:"Polygon",coordinates:["@@ċøǜǜk~ĤŊ״ÆٖɳȦǼ̹юw̻Åcõ߂ǳ̄ʗ̇ͫȻǊ˷зH׫ȏƑĴ͏ÁΉՙǉŜŗɠHƐxÊsÐġÚÉĄ»ð\\XĶHļĴbÐM¬ÕŌƈǬ"],encodeOffsets:[[-73366,19657]]},properties:{name:"Dominican Rep.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Ţŵ׳CɃēăçĳėȵؙչj̥˾ҝȢįȄїװЃĮϛÂȻʜ१ǫĩж޿ĢୡƗϣŖי͡ʟɡҬ؟ɊحŠėʒÆےȥϰڝ␣ᕧ൩୧ഝ˯ܹſȣĮŖʶĿτ௏Ѻ×ƪϏɚiʆ᣽ၮ᜿༸ἡኒ@̸@Ȳpیত֤¸ʈǎʊcĎeĶ]TÞæƊЎVҲŀžĒĨĜǲʤǄòɀÖǦÖƤĢѮǈǧǔG˄ÎƬÊTĄYƒd΢Ŋ|´ƘÊ೶^ĦʺªźÝ´ĝÈ±zćæ»þǒŇȶĭஶ˯Ȃ¹¸yØҞâ਺֮͆{̢ˤֆʀഺƂ͊ƸڲĤࠖ@ҌȻৈπφƓʾ¤ľצȣ֔ærēͥ˃"],encodeOffsets:[[8405,37396]]},properties:{name:"Algeria",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@šm¤ȰŦîƠ³ȇȻ"],["@@āà¬ĳ"],["@@ǅn˒ǖŋȃ"],["@@ǩĄVĂɚĆÜƣšħ"],["@@ƹbƆƾ|ǣ"],["@@ʙÂòĢǨƣ"],["@@ЈٷęǁȍáʍpÛŖ̀ʪȽɬ¹ɞƗtȢļøč"],["@@çüÈSě"],["@@˻_KÒÐ£ÈƇƒƳṬĉ]vw`YųӍѥԏӷί঳Ι͉ЫĕÚʫ܏ˁƧđ¥e³X¡I±_i½kġåB¿|Ëô³ØĄ]Ō½»ÕYïQ¡~ı²čÀÙ·]ăė÷D¯S¸úńčFIa¦jº¬Œu´rf¥ˢåǂ̤ȘȞӢĥіéЗĕQpǠɹ̑խπƠˬţܚ̊ȘĊɚƢǗɄμѲՈূΠȾ֮ХДŋȢǛÒȯݶƃȊǠд̋аǑ"]],encodeOffsets:[[[-82054,-3044]],[[-92594,-1372]],[[-91564,-932]],[[-92502,-790]],[[-93620,-471]],[[-92747,-342]],[[-93462,26]],[[-80803,1283]],[[-77091,-109]]]},properties:{name:"Ecuador",childNum:9}},{geometry:{type:"Polygon",coordinates:["@@քนƕǥ˱੉ƯɃϭʄљѪֳ஀ǥ˿Ҏࣅղ֕DʓʦΟĢ҉ਠᆣӸҋȱcšǌ۩҂ˉբՍ⮿AªŸï°ŝǙƗOᢱBᢳ@@᳾@ᴀɵࡦɐВĝրʢːȚšіĜଖȱʖƑࠎƋҴȁܞͬʖƢǘѺĠ̡ųςæŠψŧ̬êȺǙȳŢķǅ˦ǗưĜÅþ͘ȋࣂ¾ҀǊ¢ĩ"],encodeOffsets:[[35068,31958]]},properties:{name:"Egypt",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɐĭΣwêļgŋÌbŨƺǋ"],["@@ąħ´ä"],["@@ĳňԉˎ׃Ę˫µ¿Ē½ ¥@yƷĕʵµÕHǭȆǿò·Ö¹ÁťĥɁ¹œßƣqIZȿʠțƳǳŏOŗ£eCʎkǊoǠkǊŞȖ̈޺sˠúƨEÈhż\\ªDĞgȮj ¶ưȢŔЄł\\nj¶v¤ĚǀƴΦޛɞএФڟà̄˺ϥࠆͥКՙӲͩż̿ľRɰ̙Ƣ³~üêÙĭģĹcB«·ūÁȋŐ{Pu}yõĔÃüùĠƵĤûŦāƄͷˆΣО"]],encodeOffsets:[[[41105,16073]],[[41039,16469]],[[41922,14319]]]},properties:{name:"Eritrea",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ąƏƧĬɮ¤"],["@@˯ɯwĉǰłƆʂM"],["@@ŝĄÈðżýåõ"],["@@ëȓȩŧȻ˨ڂȤǯǏ"],["@@ŕħƅɔĬȔЬŬÑПɥë"],["@@ƓɞÒðǞĵěȗ"],["@@ťŨ̢Ȋ]ȗȧā"],["@@ǁA~ĆƄă"],["@@ȅ]ŀƪǺºçƭĵ"],["@@ˈý͛ͫɭìċƂǛÃŉĀڐͰ[Ư"],["@@ΩĮ[Ė̼}Êǅ"],["@@͒Ɨ¥ƿƈ¤׶ʩ৾ğÆžؚȽ[¡ģîJƠ¾żÌĖÕমàХȱƩޟЕࢥȍˋȩƪčʛěޡँĺϧ΀ʭ؇ωʙҟĀśԙÏˁƣЃԡ቉·ʵǱйéǃʍɝğΑƌ˿ϘƖɶƭçϽϔҕċҤФϮůMȥɶ̄ԊҍԘΘjŤĮâȊŗŪȈƨı֔׺ѮˣŠÛɨѹɍŭؽkħ˚ѕǑġƐǒƚĿXðłçȔȃĘǢʵƮ´ǔްɞOŠɄĬтϊƻ৸ú૖ȕޘĔҺŭƜêҎŃҘä"]],encodeOffsets:[[[-18317,28478]],[[-15770,28823]],[[-17597,28695]],[[-16726,29062]],[[-14537,28846]],[[-18262,29178]],[[-14045,29606]],[[1633,39601]],[[1480,39853]],[[3221,40746]],[[4397,40799]],[[-1837,44450]]]},properties:{name:"Spain",childNum:12,cp:[-2.9366964,40.3438963]}},{geometry:{type:"MultiPolygon",coordinates:[["@@צƝӿȁ̝[̿ʉǈȊʱĜgȢيľ"],["@@ȟĠȊUVĉ"],["@@͋ŗōƤ̕äӾŦɖą\\Ə"],["@@Ŝğ׻ӱÌӇɶ̍ȣÑţŏ¡ś͕æηßȟÐ՛ˎ͗öƋ®շŽăJǦОΏó̅ĂɑʢƠňȽŐÀɴӶĄʠƲࣂ¤ÆĲ௺ǁࢌ"]],encodeOffsets:[[[23161,60029]],[[23904,59956]],[[23474,60239]],[[28685,60912]]]},properties:{name:"Estonia",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@ÖGʶ¶ƸĖz¦@¾Àđˬ¶ׄėԊˍĴŇΤН͸˅ĂƃüťƶģúğÄûöēӯٽLץٔĎ̪åɟͱƺͭ˸˓ʪст̵ᠴ࡙ࡀ@ᢋᣭߝͽăϩǯɥˏ۩ƻĝę­ūBɋ_ğcŵCǙĨɋǺޡΟ©ąŏƩƍķݗŦſJȏ\\ś~޳ԘȽƂݑ´ɑ˸MŤnžl¨±ǀΙj½ @Hʅ̬ɯڬիӆƉʄݻ͠ʂҌ֢NĴĐJޔȞؖϾȒȆǘőƈĲƲߞҸڴϤŒͰాfDŘ¤ŐPǴȜƴɀʟYrJÞƤ¼ŔĤɂÄŦº¸ÕȀñǮȅ"],encodeOffsets:[[39354,14775]]},properties:{name:"Ethiopia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȬÉ¯řʃĸĈì"],["@@ų¥ÙŠȎù"],["@@ǖƋƛłŒ"],["@@ɫªͦZĹÃ"],["@@ҩı̞Áʩ̏ǶʣֆŅզͥޟٵࢌও͗ďĝ́ȀēȇƩЀǟ˓ЈȱSƭљʉৄѵ̒˕̅ͻహ޹ལࡓਖ਼ĽǲǉǙΟ¦äŏɷ×ďÈ৯ʿࠛωƛƬǦʋǀƋŷʋyĺ̐९ǺƜ࠶̋ͰĥـюʦėƒٲĘǴ˴ࣈؘٖͤ߬¸ºԴ֡ǈǂЇ­ϣϔʎҸ̇ˌþʚɻƺдڇΎܙźିѠόJ@ƢѸºۊҭގÑѾƂࣴǳڴͬ˘מϠȊԐQԶƄ୨ͥǈǕХʝĶŽ"]],encodeOffsets:[[[22708,61820]],[[21966,61983]],[[21727,64760]],[[25445,66551]],[[29662,70679]]]},properties:{name:"Finland",childNum:5}},{geometry:{type:"MultiPolygon",coordinates:[["@@ѻŭ͂ǀź"],["@@ăÒ¬òƃ"],["@@ʾɽÜέױƷՑƾµǶȬ˘˂Ŷϲb"],["@@đAĒƮ@ƫ"],["@@s@²@ê@ŞĈĩȥ"],["@@ÏĊĞyÑ"],["@@λϿHġ̦ȔCȍё½ǻĀǏƿʧÛǫǂðƔȆSغ͎ϔĆ@_"]],encodeOffsets:[[[182772,-19429]],[[183654,-18536]],[[182559,-17788]],[[184320,-17370]],[[-184294,-17331]],[[-184247,-16898]],[[184320,-16556]]]},properties:{name:"Fiji",childNum:7}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŤQÑŷǓĜł®"],["@@ݲĒĴÉչҕ˙cęŹ˩¡ɳŌ؈ʈ˿º˲Ö˕ʀʂĕ"],["@@ƍĬǤwó"],["@@Τ¯éƅȦùZƂʄƘőŷÅƚ«ݡʥ~ƍҗæņŽɯm¯ĥɅƤàǬјȬǌȸȆ"]],encodeOffsets:[[[-62483,-53028]],[[-61733,-52697]],[[-61554,-52629]],[[-60262,-52500]]]},properties:{name:"Falkland Is.",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ιÆŉǺàż̎EƬșǛ"],["@@ġænȲŌċȋ"],["@@֥݇ɋչˏˉܩŦ̥ȟʫòç¢jqZXRNB¦ÖìŪɄ¼ĖtƨŨ`ŀƤ®ĄsƲˇΦŇڂҼ޶ࡪ˿ԞНƝĖüƌũ²̫ƦʄƦӗ"],["@@ȥw¬ŔǝȸʊýĎɕ"],["@@ãJ¼Ĥhĭ"],["@@ƛ°Xʘǐëɛ"],["@@ǍC¨ɺʤȿŽu"],["@@Ð֧̩س͇ǠäĦɟȘâƐœɚȾɀмĘ¦ʮİǱ"],["@@ñƥȞǮū"],["@@Þ_zY~mªQÀR~¾\\Ǝ͢ʕ׸QֺƭѥۇAӃɭƅǧ´ƗÉ¹Č¯@akiwŋēŏėkmƗ±cƣʹǩWĳkƗŁÅBÁQäJĨŞò¾ĜŲNưk\\ȿŀĩ´¦·dȗƹ̘̟ÉšϋƟ̜ȫýЯΚǓˌvŧͭޡӋϡŁ׫ž̅Ǽ̇ÑکǄյ̵ǧɷƆПভßĕÖËŻHĎšÇPÕؙȾÅŽ৽Ġ׵ʪƇ£¦ǀ͑ƘʺƀȪ࠸ƚŊÛØýćƒܮ҂ҁȯϾͽȸƐvĩӐ՟ǢɭʜȒƫŀƚĤʈµțĂѹBÜƆ˽cĤ౱ǔ̯Ǽ̌ŌȹĴˮ\\БºôȚƚદȆҐʯȸĤϊÅĈĪѼǃŸcͮɭКԈGĶʕࠌûӤŸʋº¶ǎࢸʞ̆ɈäՐܒǲȠ̅̈|ƔȻ˔¯ĀƝТ¹sɳͬUɰǊ¤̩՞ɷʂx"]],encodeOffsets:[[[57137,-21851]],[[46265,-13288]],[[-52892,4159]],[[-62286,14843]],[[-62700,16272]],[[-63067,16392]],[[-62799,16620]],[[9708,43833]],[[-1206,47006]],[[5929,50728]]]},properties:{name:"France",childNum:10,cp:[2.8719426,46.8222422]}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÐýəzǊÄ"],["@@qœƹvĬƗϓˬҔµ"],["@@ś«SŴŰć"]],encodeOffsets:[[[-7359,63631]],[[-6790,63722]],[[-6559,63753]]]},properties:{name:"Faeroe Is.",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ōY£ŦƈLjŗ"],["@@ÛåĴƤý"]],encodeOffsets:[[[162115,6978]],[[141459,9729]]]},properties:{name:"Micronesia",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ķ̻ґՔƜˤ¡ȾϿęɷ̽ɩ÷ҵԪ̵÷ેȅ˝ŗǥŗętŹ˞ɥɍЉèǕ͌ǟĘƃđ^ͳ͏éϫÐÉгȈūǍȀš¯̅ǋaƳƌɧƝĕȍڃݺԿҞ˸éοƸ˙϶ƸPǽÐȓѠʂ˕ƶÞǥ¨ǆţµśì̥רȴć̌˴¸׎ĨƷˠīǤŴϣĐȅɌƞĦĺówϤ^zzJ²Iz£`wĒமEѼG՜hŎǰFඊÖā"],encodeOffsets:[[13613,2214]]},properties:{name:"Gabon",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƻďʽàɀĜȺë"],["@@Ů_˗ƟǍɄɆĲă"],["@@γ{̛̈ˉɯʁVїɪ̪ƲſĔ̢Î˨˘زŰτăˌ˝ƉƩʞnĦƍǛ¤Äɵ΋ȅǗ"],["@@ȏ\\ȔǴɕ"],["@@ÖȡȿófƔǣÙ|Ģˬĺ"],["@@ďà̆Ȏȵʭ"],["@@҇§ƤǔŭĸƸ˼Žaū"],["@@ƉɠŦSdɋ"],["@@TǇϴ½ɵǧïƀʍBρȪϤȘƊƕ"],["@@pű˩Ìʺæ"],["@@̗ɩňÓҵɫčÄȐĠȓɒ̠N§ĦҐǜś"],["@@đǍٷ̣ěƮɷȭؚŌૢKʘȓڽދ׽ǕΦǰŧֿȍΩÊجťϘÚϞĽЮ˧Τܯ८ӯķă˒΍͕ņ͝Y̮ӄ̙îƧʻɇȠąɼƄиOԐǥøʅŽ̝̋ůƗνÕŜƃϻęࠬđaƱοɋ։ų࣭UՋŎèÛƵÕћmIĹߵĨͽëɳͣѝź҃đ͟ɃчX஺ड़ࢪ`נҊܡ̍ԇǜ˿mŦúʛæџĩɡĪ]ǬߺˠȦɜķ̾ӧğΒ˴ۺǒˤãƖˆį˅ǠȀԺˍMͻ˶ĘʲάưћI΁ƕܡÆÿſķÒŝȌиѠǏ̺ʌÆɓĦĜΫɭŦʾ˛ǝũԙƥ¯ȐϾėɆΠנϷȏЗƦ͸Ŭŋ¦ʦˤțŪǴƘƍĺŘǴϜ@ɍǂÚƚˤpQʰӬ­তŘǦ]³ĵ"],["@@ɜĻҍÄlƆɆč"],["@@ɌýȹӇRɴ̻ňʐ¦ǓƌǪĬ²Ó"]],encodeOffsets:[[[-1091,51907]],[[-4297,54602]],[[-6367,55387]],[[-5227,56780]],[[-6275,57273]],[[-6113,57155]],[[-5916,57697]],[[-7423,58487]],[[-6292,58886]],[[-7378,59068]],[[-6347,59765]],[[-3184,59920]],[[-3130,60447]],[[-1339,61991]]]},properties:{name:"United Kingdom",childNum:14,cp:[-2.5830348,54.4598409]}},{geometry:{type:"Polygon",coordinates:["@@˂Ə®³SïûÑēẂĜڱɠÁuǹŏsYƑe؝Ýէuȑ«Wz~nmhûųĪítÒ^ÓNÙMaOoWčĳғ²ďÁRß~ĿvÇhǈǂ¾ɞɱׄշͺ̽êПɰÆ¼ÌӂgʚīŢɲĒµĶ³র¥ȚßRö»ЀŧÄƈ½`eEsUlmÆmŎI zĊlȐòƨɠōâŊjTÔuňöeƶũȂLŤloýȫH}ӘǷǾĉȷǃĸǍ"],encodeOffsets:[[47417,42504]]},properties:{name:"Georgia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@àāă̇ϼ͍ĭիàğşʘÃҡĭû˂ͻƽڷŔǉĝхǰͯϚ̧ȥɻׅ«ቕ࠵थ˜ʢÄ¼ɼƘǣĤȓࢎɤפƜВĸø°rZePxÖpÿӼ£ƀÌ³jʲTŊU¬¹ľ]ôU־Ļƈî΀ຌXΒéˠȪȘ§"],encodeOffsets:[[-70,11383]]},properties:{name:"Ghana",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ħǥǔƷ̺ǆȊʳκ˂ѪƵͬȎǬ̐¿ȎЕGȽ΢ʳɣ̛ˢeÐщɔƏbƅƏǃdБȮãmȏânĽÁYǋȚťpɣŅüŉVʃmO¡WŻÜþWùĭǯVě÷ƛuǕ³ơŊȗΧȑ̃ǘĀʎůդɛǈʁěéøï§GÛV]đĳ½ŇLs\\Æƪʌī̸ģng\\Ex¾ŜJzÙĄʏͶőŜq¬Ëf՗GșįʉnŉǋǕ˥ǝġĳǋǷiť̸ɉĬBͤŉȍɈ͍ĜƵʪbǼëßĉȰģóƑÛPĘª°äƒˬºÜvàFŸŀÖÀ~ŤOƚZȄÒDȊM¦ßŏľ¾Ìń`òǺ¹ĬHæլlťŊ҂ǉࡔÄ"],encodeOffsets:[[-11662,12703]]},properties:{name:"Guinea",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@½ɸžŒɌǣࠤǖשiǻĕǭȴࢬAèŠˎîמʷήŴŕΛƟݻːŕƇѷÑiƗۃEĩ÷"],encodeOffsets:[[-17165,13378]]},properties:{name:"Gambia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ËovŒġ"],["@@Ĺ°Ɯê¡ř"],["@@ķX¸ĸÀŏ"],["@@©ĻĩİƔL"],["@@Ń_½ËǰƙN¥CȉȃÑʽI¿}ĿÕŷßEu·ÛƓ˫­á«§ÒŌƗģLŀƩ¾ƮĽ^΀ǀƁöƵÓõĠĴ͜łܧƵlŶǽiǃŒêƼǉɱŴ°TŖaĖhƦÚĈ^ʰgɞ¬͈Ǆ܆GʆA˰AGåºīñǹ"]],encodeOffsets:[[[-16277,11349]],[[-16501,11325]],[[-16283,11741]],[[-16370,12168]],[[-14090,12557]]]},properties:{name:"Guinea-Bissau",childNum:5}},{geometry:{type:"MultiPolygon",coordinates:[["@@Fѻ஭đ_xy¤±JyIy]Pnõ¼ĽrΞڎwŠlȤtMT¯{Ġڼ@ʲ@Ȝ@H՛"],["@@Ƥ@ŋȯ͹ȓUƼɬʶ"]],encodeOffsets:[[[11605,1566]],[[8946,3849]]]},properties:{name:"Eq. Guinea",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@˄ºµċȶŕୂW¾ȍѺǊŻʝଫíûžȵÒܷĆmɸĒiÄŢĬĵ"],["@@ėŐŸȈ̗"],["@@ťƎĔǍ"],["@@ŅzBǶѠɚŧ̳ȳŕ"],["@@ĥĬØå"],["@@ǅČúú«"],["@@ɠƠŘ}ͷš"],["@@īA˒Ĩǥĥ"],["@@ċ]ŤŎŅ"],["@@ơňĪã"],["@@õāŢƎłjȕ"],["@@ĉN¸àí"],["@@÷ÐŴe»©"],["@@´Ęɞˑŧ"],["@@ċ¯ƇŎɔÝ"],["@@É£úžoę"],["@@ȘďǭÃɛâȲò"],["@@ĘąƥǗǆÔØǒĽ"],["@@{ÇəɦɎ³ũ"],["@@ŰʿȥÓńĉ­Ǯʜ¦û"],["@@ǝtČĠũȄ˄Ç˓"],["@@ŏuŞɘMȡ"],["@@ői¯ǈǂƝ"],["@@ĠũԒƏŰέˀą©ť˗ŚƟɮ͝¬̞͍ͯÎ͚ƊƂÕ"],["@@ƺɿęviď̡ĜƒİǙđȓĖ˒Ƥȶ"],["@@ǋzȧʲɾNãėȚȡ"],["@@åƥěðƿGŮ͊a"],["@@ɑĞŪŴƫ"],["@@޷ɤʽŗˇøͧȉˍpĔˡ̄ùŌƯίǰƻ{ȪǷiűʁɒȧǜ˷ؗЎtǈʗăϫآܣơ×Nƀȫ¤ŕƲŏлƛֺǥβʹʄÝ¶œIϳѥ̜ϷſϠρ˟ęνǬμँϋ̆ʏˋ̇ҬĿÁɅʹ̀ĆʴүъɼʰɊkƔŸ࡬̡˲Ɣٗʲďç̕²бùšƒwħǅV˿Ь˾lNŒͽL΋ʔġȀûĄćÌlBWÒÚOƨŰAÏĞ@zxXvr¢bǞªȊ̎ŲżÙŸRÚԤfªxŸ°ǶƲǆxʺĢlĸ¸ź̺SìÂŐH¼TĒYČB͂ÖlRp¶ˤEĐ~EɌǑȂRŞ£ĲÓ֠ÌŦÌh¦Uò·ƶllĀdĶwɖīǗʙƍBʅʗȑ"]],encodeOffsets:[[[24425,36389]],[[27829,36317]],[[23608,37059]],[[28512,36792]],[[26095,37267]],[[27096,37464]],[[27597,37609]],[[26480,37674]],[[27669,37847]],[[25886,37959]],[[26159,37855]],[[25113,38017]],[[26013,38318]],[[26655,38431]],[[25863,38503]],[[24941,38479]],[[27469,38719]],[[21390,38713]],[[25592,38666]],[[21108,39305]],[[26721,39136]],[[21184,39536]],[[25267,39741]],[[23978,39894]],[[27045,40274]],[[20560,40380]],[[26049,40943]],[[25369,41590]],[[26664,41705]]]},properties:{name:"Greece",childNum:29}},{geometry:{type:"Polygon",coordinates:["@@@ƢĞĝǯ"],encodeOffsets:[[-63196,12301]]},properties:{name:"Grenada",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĩķ΁ĈӪƼ½Ƌ"],["@@ǧàǈĦ`ǅ"],["@@ǁwŗǨȴǊΒÛ˫ʝ"],["@@ּřŪǝත̉ԕŮѲ¾ƓÚँƢŎȤϸOяǈϬƸࣚģӆɕ"],["@@ύ`ZĈδħ"],["@@~ɥۇǗ͗ČறÇΘΪ࠸ڬƘ͘Ĺ"],["@@Οò̼Ɯ¤ɍ"],["@@ҥȑխž৔Ô"],["@@Ԟ̷੹ƻˊܘö"],["@@х͚Ǡɰʦ։"],["@@ۓĘࢴȟË"],["@@ࢣėЏŎॾǠјušǟ"],["@@བྷɞѩʸܼచǯ¬ͭ"],["@@ↂʭ㇓Ƨď㞆ƨպʁ᝚ȱಇʹ㏱ƍʵę̀ī෢Ġᗆ¡ܘʧৄʾ๠´ĜϽབྷەᰦܦᆦȯ૮͈཈ຶōࡈȍෑ̳૛ā§ȕቍǃۖūҩƧ೧áଝî؃ȷ঄۩ᅡѧԅߙܰǠ଺ǉpŹ׍ľѧÑϘȿ޴ūܜÉЙဏŤॅțӏĚΣ÷ؚŋ͞ʩ୒«ԂϱcӝߩŒএʓӫĆҎŽ׬Ģľρώ˶ζ@זέçəݙAͫũ઩ĜX˒͇ɛƾʽ๤ţš̗໳ȉݕňޥ̮ѧƋۿɀؖ˹੩ɏ৩ƶؔƿࡩġǶÏኔˠަ\\ᄄЭɍڣ๳͈ҽҐၷ˓༂ƾƎˍϽȡϜøᗨ׉ѩ̣ÀœĲƸҠȖߝܣÁ«ͮɇΡ՗\\եǘӹӖ૕̊ঢ়°gÿਫ਼«Čʟࠍțද΀ćßǑࡃɇᏚfęࠟțƪŏ̚Ǯ఼Ŷ༦ǵ୐[Cûعŏ_ĝۇ±łůҳEBūݥƭĆāԗɳڇǵᙡͅԳ\\ϗĳͷ¸Ġő̱³ଉ͂Ǝϑ࠯̩࢕ࠅࠫͻ֭ǆȦʧؽʹŭƪśǻͭæ̅Ƿқo֨֞݅æͼĽ̛͙͉ĘˈʡခŽԄǹ̟ǕˇýۥªĲțʼ ЊλԋɏڣÜҦƫΎVÊͿȋǇɯg˷ϝϥPˣŜҒȣɱȡࢃaڐŵƙΓǲʝЍŝȨċ̵܍˝ȱ݅Ò׬ǡúˣǓŏՓĈʠƕȽǭ`¨Ā̅Eǂ̐͛ɍ١ƼXƜͤîȀǨԽȁ֓ƞăƊɬψࡇ͵ળ¡ΊȔԭNƶгṷ́ˀûʦҪǄڛåÐȠٟȬjȾъ˔ԅȇ࣡ېß̪ઌǪȏK¦Ė७ǭĻĐʮɒތȖМȷĥɎͩÀϋκȪ͹нƙŊ֕ґ˱޾ɹƤޘ͔ѸÀՋ«۟ɗǭňοHþ͐ʉÒᆖ۪ົ֯х¿Ķє͊Ƭն°ࢳυǰðʄॎ˦ႬȅҵƔǞĨڝÍӣĊଢ଼ʋӪք଺ų˖¸ȸʮࠧǕহǛ˂κĈࠚƣ֬ŰŚŒχÝƒ͜ڌٻڈڰ࿳٥Ȳ࠭Ĵѡɺ̬ĶନÍྰ͕Ǭ¬օƞÈɞѣƂيQ̛İോ¾ĬɸऺǶඛýʜȔэҲɳϘϿҕǉ´Ǘ؍ùݽƼɺҶЎȶحƩ¯ĸ˺®ʳČ֪Ĳǀʨ˭Ťǹç͉Ú͊ˌۅȚɠǜ̶͗ࡋGѲĀUǮϲĈኻۜˈźɡƶᖟЀᄓǎҩœϵČࢿƽыĞӷċѷØˊȣఉø૭˨଴ɄಷîiɈޙƗѹǨɺŬཔj۾Ƹุĉʩʹ࠹Ɓ޷àؕœহȜΞŢঁyಝ͌̄ʎےŢᖂȞԮƲᒪŖࢄ۞ԨĊᖏmǧʶᒈԬژ¶׌Ɨŀˢ௾íӾ؆ಾ|ᖖѫᕭզ◴݆̂ƿĬѕ֚҄ᅈΩ଒p୧ϸݲö⪴׉ЮӴૉ͈ᶰÇюÎ♣ĠǤي፾ȸ෬ƍߌȚᇚ˫ӽ̺ࡶń㹪Ê"]],encodeOffsets:[[[-47377,62241]],[[-37920,67105]],[[-52237,71222]],[[-53996,71624]],[[-52915,72556]],[[-26042,72624]],[[-54820,72746]],[[-56337,74539]],[[-18432,77218]],[[-19028,77868]],[[-73387,79182]],[[-18035,81742]],[[-45941,84054]],[[-30671,85571]]]},properties:{name:"Greenland",childNum:14}},{geometry:{type:"Polygon",coordinates:["@@˶DʔŁRƾ̮ȅÿáˍɉɷǩƳãáǧºǑQ¿īÝÛĩǯsvůс˳ƕїǊ٩¼ܛҲÜΘ^tr ĥȺĖƦŀǪȄ̮ʬBϢ@ɶ@ƴ@ÚDYøTĊø@­¤ĕz·@°sÈ§ÞɟƆη͚ǶAǠCHӂໞAÑྩ"],encodeOffsets:[[-91374,16270]]},properties:{name:"Guatemala",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ýƚȐƾÆǗʻ"],encodeOffsets:[[148216,13578]]},properties:{name:"Guam",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĽǳĠŝķƧ͋{ǥƛÒŷǩӇ΂ש̀aĘѱвۇȆāУsËh¯ÎuRǗ§ā¯óœ¡£mǛGßğg©ŅʱÊµ_¡ġKŻơGµM΅Ʀʯ˖ŋ CĄÓ_vB̼œöĕ˞Šݮʬ̄Mx¿ÀıǢłϗƲƄҤŵƀċhÿ·ĽWǉ÷gՓפ]ôĢàäÆoƞB¾}ÈmÚ¶ĚάÖ̮Ƞ~øGg`ĵbµm»X¥²í˘ǤɸИȬĞt~Į´d¶ƻȲۈЋׄ֩~̟ǉխɒϮδÅϊϡˀŹՉ"],encodeOffsets:[[-58567,5682]]},properties:{name:"Guyana",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ȯǵǪӰŗŉq"],encodeOffsets:[[75477,-54412]]},properties:{name:"Heard I. and McDonald Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ݷȱĝxǷŲĽµ×ƛűɩѳϟgMOǓĸ³îʓɽ]țhĽWsaW¡PÁȓhÿeyÁIå[ùǹ¥_ɹYŵ̾˙ĺÈʖazÏ¤÷Jĉ_ƇĞʡŗF]¨MºO^ԝ͢ȯǈǈRÀ¹ǒâǨƴäɸǪˎɊĀâĆyɎƮ౤ąΞƞ¥ÐфĽєøΐƿʤjиΕǩĪřw`ûƘMƖƣɚDůŬɶŇâƉÄÌ¥ɍ`Ĺĉč"],encodeOffsets:[[-85642,15234]]},properties:{name:"Honduras",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŘËͳøɜk"],["@@Ҍá˱mǙĐ"],["@@٦˱æŃ׋̪ٹǾԺı"],["@@ʛ`ĎϊÓė"],["@@Æ×ƕĤĐ"],["@@ƧȬhɞƀщ"],["@@̟ĒĶŪȪȻ"],["@@ÇąȌˏ¹īͪƿ˱Ù±ɣƝ\\ƣǎ܋@ݧǘ͙»ȥǧɝƲȫU©΍̮ȵǔͫࠊ֭̈́σÅËֵϢёŶ΃oڥոÁì̊`Ы˦ŁВʯǼȥϝп˿ը̤­Ю®¶pŢŶpK¶áŦÿƊlƀ£ŌSĈvYOÐäÝÖ̀ňpĺQÄÍ¼IbкǮǸŸĚUöq®]ƮËļÝτ˽иǥҨƨbĎĂȬr"]],encodeOffsets:[[[18031,43796]],[[17051,44029]],[[18092,43927]],[[17189,44310]],[[15741,45030]],[[14836,45732]],[[15166,46057]],[[19360,47035]]]},properties:{name:"Croatia",childNum:8}},{geometry:{type:"MultiPolygon",coordinates:[["@@cÏɋêǗƎЈƧ"],["@@ƇǫÖŋN«aÏĻĳĵG[W¼ïÊăĢÙtÏșíâýÊĩۇÝёČ̥½řůӽ΄úƦƆூȑΎŞ|ĎϵͬĜ̴؟ʀȂƊӦdΖſ͖¡²ll}ǛǛČ÷"]],encodeOffsets:[[[-74551,19229]],[[-73366,19657]]]},properties:{name:"Haiti",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ĺDˢɯƾqĜƍ݃χ݅ਇ̣ūħėȑqd£`ȑh÷_ȗpǉėًſčāaƧҧзǦσ˾ĽÞƫÌ­^ț̜ǅL̢ŦUͦȞŖɉŜժäʤԬȣ߲dÊǴ۬Ȉ˚Û͐ŰƀȚ߲tˆǵ̪Ê"],encodeOffsets:[[22663,49568]]},properties:{name:"Hungary",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĹVhŘѴʌ ƧЁɑ"],["@@ƭʚĠīť"],["@@ùŐľƋ"],["@@ٮө¢ãœƙɑóʙĂҙΨџÊŃǀ˲ŶլÈÐÕ"],["@@՟՗֯ǕţÞĤǈŃĤĶ̒˞ɰȸñƌȨВȺ^ġǲV£ŭŝoĜʣ"],["@@Ň°ä¤č"],["@@õĺŜŤwƧÍ"],["@@áJ¾ʴĢ÷ýȅ"],["@@ʗǊƈĴeï"],["@@ŃǧÔÅ̅u͏ŀȂ_ʶ˺Ȝˊōßɷ"],["@@ŝǝǿêʾȶ Ł"],["@@̹ʙ˕ȸǪí͔úŲé"],["@@˧âȞŖĊǷ"],["@@ÅƺƤĝȁ"],["@@Ќæŭفõ¦ȜŪ"],["@@ʞÑăíǟÆFú"],["@@्ʋȣìïďʗeСŐ՟±ďƈÈɺآƮۮ˱Ѭĺ̚ơѸ˘ÎèƉƄäøȇȉʃ"],["@@ñȶɒƀ˃ǁ"],["@@̴ĐőǴİǠ̷͑Éòć̓mċƴǃƓेɑɭþ Њˢƒ͸·ȪʇƎaɠŖΛɀ¹Ǌ̦xŀǏ"],["@@ɎɃҹω÷ɶωǎũǲЄiǺĸʚõ"],["@@ĿïĕȦǢatœ"],["@@ˡʃγÄȯĉƪ˒ȨͬŔǈă"],["@@£ĢĖc±ý"],["@@ȩŋիfδېǶńЌ¤Ȁʱϟӟ"],["@@ǱDrˀъӔþëûÏg̟ʣ̻"],["@@șîƠZºć"],["@@ş¤ĈÆĩ"],["@@őFOĈŢč"],["@@׽ĳͳŶŢƢǚhނNĊñȕŧ"],["@@Ɓfjüʲßƙ"],["@@ŋtŜúOĭ"],["@@ǵ΁ț`b̦ôXãɦΠɁ"],["@@ʘǩ֐Ï̈щ฼Ɓ΄ѰŚWǬɁ̠ҠȵϞĠʛŪé@ȻȀėРÇӖú˶ƅmԥǒ̫ૣОӗĹঙĔݹƀ૙ώғʏŉ҅ÖՏɄۡĔÄˆ˓ŀ߉þĬƞĨįƞˀŎZè˸ǦǞـƷȆǎ˞ē"],["@@ƓSׄ¨ѯ"],["@@ŏPĔÞ|í"],["@@Ł½§ʲƪȳ"],["@@ӵɯʉɬŮ®ƪřŀŖIȖʈƨɻ"],["@@åïʘ֜eɏǋ˛"],["@@ɍƀɖGĥ"],["@@ăĆìA"],["@@ȟƴĘƺņñBɻ"],["@@åıɿÊĨɀwʬ˪Ű¸˅ūǡŋ"],["@@`ɫşØé͝ǸǍǿÕſɟƕP·ƦưɺòӼȆȚĘƏ"],["@@¨­ʧǂɀœ"],["@@ƕĩęǔȲ~ī"],["@@Ɲ«ºļĤÏ"],["@@ʡą«ÒͺƸ«ƃ"],["@@Ɵ½ĈĈØ"],["@@ȳŝJҦǦǦԭ"],["@@̮ʭFȯҙǅЅȀƃƸˆٮf"],["@@ťÔƘAqÑ"],["@@ՀĽǆšʒσ¯ʋ߯Ҁ˧CĿԕȀ̅ǵ͑ʔȗ˵qɲ˒̚ږƸĕʺŮɪã"],["@@ũɕ˼KǜɌǹ{Ƴ"],["@@ŷȕǓŠȱĻ§ʐĒ̖ƞ͆ƕÚŏéƗ"],["@@ǁáwʜǺǹ"],["@@ȣðȚɬˉ"],["@@ǉ̀ºĐŐЏ"],["@@ʶܑįûĆ՘®"],["@@ÆɽƛÛѕƲԬƨ"],["@@ȀMłƑݫŅóŬôǘҪ"],["@@சǧ֑āهʪ"],["@@īĀŰ©"],["@@ːڛϠğǧˑ²Ʃ֙ȺǳզշŜ˜Ͼł¢ĬǡhǔǄzŖƏ"],["@@ĩpƮÌǝ"],["@@ӹÉƕŜɄɎь˟"],["@@tǽǔŸĦčġȥVďƭmʾɕʃážĆɀʰV"],["@@ȹąZʖɤ­š"],["@@ēDŔƚ¯ç"],["@@˯ƘȍΌØȒɎbˬ֣ēų"],["@@ǿ¼ğʞ̠ͯ"],["@@є×М̱ǯĵȽƙ̘č¹əȘ"],["@@ťh¬ŢúƉ"],["@@ƉŴÎVģ"],["@@băȏoǮĴ"],["@@@ǋDᲗħͥĨƓBᇳࠉޢĪɮƳƫҥóŗǨ̝ɋǖմ˹˰ΰ¼˥°ȵǚɜàΧўţͨàĘƥŞŎɃuȴٿѨ։ń՛ʎڅäѡ̺xľưbԵOĳŲơkʝ˴ƎΦş¡ɷœįХŷƍ˫JƇ̔ĬŸıɎٽьɔĞдğϺ̐ђƽ®ƤŶºħĈŊǈ߫Ɲս~ʅɄýβ՗ƖʡǐɒÈʺҠŸӸ̈ϴ½ԬʷфeŚđŻǀ̣Ź̝öӳɞѯpɀŨØͫŢrʧ̪ƅȢp̺̌Ҁ؈ִƘČâ¡ƺֶ̞သܫ۪ćŀƉȎE"],["@@ĮōȑǉėǐǼň"],["@@ĬűÝšɴǗĳ×řİƉLƎƗŤrƒŌÑĤô"],["@@ŉqNȮƐKǯ"],["@@ɳSôŌǀķ"],["@@϶ũÀş˫Ï͏ɲɶɏůċ½ŮśÏˁƂłŘϚÌ"],["@@űAİʲĕȎȆɍíɯ"],["@@ȐęҷĀĄǨȤǍ"],["@@ũP¢ŴĈƃ"],["@@ҋĢ`Țиȕtĥ"],["@@ĝpÄ¾í"],["@@ϷƶpĘɲùƖǓ"],["@@Ĭ]×ƧőèþĞ"],["@@ÞƕñǽŗȀƿĢƔȊ"],["@@ŭðo˒ƾƍ_ȳ"],["@@ϚЭģ·ŗãȦǕĨ˛ДɶĪł×"],["@@PŇЍɸϾů"],["@@ϱѳ֣ƑЧlɥƖဝ©ιð͗ɓƭϵ¦̟ƬˁɶƝŴˣК~ΪіͦĕʼƨԠD¹Ć˼ôǪß°Ň³ȏЋĔշջ͡řǩǝʝb޾ࡻĜʗūΛπϵƄhr˝ŷªԗǙÝʕϗÖďƮŌШ؍Ӓƌ̔CΔơĘȍkͣʁƨُaއšѹŶϏГ\\ȟĭƇêǓʠȠڔ|ШſѬЇqŃŞë֪ʸȨȖҬYѬǘфǠȎŐƱĹٰŦň³ǖĖǦ̚Ѷ˨įɠͰǶÚ˔ëǀƧ܄¥ͶơȔĆܪûԒ͌ΎψƐ\\ļƷ́э"],["@@Vʏǿ³ùʐʤ´"],["@@Ű_ðǮǌĬ¾ȲϺƠ^ϻ͹ȕţ̎Ʒʐ˫ޕɌăƣúҟϔէ͇ǀ̕϶bѼƝ˖ÐȦƯʖǠנ;̘ṷ̋ľŋ@̵̝ˉäƓ"],["@@ȏŢƸaĿ"],["@@ƃcÝɚ͒ʦòĻÅȿƛƟ"],["@@սʞùƜƮÂѬ̽Ž"],["@@čiČĨBý"],["@@ËǘŨïÛħ"],["@@CËéĮî¡"],["@@ġŶŐqmŃ"],["@@ūtɬǂʟ"],["@@ōƽ¥óƒȢb"],["@@ǹ^ŦĘȭƢȸȠŨșÝʝ"],["@@ğāʾ͗؃ÇʒǑLțɒŉœň·½άяɷʓ৐࢛ϙƗ˵¼ʅȌ¬ǭȁƅȇг·ҹĊϓկϝƣƮ\\ʃБϧŰ@xśřǻɂƅǯǱ\\̋ƏúǇʧϿਖ਼ӗƗژãėď@ǮěŁŻèͅƩāɔɡ§ʹ˂¿ɇǳœƃá˅äΩșжŅƘٝƳčÚÎòǑĥŇŊˉÙƇ߸ŗŜpӴǏɜѹǢĨƚɁȺŖΠʿ˚yҴȆƢĴķ[ÆɌʬΪɂĘùōĬɿܐمԄǂתɨŎĜʞʒĶϼPÂŏԮǕɾǖԠdˌѺɪͤɮĉĤɖňŌǪRȌ঄ƴžռnӰЊƕ"],["@@ĥĠǀûðǢƐɏĕɍ"],["@@ࢰoלړ¸ˑ஦އږ࠳̪ȭ¹ʜǾ^βӃҘɁ̶ԋբɛqƍϧǗڐʢ˪ȍĪȭ̝ȩoƛĖēÏġʂʻ՞ŷžٿˢɯǍуːȌΨSծ؍Ǜяòǿĉˣ²܅śڷͱɦɣǑωȎ̻éW٧ۚઙެ·Ҭңδ׃ޚ˄ҟज՛ܺѕʴӁౚݧдġЦǗňΟԌѱȮܭ܄̹ԺlʀͶш˃̠Å"]],encodeOffsets:[[[125900,-11171]],[[124809,-10844]],[[126379,-10549]],[[122893,-9599]],[[128070,-9740]],[[118385,-8980]],[[125929,-8750]],[[122332,-8950]],[[126278,-8555]],[[119441,-8820]],[[127270,-8529]],[[126900,-8471]],[[142229,-8589]],[[120378,-8568]],[[127566,-8336]],[[130892,-8293]],[[125730,-8818]],[[134003,-8518]],[[121081,-8517]],[[118219,-8350]],[[132955,-8145]],[[129845,-7851]],[[130478,-7806]],[[141861,-8472]],[[134478,-8191]],[[135150,-7374]],[[131759,-7355]],[[123674,-7289]],[[116577,-7275]],[[118147,-7138]],[[107779,-6799]],[[137766,-6596]],[[109951,-6151]],[[123421,-6449]],[[115425,-5950]],[[135995,-5991]],[[137981,-5843]],[[136117,-6043]],[[104825,-5610]],[[126594,-5398]],[[124972,-5568]],[[125589,-5395]],[[126137,-4660]],[[136777,-4347]],[[126201,-4211]],[[131649,-3671]],[[131355,-3762]],[[119219,-3547]],[[119095,-3960]],[[129906,-3161]],[[109452,-3077]],[[132869,-2934]],[[102836,-3259]],[[110805,-3069]],[[102609,-2806]],[[102240,-2399]],[[129081,-2510]],[[129049,-1832]],[[133482,-1731]],[[127969,-1746]],[[138726,-1630]],[[111568,-1658]],[[108591,-1709]],[[126564,-1745]],[[131229,-1700]],[[126170,-1199]],[[112344,-1209]],[[138205,-1142]],[[101544,-1820]],[[134146,-1347]],[[138633,-667]],[[130356,-799]],[[133762,-541]],[[124790,-416]],[[144357,-2672]],[[106982,-342]],[[130629,-326]],[[130304,-507]],[[106227,-356]],[[133953,-4]],[[100823,-543]],[[107294,-180]],[[105764,555]],[[105501,765]],[[105907,1074]],[[105643,892]],[[106522,1209]],[[107096,1246]],[[104886,1014]],[[99822,1501]],[[104952,1495]],[[127887,1020]],[[104150,2129]],[[130799,869]],[[99671,2126]],[[131537,2102]],[[98779,2417]],[[111501,2976]],[[108299,2932]],[[108837,3233]],[[120483,3360]],[[128674,3519]],[[120714,4287]],[[110916,3779]],[[120397,4271]],[[129861,4131]],[[98809,5355]]]},properties:{name:"Indonesia",childNum:107}},{geometry:{type:"Polygon",coordinates:["@@̽ĥ̤ˬZȅ"],encodeOffsets:[[-4517,55486]]},properties:{name:"Isle of Man",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʬ@ĤмӼþʜόώeլԟ͚ƺ̃͠đUz­ƓíȘșKąuū¾ǅWǫ̑âʀ˵ɶĉɔÛʄǣaīֶɹĦ­rÓ`·O¹yiŕĿœāŭƛíƃ½ůBėoĻÁÏqėĽhƀěĈ³Ā¯¼Mbn|Î_Ө˃ָϿP¢r^¤YÚƨĝƐíƬ`¢[ÛpßҲůä^ÀjĖQǐ»èeɚĪŜÁɂãň¥£\\Aĥ¥юɳĐsɴČâWªš´Ǵ׎ǵ˄ĶɬǏłÂμ\\Ŭ¯Zz´ƀ¦ŜGèĸįƄS¢ƎԬFĀxAÀ`ŒjŶŶèȐï±СbûÊÉ¸SeķákĴǵʒũƺɈÏp¹ĐI¬YƮnư~êþŠͦıҠdŞÞ|@À¹źIƞ¨ĐP°K¨hֶӠ£ʨҎϬɢࢎƈՎ̰Ϧ×٢˿áƷfÙǞɵC¡ůdſƎԙࠩԵšƕRʃċjiF{şɫ˗ʽĩȱŴįǭϯĭƍëŷǿϙ͡ŔȗeŁÜ޳aũ£Ŀˋê̝ùųęǥ¯]±léĂçv·ĵ±[ÐÍ՘w¦đǎy˂ñφǝIÅ\\¥K@óRÿƷǻEȟǕ½įǪÝŋǕӼǄͲ̈́ŨĴ{Ǿǘ®ĴĠɸBĢp\\ŒêĂΙȎ஽Cб¬ɅÖ«XYpȊC͎ŵɬĉåmŃɕɩ̼ÉBfƉ{IɏƑȐůeåW®ďęĥƵƛȷ}̘ɱɢðƁö[É̙į@ëȏ¹ãBùKĕǛ]£M²ÝÈÃâsĦMƊěŦiæ§VM[ĭ[Éō˟ÊĽÀµvȥƢoy˿jǯŊ̛m˳ßBĐʅǋúħƇGΞĉĮµϱśƃŦŕǑÒŜϐɇȢǾɅ˯ͧԻƵȷƭĥɓŐͿȋ͗̽ʳŋ őףȏßHPǈɋŋÉƋɖ֝с֕۩ำ৑č҉йȗЏPʳӡ˧Ř̓ƹȫ՗łԃÉɟǎؑųȔÿěɾȳħ̵֟כƓ֧Ět¦šUܽѯÇׅ̿äț͢şγÜҷƏȓǵŏэҕʱϝȦљӲȓҤçЎŐ͙êEĥ͖ųƐЅੴٹৠӁྰεӤů˔Ō@Ƈƨ¼òŷ¤ǡ̄ԍᓶĆіřƫĔRȂƦkǗîĵϾȐۼãϐǅɈĤČķSоʐӍ­ƂɴƭHƸɌÖՁļåċȥɡƢāǓȩ̿ࠫΕʱDӻ̔ঁ৒æŬȎŵݴʌˀѢųű֥Ʊέöԁ˼ȉ͎̠ɾҕɉÍɔİÒĊnĜbĈAŚCHʨXxh^lNhIzDvìgÈ\\ÌcĬAǬPĬEȸěʘĺǈÌɎÀfQ¯p«ä´O¨Pbææh°C¾B~ÙŢL vwÎÏŔÕƞȍ̢EȲáÁiµGƷtƑǠ¤πǜէɌĈ̶ˠʦżȄĂż¤¨ƆúîCŠïÀƗĚ¹ÜJʼİ̞˞þfî¸ŊƲƚƐ̎¦°ҾɸВݾάƆÞÌ ¼QºÐbêĢîˤ̼@ŊÈļÚO]ýÖbÚºǢY¸ÑǄ`ª|®æÒĔ¸˨ŠÊ`ĬâŜWN"]],encodeOffsets:[[[77130,33061]]]},properties:{name:"India",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@¿µáƠĆŏAƨƁ"],encodeOffsets:[[74232,-7554]]},properties:{name:"Br. Indian Ocean Ter.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ˋÄɨt¤÷"],["@@Ňŭˎ࡛λӧŜĉӅñÙøࣽΣ̏Â¼űϵŽޣġǲǨԃãѬɰدÙδ˖ЗZÒӮőźɰŦ܊ŎǧÜƹĵحÅϜɆƔɲ̴Ģӫ~ӝƦsŖͬ²Ƴļ˖à@Ø˯_¸Țȣ¼ĒౖaßĘЬʚՋ͘ǪĒɎԜĢRʇ̌ͨ̈Ņɍũ˧˗̡Íƀē̩ƱјɩʂUˊɰ̜̇δ|"]],encodeOffsets:[[[-10186,55208]],[[-6367,55387]]]},properties:{name:"Ireland",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȝȃեĝϜȂIŖѮHû}"],["@@͂|ొٸ˜ʇǽƃǂȅʝƑԄϋɶrüқǰʑ߬ǋ͸ͣӰɫ࣒ķೠʸŮ@ȣÝʔ±ѴڈńǚʶКɰݠ|ƚƚنƈȱނʵҰdТơźɏԞʑɺ˙ٺLþϝ¹ǵČğTȻhÇE³ƋõiΓŇǝgĥã¿S[uTuvańŽȷYƁǱ@͑ôĻ˾é̙̯bťŒͧĴ̍CçƱCğHǻ|ƑYɎȢ{˄Ăą¸ǳEƅwçȋțȑȡЧщǈǏİķب࠷ܺ́j͵}҇ΐY|Q¼±HwÁRǕQ]±wcƟܙƥÓőĩXʃţ»{ƛuŷamÍ©McT·ĝqʡyë¯MĵÿؽƲŹżġĿߍƜ΅ÃȽŘ௳Ȧʣࡒʵ˞ԡ`ଝՙїǈҕ|࡛ԈǹʘϏǪχʻɤǻԂǏŨRǊǙìsɰЗтćɸѡƛѷʰǒŜȅé͕̻ƃËēȼ˅ưIѲ˥Z@ͰØǚÜǌīŢĻŸáÀƵʰfƏOҩ̰ǉĄálƻNgfYª@¸¼ôJ²ŁƼԻҲŪȴéɊĤŘOȌȲȘĶªü lÎŀşǞÈŲŦæVzė¢͡BΏǌķ˺©VD¹¾ʍ֞|ŰȃŨbɴ͇ǔȨΪŵªuϚȽҔ̮ǖ̆Ȗı֎էՔŇ"]],encodeOffsets:[[[57537,27568]],[[47222,39811]]]},properties:{name:"Iran",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ŗPģêɉũȳԼұłƻI±»ó@·Z©heɞyǊăҪ̯ƎPeƶʯâ¿ļŷĬšÛǋ×Ǚ@ͯ˦YJѱˆƯǺ˕ûqċfǳìƅ{Gy˭ĪзąȯϳŗǅÙóƋƍƧ൝Ŋ߉վ෗ਚഃۀğ˻²˗¢ҷèŮĴĜǥɣ࣊ᇴࢴǪ˸ƆܸµزĶŌ̺êӐјĆhưĸĘĦTĀÌSžӪşƊGƪúĐWgbMųä×Ü¢ǢĲÂE¾Ooʎ֝º½CªUĸ˹ΐǋ͢AĘ¡U{åťÇűŠǝĿkÍûķ©ȯȗȋ"],encodeOffsets:[[46733,35404]]},properties:{name:"Iraq",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ߔźѫɋΜėŇɋκpåǱʴÈҤĻƿƏǦˍϏʙ˹H÷ɃϝƣݽťڵʻধŷŋƫקŇಙŲʝŌäĲȥÉуǨఽį¥Ɍǈû˔¢،˸ӷÅĒǜ̢Ĥџỵ̈ɚଏ³ǧŀਦƶݬDĦŞؕR֒ɂࢷŐ࠹ơӛİȒø͢ÛȡȨАćˤÐҟČʶɅŘ̀NeƂθǗ̠ƃƤGƊуŤϴ®ՍÔƠúѦBࡨͻʅʅeѼϧ˚̶̌ÅȺѼ׾˧ĚʶҌĞעϙŽΤ͠]̚ƭͮȨ˄Ý̔Ð±ɂʔÜɜQϊʉ"],encodeOffsets:[[-15916,67818]]},properties:{name:"Iceland",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǷÿGkcȋÉNå¤açjģlŅ×¯Ĺ¯ƫȹWqsPclMÐlØkÜÉɅŭÏȟӐĤБྣÍßփบĒìDÐƨƎ£¸NPǎʮβীʬOϨ̚ЛŁǷ"],encodeOffsets:[[36647,33521]]},properties:{name:"Israel",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Бٗǒ͹Ƶ̯ԣĢ̝ʲȥEء͆ѽĬǣȎʤ̨ƚů͜Ƃкǯ૤Ơ͊ŚàÏ"],["@@µċ¯ŮĦ¡"],["@@ãĪľç"],["@@Ƣ͏ƋșåएыÔ÷ɳˉȗɼňՒŝàẦɿ̠ɘ̈Áր΂͚ȫbœ"],["@@rŧʍzɜĮ"],["@@ǰFgeqË½¥M}PmlYúLÂǁƘģģýûƸΟ@޵˙¡ǡʢɯɳȷŮлঘշϒݍѾϏՆʻ࠸ɛ͑ႮܛьηįͱɟĬǳ˾Ͽ¼ǹƌɃͿׯӾ̯º͍ҵǕÑ͡Чϻ˩EßĄȜӢˌŪ\\ƴѣࢤدȾEȘƳǘΧÍĶŊΓêʻΤթPϩȎ࠱یзĒvŪϫʹǋ˝࠘டЌٕҝљğŨͮˋuΙǔþа̛ȬόƠÊŢ̗̠ȘƺkÖoǖ֒ĔöȬŴîÈÀÔôǗ̢ƙP_£ÃƨƕÐ`ư̾ĎɶĂ]zBĐƧ¨SºAŰ¨Ćl°KĒĽS¢Teŀy¶xMnÂv®¦^¸LȠÏi¸W´PÎ ŊvSĎAĠOÐ«ÎeĊKÈPj¾ÐÞĢǂNĂ^ȼWͦĆxOJ[p¥Īċ¾Ù¸µú}ׄċƶ]ŜEǮgµ[×ƍćlė"]],encodeOffsets:[[[15951,39138]],[[8683,40006]],[[8485,42025]],[[9864,41864]],[[10645,43887]],[[13744,47322]]]},properties:{name:"Italy",childNum:6}},{geometry:{type:"Polygon",coordinates:["@@ފʱŞȧ˃¡˟ĞùĿƧíƑƁĲͿɵʞʛĪļƈ˾ØԦÃ"],encodeOffsets:[[-79115,18901]]},properties:{name:"Jamaica",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǻ¯`øǜ"],encodeOffsets:[[-2067,50413]]},properties:{name:"Jersey",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ůįYӱŭɛÇԱŽɹÍɍÃ࡬࠯į³ǋāgcacãƗ¿őka׵Ň©ĥƑīƟǋŝǵŻऱŸnǞВྤĸْiƂdȌHlǸĀӬ̇ϒÏ࿦ࢲɤࣉǦěŭĳ"],encodeOffsets:[[40085,32896]]},properties:{name:"Jordan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ǩúĆƐ«ç"],["@@Ɓƙ©öǾŶQÑ"],["@@ƥS^ŜƈŇ"],["@@͡ǭÁʑų·ɊԌǄuƂǸHȕ"],["@@ĉNPƜúƩ"],["@@ïåǝĺѴɤȥʷ"],["@@ƩDµļĠÞŪÛiŁ"],["@@õ Ǆ͔čγ"],["@@ŝȂ®ãý"],["@@Ĺ\\¤ɺƄhǛįġ"],["@@ȔōǛwƮ"],["@@áĤĦƲÔŝėŷ"],["@@ķǘƺßř"],["@@ķQĲàğ"],["@@Ѯ@ƅˡ̠g£ŗżȡ˻Ε˕ࢻɡxƱ΋ȭø׈ķXĉŽ͓͙Ĩ­İŮxŴőƘN˒ϐѼţ¦Ʀʹ̄ģÓ¤ɇŶD\\ŵʉÎʉǙ¸żŭˮˀǫΉ͔|ĜȠkeĬҐǔĴǚȚĀȦ³Ȇɥ"],["@@Ʈȣ¶Ô"],["@@ÿlzƨļµƉ"],["@@ɼ{ĐͿ̣ǳǏ̡ȉǜ˛À̅ŵʷѣơ÷ƋTÊŠǷ\\çќ͉÷Ԣ̌ʖ;ɐƋ͜ìlȐ̄ĖΆû"],["@@č»ÍĄƜ"],["@@ĝïƁü˲ɀÑɋ"],["@@ıbƸˈÅ˩"],["@@ōqĪö Úŗ"],["@@ĳPrȾɈȦ¥ȫĸSȗȳ"],["@@Ȑsֳ̰γưܥÛˋ̇̕á̟̝ÅūǃࢅΫݑʦыΓǷđˡѕɡc͎ɪʐəÔƹȽtɓǛŲȋiƍρȽȁ̘Đ¦ƹČѽѹթÌЙçǴǆʽ¾ûďtʬý^ɫ̹̈ȳuġѱū΍ԫȃÙȱÈ˙Ϣwʀˆˢ֧Ůб§ɹƿۛȋС±˿àƕУͽǶۓÛ{ʊĬŌ̌j೎ईࢶGৌȬŸȅ̔mȈĔǊƊẘՊՀŪՠЖŞΡͻİɽȖëɤǖڲɢӆՂДɊςڂɚزÏȘɅÆɨ˸ó˴̜ȼÂ̜ʄOĸ̫ǀĢƶ·ł˖ύÇDĪŔɄʖŏ"],["@@¥ĴńÝŻ"],["@@ų¤ĀĐŅ"],["@@Á¿ǒĐŏ"],["@@ݠǁռͲȕ֑ǚ̡аìމ͕ߝĳґϳǉΗ୕ӠύΝǣɵǴȓHŻɟۘЧŵÉ˷àɱʟʥí÷ŤĦ˰ɭ̬rʮӔ̼̊ظĻȤČ͘ৠƫ֢ìȶɪĞߒ۵߆ҭ"]],encodeOffsets:[[[126862,24863]],[[127277,25105]],[[128455,25337]],[[131337,27293]],[[132095,28387]],[[132560,28886]],[[133758,30990]],[[134103,31127]],[[133511,33202]],[[133205,33004]],[[131754,33571]],[[132175,33629]],[[132600,34021]],[[132911,34559]],[[134323,34410]],[[135441,34760]],[[132383,34943]],[[137583,35079]],[[137577,35312]],[[138172,35112]],[[132491,35179]],[[136572,37073]],[[141665,38730]],[[144619,42366]],[[142829,43091]],[[144687,46203]],[[144459,46421]],[[147277,45176]]]},properties:{name:"Japan",childNum:28}},{geometry:{type:"Polygon",coordinates:["@@ķȤøÍŖøĤ£ǲ»ǢŸłEŶRÚ^́ǋɉŋĵ½"],encodeOffsets:[[78898,35953]]},properties:{name:"Siachen Glacier",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ǁèĪŨÑŏŪÿ"],["@@ѝɑѩڥťȉЁŌ։ƟǅחȝĳŢճCࠣǺ׷೹ʠƝ÷ʣɋĀˑ·Ʌǂ൏˽ƿĻԢƙŃԯβ޻ͩıŰƛ˯śNқśĨűĢγ½vȍƴĀbᅛǔ˹řUӝTûR§GěđՓØ۳˰˕ĝˣŉęʥyğÒƹåVă¢Ϋ´ďÞǭɣâџÄȷ¯û`Ɠ£̧ͥ®ûທەӍңWɇɿȳźÆȂƩƘਏcǯۆЩVúࠢʟħʳζӹͼϳƍਡÞ৻ŗࠛݸᏟঊᓡһBᶡҗsӣ֚؝̶ࣃƿҿ̯ĒࠖוĠʁʐˏ`LʶЃװнŐáŖƂƌ॒ý҅͠΀ξຈuΩȮ̤ԴÅ֐ӱŔ́Ƌ߭ʀકѝҏÛīƳׅɦbŶͶdڕ޸ֻĄǃÁȑаͻưͤˢ̂ȕǼòˤҒ֊ɶjՊѩΤÐőֺזȪƦȚؼǦҠτ̶çƲƟ݀Ƞ̐ȑ٤@ڪχΒщòЎ࢚έڲξѨβƧͮǞѨwѲ̳ӎ×ÐŅʐöȸɦ̮ƝѤbϔƒƔ϶ࣹ˜ιʂ߸ͺȃ˶ɰʠ࢈ΡȈϯº~ƄʲÞұĊɄͮזÓᒂπՄ͜ʄᖮ̔¨Ƹ٪Ȕ৤ȏҲŤϖץý͗ފMƴĶɖ͑ƨǊԜƩМîͿ˭ĎɓϞƠвōČƆ٦ȺǼǐ୴̒ƵʟȝNÂŇୀهᅂᐳπƞrȦʌĢͤđ±ȇˈWàǻࡸWɤƒԄĐӴȁ͆҉֖ƫȲϏߖĭдɸ£ǵגБ"]],encodeOffsets:[[[51389,45932]],[[89419,50264]]]},properties:{name:"Kazakhstan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Κi²ƿk§mŽNţɒ˷ݒ³ȾƁڒяŢćŜ}Ȑ[ƀIݘťƎĸŐƪªĆޢΠɌǹǚħŶDĠdɌ`ŬAɩ͙ɭ͛̓͗^ᶻɪ̋ƬȕĂĻVĹɟȿ̓áPȷɇɧΟůęҿɉ˛̵ݵɥǷഩ৐Ϟḭ႘নǾδɀɚÒƦˈǞƬЌBŤYǚå̘nÀϩָǎO°ǌGŁďäj´­hſ˦ǜǘǠǜɔɊȨȠǦǞƸƲ¶Ņ"],encodeOffsets:[[36174,5494]]},properties:{name:"Kenya",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@·ƭé¬¿¨ɛ×Ūȓ²\\Ú[zl֝ǫʡǊৡ¿«ʪúz¨¸kÈTIÒE~мƴՐȓ͢ɾ˂͜œςʌɐWZŴǞ©ѺʬЉʛƤÍGåsuXKþa°£\\ÁmÿnãPiĮÅĒ^³tôwO}Hŕ»¹AáWǥ_Yʁ|ȿÔŃƨҫƞ֨ϬƦ ǒîHpgjçā³ec­ų̈ͦƔ¤ü_ȸ°Ͷ½ĪEɤãǬĒÝά³Ą¡æUÑƺzĠĚʦˤŊ˖Ğ۴˯Ք×ĜĒ¨HüQӞSŘV˼ᅜǓÜġþ»Ôµ¼ÁвÏŲġŜħŉWaeUʳcÍg×ą࡯˵Ǘččãa÷ȇǥƕsšJăřԁ á_ëīƏ¡icãíćŅë¹Ý»â͗ŅǍFĹˎDɽŭŉuęGśÃÅ|ċΙǇƙƁcÿ«Ã¯ďy£iyH£ěOy¥ěuë[ƉXéc§}ďŁYϿr","@@ćXÍ`]@LgÐÓ¬Gø|","@@nƀů³ÎeFÁìăAaå¬SüC¨R"],encodeOffsets:[[74384,40332],[72361,40812],[72916,40850]]},properties:{name:"Kyrgyzstan",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@ұȲʃđĮƴȆǃɎƭȍǛOwҠƩ˂]ÉǓ͐f˲ɋȴƍݞǮt̨ҪʒǐೢĄʜǛ¬®²\\TFwl¹·ĖùƴǪÏüĝÖ«ƌE¶ņyàûŖsä|\\Ƃ`t`ôSòWü¼°Â|{uÈÔ««iĀ^rC°ÂS BƸƨôPĖŢƿӟɰׁŉ΁֓ħĕƱљ˙ʉ}]ɗͣÒŽĻJ˹ʰɍFȱʻÎćł̋ùęɧÈBǭǑƕΣĻ"],encodeOffsets:[[106933,10662]]},properties:{name:"Cambodia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƔĭͷƌŤ¯ÒĊÝâĶ³iĥ"],["@@ÄŃőÞÎ¦"]],encodeOffsets:[[[-161118,1901]],[[-163163,4018]]]},properties:{name:"Kiribati",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƉöƠŰӂ°yƣҝı"],["@@ģÖȆĎġƣ"],["@@ƑŘÒ ĀƷ"],["@@UćƳvŞȞË"],["@@ÿ½ƁňƮŤÔǭ"],["@@IōýfWǘĠï"],["@@࢚ೃ]ࡍƚCŹҫ˽̿ӅkÉȗ΁Ŷ˓ÉBȝʽĐÚǓŻƋŵêÖǬ̋ˇţÖȇǕɣ̠ɖrÌńơAŇˤ˔ΖĿÜɞȌǳʜ«ѸʳCiä˜Ȣʢ·òĽĘĪȗɊĥӴϦфߖr˰ˆ"]],encodeOffsets:[[[129359,34021]],[[129264,35196]],[[129201,35565]],[[131140,35642]],[[131831,35634]],[[129558,38643]],[[131456,39551]]]},properties:{name:"Korea",childNum:7}},{geometry:{type:"MultiPolygon",coordinates:[["@@āYĉǀĔưƎǑÕƃ"],["@@٫SȧϨݵĚƌƎÚôŘǆȰϴиĆĠiȎÿvŭŚəƣȹȉˢ͢ڿ"]],encodeOffsets:[[[49434,30336]],[[49606,29228]]]},properties:{name:"Kuwait",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ϤЋâȓÞDxödRŒŁĉΑÁȄʻĚ©Ɇ»ƠéϺȾĀżýȠƣ§û­sÑrcĖUĺJ`ÁlgŲEñAÃħĩYÉ·çŽŕOʉØǓMEe{çXå¿ă¯sI੊ջAµĵxù̀Ɂ¼ÝÎÿĒȷˆ˓ɚǕÄÕþšÜ£pÝP±ZƛĢƃêªfUıϸʹGû}ƟéoĪƷ¸·Ȏƙ¶å¯gÅÑ½ÙÝrÃjU­Jĥ­§ďOóƷƧAT­ÁqDÿ]j¬Ó¬Çv{|ɵđós_Ɓ_{[tãþŕxßµŅƋFÕ¬ûĞǩÐƳĕú¸mºCx¼lĊ¤ä°®¸l¼tɆpöYĠð@ňŀȚpĈDÒeȉŊNƄÙ¦Ƴ²ďÊȓʲËƴMȤ`Ǌ´ȊÛƊʽȦėİŃƢŭȒĉĒ§oęlƍÆšķJß]EauÁg§µëğȳé÷­JygK`eĀÿhę¾ǡƂNÇñóÓ³fóŧĻËQQšÿȷȁ¿eǑĔȢҺMŦñĶEȪ҈õ̎pƆQ¾חJīǠĺΠǝǪċßÿsXPºN²°ǼÆŠÜÆèzƂB¶IhËJw^ÐƔɒ͆Ǽ¸Č¶kĩÅQÃZ­pu[ƌ ĊFƌëpN²¢bPÝĒrʔGƠM¤ǱΪnªªªŔrRlIæđƸ¨Èu"],encodeOffsets:[[104579,22917]]},properties:{name:"Lao PDR",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ϧ̙ʫPҐ঒ˠ͌΄z¯ƃƦÉäǯʳʝòï͇ñ¤ƕƓŹ"],encodeOffsets:[[36730,34235]]},properties:{name:"Lebanon",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@àūìЭɛίʨƟʲĀ§òǑÒĳĀWƴÇ°ʓƻՑV˿|ȅ׵Ȫܻ϶१ࡰ࡝ԢǹȀȪ˜͞ʲȘȄÞʾ®°ƂÀÜʠ¨Hðê÷ʂĜɜǇŰգÿʍ̄ǗȒȘΨƢŉ"],encodeOffsets:[[-8690,7740]]},properties:{name:"Liberia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ʡˏĞտɏБɶࡥ@᳿@᳽Aေ࠽M@нủཤ↏Ⴒࡉϕٛ̓؟Ҽౙ˴ϯڞۑȦʑÅşĘɉخҫؠɢ͢ʠŕךƘϤġୢе߀ǬĪ͂ƄņżƀǠďֲƈȆǜ¨ŐǌǾŶƮüƎìǄöŮÌ~ºCªãİ@ŞLĬPÌǼŸÁƀsϼȟЊµѾĨཤѯѼ߷ᅀн۶їϢűӸȈͰЌƻܖǐʹо̦ࡠ̚Ҩeݺʥ`ʋƲı۾ǡؾsɮˡ"],encodeOffsets:[[25755,32415]]},properties:{name:"Libya",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@³ĕķŰƒȒZɫ"],encodeOffsets:[[-62356,14154]]},properties:{name:"Saint Lucia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@|ÙſŊń¯"],["@@ɪaϬίѠܣŪ×¦ʃϞܟY͙ȋЍލϑϧ~ƟŦȣ֪ũ଒ĦɵŪ݌ƜʾY̰˼ą͏ƚÁƎ"]],encodeOffsets:[[[81792,9268]],[[81902,10049]]]},properties:{name:"Sri Lanka",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ɉkɛ̓Ñęʭ͝˒ƛ˴ŗˆȦĚψӢȊÈŀĀŰàȪðĤlZ֨ёîȕĹ±Ŀŵőǿϛǧ"],encodeOffsets:[[29335,-30849]]},properties:{name:"Lesotho",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@µPǸˤƁ˳"],["@@Ù~m¦xʁßÉ¹ÅkƩXuĵkoϙçåx~Ս×jǠë¶ñĥédJwfépÏLµïŖHÐŠʸɏǀгJ۱ǚDǆƧ̞OǮO ɦĲ˶ńβüڔUþ_Ú³ÜNÜަđڂŒƖǓԀăްοCqÛ¡ĉ¥ÛW{qƼWâY`iƥţʹR]ÙķçŇ_ėwŗǛTŅMuyÃÙ«éiTiŪeÀĥǉ"]],encodeOffsets:[[[21461,56606]],[[26187,55440]]]},properties:{name:"Lithuania",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ţ̃ƍ½[}¿Q©R}nyZÝ`YĐɼ|¨¦ÐĠîĨYjNEMïz»È·ÊyǸõ"],encodeOffsets:[[6643,50994]]},properties:{name:"Luxembourg",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ӑ́ѱϫƍޯπӿĄƕǔځőʵÆԯÛÝMƕÔړV̓åÝU˵Ńɥırوքغۚź؞Փ̢ıؠɼ¹ԶIĄոžƌ­͘õ՜ˍȠÏθàȄÏŞYŤCÎÿɐħoTO«Ǉ̋Ɩl[ĥĬşĄ¯P¸ĻnÑT±­į"],encodeOffsets:[[28824,57491]]},properties:{name:"Latvia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@řŰƒ࢖Ɨ˲ϩ̦Տۄ̥ĘlǨþ®_˞@˒Ěڔ˫êFמƵTЋːǓĮ˟ŮåƄ¯ÆĕOċUïǨī±ǓcS͇ĔŹZå÷gFGł]fFƿËF¿\\ÕÀĥ£qÝĉÑġSí½·ėµÏÏNŭǁg]«"],encodeOffsets:[[28890,46542]]},properties:{name:"Moldova",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĥƷǘ͠ñǧ"],["@@ŉkkŀĲÀƓ"],["@@Ͱ՝ʢඇȼչɱәǁƄŃ̂ȓÃƦ߷Ó˟ˉΧzփīο஭₵́గ͋ލϗ̥Ӎãճ˩ʫOছӚ̫אª٪ϧ६tϜǰӜʤƪԖ੎дǭ̔KˬǋϞ»ݬϊׄ°Тζ˄ȊĴïɌĐƮϪÜȰƽËǰŦǚϼʚƂǷMʆɔ͒Ħ¬\\ʝʞ̺ǆǇʬȈΆĥź¶ŨĊÈǺĻҔϞļάŏ̲Ūɲ̠˨̑"]],encodeOffsets:[[[51135,-17308]],[[49503,-13684]],[[50728,-12730]]]},properties:{name:"Madagascar",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ōAɼìŭé"],["@@ƾǸöƩɳ"],["@@ĕ¥ŘŘñ"],["@@zĥƉǆŐß"],["@@ȩȴŘиύŚʝ"],["@@ĿƻǤêg"],["@@ƵĴɞÂʣ"],["@@Ûȣȡàú̚Ŝèȡ"],["@@˹Ɋùɠ͖ɩȿ"],["@@ѫ೑ƥཉâͻϖҕÿʓtʚ̵Ϯӊહؘ܇Ɣѵјҍţ^ʚŇÿÞҎÉ͒ƽ˶̇ނɜ֘όǨϼ¼ƿ͊ÓɒƘËɶÿUזϲ͆ǜǼŜࣀ҄ɠଔʜϬَƁÀČƱxˬfǰƝªɩŻ̩еұi̳ȷȋéȄ|ȟșFÿż|ɕۻĵƟƣɂr˄ɛ̯ȑuʃЗ˝LyſໝBGӁǟDǵBθ͙ɠƅ¨ÝtÇ@¯¸Ėy®£@÷SĉZ÷ÙCƳ@ɵ@ϡ@ʫAȃ̭ĿǩĕƥĦȹqs]ÛΗඳ౐ϩȚ©·ΦǧևƶØĪǟyËŎƋšȆË˭࣡Пԁ̓ƸӍ¶ٟ˴ȯȖޭƺঁКْ࣏ٿĔدɚЃцࡵИҗ֖ƿΆΆǌÇƦƹ²ɲʼz̸ȇņǽ̴H˶ūʨ॥ੈۣӺȨĥ^ňρłˣϼȖ]թˈùżȭ³ŤɆʻšǁŔʲȎɮê«ƅʀǧƪɫOǃ̈́ηźǷʾÀˎӻĔ࢑ࢪݫൎXѺӝƖŕǲǁÒǛĹڅͦŦɇýЫ˨॓ڜջɌχʚŅĦʉȈóŘԉͼʩϼ܃ƎćăʤȎƟɺޗԖޟxѵʖȭÂȪʀƑ̆љɌƳÙˏѕɟ̙װ૏ߜĳ[ɩʢF؜ʵբե̴œ̦ĭŽ˛ÍȱȶԓɄāǴϡʰĚϼ·ɨöCąȜčõȴě^Ǿаݛިإͼ͙ࢢȟƔȜˡ̦¹ƜĐĮȑŬɽҊ፺ƴġǧẘষᛠJFϚ๠WʢˉচگЌ߿ͦʓߊ͙ɶǾɸҊ̄ĴۢāּԁϪܕڔٻ¤Э̊ԡผәȖø"]],encodeOffsets:[[[-93884,19126]],[[-89026,20791]],[[-109058,22130]],[[-113220,25604]],[[-114746,25135]],[[-113766,26646]],[[-117934,28744]],[[-114895,29702]],[[-115871,29750]],[[-99477,26585]]]},properties:{name:"Mexico",childNum:10}},{geometry:{type:"Polygon",coordinates:["@@аˏƖɇó͹ōI·ŹķġkʹǅwǵƱŷ¯©wԣeɉàȃ̂ÞԎƆ@¬ǔʂĎȐÑĒĶƠxB@Ɇ²ѼV"],encodeOffsets:[[22881,43330]]},properties:{name:"Macedonia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Nᅫħ՛ɹտ˕ǿ_ŃύÒ·ïෛÍ̑ʑؗÏϟŮѱWʏȑޣ̧ŝʍЉºʋɷÝʫʡV­ͅȍćΛȀǟăƫƿĐ˙ɇķª˭ɩɗӵȻϝȫ˩ԭ\\řMų©W¡ŃĥéNķºEd¤úD~¹ˌțƁçtõÐmoS±KÅnĵoɏMÇǗ̱ǔɵòˡɝaƆɓƐÏъˡfɤ̜ΡʴHȾȍЖ̏Àǫͫȍѩƶιˁȉʴ̹ǅǓƸĨǦAҌȵάǑ­ȇˊĀȰ·˦ǫɄ«̎ƨÁpjºɘԶìòƤŀ WюЋɄɬي£жîAĮl¢Ú°`ŵoẀKŸڊűƆĳńyȬyȾyȾyȼíظǙฮ̵᨜íظ³к{ȾuȒʴ@ˠ@ˌBی@ᝀ༷᣾ၭjʅϐəØƩௐѹŀσŕʵȤĭܺƀ"],encodeOffsets:[[4330,19603]]},properties:{name:"Mali",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ŉíƀǸĿ"],encodeOffsets:[[14916,36714]]},properties:{name:"Malta",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ã±ƤƤğı"],["@@¾ǳǅŬňÈ"],["@@sǥÿz·ȌƬ"],["@@¥ưŦŅÿ©"],["@@ÁģÁÊń"],["@@ĽũřC˼Đã"],["@@KƏɤ¦ē"],["@@ÑHĀĢmĩ"],["@@ÅćoŪǴǲĽɓ"],["@@ā¬¾ǘɃ"],["@@ǟƸɎC­Ƴ"],["@@ȚŉąũKĥƚÐÂ"],["@@lřčǒâ·"],["@@ZăĝɐĄƋ"],["@@·ċͅǻõǉi}]ÏxÌIJgµƁAçyÛÅÅş¯ǻM±ĳÀ£ÃRƛĉɗxǳΉ§ƃ˛қë̙¼ǕʏÑܹ̹ÏɒȑØб؜ۑȆթƦò¬ÅÏƝȍŋֵ̭ƏVȑ̲ԭӊե[ֻʀЛǮ٣Υ֧εύ¯ЃŝŽćբǮʼÈԖŔňȫf¼ФąjàĒđۂ̿ی§˧ÆUϖǅЮĠ@ǧǦďࡢŁŨŢҤ̍ƧӔ̉ʲ¶̵ťˏ˫ǣȯɚŖ˕ҽɳ̽ϑó˺ƛɫȟO¥̬șɹԜɗΗǽß̬ಬΙ঎ÚRƧŸqͨĭ͙ȉńǳ˾˨ŋƤǞ͗ˮĄŘϩƂĵǱŅǼÆʬȧǙÀƎŽȈYɣͱиŧфŶŬʨőƊUЈOĪźB¦wǌďĚǦúŴé̞ŀˌŪ¤b ޴łÛȘf͢œȀϚìŸĮƎǮϰųİĪȲ˘ʾpŤàØ°E|kjČQʄŢƖࠪԶԚƀƍŰcD¢ǝɶeÚâƸò¾ʚȆĖjŎÚČĚƀ¾Nϴ˥ȤՕżĚǖëôڋ­ԅķĭüǫ˓ɷǅ_ŏɹǅç͍Żā©ʃƪəťˋծǚԼVƃǻžɽηҰĹöğ˃۫،ćpɧǨɷϨQЌʄºƿ"]],encodeOffsets:[[[100539,10172]],[[100567,11216]],[[100920,12027]],[[100881,12191]],[[100420,12688]],[[100776,12901]],[[100675,13414]],[[97081,16199]],[[96745,16329]],[[99917,16644]],[[95940,19133]],[[95964,20028]],[[95736,20370]],[[95243,20403]],[[103567,22086]]]},properties:{name:"Myanmar",childNum:15}},{geometry:{type:"Polygon",coordinates:["@@Ϡʉ֢˯ʑÉTǳɳÑőŸ̽ϥ¾ʭݿ׈ĠæáŖmǈb|z^Ŕ`CĆ¬ĚÚ¬ĐÀìM­¢NTÄąŞV~p`®Sª]TªP|Crë"],encodeOffsets:[[19680,44493]]},properties:{name:"Montenegro",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ܷ˵ԛӉߧˋēcշkџ୵ƅݷʛҭȇįå×Å¡ËiНÂ@Ȁǋʵ£ʉ՛ɊлðΗÆƷ¸ˁʆåpé^͹ZӕÆε®đNџğ቙ȆۏÍѳҲ˫֬ǙðrȨՙÖ৑ԀؓúǫqŽCɁvţϏP҅Šơkǹˢ˸іIÎ£ÔĀØВÙŔÒÏ~ëfǿʀÑȂßþa¶clĹtóÙŎÍR¡ái­FǻƬçrγuÛ¢­áZſÌę¦QĈ¥ÈēhēÌˣêäŸȓìõøŊĴ³äRUĸD¬nòÞǐφǖâXroUĐzÐ~nÂŸ_â¤ĖØdSƼΆǆԐňº ɘĠǲÈVNØC®̜ƠʦCôRƎƎÒ»ǚī°I¶xÌÞVîWƌƣ॰¡Ĕ˫ɔǕ¼H`ǲ@ƴĝΊoҘòȾć֞eȈŵŶVȖƜΐĒȺʎ|ȚœÇ£ǡ˸ɸоҌˊɆˈࡺ̥ĨeǐMȪGÊY܂ɕǄ^ɀʔËH«cTĝµjȃĐģyŏࡠ͓ˢ¿ø`ânɶmરːۮƛŴ\\ǦVŘ_ȖĭČġĒ­øĪEʆGʈ¤ʙψɏĬ¯üeԼXǼÚu֞ċȔ¦ʀÝĲp̈́ŚŎªþ[մèΒĞǠsĞbĞŠ¢ÜÔĖżÞńÊņÆ؊ɢϐɖăɬǃøÄ_ƆSňKàtŌǪºèCŔǚµŎąܥ਷{ĹJğUćū¿ĩ±üɋʀƿĄræàƀÌðD¾_ŔIŜtĞJŠa¨aĲ}ǺŝÆ]Ζ˰ؘGÎļķÎÃĶŘÄՊчƾʕƻĳkïCūnţYƛrǡĆħt­[É¯×TËSƧXă\\ŷïWˣůǍÐĝC_[čBo{Ћvʝĉ̋ͷ`X¥³ѡɿѥËȱWƱƭ{şƿɃŷñáǟÙȋŏÅcҍÄ˽ÖğćĀó ʣJãfœcзבѾҫ­œ"],encodeOffsets:[[114564,44729]]},properties:{name:"Mongolia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@èĞ¦Ïō"],encodeOffsets:[[149250,15497]]},properties:{name:"N. Mariana Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@MˎÃȨfɜĥ¼఺ƽӌɇΈɏࣤŢĒࡂࡄÛƊŜАр֦ǷԄÔʈųƎʘӦĭఐÒƞࡏʄס;ڡz̒Əո᠂ࠒκүبŤŌơחʛҁʂЩ;χƮśƯº£ÞGÒZdlSʐ§ƚ©ÆU\\ÚƺĮǸȬĠ| ČĐࣈuzgǊƁǦǛɞħŢŅƌȝɈͷǤÇȆEĜƹߎȼЌ®ĐƖZŐEȈHȤQðkºFÊhżŊłCƞéþÑ`½Ī֤ŞͦťƚƸĂǐʊӒĳиȸۢɊƠüЌ̚ŰǓĿēĢÅǍуň֟ЧĀţť̇ŎCvख़ĶûÍ˗ňİÎʟȏͭũ֕ߵǋÍ®šٓҋ߃ɧݳйʱɇ҇ٵş¨wţ͍ōݿۍʣĤĚĵ§յɸ˩ʊ܁¢طÊµÖ˶Öŏ׷ǣۭƞu©ȭлӭၽ۷̷ћɒɛĘƺkƙӟEe҃YŹzñK"],encodeOffsets:[[32884,-27483]]},properties:{name:"Mozambique",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÃćĐŒƀ}Ƈ"],["@@ŷډṿL³ƦSk£Bĭгíً¤ɃɫэЌʯǙËƱȽűǅ¹oiʭŦ˛Ȱ̵φʯЦ̅ĨĥqγζׅĆٷǉЃ ǝ˝ěmƯá@ϖÔ˄ζઌƵबʧ̞ǬŴŝȠيȁΦǉeɇϞĹ¥ȝ_þČβพD६BϪBȖ@Ȗ@Ŷ@QŐOĘQŢSŢՠ·˚ĸưŖöƀĔĴà¾hƾx̌ŲNц@΄@Ҝ@Ŗ@ɮ@΄@Ɍ൞@޴@̼@ƾ@Ǡ@@Ī@Ǝ@ȌAȎ@ǖ@̪ἢኑۋ@ˋA˟@ʳ@ǔก̶ᨛǚอîطzȻzȽ´ЩĴŃŲƅ"]],encodeOffsets:[[[-16766,20180]],[[-5488,16674]]]},properties:{name:"Mauritania",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Ó~ĖÁ"],encodeOffsets:[[-63640,17143]]},properties:{name:"Montserrat",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@˩¶ĈȲȮǎŔȇşɭ"],encodeOffsets:[[59035,-20976]]},properties:{name:"Mauritius",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ŏFƕYYÍȻЋƺߍFěÈȅ͸ǣȞɇņƋĨšǜɝƂǥȃďࣇċğ{ȫĭǷÙƹV[ªÅ¨ƙTʏckÑYÝH¹¤ ưƭŜͽψʁЪʜ҂טŋƢاţЧՄƕËƷːŃĊʠ̬PѰҌ̔ƟóǐªΠÑɰ\\Ĥȸñʲ̴ʤĝƌ_QĮǻǔtì\\üďĒďžŷeÙǸࠀəĚƦ˚ȣȾёĈҩ¹ʍƔɕĮ« Ínī"],encodeOffsets:[[35799,-11856]]},properties:{name:"Malawi",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ßnnˤ²̑"],["@@û²Ėŝ"],["@@ȡa¸þƪÛ"],["@@ćW°ƺþµ¥ī"],["@@ÐęƥăćžǞ "],["@@ȪÏǎʹӀϡˌҷpྕ̼̑΀ܛ˭ŕrŏǰTƙʟIǷĵĻǼՉʺளࡼJ̲ӭ״ä´Ʊ̎ɫഢȋϪŤȮìŏΆ÷ĴǷưEÑЅŎőϊɪĺŇǐ ȒΖ"],["@@ЉƖӯջmƳŽȋঃǩQŇŋɕĊģͣɭɩˋѹԟcɽǕԭǖÁŐϻOʑĵěʝɧōשԃǁ܏نīʀúŎȢɛРܾ˕ǍƌȪӨ¹ȪȢDÌ̤ఎΚ޾ࣨŞ̊Ӹүƾ̘ÿ˚ɾƴäѓƸųҠȠưƈœːƺǄŘÏŘæܺନĎų¿ȃ˺̨Đ{ÄəˆƑìƋ¥̉ţįфƚĦǅƱÙå͊ČȰǵՆƯĕůʳŗշÙƇ̈́˛[ĻґŇʽþĹơ"],["@@½«aŨǚüFŋĿ«"]],encodeOffsets:[[[114063,2474]],[[106723,2798]],[[120714,4287]],[[102696,5422]],[[102245,6621]],[[104552,6393]],[[120397,4271]],[[119954,7341]]]},properties:{name:"Malaysia",childNum:8}},{geometry:{type:"Polygon",coordinates:["@@ݨƈϪɦ§Ɏȋ̋yͅșʋ|եν͋ϰስˍJᵥࡃFᙵ@ᲃ@šυĻȏƃÉƙë܍¬ܧǂċǒVȜƝŘōĐĻµ·ùmŋµŇŝíؓնͅӤǝ݆Ɵǆŉઆ˯ۨๆࡗಂʁؚ׭੐ֵިɀRфƈnĤ¸ǘĘEPǄMՌȬʠËҔ̱ᅌfሼSҺ͹ਨ»Ҫſೠƶࢴǒ"],encodeOffsets:[[23942,-18064]]},properties:{name:"Namibia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@č_@ĈĎç"],["@@ņ]eƝŹsŷȼƤ²ný"],["@@˟ƎÚƂĴőêȰYĒΫ"],["@@ȞٌХЄл੾ەxțǑ­ʱĶಓ߼ُںğ˶Ťĕ"]],encodeOffsets:[[[171566,-23166]],[[172044,-21944]],[[171419,-21668]],[[168144,-20731]]]},properties:{name:"New Caledonia",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@ǠఉΦӋgȅ͂͗ȓωɕᠵङঃޛଵ¶ȷĎίƭEēϝȅǻĹǇȝ౉ɺЛȷ¥UӍϫΏVϛðʛŸ̡Țŝƕ^ؙ˱ɅĜщҨīJ̃Đ̅ĜÛ[­mĵáӝqѡɳǙֵʧȵ©۫ڑׂσƋp˙ˇΌźƂķȢґÇӟ΀D˖ǲMө̄ǁɦɰǿɄ®ΐؘÐ̒ʒොÎ¸ðώÑ`ń˖ȀɺրĨ՜Mᅬഞ˰൪୨␤ᕨౚ˳ؠһٜ̈́"],encodeOffsets:[[15339,23549]]},properties:{name:"Niger",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƇoòŎÖĝ"],["@@Ɇěؚ˲Ɩ]Şվ͑ϜïΐUӎϬVȸ¦МొɹǈȞٮ̀ƮF˜ϑŎƯĄϹtƓô÷ȸ·Ďŭ¹փ̛ȋ¹gïGÙ÷ÑǉɡƏɥķηŧœÑЇɧř­ĻÍΕqËŉųȻÓýƧßŗǻ׋ǧȳÕĂŽǡƑÝ¿{ǉͭɑ¡hÕȬßẩʊǉƻĵAó^ilc oėÙƏı­go¯ġÅıƛħЯсʁܷǙˑɿƶº̋ձħŊȷěǩƚàǝșĻŽˬþ̏ȑ­ŖsœʓPļćŻǟ¼͏ʸŝʤÃƸþręCŤƴŘƍÓƽŎɎàŇĄǷÇɃ͔ί˔ࠗâɢƞʋÕāŅՇw|ȎdÈl¦k¼kæUńôK˞`xdlBçݨÔ֪ɨɾאɸȎͼŀRÀǄßƌʼk±´ŵǾFĖÂŐÄÎÆc٤ʨȶǚֶѢɴӞrĶâ®nÜ\\ڶǵъҧ"]],encodeOffsets:[[[7476,4525]],[[6968,13423]]]},properties:{name:"Nigeria",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Ñōǥ§׷ʼɳč֥ȴƇŃྦྷེîàƊĹò¶ɺZ¦`úǺæ\\ÂJfz«˔OÂX¢tbľXȜg^ĀŊòĂ¾¤Z´íǔķPhNLdE²¤¨ЊˢŲɪǖȒǸűĞwݸȲĊĎĸɐ_wqÁĳÃöÍÛĪÝĤ΃ȋ˿Ż֩²ރĭ¢ɈƉǱØБñ½Ǖľ¬Ƶǹ˻Ȏ͏"],encodeOffsets:[[-85649,11180]]},properties:{name:"Nicaragua",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ũVĪĚį"],encodeOffsets:[[-173878,-19541]]},properties:{name:"Niue",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@£ħīɪƐƁ"],["@@˗ƭЁçŎ݂R"],["@@łù́¼ɀ~"],["@@ƩƪŮ@ĥ"],["@@ٷżʜ²ѾĿɧŀƮ\\ȣǚҊоʊՎʖhЄʸѾŚو͎ƃƑՍ˓ŹʌëʽʥÜħ܏Ƒɀ̑ËʫɭįǆĿ¯ŻʥrĒ͆ӧłƷǆگé"],["@@ŕLͤɍ©"]],encodeOffsets:[[[-69842,12437]],[[4328,52620]],[[4044,52982]],[[5004,54345]],[[4328,52620]],[[5454,54668]]]},properties:{name:"Netherlands",childNum:6,cp:[5.0752777,52.358465]}},{geometry:{type:"MultiPolygon",coordinates:[["@@Hıōɒņş"],["@@ƅCÀĤĆğ"],["@@ʣÜɨ¶|ő"],["@@ƷhВİlč˅"],["@@ЭJʀĞǮħ"],["@@ů­ȴɂăǓ"],["@@ȌܱȇÒƒӔĖ"],["@@^˛ۉ Ր˲Ɯµ"],["@@ӌˆǆȱҙȗ෽ǱॾΦÐάӆɒʍح"],["@@тù­ʵϳAͽƷɭ¶ǈʔ̠hŤǸ"],["@@ǅ{ÎŜĸğ"],["@@˃Yzńʘ`Mŉ"],["@@̒¡ɯǗҥȭջiȀǮ˚\\Ϫϴļƫ"],["@@Ȫŝ΁ǄƘ¥"],["@@ϥɡǿƌԘƠÎÉ"],["@@ʩIÀƼȪƱ"],["@@ԥɱЁu̩Ţ௒Ɔ"],["@@QȵֱĈýǟחœΟɵĵžЦʞǇǖ୧ͦԵƃԏRϟȉ˗םڳͫࣳǴѽƁލÒۉҮѷ¹@ơϋIы_ȚƟͅбඕǘ͗ӷӻŜғǫտϿɶ̷ࠗӅ¼Ʒ߅ƩÁۣ۟؁άįÂʓƱƅٍ¼ΉÙԯ͹ƧʯʮࡋŭӃ،̳ƣʕ΋µʚҩđ˿گѝİʫŽ̧ƟaéńҭŮȩӤΓى˱§ʇżČšఫۛঋķŃńʋ­ÎƔߟɖŵϜҚĕɞŊɝ£ǭŬÀǜ϶ȼਯ͓ÌͶȘŲʦ«ώƂУԴЬȌPǩЀ̠۽ƓࡍקºϘО͹èůȬіȰͻıŅÈě͸๨ĔɖǃDŜӄĴɑøĆŔɧɧӕľǻŽ޳́ðĕȶ˰¬·ȌDƘࣰù׸è௵ÈĽȊ٠ɎƦÉк¸Ħ¼ҳ»ǼǠદĩĞюĊ઻¥ǦǬՌƚѼOѮȵϹˆВƲɱƀǺĒҺOhőҔƒ˘ȝتÐƎժƲǏĀʂĖųͣŅjŵ݉ɏЧǎ࠾ײߪ˜ĠÎ˱¹ǌȆ֜Ǡ̊ã΂ȬлŽʃĂҰԼ̀°ȽŦੂǔޓÇþΈؼźʵĦϨǴ઴êࠉÌѪʮՎȏĈƢϋæ²Ǝϗď±ŪˮƐЦqʱĶ׊ƈʮ̇ĝμଌĠ࢏ĚೲԾƄ˂րœʧžӪɎѲåָ̛ѪɩԥζǮɆkįͤҔqɨľҖƭԳͰߺ̨Ģ֚͟sȊࣼдƁŀͨƦԜƃцT؋سലۦÛѽͼĐǎȜ̦¼ʽȚ̌Ũڜĭгʟ̾SáΛ՜Ԭހǻ˞²݈έֱű௫ڠīǈȽʞUŲŨǆŝψ¾"],["@@ҢūҩɣÖɬĞ"],["@@ߞ˴Aŕߛǝ"],["@@̝ļ˔HŃ"],["@@μeɌ̉ॸß˭ƃຈȡጇЩŌʊํÿ،϶஥Ұ୊İ"],["@@ܮͅ࠵ȘӁτ׊ʕ"],["@@ղMີ«ԺĬҊ±"],["@@ࢢęƓΏؔȀʀ˽৺ǥ׼¨ٺ̭෱ŋ᠏ၽይվ̵ɰטbȎƐᄨĞĳĎᛗŃ·ɎՄmఐ˒ਂүŒˬƈଫǅʢ̱ş˝ú§ʳѷť߯຅״ߪȩ̒щb̷ŻЃ͠Èɺ̄åҬĔӮěOĒஎîũਇũٺJגȗӂϢเۓѷצΰ̰Ҕţ"],["@@࢙UᅮĠओĉ"],["@@ୢǙƊ̒ҶÔĚʋশƤᓂǛ˴Ʌವч෋ǫ࢙Ʋ၉[؛üϡĐठƂႷXЁƚԎĜ߃Ěபṳ͞঒ȓ"]],encodeOffsets:[[[5208,61755]],[[5078,62551]],[[8298,64858]],[[8675,65196]],[[11501,66423]],[[13284,69504]],[[14206,69904]],[[15573,70598]],[[16139,70207]],[[17924,71267]],[[30676,71472]],[[21278,71772]],[[19718,71749]],[[20242,71902]],[[24183,72243]],[[24595,72261]],[[24004,72516]],[[31611,71459]],[[26201,72850]],[[-9168,72540]],[[19681,76177]],[[22127,80482]],[[11521,80498]],[[29745,80806]],[[17190,81825]],[[33307,82042]],[[21400,82176]]]},properties:{name:"Norway",childNum:27}},{geometry:{type:"Polygon",coordinates:["@@R¡ĲƃķJç¥ś³ſyYקmɫǐ˃ĵ׍ǶǳµõǂáVɵĉčtэɲ¨BĦ[¤Ň¦ɁäśÂəĩçfǏ¼ĕR¿i]ãҳŰmÞÞ¡\\ƫ_ƏîƧĞÙ£Z]¡qOֹЀӥ˄Í`m{a»Nÿ°ĉ´ŽĜgľĘrÂÐpļCĘÀŰîƄŮƜɪȂzjº¸Pǰşà®ƌȴȌ¦Ǵqǂƪə޼ϛάί̒ĆðuâvÁ¢ĵ®Ŀӊ̏¸MǶ´¶MUBióģ³øoǖaɤDæµæíæũ½cÎr^Ű¸æýĢ¿äĞĺ¼dÜOzq£Ƹ­ðĸ÷Ųa˨MȨÒȾ_Łأ"],encodeOffsets:[[90096,27786]]},properties:{name:"Nepal",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@§ÓėØƀC"],["@@lë̓ǲɨƔiǝ"],["@@ďÑǔŗ׿ǁɼ̐cǨƠJǄƕ"],["@@ĳŉ¸ð¼"],["@@ǡŁuĘĝoƶȫƳûĩäØƺʗzʂĚ͜o"],["@@őµƸǪ¥ų"],["@@ۦ̖ů̇ǜɺʬsɛȇ˨Śʧ˙\\ȭǘÏࢽਡԇʝĤéǩğƖjĨƩɢ±OǕӁmĮƷşɕƔŨǍ߃̱āկūBĪŅ΍էÚƽ̙Ï؛ԡ́Í߭`ǋȲ̅GʫǼƝý՗ƺȬɡëÌŸȍÙIŐѠĴǥÈǌĪɍWRÚƪ¼¥ĆʊċØĶǡƖȞÃĴǺŖ²ŋfǀʪƨĺÍ©ƐԎЂ؆İSŘ֐Ȭ΀̼ƀeýØʸ`óêŢ¢ÎËȢʾƕ`ǄʈȢƢ֔ϲɌǈӺтΰʮAǯqyĽʆƱńα"],["@@Ǔ¾ŞżǛ"],["@@ƮútđՌǑƁƬ®ɔҏƹW΀їãҁӞŷðǳƂJç؎ʾɑ˰އঔ̉آςѸŗɥܟʕƝÉѣ͕Ɣϑůř˩ƞıɣПܟࢱ֡ͭŧǌʅM_ǜȗÇѸ֘ü˨ĉƦūƎࣙϊƝǆæưҮƪǘƬǢݜńü˽צŰįǐŌŭŠʱDʋϘǴğQ̦ĿÜ]ïǻńĹǶFğȾʹĥաۊǶȊȿƳ¿¶ǓȦØǄСҼ˴vãęʲͱ"]],encodeOffsets:[[[173239,-53757]],[[170211,-51979]],[[172181,-47986]],[[170987,-46264]],[[-180405,-44790]],[[178089,-41844]],[[177271,-42269]],[[179757,-37149]],[[177428,-35773]]]},properties:{name:"New Zealand",childNum:9}},{geometry:{type:"MultiPolygon",coordinates:[["@@åO@ńȲ˾ÈƏȓʡ"],["@@ɄёОЩ൲ϵրܙͦŵmʏέ؅Ѝ͕ΟץɝdƦÙSʵ́ŭӇĈ։ࠣɛωٟݻŧȉɏhɝǯʁ࠷ϩȵѱĥछጊᠾ࠾֐၌ϣמ\\˦˨چÁĺѢĺ³ŸƕxՀǤðÂǷ˘Ȭ"],["@@Źn̚ñ`˨ʎĩי"]],encodeOffsets:[[[60132,20704]],[[57742,25579]],[[57650,26267]]]},properties:{name:"Oman",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@MΥ٫֕ۖߕÄ޽ںՓe˂ȕDƳ¦Ȟ_d[iűĩĒǖJ̆ƷáśīÉ_˧şĕ·ãÑ{­_©ÒǃZ·¹ǡaÙüÕ`NĻÙŇÇ@ˣ̻ġíaéÏR¹»ÝËΫƅГݽһɷ§¯ƍ̍Ʊƙ·ŉeí˟ý̛ʻįÛIęº¿Ƙȍôƅù§¥āŻŹȅ˟ʣć̵ըɋǛ£οƐǟ¼iľI´HÄjàHȱȎ̡ÖƟÐővÍuKÚšA}½¯Dgååa§O³Pão¬R°eɏ¿ǅËʗĹõNç¬Ù¢īDǫMīBËdÇ[ëhuC¡¦kMg_WuGʧȡFěaĉmıÑ£ēɋŲǇų̟̂řӨϿĖG̬̿͂ǉĝ˰£ළřıĻԋȀх¥ÃţྥqjbzêrʤĜSºNdÎªbnvŸ|Ɯ¼ʄŤĪWÔŒܚƦdƠ²xR^QǖÂ Gx²»{RΏZ~҈iͶܹ̂ا࠸ıĸǅǐ͌ğٶǿЎĹࣼöҀėʜŸל^ॖʴĮ߀МϮԼyʈĠƅƌӨʠξ@ɬƙΈʬиɔӲٔɦ̹؀ٞ¯ͮĆːŉƊվո£̨͗и¢âࡢԨ۸Ŋ"],encodeOffsets:[[74844,37750]]},properties:{name:"Pakistan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȽĸŜê|łʏ"],["@@¿ƌÞr]ƽ"],["@@ēƇʂѵ˽ͿȉŐśЁѩۨŒ~Ūʜ͎Ʌ˵̨ĽċƧĞUųĕɰӓ̴ΝwƯĳŇǱÆ׫͍Bŗϔӛսɱȟ¨ƍԼǡɱȣĄȉΔγ¶ÛĮϋVƽÙ[ƧůɢƔĮbUŪ½ĘÄżĤ¯ØĉÆ·H@͜^jX|~`ºlƂïäÐÂ­ŊāǿŶc³ƇƖąʢnĩƶҐ̟ѢĚװ˔Ҧ͜శ̥תӝ"]],encodeOffsets:[[[-83561,7509]],[[-80791,8473]],[[-79231,8867]]]},properties:{name:"Panama",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@ԷσȕŗȳÏLŃo{iij{sªÖë°] {WýƶЃŶħgRI«°ñĊÅŐƏĆġHŃĵũĳũۤĉǖбۼ^ȊŘØͼ˺|^Èty©m­MÝଢ଼À~êß¸¦OªFÐbżÄĘ¬ĸEƒkĄFݦಧʙͅāګǠУЩՁ]ƗǞɯȽͻǢя̾ǃǃřXƓԓҷk¡ľşVÑ@@AÙÉĉÛƕ­¦ʋĽǹЯśޙ֎Ǐ͚޹Ӱ੕юୁڒίњͳɠω٪İºδԝ࡮ˏʐÉͬ΍͂đϜϙغӛఈԫڀԯࣈ७ײmƴȞ¤Ǧϡߺ¬̆پۜƮĞæǁ¦ˡeq³őv«i¹b¥JĎEùŃ·T°Cø ĄĘ¸^ÚĎ¿Ĳ±¢}ðRÖZ¼¾^ŋă²×ÎóÀ{æAĢl¾j²^Môf´¤ƨĔ˂ʬܐĖÙ͊Ь঴ΚӸΰѦԐŴӎZƄwS̤ƑƴÇƈÏ¤ÑLʊgǞü˰űlt­ÂÚ¾»¤¡¢¿êɩ¨ÝǊ·ÊÍºwÄÑǖ©Ƙύʦřϓƒ½¤¯؈MȠØªÄ¼Ä¾¨\\ǌÑƌġǚlêÊòh¸hɚŕ¶ÁÔYʀő¦¯äÌe՛ऻǤíEÄhJ}¶ÖƗŴģ¨×KÅu£KÙ ġ]ß°u¬½ŁcǅRß]ƥƩܷŻΉȳąĭīśĝùµŏw±yýљƵʡăuÍĊ̱"],encodeOffsets:[[-74892,-6621]]},properties:{name:"Peru",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@έƽ̀ɚîÛ"],["@@ɂŕĭÏΗêʄļ"],["@@őYŃȼȎÞɠśȗƣ"],["@@ōýbĦĬg"],["@@©Û·ôržêfFƻ"],["@@ËoKľØč"],["@@šUWĀźé"],["@@éœķöǢ"],["@@ƾĤ˙Ƒ̙Ȑģþɿo̵ŔŽXίͧ͝Eҗ̩ࡰŕÏʷӕǪȋâУˑ͉ĩЄʯǍ׷̜œƠýӶȆ͸ғΠơSďͳʛʘɅƝ©ǊƧЉہƫfȚˎض֘ǲŜɸ͒ɨΒɩ¥͑ͰƲǨ̶˜ŚΆɮēÌƄʐWwخ҈λ"],["@@ÉÔèȄĊɑħ"],["@@Ѕǁƽrĳǌ̚ˌƌrȮŏdȩ"],["@@ǏǢƠ˒pѳ"],["@@Ļ}¸ƺƀÏûë"],["@@ģ¡AƶƐŐ©ɣ"],["@@ŗIŅɖʯƎƋ˸ÒŜ͔ŀΖƔ͐ɰĜɈÏ¶ţͿޓWɑƞ˩ǃǫ"],["@@`Ѥո઴ܽʯɫˣ֭"],["@@¸ŏáBjŎ"],["@@ýÓŎ̄༾๜èиȺ˺u̡ƈϟˉơƫɡ·ŧ̅ևऽۇ"],["@@űč´Ŏþ"],["@@̘|ĆƉ[ΧɊБŁıŻƬ˭ȷŖLԨĽƲǻīԦȴǉ"],["@@ĿMĻưŴlĈǍ"],["@@˼g´ŻɜĂȽˇʟƓۇ͇Ų৖ƿǰĨϾɽ"],["@@ÿYëɚƦFǵ"],["@@ņ¬òǩʯGĿʖǸŏ"],["@@șŪƲ¨Ƶ"],["@@äǥǺŉԇè̙ƌǁхĄǕǒįǼÞǨң͚ŵΖߐ"],["@@˘ˑJǵӑ϶ˇʓâքЖʝ"],["@@ãȽùȎàɢŦ°§ʡ"],["@@HñƁʸźȅ"],["@@ðŷ·΀˘ɇ"],["@@мːʧdбū˳Ɓå˃ʖɫքʿȲÀĖʮ"],["@@ǚÝġɑƥľîǲ"],["@@ƭčŗŎƾΐǊǧÁȧ"],["@@č̋ÿ͐ǎ"],["@@شˏǌĞƆĲyħڙ̰ґ͑߃ґɃXɛǷ́ʮӳËŽŜ΍ϐȧÜÈóŶάƜʴŉƘοǐðnȎиȋSīɍÛɨ̓ƃ̜ÙéϿƵļÒȐՙņŭͮӋϺŃkǘЭÉǛȉ˞ԉΖɵăƁǋȽ~ɉǤǟãi͒ʲʰfŸ̛ȤJͯű{ǁ˸Ɨ¶ʹ୼¶ÒˢɻǬÀU౺ȰܶтĜ"],["@@ă«ĲƘmī"],["@@TùſîŬL"]],encodeOffsets:[[[123137,5383]],[[124068,6222]],[[125024,6583]],[[125888,7587]],[[119890,8073]],[[120172,8412]],[[127803,9363]],[[126667,9460]],[[129031,9545]],[[129085,10001]],[[127585,10023]],[[128707,10153]],[[122795,10738]],[[125594,10725]],[[126087,9282]],[[126332,9677]],[[126728,11555]],[[120127,8643]],[[122739,11802]],[[127565,11616]],[[127600,11769]],[[125437,11894]],[[122920,11985]],[[122983,12460]],[[125599,12605]],[[128246,12829]],[[126686,12583]],[[125025,12652]],[[126746,12753]],[[126241,13162]],[[123602,13803]],[[124841,13866]],[[127339,13960]],[[124963,15366]],[[124008,19063]],[[124848,19349]],[[124438,19827]]]},properties:{name:"Philippines",childNum:37}},{geometry:{type:"Polygon",coordinates:["@@áŦŔƾ±ˣ"],encodeOffsets:[[137826,7560]]},properties:{name:"Palau",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȌġǧɡĨéǌ˨ŷ"],["@@ƅÁćÞɎ["],["@@]ßĉĨ"],["@@ǺÂÅȧɫĒƷ͐ʰʻ"],["@@ɔÑĘȿϩÔöÑƨü\\"],["@@ȡŎĊžĤµtȕ"],["@@˒ġ^ŝϝǘĮ¨"],["@@dÑĳʀĦĘU˅"],["@@ɝĪɔoJù"],["@@ȵǘ\\Ŕɖĳ{Ƿ"],["@@ȧƧ̿ŢšΎϋ̈́}Ф̬Ƨ̼ѱ̘ȡŔʳ"],["@@ƝŀłĮȭ"],["@@ę˔üĆĂǡãǷ"],["@@ŕ¸Ħņpƽ"],["@@ǜìʐŅ¯Й̯ɅƆʁÇďǯę̍Zʉً̯˿ۏwɩǲʃٗϔĂǔުĥЈ¼ŌÜņμä·ćȧĢǷ׼ÞΪФ̂Þßֶ˔ă"],["@@qóđłĄ¬ù"],["@@AᇴħƔĨͦCᲘ@ǌྴׯԖġҶ̽ΊiԠѯȺζοkӣ໒ջȢɏ̇؏·ƑħȤҙ޾؍ĶϙǢşŐ̙ԬhÄϹؼǅȿıĨǧࠌȇ͹Ñǜǯ˝ŗʫÞəȌအʄكִ­ˢ˩Ğԇܾࢷɲġƞ̓Ä̯ǅЧʠʌНĝí˅zĄǙࣷķƩżşyɦƣ˖r˂ŇɠʍUǗ؁̭ΕƄअ©ƁĒ"],["@@ÕÛŷǒÑш͛Ҧ৳وˑøäƔ২֭ࠠܕĬȷƕͻ"],["@@ɫBǡƾɠøǞïPǇ"],["@@̶ĉșĻևuĠȠΌ\\"],["@@ȁèĲƺǙ"]],encodeOffsets:[[[157221,-11751]],[[157984,-11634]],[[154521,-10818]],[[154707,-10260]],[[154142,-9570]],[[153954,-9721]],[[156295,-9174]],[[154734,-8943]],[[147033,-8685]],[[151579,-5966]],[[159701,-6847]],[[150709,-5562]],[[158359,-5563]],[[149524,-4839]],[[155562,-4399]],[[156335,-3208]],[[144360,-9337]],[[156637,-4870]],[[154048,-2725]],[[150598,-2007]],[[153360,-1590]]]},properties:{name:"Papua New Guinea",childNum:21}},{geometry:{type:"Polygon",coordinates:["@@βছثНВȷ¡ѭºǩδοċÁĀɹıķɕ֥ГˣʗµÉX¯ºŉX·uĽŢ÷ʷQÅRϟņ͋ǞҹNǯēыÐʱǡʧpdƘ˧ȎʗǕˇĤɩ̲҅ƀŹÁȹŨÚǆʋ«҇ƢĠǅ̍œέ˒ǬŴřèɱ࡛͸UŅñqñEJZĔŘòy˸{zƱ¼]jzêŗǤŴȾÓƘÃzg`Ò¦ĈėİɕŘĿĄV°żĀÚâþDdDÊŽϒ˘ùsƸ̅ņဌ˸̾ɜ๜ʆμŻ˕¼ʹ̿٤øԖ࿮»ӂSN¶ÐKêoexIêcĦòìµǟ"],encodeOffsets:[[24049,55235]]},properties:{name:"Poland",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ūɸGŋw"],["@@тÁPś̍ɥ਍jÉ̶ĘŔࡼ¯"]],encodeOffsets:[[[-66995,18541]],[[-67716,18888]]]},properties:{name:"Puerto Rico",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ƈȝϛĳЕЃ¡ܗ̯ŋۣԃߋ̉ơӗ͢ĻӴϯ˯˅ߕqϥуɝĆɅŕ̇ȲΉɕĲ˓ôǾŴџ¢̈́άФň͕ĴȮО£ȨӯȚŗťɵ͞ѸϤऌϐوېǲȎȥࠀťŠȂȳ݆͊῭͒͠ǚҨ˾ęLŭɾǫ"],encodeOffsets:[[133660,43557]]},properties:{name:"Dem. Rep. Korea",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@мġ˙ăǩĖĐ"],["@@ϼGQÕҙAģŌǔ«"],["@@è͝GÿĢͶÇ"],["@@ǛÖŨ´ħ"],["@@ʻļɒpªū"],["@@ũYlĒľ÷"],["@@έƣٙĮͳõƸͰÉࡠǴmŋĀΏÏǬȖøȖ˨́˯ȃĻĎĘҒҌٸŸ՘ÏߒōÆĢƪіǒĨ˙ؾlɎŮѺÜɧˤş׹ѭĲ֓ȇƧŘũáȉţĭΗiҎԗ̃ԉȦɵŰNУϭң"]],encodeOffsets:[[[-17603,33658]],[[-26264,38750]],[[-28822,39376]],[[-29328,39450]],[[-27725,39571]],[[-31884,40353]],[[-7583,38072]]]},properties:{name:"Portugal",childNum:7,cp:[-8.7440694,39.9251454]}},{geometry:{type:"Polygon",coordinates:["@@lÕ\\±«{p¥pǉÂîʵĥڧYʻলŷ˞ƺ¬_ïĚñ²_ǖ@ŤwĄđNđňƃâޅjº¹`ė@Õxï¤ä[üYĨhĊp̜ƊƼõÎÍňÛɑŽۅĉřǳIţaίʭɋͥǝȓʑßq¹ËµFåËåµÙCƋúǳHɭțนɾνĲpÂͬМ˾ȨɈ͊Ӣɑ˴ଫӘףЀߕȢȳǜ׵ЌΓӎƃƤƙöíºB|sx̾ঘBцѦޘเ̈ޖVވѿj̅"],encodeOffsets:[[-59555,-20648]]},properties:{name:"Paraguay",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@đëì]~ɼɘ D_ƫȝ"],["@@ÐȠɆŮÛÊ×lÏkkNOdÔȺ°Ƭ°ĺņØĤkêi`æ£ÊKjƃķّӏģ"]],encodeOffsets:[[[35173,32044]],[[35718,32121]]]},properties:{name:"Palestine",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŨIĿƅŊȥE³ƞɌ¶Ɨ"],["@@°£Ə¢ĠB"],["@@ǒʳóĢŔ"],["@@ËÈÖIć"],["@@ŧemŎƴG]ğ"]],encodeOffsets:[[[-152905,-18114]],[[-146883,-17018]],[[-142360,-9927]],[[-143437,-9652]],[[-143434,-9124]]]},properties:{name:"Fr. Polynesia",childNum:5}},{geometry:{type:"Polygon",coordinates:["@@÷iíkÏ@³RlÓì©Ģ¼XýіȾӨɒƠʀȿ·ͅľЅƱ͓Ƈ½"],encodeOffsets:[[52499,25198]]},properties:{name:"Qatar",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĘēŒ¯˲©MÎĦiˢĨƲbƐ£ŚġůΕёï Ǿǡ³ʱধ̧~˳Ǹϫ˵ŮܷƇ׿˱ᓝƐ§ĨƈŊ˗ƈaVǋƾºĘÆlæM^Yáŧ²ū}ųīěgƷŀɯħäƍCvP¶HàNZjƧøĞƲl՗ɴgʀ]R[SeUeE³ÑøȇĘįŒrȒĘŬĨ̤݆ਈ݄ψƮºìæÂEǤāȄLߚÃʹǧТƾȌlȂɈtÖÒ¤zúŘvƪ~̦ėՐۃϪ̥Ƙ˱Ƒ࢕Śů"],encodeOffsets:[[28890,46542]]},properties:{name:"Romania",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ýÎɚbƛï"],["@@̢µջ˯˝ɑ}ƱāǦظՄ"],["@@ֻ˝ɋ[ٓӕ̊Ϟ՜̶ƂŎķɤjШȒtŭȧ"],["@@ȭ£ѠήӺƾܫӇ"],["@@ɻËӆ˂ʉȵ"],["@@ǗcǶ̒]˭"],["@@ѱɕŻ¬qǢϲĒΖ̸ƧЁ"],["@@ȥØǬŊĤeéƻ"],["@@ӂறƙ݉ŦϛѢଋݮൣ֑ԠˇÀՃħѿृa˫ֈߋɦĂ͡ů˧űѾףŢсڃȷ҄Ǫׄ×ϔǾΨ˅ئɴیÛࢾŠӼПќ½ҌǐѪҞˌƀ͒¡ưϖ̷͔ΪĨ"],["@@Ļƣ˹~϶Ŧ"],["@@ɠ·С̵ɑǮȕé̂΀̨ĕ"],["@@۲ǙдIɐƿşʷGÏðŕԇFࡹಉÊ̶ϲҞÖ͊ʖ¶O̥ʟʹáǌ ˢ"],["@@IũݥԎѲdyū͸˛"],["@@ĵǒĚÛš"],["@@ƏÿʒьھǦ˯ࠗʁ"],["@@ǣȿƤʌ"],["@@̳ÀűƾӘ±±ǋ"],["@@ަƻƲǩԄĹƅɔÖӝȒ܆ɫ¿Ïሴҝ{ˑ̺äŸóÙ؍ΠïĠǋʺňhȱʔǤϩǔŪʼϵŮܶ°ѮÛƓĩÄĩÈź֢ХĦ৲ŏઊӵāāʬ¶ĿϺu­ŧ׫ŏŁȳىǂˆʣڧ_݃ƼҨȍÛƯ̑w͂ÔƁܹșʆuċƋоǷ˱AƏĨµǕ˅©ɀͷƥ۹̒ۗîϫǬȩϮ߳ŤεġޣOѵҌǊeȂ͚˹Ƿɳǂƹǳ̗lęʃπ͑կϙ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶBȶǜ"],["@@՛˛׹įЅÀĳ϶ѴȎ͊b࢒˙"],["@@͓ъ΢Ȟا"],["@@ܑìНȤвĬࡢőƣʩ"],["@@UǫګIœŪҥvεΦѺŤ୸ѳ"],["@@ʐűƛȹٯˈռä"],["@@ƫɼ૆δ@қख़Ɠ"],["@@ȻëխĚن¸Ťå"],["@@ذģԢʣཡȹӫÖ@Ҝ़"],["@@ٗt݆˄Ԯů؛Ǉ"],["@@ܱňҀȲ˲̹"],["@@ЕĐdŒٚʧǁ"],["@@ϿŷâԸ"],["@@ठěʵͧ׿ɍėԩং۟ঞͅЕŝٕŨĪƕڿŀ࣯W৽ǌʌǶТطǸDǄఉ¯ΩƢÒ΢֜¸ΆǨɊ˨˱ļڒŀıɢಬǢѠá"],["@@Ցµ˒ߎž־˷ߝá"],["@@঄˝Ğ˳༕ä޹Š݃ąતіऎ~"],["@@ؙh˨¼Ͳã"],["@@ԍßǹˆ܂Lyȱ"],["@@ԕʱ੻ɐ͂VǤƼબů"],["@@ͲDĿŷ֙Àͨô"],["@@ǍƟ˕¶ƎϠÂNă"],["@@൘ƄƩሜãƩǱࢣƟધxᅭͰ͐͜ɐǯ"],["@@йiȺϦЂȩȁǑ"],["@@٤Ǖ֜юসɯࡢ@ඤ˩૷У܋ÔχȄǴ͂ՑkğʣޮΡջűСƞกŧӱİӧʵࡍŠ१Ѻ˼niͶπTūǒծƆײèै̱"],["@@țſࠩþÎØॸU"],["@@®ƝҿƪђK"],["@@فWࡐŒɍĹ"],["@@㎅ޡ࣡ʵȌđ۝ʛιêǗǧыZêɫ܍ǳUȵϋÎȖƯӟʕ҅Í஡ƀקđҋΒ݊ǌזϮڞÞүŌޔˤׁƖȎÎ҈ăɰɆٚSϜ˒ۖǊ୮Ȯ֎qɔǮ๨రŢᧂՐ۬ÝϦȏ঩Ё"],["@@࡟O੒ƾȱƭ"],["@@̹ЊìďĹ"],["@@ƇȞđǈըƦǂАC׌ɯٮϸŞ;˾࣬ʟƬĎÔ̪ɀĢΨդʲࢰӮΎƽʶČȘ̹Ķۙɵ˗RνƃșțౝKȓʺÒ˔ɃɖBɒ̛דкη]̣ȎסϗȞ΂ɅŠ}̜͏ͤө੘׉ֲӗƊəÍৡΌᔹɗݡйuŻӴÇĀЃֵеݹ৏ƶŃïǱڷȇӟ˥৅ʼōĆǙ¶őéDǩ·ŋÝsŉLƅTÃ`÷ɫǄɕĄϏ؉ɣŅÅŃÉŻÝÓĕÛş¡ĝĝaǟtΑĝճçý\\ō©̓řıoɿÞęGĹ֝ČÙvǻԻWùfĭ°χɐ£ʚʇʅHĩF÷đ®ċĢȕĮŗ`ǥUų[ۭƜયˏϏ_ŗvÙnį\\࡟͔zŐďĤiȄ¶SĞdG¬ŏ|ƃȿǃ]܁ɖÉZȩHǏNħfǝĮۛȸɅˇҋˉɷнńŉÞǭ¤ÈÚWºo{șȷʍէɭŵUȇŸ֝dȽĈҗñΉpƳĞĳJýI_»G¥ÄǭŒēˬ९¢ƋƤëXÝUËµw¯J¡ŷàÑ¼¹[ēű͙M̛Ɵ­×DMÇUǱƷûßc¹ԍŇ·ǅTƻ×cĕá£ŷ`mÁÏ}ďyVqpWáǕυµÏgĿñ«mķC©FȷċÿRבВ¤ǶгɷߕĮȱϐ֕ƬͅҊӳȂԃďɣƑࡷXßǼˇX²ȈͣĒʋġqȥοƝᅁᐴିوÁňȞMƶʠ୳̑ǻǏ٥ȹċƅбŎϝƟčɔ΀ˮЛíԛƪƧǉɕ͒ƳĵމNþ͘ϕצұţৣȐ٩ȓ§Ʒᖭ̓͛ʃՃᒁοוÔɃͭҲĉʱÝ}ƃϰ¹΢ȇࢇɯʟȄ˵߷͹κʁࣺ˛ƓϵϓƑѣa̭ƞȷɥʏõÏņӍØѱ̴ѧxͭǝαƨѧڱν࢙ήñЍΑъکψ٣@̏ȒܿȟƱƠ̵èҟσػǥƥșוȩŒֹΣÏՉѪɵiґ։ñˣȖǻˡ́ͣͼƯȒЯǄÂּăږ޷͵caŵ׆ɥҡɁǃȱܓ̍ƛĄÈųƭʿե׵ԌͳžҡƺˢƷ܋ठ৅ځէЇêӋѾˍàǽĊӗǺG|þȬkpţȁKƵŪõfŇÓviSáŉáþ¡tř\\ƩȏñĉkyōJÅnknVYƅ¾ÅϿŨõ¼Qșàয¦ĵ´đ¶ɱšş¾Ź®Ӂh»ËųWॿۆ҉Ōˣɼ̗GʓɸӝƮ˂ŜȃèŪ²̈ŽθĘǀːξæÆĥĔƈʺIӡˈŭȖؠx½ŲܖʘćƎƟFăą́sǮĤҡƛżѦҀȶ݈Ʈ͎Ĺɰǅ¤ŮǼǰ\\ˉƾ΢Ȳy˚ʥIԗʆɍևȒǱōԽЮګǝхǘѳɻ֦Ȼƈ܋ªýΤɶĐ֍ӄથʿɍ̟¨IrÉĂ¡nqxPȄiȐ}ûÂ÷Òµ´xĚĺp|Vζ÷ʖ]˞ƮĞÈb¼Pɇˈȿņǩ`ƟIÇfÒŀXÆW~tƍ°ȋîĕĄĩƊġäĴE^}př ƻôOn\\°t®ŰŖ@g¦åðÁ²GzVpäÈLƢɿĆ͡ƮǇQėR±YµãsħeůÉÍ¹ºlżࣷİŗò®İS²mÒ·ļOǯǐUê|\\ƕkǈ̌P¬SpɏĨwà`ıH¢ŜŤŐȤÒɵ̎Ëӈ׼ӲśĠʢɶõƸƀΰiǘƞࠎŁ¦ìϛȦշEΧƸŉʪ׹şཤࡔ఺޺̆ͼ̑˖ৃѶњʊTƮЇȲ˔ϿǠȈƪǿĔĞ͂͘Đࢋঔޠٶեͦօņǵʤʪ̝̐ÂҪĲΠɶטŔþǠֲćRȶ֬ñϚĨYŦ࡮șýĵإÔǚǏԺQiđЎ¼ˁ̟ҘȮᆤı༼пט˯ड़ʅɊ[]þӒˍӰıͤчƛ͏࣯ѵௗșᥟ˞ׁǸ˻»Ď઩ǌȁȰࢇÚ๖׿ʛħلĕӢɯîƷ̵̹Ոߥ٢ĕӀ˩ࣞǃѶŖĀŤĝȔ٧öҹ˼÷ǂ̈Ȟᝂԃʦǎ͘PիӒfȼආѴؠͬ࡮ĕΜƑģŃʪfɖő˚ްիˈΠ࠾ܷΜ׸ĿༀËڤՋঋûՃ˿ֈȑ˖ʛԜù঎ƨȀԞ߬ĆáǸͶsᛶ֘͸ƽ˚Ŏͅľ௪͚ׄE׍íŒЇ֝Ɨ৺x͖ýҴ̮Հæ࣪āࢠ˰ݒĮ˂ɣɫʛՄûƜ̖ӾnώɐٙԖبɌ᪂ʿפʋᄚ̽଴ҹ٦՘ԇbҋњ͋ĖҹĠƗŝ͚঺šĊυeÁɚൊԐ૾તłą๚zાȇȧ֭ץү۲гŅဵ࡞УϝʧÓΏਁٓЙƤɹۃƏ˽êʸŦ΁¹ͿƆևaǡƲǭ४ȣࡦdҸħ;ðĄȔୀκʂΚ׎̐ͅռǂ˦౺Ȍ̐DټёÃׅԈǫॴh૫ƌÜςˤÎ˿զ൳˨ӣHԗůࠓ¬ɑֈ٠ٴ੍ܮӮʹૐʦǣ֖̮ӶҳϽ˳¸ԯആǵֈؚȥԸHŢÌзQ̿ɮ๻ʊͳ̞۶ĺހǑϤĮǻŞѯikĶوƼ৔F૸ʓݲ̻आ¢Ўăމ΃ƅ֋¶ǝծҸƊ̧̽̇ͰĽMƸ֌ɨӭҶ͒Ӥ˫ǆұ¨ҩ˸੡Ȉ^ϰΕʂƆ˴┰Ÿ්Ɣऍϗݔ˥ا̌঴ƄϚǒ࠿ζӍÔͨŒфĽ˨௃ʀΊƞϚő͞ĆΨȠѹ°ÊĐ֒ᑜϲ὞˒হE̴Ǆዎк±ΟǃܖĨWĩᆒ̐ञǵȕȗʼŎsǦࡧ̂ႌيï֛Ĳ¾θശѤ୼Ȇႜ˷༙ʍᘪÉШĝࡡΏસTϮǺ᧮§מǧŵċ֪Fˣ԰ǖʔ̟ʘ|ʏ̑फɘцɑʌОƉڧλᣭ׋}ŷഡЍޭÕӻʑЫm࢛ѿӄº٨ʬ੮೤˄Ѳ_࡚ɒউZҰɰڜßÚĪΚq˓»ƢşظĳհǼǒ£͒ɟɓǁˬħ̧џҌǑϗƠ֞Ғ́ƆໞǔᲄƑΏÕuǽૐɣᑔĉаvřĸҞÕϲȨōЊࢨîࢴʭրĎʢǵЖǴ׬Åଢ̳уǽΘmȞƕۧƛܨćňɫЍñ्̖Ł࣐ҫʤƊɀƩԯÛޚҙٴȑȂÐɞǻ࡜мԲֶ࢈Я࡜ܚȈҀT༌УăĀЂĊͩ¸ˆǲҞΰƹٲ ɕ̩ͦÈۢȪࡗwƔϮƔఔúɫʰ੆ƛ⇈ɻcû௫ԙĻŀÇᒌĒ׽̍ĮǊЅöCʇ׉]ŀȗݒĦৄѨሪƍѠɥ߿čãĕൎƝхʙܶżԬÿєɛˣغů↨ɒଐ­ૄȽվЗɷσ঴ɝŀяɲĭϡϋ׮̮{ЌՈȜࢊĒᴴǷࢊȔϒϥࡐǉʤʙެϪȂ΍ҎΟ˜КᚔʅƊļᐜ©ᬐՕؐɳ@ᾕకϵ٫Īܱ̪ҏג¡ƼřŻÙࡏƤ౗ɵ౎ȄʜǗǭĵઊƬLˋɈŝ̜ïƺŪŸē̎ӿʓ½ʬǯ¤ŪԄͥŇśʾˑϙ̭ໟɺ ƶ˅IŖǹᕩإݟěЯʹɱÀ¨ƁїŧEėງՃɍЁ̱ĐًѼࣷmއƕߡҧŗļǺь੣͗ŋɉέǾΉƍlð͡͇ȷûЕ्ܕƱ̷β̟ɚȚӔƃϑεXЛŌŷˬâϣʍǁǧlǱƔΈʒ̯ťȕϋƝ̡ӽ͎سЙȣ܏tו̑șͽƴջρĞ۹ˡɯľŘƅĭЫ͛ӕ੍ڭċȏΊſैɇ̚ЫှÅОάଆܮԄņƨŭ˂ԸhǺȄԞU޼є՘Ԟྀࡲ˄˄ൢϚſĠϞˌǛİͺۦ͠ƬԢąǬÖ࠽ɐࣱŹˁևȪǇƟŇȕŒϳൃރӽīǦ͚ӵÍѦ߀ٍƥ̧ǮळƧԍ͓Ľ଱࠱صʱ֫җťʯےáǄɓםvϓşˇŲ˫UҗʍлĖțĵٕǣǨड़Šދ˴ܩÇƸ¾ࡳǶӝŝŞţ΁­ƅȄIȥġЁƀرūࠏǂЧʉеȲጥԣŉຑ޽˿Щ຅܉ࠃۛᎯ৑IǯԀůߒßۇξd]̢ѴĐ˝ƷжŹӥͳה¶Ӟ̘şˍʛǜZȾ˪ή֎ė͚ìֱּ࠘ʭǉɷ˻ÔΔȹĻͻ̒ɏıɏηʧ΋ۍĔ׽ƋƝ°˅࣓̅೫௻Ƚћշ؋ಗૣɣīر܇षӟ܍ɁϙƮͽPJβωǿÔǨٽ֧ϗ~ŀőŭȃ"],["@@ǵÕࣇè੾Q"],["@@ЅΙ୚˂նɥ׎½ƖˍӑƇ࿏ŵ೽Hෟǹჸା֊ÿźƪЖƭ"],["@@ૺű߃O͵Ƃ"],["@@ળŴŭǐᓘŁवȁ"],["@@ો܂ĨЊų"],["@@٧|ՀŒŨƍ"],["@@mͯߎʖ௸ɳ͉ϟ՝}ݚ˧ౣƣᝋʼѕک̌७ĀྔԐʜÇ፤ņ"],["@@зì˞ÒƚŽ"],["@@ûɻথ`ǴɈࢮT"],["@@ফzіǄ࠼œ˥é"],["@@Խɏ˰ᆲųܛqχǏ"],["@@ԓFÆňҎō"],["@@ࡈ¡ȨơࠓŎೃˋƟļࣃᒌȲ"],["@@ûǽࡱǕٯÜՅÁµ͖ᓚd"],["@@நȩᝣ˫ƖǇਭåƀƂݷ±̅İ੄ȔৈYƂʲࢄĘ"],["@@ޭĴŰࣀUɅď"],["@@ࢿ¤ୈĖˇŹ"],["@@ๆįञȱීŃ৷ĢԻŐ֤ȴ"],["@@ʶǭէÇࣙɄ۶ĐӖÝ"],["@@ٿźᇮ̀ՔɟჁș"],["@@˿Ý૓Ěඔ{"],["@@૾ʿ܁ȑɰəᵥɛᅋ̌ศζ֛UĲüᏘͰՠTؐǣ"],["@@وŅף§õǕႭfȿļጀȢ"],["@@ಛÐഔP·ß"],["@@ƉĦॆvĂāࢽ"]],encodeOffsets:[[[150236,44794]],[[149717,45566]],[[152166,46406]],[[153281,46738]],[[155651,48023]],[[158526,50496]],[[159664,51510]],[[160159,51874]],[[146188,55700]],[[140471,56423]],[[141252,56415]],[[21746,56591]],[[170650,56156]],[[154205,60436]],[[167563,60010]],[[36676,66747]],[[71702,68099]],[[-184113,70595]],[[51472,70847]],[[165343,70555]],[[173262,71251]],[[61902,71614]],[[54174,73078]],[[183155,72527]],[[141271,73224]],[[-183169,73295]],[[79496,74027]],[[81410,74468]],[[76453,74623]],[[123148,74844]],[[56648,75068]],[[72371,74850]],[[145598,75670]],[[85555,75850]],[[144395,75776]],[[116109,76187]],[[88733,76781]],[[84145,77230]],[[150319,77180]],[[139212,77220]],[[143410,77649]],[[98850,78109]],[[115178,78460]],[[152730,78500]],[[69392,78068]],[[98597,78876]],[[91663,79042]],[[133824,43318]],[[110281,80007]],[[105354,81157]],[[78079,81563]],[[94908,81598]],[[52644,81863]],[[61122,81875]],[[100019,82083]],[[51254,81997]],[[58449,82280]],[[54806,82110]],[[59348,82047]],[[55722,82405]],[[48581,82795]],[[63660,82775]],[[51485,82870]],[[81948,82789]],[[62609,82894]],[[56033,83063]],[[60030,82987]],[[64895,82637]],[[93765,83089]],[[98844,83022]],[[59198,83504]],[[65179,83568]],[[59695,83677]]]},properties:{name:"Russia",childNum:73}},{geometry:{type:"Polygon",coordinates:["@@aM¡Ýľƅà{ª½¨ĕÂӣkĹuÕÇ¡PµSÁoEŧòʓēƿÞ¿̓ƛßʵ]ʍǴóĽĵîcȢɊǤÆЌ͊˨Ⱦ¬Ėœΰͪ¬X¶EA"],encodeOffsets:[[31243,-1092]]},properties:{name:"Rwanda",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÔôĈț̙ǪºȊńʋ"],["@@ݶęȨϧ٬T̮իWƟφș¿¯Ȗɍضѥš`Ǧ̵·ǩĽVѶࡱĞĻ¸ÿâãľǍk´QÐ@îløjÐÖNďȗɒ­pǩߴ३ᒤʽèèϤם֏။ᠽ࠽ុΑܵΥӽשř˱ʣƑƕNȻʾ৉͙ŀਙđлǈȑƁu֛̫ˉыࣂҙϚѧژЃ֭ࣞі̑ľϝӬƵ˰®Ǭƅ̦ØװԇऴқЊ́Ě̥ѺîŠį˦࿿ᘲϩĄćÅ˜઎लŷǶżǌŞĮƠĤƒª׶ňlbÀŒäƘbdhdǌĂİ´сѐ̽̈ūŘɎÄɺÎԲžɜÈӲŮZŰİȊ˰£˖¡˼±ĠഄڿෘਙߊսൠŉƦ"]],encodeOffsets:[[[42996,17117]],[[47649,29795]]]},properties:{name:"Saudi Arabia",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@²·˦БAÍęÄSĹªܣɺધड़ۃƿƳsWwWuµmi[ЃŃȡőµƯƋIá_ĝh©C[gŻFÇùƧt˟̇޹ŝȕlǉpǟ¬ЗͯఽϣőҷڳƱߝƇıǗŒȑȅϽȝؕǥü̘³ˎٵӄ³ܢłԤБL^ǵ֑EɢʝèԷ৏ઑЁËكҠͯǳōʝбƥŕɥڛFƙɰڳXΑŉةּ½ȦիÝŧɿѥɇݙ͓ȅԟŴÍʤżȎpМډआÀΨ˥ȠUΈĝàĵӾΣdđĦ͸ҐĹЂζ̦Ɓ͜ʐƠɘτD̸ƞƜܮfRṴ@о࠾NBဲᢴ@ᢲAƘPŞǚð¯©ŷ⯀B"],encodeOffsets:[[37757,22525]]},properties:{name:"Sudan",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Iޓĳď֡Mʁҋݼ͟ƊʃլӅɰګʆ̫ƷƱǥǝȧȟɓɉǟǛǛǗȟȡơơá³Яŀ֋ƣǗƽ˳ʂɁĿͩĞˁʛåŒƝ@ßǰˁŬѣԖǩtȳȁлĨʥƳȡvͻʜ͓϶ɑԪՉ̄ǥ͘®ưࣩږćŊhɂ̇ˢҽżŧ͔̾ȆɈݚʀѦŨլÞ¾ȥتֻΒŊڴWƚɯڜEŖɦвƦŎʞͰǴلҟЂÌ৐઒çԸɡʞ֒F]ǶВKŁԣ´ܡٶӃ´ˍû̗Ǧ"],encodeOffsets:[[34896,9689]]},properties:{name:"S. Sudan",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@¬̍ǬɃ¸˥ÿȯȈˉǒ®ȶΫBҋࡓÃҁǊŉkŦի˯BʅB܅HƵùǑĉɝ«ʯhć]ƥÙĕgŕb¯S£ƞˊìŽĘũŉgДĪøۄFjƘѸÒŖƈݼˏΜƠųŖέםʸˍíçşࢫBǣˊŲŖƣ̓ՖƫöĉÝùĔ͜Ɩʮ̺ɮφĔânưĜǞ˞ЄٸǊ׆ąδεĦr̆ħʰХ̶υ˜ȯņã"],encodeOffsets:[[-12575,15165]]},properties:{name:"Senegal",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ˍKƘĸŶī"],encodeOffsets:[[106465,1364]]},properties:{name:"Singapore",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Ͳ´ŻːVѺїʋēڧѸصƠZŀͯސµ"],encodeOffsets:[[-37993,-55363]]},properties:{name:"S. Geo. and S. Sandw. Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ùMÚĊ`û"],encodeOffsets:[[-5828,-16381]]},properties:{name:"Saint Helena",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@őaϧːӺʭ"],["@@ȕÿĥÈȜļĠă"],["@@͞Çɦ̳ӱĘȽŶ§ǢǉVĺΈƵ"],["@@NŧŧôˢƸɭ"],["@@ȂƇ͔X϶χƛÅ܅ƒǅʘ\\Ɔŀ"],["@@ȪŧʫºÂî"],["@@ŷ¤þèĊÿ"],["@@ƛ«yƞǐ|Fŭ"],["@@ƩŰƖŨTʗ"],["@@ȼʡ«ƿǶƋǬձԃծµΤĽƖƆ¸"],["@@ŔɝßėșƔ}ƨɋÁíÐɰʢɮɵ"],["@@ǳĀÆŬƌÕ]ƕ"],["@@ƩǺ¦ŒȼűķǙ"],["@@޻дУиɶ¹הΥΌʡǩ"],["@@ƋP¾ĮĎĽ"],["@@ā˷ĐկּӠɇƌɥʚƛ"]],encodeOffsets:[[[164431,-12081]],[[170121,-11015]],[[165597,-10636]],[[165425,-9856]],[[163585,-9495]],[[164013,-9211]],[[163010,-9342]],[[161903,-8892]],[[161167,-8922]],[[164608,-8513]],[[161550,-8439]],[[160944,-8302]],[[160449,-8113]],[[163717,-8739]],[[159580,-7267]],[[161267,-7506]]]},properties:{name:"Solomon Is.",childNum:16}},{geometry:{type:"MultiPolygon",coordinates:[["@@ΧŔ˲ÈĒ¯[ū"],["@@ÚăIy½śFwh[ĤmĬ̷ƩʋÅt[R¤UG¾ĒĴ^ÞUE{ţĻǯįÝʽȗȃ͝ʱȩ˛ࠓЖL̰ǽŹĒė˜ǉÎĽǺǀKǈǤʍ«qɢŮȝƘǸjĴǌǠĢǔ˦ŊǌʊmȚİ՘HÌer«Œśʐ͵"]],encodeOffsets:[[[-12826,7615]],[[-11016,9611]]]},properties:{name:"Sierra Leone",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ȰԞ͡P]N¹^§ErŐÊŀƈĝĊ`øIÐ£byÇʕű˹ىĐƤćક͂ʓƪ Ɩт˴uŰǰt"],encodeOffsets:[[-91507,14762]]},properties:{name:"El Salvador",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@įehɼĈɕ"],encodeOffsets:[[-57617,47963]]},properties:{name:"St. Pierre and Miquelon",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŝ¯©ƊȀƬÀƉ÷Ļ"],["@@ýìĄRŋ"]],encodeOffsets:[[[6820,124]],[[7602,1606]]]},properties:{name:"São Tomé and Principe",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@tƱ­ăĿƣ_ŧcĳO³»ĕũɃőıAMWQBqèŻR¥ ¨U¤uGÅQ×Pć¡·U¡̃ȏĪmuĕsyoQÄm®á¶¿ ±K¿O÷ùϳČȅĂбۈėѲ˿b΁תǪӈÑŸǦƜ͌|ĸƨğŞľǴȌώؠě˴ƻWǌɘþۄFټƱuʱͱ֓ňځˈΥ"],encodeOffsets:[[-55331,3717]]},properties:{name:"Suriname",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@]œƃÿƿŷįWƍ̩É˅Ƕ߱sſș͏ů˙Ü۫ȇÉǳ߱cԫȤɿ͌òǲƶȰԼ ˞ƪÚǊ֠Ɉˈģʘǖ˨ȍcƗʨoʲǢьÏǰĔҺM͌ǝϠŅÆQ"],encodeOffsets:[[23080,50251]]},properties:{name:"Slovakia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@õręVǷŷйǭaJàĿoĹ̿ŇÞÕÏãPZćuŋTſ¤ƉkťĀ·âmLiyãíµqЭ«ʧöɢÜYòƗĤÁǂùKkZOnN~¾¦ÌfrEhǯkĘƎĈØ\\j¶܌ĵ̀ǦࣄÒŖƼǆKȜ̛"],encodeOffsets:[[16913,47616]]},properties:{name:"Slovenia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@će˚Ԧٶзࢯ"],["@@əŇĀʷٗБŞƎűЊͶɰ̨îƨã"],["@@Ïµ¤Įǒeƥ"],["@@ࢭÍכłūɝׁǃūǕ´Ǝǉλˇٍ͎̃ԃᅿ׃ʙƳŴčʗęɛĈŌʋǟćΣLȈɳɑ̭úƵɥÇůĸܿΆƑʜ®ݮӁİɥࡋͯԄɱʇવϣٛc׬ťɫ·@޷ʫړѭӭ࢛wŇ̑±ƽŧłʯƗŋઋ^ô˲хҖˤuŧƪǜXtƒϱʐࠅ৲eȆƵzďԶ¤øǊêŃƠbž̨įʬڰўḔʙҪΌ¶Ƥʖ؋̴Ůӄʭࡌƨʰ԰ͺΊÚَ»ƲƆÁʔΫİۤ؂Â۠߆ƪ»Ƹ࠘ӆɵ̸րЀҔǬӼś͘ӸඖǗ͆вșƠь`ୀџܚŹڈ΍ƹгɼýʙ̈ˋʍҷϤϓ"]],encodeOffsets:[[[16926,57642]],[[19535,59224]],[[19617,59313]],[[24736,67385]]]},properties:{name:"Sweden",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@Ħ»eɛÄȧNˍóz}MwţkǳZŏǹGɯ^Ǐ´ǯłĿǔ¯ļÛNYlR̎ʈζĴŚņô ZGьȇvX"],encodeOffsets:[[32715,-26580]]},properties:{name:"Swaziland",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@DýƅƪÔ¦îő"],encodeOffsets:[[56874,-4805]]},properties:{name:"Seychelles",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ӏї̹éĵŋ¶رƅܷǩ˷ᇳࢳ࿥ࢱϑÐӫ̈łǸМƔź£Ɩ͈òñðʴʞãǰƥÊ°Ƅ΃yÕڔśŶÚɸ®ÊØMƈßvDǌƜzƘɖÀJ|ēǎR¤¨ǐÜ~rĲSƒ±æ¥̶SôǒÆƾ¨ʈĜӘǫŠDǜ]ȾBŨlƺˤòׄɮ঴¸Ƣ¤ĜêR_jIķ"],encodeOffsets:[[43376,38e3]]},properties:{name:"Syria",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǂ·ǇFþ"],encodeOffsets:[[-74068,22376]]},properties:{name:"Turks and Caicos Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@QṳܭeƝƛC̷ɗσʏƟƂ͛ε̥ĺЁͷҏĒĥΤcĶӽĞßV·˦ȟ¿Χ̭Þ؇̓ó̓އݑαɹ୕ǁÏđȈƱқԡޑ½ܩεȩ˄ƕƵΝƧБbÎɜη٨ڃլ̗Шɢʎஊx͇̌ťʖđϸªؚȟւ͕Ѩǻ²ƱBōư˛ϒčΰµȸޜଶच঄ɖᠶȔΐ͘hȆΥӌǟఊࡊϖ←ႱỨལ"],encodeOffsets:[[24556,19965]]},properties:{name:"Chad",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@řԛӈ͝²ՓǸʽrႫÿIȺוŽßλŃϙ̨ǯͰĞцœǊƾڸˁͼĮüҢʗÄĠŠßĮլϻ͎Ą̈ßĂҾƉ΄"],encodeOffsets:[[923,11258]]},properties:{name:"Togo",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĥŁt͠ĨåuƷ"],["@@ĝƑmŜŌv"],["@@ĿOqƞŲƍ"],["@@O¹tWƬŠǞǩĹΟĬǟזIT½oƅö̍ȩ҇FòĵNťȡҹ Ų½ÀfȸȂŢĀRRļÌôŨ´eÔòôÈ MǢƁĚ½ĀgÄō_hL̸ǤĠ¶ì¨ÂhbvFà^ĸIŢƎÅĚk¨pĊđŮȑńơĘįʾȥÜƉ³ȉ_ǉNȣÎƳȒʱĐÉƴ±Ú¥MƃȊŉfCÏoćĿț@ŇïZğoõsɅk»­·ã¯ĉ£»k[S±«­ʛǜೡăʑǏ̧ҩǭsƎݝɌȳe˱ǔ͏˷и­ÿףҀ޿\\Äٺ̟Ŗ̯éȵȭČǕŁ̗rѧە།öࢯӦpżחŞƉäĮȫɠ࢓ę®·ɖąTwȊăƧɚΉԂ˝ЖJԔԻȑΕǏĹňωɩōŒÒІƯFĳǸ΅øëŐţȭΡκrȖƕĨŘȧbăȸƻČuƜəƠíǒĽôƃƓĭ¢ÁҖϰ஠°ЄζώΦ֨ǭ٤ɿМ\\ּӉզ̱ԮUȒ̮ƐֶȎŌÐƞ«Æƥñȅժ؛ے×вɑȒ̺ÐÒܺǖʐ̚»ҜìƄ˜Ί¨wǴɘƜĊÄQ¤Ĵ¿"]],encodeOffsets:[[[100771,8092]],[[102473,9817]],[[104886,12277]],[[102526,20805]]]},properties:{name:"Thailand",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĕÃÏÔMh^@Î_ĈW"],["@@̟ɝՏȔлƳF}åÇ·ly§ù¬ʩৢÀʢǉ֞Ǭk\\yWCȔ± ũɜØÀ§ê«ΈƮЀqłZĐ¨~êdƊWJ©{ƗǖɕğĩĘȹȌÉɄĶ҆ǗèܟȌǹȑŹ_TċÒÑʻr÷E±ΗćăPuløÌb[ÁX©`ĽtćQƟ­˅šȧȧ࠯˧œŰćʂŲڂ}pÃAćsÏIb®ɄÝŘѧĬˋ̅ǟŵ]²ķGč¿çÍœnƏǏ_őÑÇkó~ĝ]é»µ¥Qí¨ȁƔ£RuK}Ua[]Y·T­Sʁķó£]©oo£RŧÓġnĻüÙĞÔ`ȰҊ،əɘϢοÊŘʑîÌȾʘƀشíƨʪȖÎÁŤƖ˻Þը~Ë̴Ŵǚ̚ġׂ͆̌ʿ͉˳ʀƷʲ"]],encodeOffsets:[[[72361,40812]],[[72662,41205]]]},properties:{name:"Tajikistan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@¥GקȌǭˉɃIǵQřŕ½ÕƯщŃ¯ñ˝Ǉˑŗ؛ƓƗĥțÝĹ¹ƛā͉íǿǬϿ¬ɵǔçSSȼċĠºǶýϞٹKɹ˚ԝʒŹɐСƢүcށʶƇȲمƙƙݟ{ЙɯǙʵڇŃചƏɔ̱ŎƯÛầ̰½ŋĸ^Ȯнà¢ǵșɾÏ̂Ǯ՞ǜǵЄKɈƛѐµŢ̬fǖԝϖʓԊ՝oǍıŽɝѕ̙ӤӀ̰ࣄǀ؞̵Ӥ֙Ҙt࢔·ĎòŻю˜ɢѰÈǸʢϐǁ˓ˢ˚ĦĮٞϣՌĥȧɒƛĿ\\̟̬ƭڎɈò΀ƵӤय઀ۅҞƷબا̞LՔɏãǛ]ƽAşXġ"],encodeOffsets:[[68119,38245]]},properties:{name:"Turkmenistan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@΄ŶƋȧȷò"],["@@ěʤŞp¤ŮǱU]ĢɌʜǠÔਨĮ̆Ŧˤĝ͋ʓ౏һ˷ȣ"],["@@ÇƟÓŜŔ"]],encodeOffsets:[[[127014,-9565]],[[128070,-9740]],[[128662,-8335]]]},properties:{name:"Timor-Leste",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@êßőǥƀǜ¿"],["@@īAĎÚ^×"]],encodeOffsets:[[[-179365,-21677]],[[-178128,-19086]]]},properties:{name:"Tonga",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ݥÅ΀ǘlˮơĬ؞ĺĭƝl҇"],encodeOffsets:[[-62476,10378]]},properties:{name:"Trinidad and Tobago",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȡbpŴɮÅ»ď"],["@@ŻÑŎŜnÉ"],["@@ƇȅĐ֯ſǟŅŽ́ƃʛ२ÁȼĭϜׯЄȃјȡİ˽Ҟiؚ̦պȶĘèĴÛϜ״šŶͦ˄qĔतͺŴOƣĴ˒£ĆΣĴ¥բ˺ÔǕձחĪʍΎɅĮͥίҿӓͯÍȉɌ˟΄TƥȢĦʤˉ¯¹ʪÉCuǅOËKɇäıD©}¹ŭËǃõƍëƭû¯¹ƍûŏǋǛ§"]],encodeOffsets:[[[11221,34532]],[[11549,35588]],[[10522,32446]]]},properties:{name:"Tunisia",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʩ@ɀĐªď"],["@@N£ʂ͙ŷȥĆ̗ԼïД˱¤«ȕĲṶ̈̄̅ȾғvϙŶ©ȧΩ͈ǓaɳȄŧ{ůp½PÁFǡıÛ¡JÎNŴa hďXƩùƇHӫŠŽƋ SėĥƯķągĸ iL^Qěéơ£঳·ɉõιƷˣñƹŧkȽAǛ^şCӗǬʇěƽ§ǑÅóğHŝRķEã¦²ƑıT}qÛ§ǏQ£Ċȉɕ¿yƗũÅ¡ĕuCƇà×Nçͦ͆̊ŝɄտ˯׃ȰࡑՓݳūΕŰ̗֛̐ɠשÄǕԃٍħϹƘɇ֑͠ĆʇƫÆİՋҪĴȦǔࠕ©ŲȠϻдƀÊRɈ߉ʢŴ̪ȞʱЂĮȥ~ťȒɂƬǗØżƟƪǼɎډçWĐäΞҴΈҠ²ǆŕɆRĶ¬ĭĎŤĬowĵ࢜jȁŦƞĆݠŊءƬʄᄚħǠǲ܊Έࣚʎ଴½ɌĚŰŗƦƋɖāв¢̖΁̺öʎƯ૆ɓ࢜ƶ۶ũیʦ˦ƌĄĀǈà}QĒÂҒ±ĎĴpXbPÚNÔM]ÑîsŴĩüng}mXy¬Ȓ"],["@@ҐnƸΑܠ˗čȅڅÔ֡ěȭʉУǃӍΟ¨ȪҐʾֽ_ÉĮʘȒAʆʚƎǘɕĬîŶtÐ~¨dɨvêƶd¨b¨[ưŏ"]],encodeOffsets:[[[26594,41100]],[[44476,42144]],[[28135,42954]]]},properties:{name:"Turkey",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĝʮʌǏ˟"],["@@ÜǳûÇʣʀńϚǀϝ"],["@@īҍđÚvψǈl"],["@@Ḯ႗ϝപ৏ΕୃÎɗ֠׉ɏгCɧŢsZǕŗεŮнǄȿìڵبϵЋ̙ƟûۡɉзȷӑĴǏʉƷāƙͥŦ֡ŝī_¾ýÒƝêŁDŻŉÉgũfȡRȉGmĬÎĭ¬ƓɖºʎćҪȽђ˙Ȥęƥ߿ɚƏîہɦqĦhËjŧMįĔěŶć ɱIĝ¼ÛÞ½öğʀ˃զÿɎčƔęĺŧĦƍĤõÚĳȈ¥äŢuŮVºĘǄV¬YÔ©ŶǙѢeìDÂà˶A ˆKȔŰϠպ͈͠jƄ}ŎÑPėõd¹rmfQ¨¤ň£¬dzüǀhvFÂp¸T OÈvÖlĺWĊÞKͼ§Ė©¾ß|ĽƆÞN¢bTHŸXÎÊZ^GlG౶@ಀ@"]],encodeOffsets:[[[40665,-8168]],[[40445,-6322]],[[40822,-5023]],[[34717,-1026]]]},properties:{name:"Tanzania",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@BµF«WίͩĕŔȽ«ŠతǼʹRː઺਎ÛȎϓƼİ͢ûǎŸ̰Ëè˂ʜͪĝɂŀ˴ʁǘƾ֌ƤаĿâ´ƢƢȠȢƀ˥®gk³ĒãłHǋP¯ǍϪַm¿æ̗ZǙAţƫЋˇǝÑƥȿəǽγধ౿@౷@iF]JÉYÍÕeáNSG"],encodeOffsets:[[31243,-1092]]},properties:{name:"Uganda",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ś£ӯĒ¯Įцƛ"],["@@֝aؽ̡ȡ¤؛śڿѥɠƤ¥Ɗ͉ɁƢЩκ͓״Řͼ¹Ƴ˟ѭ¹ͯþ͓ʝԯåһ˫ϫƔĖҜ࢟ʲঀҘÏŲƏȑİ؍ûթǖƪŰϟľڲáǼŠ҃vʇӐĨҿ˹^ĦƇůԙÛӝֻӹŧÞϱřĢƏ¤Ʊaˡħĥj]ol˱ªő°ėĔ¬^Ǆh^°mþÐÐĘ¶¾¸TîĢĊÒrÞ¤¿Ħ[ÖEÀǀÌE^eHŁhEȠÞ͈ēTǔd²ǧĬVðPČq¸ʱŖĭˠˏǔSЌםƶéEړˬˏę˟@­`ǧýkƩ}ɻȥɇsȁȋkСƽͳǨߙÄȁKǥĂÁFəŝěƌƽrˡɰķCVƎŸİĀǀŔƄ^ʸRšø³̰¶Êˤʘ֦ДɖĲĸHðćǊČÂγπ§ǸþĮîGÖ[ðxLŰÖźĢèþத²ࠨŷƮaĸNÌQżŽͦqTāƆĪ֢}Êg¤ïcKĲĜàl¨Tx¢vDȴȵۄĄʐǡƶæiªSÄ¼yÄ¨þìŀôæú¶ŔĀȦHņ°ȒFǄM̠§ˀɎદ֎ӃɵďþΣ܌©ȼƇɼ֥ѴцǗڬǞԾЭǲŎֈȑɎԘʅʦJz˙Ρȱˊƽǯ[ŭǻǆ£ĺɯƭ͍݇ѿȵŻѥ"]],encodeOffsets:[[[32781,47313]],[[39132,48222]]]},properties:{name:"Ukraine",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@½ɤĄĴĤ¾öJÌ´Õ˴mxfÈĸʎΦ˹Ά͝gŻ\\óŌTȸǲrNs͒͹è²ϖǥ̵̰Ϫǝƈ̃А˫õëăęíéó·{g¿@ПƊñ£«Ï¿Ɨǩțŋ͏ʑ؝ə٫ƂӛĿޝϖօqӏӄؘʀʎŘǆĂàŴHÖÂYÈjÊGÄyÀlªŀĔìǆjàŠȄrücƖÚà"],encodeOffsets:[[-59198,-31599]]},properties:{name:"Uruguay",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʥ¸ƕ֮ȔɞWɘՐɿͨЁٷљ"],["@@Ľ_ÝžƜOō"],["@@ǬhʎǍΙŷÑǒǽŮĦðĊđ"],["@@т»ŭĉα´ÞĒ"],["@@ƐűЋXƍɢʼĮƎȵ"],["@@ȣmƱŎǮƴȒGiʋ"],["@@ýMǨ¤ĩ"],["@@Ǖƿ˖ͤĿǣ"],["@@ș֊`͂Ǻࢋ"],["@@b×ɡժɀӑ"],["@@ǳĠŌèş"],["@@ǫU͊ČƝõ"],["@@ıkƂĘë"],["@@¨ÕůJĽŮȆá"],["@@ǩĄưZzĝ"],["@@˪©ɓ»ÕĦ"],["@@ũeź¶Ьˏãǫ"],["@@įŵŦǼuÅ"],["@@ÏÃ֬Şઓ΁ۑÓŖǮʲņߖÔ̐Ɗȣƕ"],["@@ɉlǈĢÂō"],["@@ˍcǶĊĘå"],["@@ĕmĪƺSƋ"],["@@ȋĦƌĦĽ"],["@@ĭpŌþÿ"],["@@Ǆȝ̝ʪĨƆð÷ŻÅľÓ"],["@@úśüķ٦ŕŨåˤúĴXΠ»˰ŏðƃÈ@˾tԲȳ̀ŖǠNÍૼœࣞʴՔȯҊǳ҈ǱࡪΓӨȫǎãǮ̙ȌˊHŪΗ̦ŬĹĻƫ֢ʣ̲ƝÈɛ̆ౙ©ą̗܋Ӄ̽ɱϞʧɂ@ϸǶϼǶЖŨپĲࣘ͐ɐƈÅÔöę̢Ɯ¼Ƃ´ŀɘNܦEٶ@ՒԪ̰ȎΘʮͼǖȠ|ĊJᥬFǄʄϴgӌՔʐڬٞيǊĨǷלŔήɛJଗ̴ĽÈίȰGŚ˻ǡŷկĉǽǉāĲʣJçȽɻæ¦Țϵӫʛ÷ðÇđ{ĨŽȅƁêǵõҭבăȳǺǝηʕʶđˀЅΦÎȩɞŎYŌį|ʅשţưϽȋhɌĹÃĳĪŏΓ୵ÿࢿ҅Ĭʮĉǎ˭˱͕ʖŇěԣ^Ǣؕ࠭Ƈ©¶ǐՃ̂Đʦ̊ǎ˝ŷƽǅǐҡʮ˅ĉƽŰƑݩੱȸˆҲǇdO͠ǉçǵƀBƐȺtǑŐŅ£ƢŦƉČǎŊčĠêļɸ¼ŅŌĎïØˋə­æ÷ƭųŦţŋ½ƐבʃȲR×˞ϙѵʬmćģŸșǞКȕʏYȻȐJڂϵãǽůNԱОҾзȴćǷř|«ĥʭȚЊϟį»ȗȘԳĜӠſƺɵШ`Ϻࣿ΍۸ƹƢ̣˟ƔCŏķ×˧čƥǶPɫրZ[ɻȖɨĂį]ǑͱʗˇóŖƏďʡĆѶɏɟɻʓƐĂŉȘëʎ¤Ă­ßýܙȫĭņǡ̷ȯƫ́sȖ¹ɏͣLλǋ̑Еƈ¥ɧѻ̇ŅnOţΟƕɫXƈ÷ėœȇƈĞțΙ˱ ùǋȽìMǥƭþõŹÃ×ͭɢࡑ؎વ½ǵň̷ŹɶF̄ñƫJȞűƮǿזೕÛࠋ̝ԓՁûsƠǐơĔɁ϶̍ŶȱюŊǔǯœvΆȕĥǕǰɯτʸ̨ɧĎÄƽōÉčŘǈ࢔ࢗ࢐̋ƬɟÕƁ޻ȑāò@ÚĊëİ˓ȸÔƒŵĵחȜ˦NőòߍŹǺüWŜơġǗǏxČƣŇ͑Ǻ¼ȃ͸Ľ˝٧¤ΓÏɣƯҋǠǥùåřȦģπŦÖ±ųğƸēȘŤ ȏ̯ǙפΕŝƻãÄşčÇǴ׹̀ĘǛƅșƕǆ̹ƏҏƂŞ|ćȸɟQ͇ʀȯŗ¨ęƩޏȆյ­]Ɋ£ʓܳʯȞƐɃAǞɿŔ˧͕Ϳ߯ЍȊŦοǇĪȀɁɉĭćäÅȏˉ§`éĚĝ̝ůŤƕų˻ˡňÚƛǪ¥ÍɩĴЙʐѱȕ÷ปӚ̉Ԣ£ЮړټϩܖֻԂۡẴĳɷ҉ɵǽ߉͚ͥʔЋࠀঙڰʡˊ๟XEϙᛟIẗসĢǨ፹Ƴ˵٘ԧΪˣlăɰՙĂϱʴܿ¬ƏĞ[ҘǕòǺ͑ɂӿռÐѪӳ̚ĕˮ®Ɍ̀ˏ˃МÒ ڐ¤ܱöŅˋΉȔÇÇúǪڗװōܲѱԂʈࣶϽଔ݈͠Ȃཔ»դ٨ÅȵİԛRz˚Ċơ´ȒȉǠɨĎɥÔwåȥעʉˆ¡΀ؠǱࡄāǐÂĺɋĹţ°ˉ΁ǼlŧOfâѠφţʳĈˍǅÙ»ĲǗǓ˜ÿɖ¡ΎƈȐɳŰĞŒɕƠƢaƐ£ĞĽb¸ÇŞ୎@෤@Ϊ@Ψ@ܒ@੼@。@。@　@੼@ܒ@Ϊ@ܒ@ȤAN͆ʨÅM¶ɋ"],["@@Á¹ÁĜń¡"],["@@ƯnÔüƳŜѲÛȡƩ"],["@@ѭ_ҼȔǳ"],["@@Šŋёōɚ͎Ęĳ"],["@@ȉØļ¨ĎĿ"],["@@ƑjΚǚɇȃ"],["@@Ѿ³ڿƁÚτZ"],["@@ŽBŲĬƀ·ųµ"],["@@ԱYࠪǎŇĎɢĔļ«Ùțҳč"],["@@ˏ̼ú«ŕ"],["@@ԾƉсċυƼˊÚ"],["@@िћͲͪʺ´þǼϮPŗƍ"],["@@ȲĈŢÅ˃ǧǆ«зȃޯŷըȐĶƠǨ«ÊÊ̩ČÌň̪Ä¶ė"],["@@ǹa}Ĭǎǚęů{"],["@@VŰŤóŹ»"],["@@ŕìƜ¬ŗ"],["@@ĆƑʞūɱÈ௹ˇÁǂ΄ʤ֠Ť˦Ë"],["@@đāÔƚ~×"],["@@TǇəŚvȨȐƹ"],["@@̕ǥ°ǚʈŴ^ŧ"],["@@ȴCóǩ؉Զ˨ùȢˍ"],["@@[ßƣØǀH"],["@@ŎÆÆǏʵÒɔ÷"],["@@́ɱñȒδ "],["@@ƟRŦĂzē"],["@@ǫʁɓǞ˃ȱëɂȆΒ̘ľɬȑfȩ"],["@@̨gĚȕоǏΦΏ˵ĨĵķǶTǰɑȘ_õеࢭԪƈÌÙǌիǐςŖŉĬ̷Ñǲƴǌ"],["@@ɉĀŐĦɮųƏ"],["@@iƓŻ[̹ŲɾΜˀɇŕ"],["@@ħ²ǰćó"],["@@ʀƃ£Ļø"],["@@ǛĘȒɲǿƭ¥"],["@@ɂǍǯѯȫ§Ę͊ʏ͎ȘĀźñ"],["@@̶ÕɅÙ³ʙǬƞ˫˛еҶԦK"],["@@̯ÓöŐ̈́ĉy"],["@@̌Տ½уʣʬĈƈϓŤŌǤɉȈ̛ȫUɬ̾ɈДƷ"],["@@ЀD­ĹɢŃǑĹѹɘŹԁĳϫƣøû͓ƵȠǲϙźăȇ˫ѴҶǤά̃ŹҶ̔ōɪÄ´ƪʼÙ¡Õ"],["@@İɅɢŐ͢ğ_Ǖ̱¡̠¢ȱՏƼŅȷǿvփѴȺȺƬķ¦Č̪ "],["@@φcΖџЁΔ͌׉ԕʹ|τνܼȲǋ"],["@@ϊ¥āōǗÖįʏzˣƙϟĀ;ǮǢeÍŚΦ³"],["@@ų´Ȭà÷œ"],["@@ǱüΔńǡǿ"],["@@ȿWǊĊ¶ñ"],["@@ŌӲΐƊs׹ѧ"],["@@;ÍŚͳҳűࠫȴʟǖԌV̢ƒ˺B"],["@@ʖѡřëŔʸ"],["@@ŇɭēĸȜŶ"],["@@іƃͻ|ΉȪʰġ"],["@@ή¯آĂضʳ۴¿ćԓʽǷţƔࡻ˔ڃÿī̐ʄ¿"],["@@@݁@௯@݃@௯@݃@௯@݃@ӫȪȦÖæЖĭʠŪψVžH@Áµě¡õˈřҨ˭،͓ÔʻèYƊîŶ¬˂ĠȠDĦʶǂjŀԴľˮ^ˈƑĜʑɢõʆǅÂÍĤ÷֠̅ɬɽɰɱϜϗĜýŢŋÎÝ¡­·ÅƴŀkÕąȨÃǝ̒ۖʗƠÂĝˆ[ìƃǙޥ̣ɋɱǓ̌ʤƈ͇դĂņفǱǗ˻ơÄ©ż̨΀ʘ ˱ʙƮգՖաĮƵЂ҂ÛΙɢ˺̩ ƍãʷȒżϒ˧ʇӉȄӳߺśǻΌߧЙƔ˛WũΠǼÜǅqŏƦÛʃٙɨÏƉϐÃŊǇɒ_Ɛűҟǫ޽˴ࠃӬ੏̤ɔƞBɌȎ˽ÆǬȞ`ϋƪࠧʩࠩǊ@Ǹɗŭੳń৛åŔ׹ƺǮˬҵʏճĈȊƢݩàƮèȷðƀ˄ºങȇĩàɈɂӹƅCǥǱwʦŵ͑ƻѪîž÷ϻзۯTŅĜǟ˯ĭŲñƳǡ ǉǽ΅G˝ˁȽ¨үģǱÜÆĸРŊ̔Ɍ͹Ĺ͹ŎϨвϖޒʨମŭࠓʜԶˢҗȃՕl࠙ˑߓ׷П~̬ʡҩŽĲŏҹ¿ѳЭٔǑgǣ܍ϙŧٕť٩ϕփǩǋ̋ງӗřĻɶįȓőñĺǕǓ؝ƩŗƹģǺؓʭݏƓ½ŢȰ~˅ÚҳЕʿñȳǎȿǅɉĢWůǡÝ´ʂ̺Ø৬װМĪˈwęęǞŏĆĮΒÅȻǜȦʶ୒ӌȲó^ȶ˸ɒЌȖ͒kȟƢð̺ΖŤʛºƘҤ˄ƔͰ˩ɍࢣɛʿȤàŲ̂m˻ĦɋƇŋj҃Ƌ؁ьȿùωȚݑɃĩŉڅsΞŴäˆ˱ŸϊӽאϬΌ؇ΩĪɻटǁϳĄݑԔ˝Ҥ̎Фķ­ƭ̼ƤɨƧʸƖСĆː¤ƍÈȵĕवÌȸƮΉ¶LĘʕơʡȞfǜʵT_Ė̠ɧĜϺÈāȘњ̼ξpƚǴǟïMʜΒĦqƺϺ˜ĹķğȞøǼ¹֔Ȃ˶ɚʸÛܾĘ˒ɖǫζхƶҸŨÜƪɱƜՇğࢡχͫɸºȓӍƒ੟œএň˳ŪÆǖљȘ٬ňਹŘֹȢහФ٦Yũǀ૆ɨ۔[ɋBŝ̡˴ō๘ДȪΞýïŪڝÞՃͦƴŤ٪ЧଠŇǊх¶҅ıϫŰŘːຽèӿшᖉن΀ÆƞϮঔEনżဤજǉƛࣞŤ݊ʌɂʿ¨Ȁάx׍ĢʹŶ̮üÂŉૼĤ௄Ң@ĭݠƝӉǉƤïڴɎࠆʡ߲Ōذ§ɐÑƓǃՊ»Ƨĝᖨ¤ೂʃཐµՀŵဖĞіéદ͉;E@݃"]],encodeOffsets:[[[-159315,19469]],[[-160613,21272]],[[-160242,21435]],[[-160986,21725]],[[-161586,21972]],[[-163197,22459]],[[-82989,25311]],[[-82311,25746]],[[-99502,26788]],[[-82111,27934]],[[-93996,30209]],[[-86945,30355]],[[-91365,30807]],[[-121188,34187]],[[-122924,34733]],[[-122759,34898]],[[-77357,36086]],[[-75912,40634]],[[-74250,41970]],[[-71657,42256]],[[-72202,42370]],[[-72951,42488]],[[-69823,45397]],[[-125331,48533]],[[-125514,49313]],[[-97078,50179]],[[-180517,53036]],[[-182148,52890]],[[-181399,52958]],[[-180831,53112]],[[184042,53152]],[[181674,53128]],[[-177718,53388]],[[-176603,53527]],[[-178869,53284]],[[177893,53617]],[[176960,54286]],[[-171995,54626]],[[-170614,55195]],[[-169821,55369]],[[-169534,55436]],[[-166193,56164]],[[-167399,56301]],[[-163343,56476]],[[-134491,56402]],[[-163709,56452]],[[-136050,56212]],[[-164177,56666]],[[-164541,56643]],[[-136504,56877]],[[-159299,57161]],[[-134122,56821]],[[-136771,57692]],[[-135966,57598]],[[-135283,57456]],[[-157909,57872]],[[-173829,57995]],[[-135932,57883]],[[-137205,58210]],[[-136567,58372]],[[-156679,58496]],[[-138209,58728]],[[-156567,59212]],[[-138987,59643]],[[-137912,59558]],[[-156074,59761]],[[-156145,59889]],[[-164781,59983]],[[-151574,61507]],[[-151281,61249]],[[-170122,61833]],[[-149907,61901]],[[-151202,61902]],[[-176888,61909]],[[-175578,65168]],[[-144386,70425]]]},properties:{name:"United States",childNum:76}},{geometry:{type:"MultiPolygon",coordinates:[["@@§QûD«TæBbëĄÂfE´ÍŰmſ"],["@@d´fĂèhiGo࢟ӹҬƝńƧɀÓǂ@Ā{`ZZǦƺt¸Ƥó´s]ÆđjĭäOĀmÂn¤[b¯LývWŴ|ʜƣЊѹʫǝªYųɏXρʋ͛Ŕˁ_ʱɿƸ͊˴̋ˀׁ̙ͅĢųǙÌ̳է}˼ÝƕÂţȕÍƧʩسîʗſËȽʒí ŗπÉϡɚɗ҉؋_ȯÓMx«xýI÷ÙQĹ£ĽtŃČȭʱoWĢBŠ^ƾäǜՓɐ̝KફبҝƸ੿ۆӣरͿƶɇñڍ̫Ʈ[̠ŀɑƜȨՋĦٝϤĥĭ˙˔ˡϏǂǷʡѯÇ˛ɡżэčñ࢓¸AᶢᓢҼᏠউࠜݷৼŘਢÝϴƎӺͻʴεʠĨùࠡЪUǰۅਐdƪƗÅȁȴŹʀXɈӎҤຘۖ"]],encodeOffsets:[[[72916,40850]],[[72650,43263]]]},properties:{name:"Uzbekistan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ÿŊňÒǛ"],encodeOffsets:[[-62642,13474]]},properties:{name:"St. Vin. and Gren.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ñäźļ®ķŕç"],["@@ķǦĈíÅ"],["@@ËȳСĂǄĖƺíưŊ"],["@@|SwÌǷͯΏɷeғˏ˧ĉɏ¸ʩśŧΥЙַ̎]Ɲǔ͑\\ǱŖĴɛϖΥƦ࣭ւùɋӛȋǑ͵ݱΟ̳ΕéEžƃŠ͇ǕʋeѻϦ˫খ΃ͺȫ@ҢԺ̍ϖǋզ~ٚ̎ֈOɀ̓ĠԧŏߣםۤԛŘ͡ē݅Ǜ˴ɝźèٚɳ˺ŋКɗŴʵÅ̠ԄŘמừψ̤ʒЂ՜ǐ՗ʕĸ͉ǌƩõeŘ˱ѥۻв٣͆Ħƀǀ̜ω۞tδਤ΄ŖŮʖWǖ́¡ÿɘìǲǖä̼וڮ¡ήɫĒЅƀǑཤŞͪ̿؈ƿɼz֌̠Ϧџ§þ᎚ĘсǍ҃]Ȓȯ¯ȝǆŨȖΗČČÊ»CƂâG˺˿}ƶƬäڞ҃ȗǥȋү̷E˄ƽцƴՒrŴÉƼȱcµĭ³s}ĝЗȫǣɷĤǷuğ¦±¼W¶nÖC ]h_H}÷³˕ƫΫÕµęnÙ~ÇA½pƝÅßãóġ^ǬțǶȥǲȡ"]],encodeOffsets:[[[-62461,9081]],[[-62280,9358]],[[-65381,11399]],[[-62199,5327]]]},properties:{name:"Venezuela",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@Ƽʷ£ļþ"],encodeOffsets:[[-66320,18222]]},properties:{name:"U.S. Virgin Is.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@̥ƙ˼Ǹj"],["@@ĹmŸŊ}ě"],["@@ǗĽÔƨń©"],["@@ҿȉ±ȕǃęЙªÐɟǟǩnœӵϟ̥ࠇɢϵԢұgȑĝx௴ணǒRڔߟМ౫ӝŸ˗j̗ğŶĭėðɉĉrOׅƅŏ«ɋݡσÿƩث˓ɉɚ·ɕȃŖķÏŖi`űʗF˒Ƴǅɍϫ̦άэãſչψˠͿTǓ֗ʭ͕ϵ́łŲÝ²vڮȪ͞ʁǨśȥȮΤļǒƖAǮɨÇúĚ̌ĈŁʼÍEȲʯɎI˺žļͤÑ^ɘʊ~њ˚ƲĨĖ֔Ŋ΂ɯׂǀӠIĨV®iqÄÚÞ¾ÒhÆ°µæĕØķĂ·¸ĩƸpƠê~HüϹʺĲeV©éġƄYƜO²oÞțɜɛǖ˃˔ēȸÏĀ¹Ü˿Ʉwú¶ĶD੉ռHtĄ°ÀWæêfzFǔNʊ×PžŖ¶è\\ÊĨĪBÄòűFkh_ÂIĹĕVqbÒ®t¨üȟƤŻþÿϹȽƟêɅ¼ęªȁʼÂĊΒĕ®{ÔcQwõÝCáȔϣЌ¤¼ªƜȮÄіʫ̂˔ƔƳņǌ˒ȭǜɔȔąˆĲƬ˄ΊǬӊΡʰ¢Ōĥɚ¨ȨŉȕɷĨѭʶ¯͊˅΄Ǵū"]],encodeOffsets:[[[106562,10641]],[[110102,21429]],[[110186,21727]],[[110564,22025]]]},properties:{name:"Vietnam",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŧéŉŮ~ŌȴǏ"],["@@̇Ì|ȒņZǆʷ"],["@@ŞŹ»đ̭ôĪƄƢT"],["@@ɟsƖʾš"],["@@̯ĜȠŮŐɉ"],["@@Τ̓͗ėčʹǓØ¢ǐŖÞƯ"],["@@ȥ_ˠƚùŹ"],["@@Ä˥ɠȆŀэęř˯§ŃȎÁٜƬƹ"],["@@ŻgĈĄ²àĳ"],["@@ąĲöâPǓ"]],encodeOffsets:[[[173560,-20009]],[[173399,-19394]],[[172489,-17963]],[[172490,-17181]],[[172336,-16728]],[[171431,-16482]],[[171942,-15806]],[[170748,-15182]],[[171607,-14603]],[[171509,-14240]]]},properties:{name:"Vanuatu",childNum:10}},{geometry:{type:"MultiPolygon",coordinates:[["@@ϧœŨϊmŲƕ"],["@@ƀȁ¡ĳʻZȱɲϐª"]],encodeOffsets:[[[-175569,-14383]],[[-176469,-13788]]]},properties:{name:"Samoa",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@Τv˘ġ͍ǉ·͹ǶȀƶȔß"],["@@ÇĖþ½"],["@@ÿÌºtą"],["@@ُ̕Ź˱ʧݧίဇӳֳӳ֭Cӧ͗ԳǑोŃԳѭΝBԥǫ̷Řūɋӌ¨ΨǋˌŹެãǎǕČŢĀçˠĺ̈́˸̬ˊv֜ȒƂмǇਚĒ͚Ŀ৊ȼʽƖMʤƒŚ˲ӾתܶΦូΒजጉ"]],encodeOffsets:[[[55054,12941]],[[43783,14034]],[[43815,14307]],[[54360,17048]]]},properties:{name:"Yemen",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɡǘÐÊę"],["@@ƾӋÃ౑ӯǶŅóĳřʇεH̹ÜM°ĻŀǓǰŁǐ³ɰ]ǺHYŐlǴxŤ~NôyòLźyΤVĠD̏଍ȽΟߙٍ଩࿋౫ફହݫկȧԻnșʣӑ¾ƩǏșIݭƴίõ׵Òʷ·ϧʭੑùё˓؇ƞĺțŤɡ[áʀɃuȧğƄæІӧݞĪĴƆǜȴīٚܧઢͭ࢔ǭͨʕ͢ʶƒ¶nŌü¶¶ļŎďƞŗöέܨǁ܎«ìÊƚȐƄφļ@Ţ@ᲄϜ̵̦٥ŷ۝ĊęߤP¨ĆȈØä²łǈɈƜÞ¦ɾ֦ɪƚȬEъʹÚsȊMŚğݐ[ʰĀͦޒĶČɠ¶°͒˼ɀ֎ֶήͮΐՊǴĘðÊĮİÆȠhZBʈ Ȭʎěɨɂ̦Uļú³ɐࣣɈ·","@@Ɯ˳͞ˑʮÒĚɜ̈́ɊlϜǨȀŶŒ²ŀĺíȖ֧ђYģkȩïůßĿÿȉÇχӡȥęŘ˅"]],encodeOffsets:[[[38766,-48070]],[[32563,-24465],[27847,-30659]]]},properties:{name:"South Africa",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ĐŽĐđ[ûuëǾǓRį`ĞƋ̳ʣòʱģȷ[Mįàſ©ΟôǏƠҋ̓Oѯʟ̫ńĉƸˏƖÌ®Ó᠁ࠑƐշޅ­ӗʓŷҙ̩۟މࢿȭéϑĦ˳إƪɍȌɥ¨ϩݧƇঽ࡚ǵ֢A౞@˒@˒@ڠȘ@൒@ĶZåǄH²pĜØފcܔͲɑXʋފǤ¼Ή֪ɡڢÙˮ͖Βխ۶ʓŜˋƮõʆϋǀ{̒ŲȄǃjંʋÓmǅΟÎӥҌċȶɘࡢܸǟϢЀτzʦ༔ʖâǇ¾õÜÝĞ»ɰJĊð¹lûİēȶFÝlۂɥƎíÜǷŸf"],encodeOffsets:[[33944,-9834]]},properties:{name:"Zambia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǵḀ̄TɁ}ɩʍĜȩʇYA¥ßàǍ¾aȄࡗȲ́ЬTҼͯrđ͆ࡓӀȕԌבࠂ`ƨئƩ˴ϒĥȮêފࣀ̪۠ŸҚӘʔކ®̑ڢyעͽࡐʃÑƝĮఏʗӥŴƍÓʇǸԃп֥śЏÜƉࡁࡃšđ"],encodeOffsets:[[32039,-22939]]},properties:{name:"Zimbabwe",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ڽը¿ުەߖ٬֖NΦxHޠцǒŴ\\ǔéº`Ęfú[ǜ¹~}¢ũYĨĀcĖÌ£¢áfÁnÛ½˩ƄÇÞŻ~eÖBŒvİ¤RXĩÌĄ§a÷Îŕ÷ĸȣ¡ıǽûsmQ}«»ď§řjʅõōDđ³Û«ŷ³அɘŅĭāuƕɳ`«Ī¢§NÙéõʠ{ɩɥƤǵšɇ"],encodeOffsets:[[75785,34052]]},properties:{name:"",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@͙̄͟ƹիԠύfʛϋӻýģлʫ@˭ƪǕIđmɜ\\cȝ`¥CƴˁȖƈʊƣǶɪɦʟ|öÜêO¡¨ĩ_¬ƖɴĂxĮņஆɗŸ´Ü¬Ĕ´ŌCʆöŚiĐ¨®¼P~tnǾü~Ðd¢̀ǊŰÜŀÄĒ¬Ȳ_́êǁƘ˹ҎǹÒĽȱǷ´ǡæͅìíƐĵn­ĵ§rчɃŝƑŢa¸ȵw"]],encodeOffsets:[[[80376,33312]]]},properties:{name:"",childNum:1}}],UTF8Encoding:!0}):r("ECharts Map is not loaded"):r("ECharts is not Loaded")}))},e5f8:function(e){e.exports=JSON.parse("[[-83,76.5,1.1],[-85.5,73.5,2.9],[-78,73,1.5],[-56,72.5,14.9],[-157.5,71.5,1.9],[-157,71.5,7.4],[23.5,71.5,1.3],[24,71.5,1.3],[24.5,71.5,1.3],[25,71.5,3.7],[25.5,71.5,3.8],[26,71.5,3.8],[-52.5,71,11.1],[21.5,71,2.1],[22,71,2.1],[22.5,71,5.2],[23,71,10.4],[23.5,71,7.1],[24,71,1.2],[24.5,71,1.1],[25,71,1.5],[25.5,71,3],[26,71,1.5],[26.5,71,1],[28.5,71,1],[29,71,1.2],[29.5,71,1.7],[30,71,1.7],[30.5,71,1.7],[18,70.5,2.4],[18.5,70.5,6.8],[19,70.5,2.4],[19.5,70.5,2.4],[20,70.5,4.9],[20.5,70.5,6.3],[21,70.5,1.6],[21.5,70.5,1.5],[22,70.5,2.4],[22.5,70.5,4.5],[23,70.5,5.4],[23.5,70.5,2.6],[29,70.5,3],[29.5,70.5,3.7],[30,70.5,3.5],[30.5,70.5,4.1],[31,70.5,4.5],[17,70,3.8],[17.5,70,11.9],[18,70,23],[18.5,70,23],[19,70,17.5],[19.5,70,14.9],[20,70,4],[20.5,70,2.5],[21,70,1.4],[22,70,1],[22.5,70,3],[23,70,2.7],[23.5,70,2.8],[24,70,1.5],[28.5,70,1.1],[29,70,2],[29.5,70,2.5],[30,70,2.7],[30.5,70,2.7],[31,70,3.3],[31.5,70,3.3],[32,70,3.1],[32.5,70,3.3],[33,70,3.3],[-105.5,69.5,1.7],[-82,69.5,1.8],[-54,69.5,1.3],[-53.5,69.5,1.5],[-51.5,69.5,42.8],[15,69.5,12.3],[15.5,69.5,8.2],[16,69.5,8.1],[16.5,69.5,4],[17,69.5,3.7],[17.5,69.5,7.9],[18,69.5,8.8],[18.5,69.5,3.8],[19,69.5,6.6],[19.5,69.5,7.5],[20,69.5,1.5],[20.5,69.5,1.6],[22,69.5,1.1],[29,69.5,2.5],[29.5,69.5,3.1],[30,69.5,3.3],[30.5,69.5,3.3],[31,69.5,3],[31.5,69.5,2.6],[32,69.5,2.4],[32.5,69.5,38.9],[33,69.5,274.5],[33.5,69.5,8.9],[34,69.5,10.8],[34.5,69.5,14],[35,69.5,18.6],[35.5,69.5,16.7],[36,69.5,18.7],[36.5,69.5,18.7],[88,69.5,257.1],[-96,69,2],[-81.5,69,1.9],[-53,69,12.7],[-51.5,69,3.6],[14,69,12.8],[14.5,69,13.5],[15,69,12.9],[15.5,69,9.3],[16,69,25.6],[16.5,69,16.4],[17,69,6],[17.5,69,5.3],[18,69,2.3],[18.5,69,1.6],[19,69,1.8],[19.5,69,2],[20,69,1.6],[20.5,69,1.1],[28.5,69,2.6],[29,69,3.3],[29.5,69,3.3],[30,69,3.1],[30.5,69,2.7],[31,69,2.4],[31.5,69,2.4],[32,69,2.4],[32.5,69,34.5],[33,69,87.9],[33.5,69,1.6],[34,69,1.5],[34.5,69,1.4],[35,69,2.1],[35.5,69,1.5],[36,69,4.8],[36.5,69,8.5],[37,69,11.2],[37.5,69,11],[-134,68.5,2.1],[12.5,68.5,10.9],[13,68.5,9.3],[13.5,68.5,24.8],[14,68.5,20.8],[14.5,68.5,17.4],[15,68.5,9],[15.5,68.5,3.2],[16,68.5,2.6],[16.5,68.5,2.7],[17,68.5,5.7],[17.5,68.5,8.7],[18,68.5,2.7],[18.5,68.5,1.2],[19,68.5,1.2],[19.5,68.5,1.2],[20,68.5,1.2],[20.5,68.5,1.2],[21,68.5,1.2],[21.5,68.5,1.2],[22,68.5,1.1],[28.5,68.5,2.1],[29,68.5,2.8],[29.5,68.5,2.7],[30,68.5,2.4],[30.5,68.5,2.4],[31,68.5,2.4],[31.5,68.5,3],[32,68.5,8.2],[32.5,68.5,11],[33,68.5,12.8],[33.5,68.5,7.2],[64,68.5,2.9],[64.5,68.5,5.5],[65,68.5,4.5],[-115.5,68,1.3],[-64,68,3.8],[12,68,105.9],[12.5,68,16.7],[13,68,10.2],[14.5,68,14.8],[15,68,5.2],[15.5,68,2],[16,68,1.6],[17.5,68,1],[18,68,1.2],[18.5,68,1.2],[19,68,1.2],[19.5,68,1.2],[20,68,1.2],[20.5,68,1.2],[21,68,1.2],[21.5,68,1.2],[22,68,1.1],[22.5,68,1],[23.5,68,1.3],[24,68,1],[29.5,68,1.6],[30,68,3.8],[30.5,68,4.8],[31,68,5.6],[31.5,68,11.3],[32,68,18.5],[32.5,68,18.4],[33,68,20.8],[33.5,68,14.4],[34,68,6.3],[34.5,68,1.8],[54,68,18.1],[63,68,3.4],[63.5,68,5.9],[64,68,9.2],[64.5,68,9.2],[65,68,8.8],[65.5,68,7.1],[66,68,1.4],[85.5,68,1.4],[86,68,1.4],[11.5,67.5,105.9],[12,67.5,105.9],[13.5,67.5,14],[14,67.5,15.6],[14.5,67.5,27.8],[15,67.5,7.9],[15.5,67.5,4.3],[16,67.5,3.9],[19.5,67.5,1.1],[20,67.5,1.2],[20.5,67.5,1.2],[21,67.5,1.2],[21.5,67.5,1.2],[23.5,67.5,1.3],[24,67.5,1.5],[24.5,67.5,1.2],[25,67.5,1.4],[25.5,67.5,1.3],[29,67.5,1.7],[29.5,67.5,3.8],[30,67.5,4.7],[30.5,67.5,6],[31,67.5,5.5],[31.5,67.5,6.8],[32,67.5,13.4],[32.5,67.5,26.7],[33,67.5,17.6],[33.5,67.5,10.8],[34,67.5,9.6],[34.5,67.5,3],[62,67.5,3.5],[62.5,67.5,6.5],[63,67.5,9.2],[63.5,67.5,9.2],[64,67.5,9.2],[64.5,67.5,9.2],[65,67.5,6],[65.5,67.5,2.7],[85.5,67.5,1.4],[86,67.5,1.4],[86.5,67.5,1.4],[87,67.5,1.3],[-54,67,39.7],[-18.5,67,14.2],[-18,67,14.2],[12,67,107.3],[12.5,67,4.3],[13,67,4.1],[13.5,67,6.7],[14,67,4.7],[14.5,67,3],[15,67,3.3],[15.5,67,1.4],[21,67,1.2],[21.5,67,1.2],[22,67,1.3],[22.5,67,1.1],[23,67,1.6],[23.5,67,2.2],[24,67,2.6],[24.5,67,2.5],[25,67,2.8],[25.5,67,14.2],[26,67,2.7],[26.5,67,2.7],[27,67,2.8],[27.5,67,2.5],[28,67,1.1],[29,67,2.8],[29.5,67,3.6],[30,67,3.6],[30.5,67,4],[31,67,3.9],[31.5,67,4.4],[32,67,4.4],[32.5,67,4.3],[33,67,1.9],[58.5,67,1.2],[59,67,2],[59.5,67,2],[60,67,2],[60.5,67,2],[61,67,2],[61.5,67,2.4],[62,67,7.4],[62.5,67,9.2],[63,67,9.2],[63.5,67,7.9],[64,67,5.1],[64.5,67,2.5],[66,67,20.6],[66.5,67,19],[85.5,67,1.2],[86,67,1.4],[86.5,67,1.4],[87,67,1.3],[-66,66.5,1.2],[-24,66.5,2],[-23.5,66.5,3.5],[-23,66.5,1.7],[-22.5,66.5,1.2],[-20,66.5,1.1],[-19.5,66.5,1.3],[-19,66.5,6.3],[-18.5,66.5,1.2],[-17.5,66.5,7.1],[11.5,66.5,58],[12,66.5,16.5],[12.5,66.5,9.1],[13,66.5,6.2],[13.5,66.5,5],[14,66.5,5.2],[14.5,66.5,4.8],[15,66.5,3.3],[20.5,66.5,4.2],[21,66.5,4.6],[21.5,66.5,6],[22,66.5,13.1],[22.5,66.5,4.6],[23,66.5,3.8],[23.5,66.5,5.2],[24,66.5,10.9],[24.5,66.5,3.7],[25,66.5,2.6],[25.5,66.5,19.5],[26,66.5,2.3],[26.5,66.5,2],[27,66.5,2.1],[27.5,66.5,1.6],[28,66.5,1.4],[28.5,66.5,2.5],[29,66.5,2.9],[29.5,66.5,2.1],[31.5,66.5,1.4],[32,66.5,1.5],[32.5,66.5,1.1],[57,66.5,21.6],[57.5,66.5,17.6],[58.5,66.5,1.2],[59,66.5,2],[59.5,66.5,2],[60,66.5,2],[60.5,66.5,2],[61,66.5,2],[61.5,66.5,2],[62,66.5,2],[62.5,66.5,3.8],[63,66.5,3.3],[76.5,66.5,59.9],[-38,66,3.9],[-24,66,1.4],[-23.5,66,1.3],[-20.5,66,2],[-19,66,1.9],[-18.5,66,15.6],[11.5,66,10.2],[12,66,17.7],[12.5,66,7.3],[13,66,5.5],[13.5,66,2.6],[14,66,1.3],[18.5,66,1.2],[19,66,1.2],[19.5,66,1.5],[20,66,4.7],[20.5,66,6.3],[21,66,8.5],[21.5,66,18.2],[22,66,32.8],[22.5,66,14.3],[23,66,9.7],[23.5,66,11],[24,66,18.8],[24.5,66,36.9],[25,66,3.6],[25.5,66,3],[26,66,1.7],[26.5,66,1.5],[27,66,1.6],[27.5,66,1.7],[28,66,1.8],[28.5,66,2.7],[29,66,3.1],[29.5,66,2.8],[30,66,1.1],[39.5,66,1.1],[40,66,1.1],[53.5,66,1.2],[54,66,1.2],[54.5,66,1.1],[58.5,66,1],[59,66,1.9],[59.5,66,2],[60,66,2],[60.5,66,2],[61,66,2],[61.5,66,1.9],[62,66,1.2],[72,66,20.3],[72.5,66,9.6],[-53,65.5,29.7],[-23.5,65.5,2.6],[-23,65.5,11.5],[-14.5,65.5,2.1],[-14,65.5,2.4],[-13.5,65.5,4.9],[10.5,65.5,14.5],[11,65.5,14.5],[11.5,65.5,5.4],[12,65.5,4.9],[12.5,65.5,4.2],[13,65.5,1.3],[18,65.5,1.6],[18.5,65.5,1.9],[19,65.5,1.7],[19.5,65.5,6.4],[20,65.5,11],[20.5,65.5,11.4],[21,65.5,11.8],[21.5,65.5,16.4],[22,65.5,33.4],[22.5,65.5,33.4],[24.5,65.5,5],[25,65.5,54.4],[25.5,65.5,48.2],[26,65.5,3.7],[26.5,65.5,1.8],[27,65.5,1.7],[27.5,65.5,1.7],[28,65.5,1.8],[28.5,65.5,1.9],[29,65.5,1.9],[29.5,65.5,1.2],[35,65.5,3.7],[35.5,65.5,3.7],[36,65.5,3.7],[36.5,65.5,1.1],[37,65.5,1.1],[37.5,65.5,1.1],[39.5,65.5,1.1],[40,65.5,1.1],[40.5,65.5,1.1],[41,65.5,1],[53,65.5,1.2],[53.5,65.5,1.2],[54,65.5,1.2],[54.5,65.5,1.1],[57,65.5,47.3],[59,65.5,1.4],[59.5,65.5,1.5],[60,65.5,1.8],[60.5,65.5,2],[61,65.5,1.4],[-166,65,1.1],[-165.5,65,1.3],[-148.5,65,2.9],[-148,65,35.1],[-147.5,65,12.8],[-147,65,1.1],[-146.5,65,1.1],[-24.5,65,2.5],[-24,65,2.5],[-23.5,65,3.8],[-14.5,65,1.4],[-14,65,1.8],[10.5,65,10.1],[11,65,9.1],[11.5,65,5.9],[12,65,2.7],[12.5,65,1.4],[14,65,1.2],[14.5,65,1.2],[15,65,1.1],[15.5,65,1],[17.5,65,1.6],[18,65,2.2],[18.5,65,2.2],[19,65,2.6],[19.5,65,5.1],[20,65,9.1],[20.5,65,10.1],[21,65,10.1],[21.5,65,10.1],[24,65,75.4],[24.5,65,21.8],[25,65,14.9],[25.5,65,56],[26,65,12.3],[26.5,65,2.4],[27,65,2.2],[27.5,65,1.7],[28,65,2],[28.5,65,2.1],[29,65,2],[29.5,65,1.6],[30.5,65,20.4],[33,65,1.5],[33.5,65,1.4],[34,65,1.4],[34.5,65,15.7],[35,65,1],[35.5,65,3],[36,65,1.1],[36.5,65,1.1],[37,65,1.1],[37.5,65,1.1],[38,65,1.1],[38.5,65,1.1],[39,65,1.1],[39.5,65,318.7],[40,65,1.1],[40.5,65,191.5],[41,65,1.1],[41.5,65,1.2],[42,65,1],[42.5,65,1],[43,65,1],[43.5,65,1],[44,65,1],[53,65,1.1],[53.5,65,1.2],[54,65,1.2],[177,65,12.5],[-166.5,64.5,2],[-165.5,64.5,2],[-165,64.5,1.6],[-148,64.5,1.1],[-147.5,64.5,1.2],[-77,64.5,3.3],[-52,64.5,18.7],[-23,64.5,37.4],[-22.5,64.5,117.4],[-22,64.5,130.9],[-21.5,64.5,8.9],[9.5,64.5,3.6],[10,64.5,3.2],[10.5,64.5,3.1],[11,64.5,6.8],[11.5,64.5,11.3],[12,64.5,2.9],[12.5,64.5,1.3],[14,64.5,1.6],[14.5,64.5,1.6],[15,64.5,1.2],[15.5,64.5,1.2],[16,64.5,1.2],[18,64.5,1.3],[18.5,64.5,2],[19,64.5,2.3],[19.5,64.5,5.8],[20,64.5,27.6],[20.5,64.5,8.2],[21,64.5,8.9],[21.5,64.5,10.1],[23,64.5,7.1],[23.5,64.5,13.2],[24,64.5,11.5],[24.5,64.5,15.5],[25,64.5,8.4],[25.5,64.5,4.3],[26,64.5,3],[26.5,64.5,3.1],[27,64.5,9.8],[27.5,64.5,18.9],[28,64.5,4.3],[28.5,64.5,3],[29,64.5,2.1],[29.5,64.5,2.1],[30,64.5,1.7],[32.5,64.5,1.1],[33,64.5,1.6],[33.5,64.5,1.7],[34,64.5,1.6],[34.5,64.5,1.7],[35,64.5,1.7],[35.5,64.5,1.7],[36,64.5,1.7],[36.5,64.5,1.7],[39,64.5,1],[39.5,64.5,77.5],[40,64.5,1.1],[40.5,64.5,79.3],[41,64.5,1.5],[41.5,64.5,1.7],[42,64.5,1.7],[42.5,64.5,1.6],[43,64.5,1.4],[43.5,64.5,1],[44,64.5,1],[44.5,64.5,1],[51,64.5,1.2],[51.5,64.5,2.1],[52,64.5,7.5],[52.5,64.5,7.3],[53,64.5,6.2],[53.5,64.5,2],[54,64.5,1.4],[54.5,64.5,1.5],[55,64.5,1.5],[55.5,64.5,1.4],[-69,64,1.2],[-68.5,64,3.6],[-23,64,47],[-22.5,64,22.2],[-22,64,22.7],[-21.5,64,14.6],[-21,64,3.4],[8,64,12.4],[8.5,64,11.5],[9,64,9.8],[9.5,64,14.8],[10,64,8],[10.5,64,9.7],[11,64,24.2],[11.5,64,10.7],[12,64,6.5],[12.5,64,1.6],[13,64,1.4],[13.5,64,2.1],[14,64,2.1],[14.5,64,4.9],[15,64,1.6],[15.5,64,1.4],[16,64,2.2],[16.5,64,3.4],[17,64,5],[17.5,64,6.7],[18,64,7.6],[18.5,64,6],[19,64,5],[19.5,64,22.3],[20,64,44.2],[20.5,64,31.9],[22,64,10.5],[22.5,64,49.7],[23,64,32.7],[23.5,64,9.9],[24,64,7.3],[24.5,64,9],[25,64,10.8],[25.5,64,5.8],[26,64,5.6],[26.5,64,8.3],[27,64,11.3],[27.5,64,9.5],[28,64,3.6],[28.5,64,3.9],[29,64,4.8],[29.5,64,3.7],[30,64,1.9],[32.5,64,1.8],[33,64,1.8],[33.5,64,1.6],[34,64,25.8],[34.5,64,1.5],[35,64,1.6],[35.5,64,1.6],[36,64,1.6],[38,64,15.2],[39.5,64,1],[40,64,1.9],[40.5,64,2.2],[41,64,1.7],[41.5,64,1.7],[42,64,1.7],[42.5,64,1.7],[43,64,1.2],[43.5,64,1],[44,64,1],[44.5,64,1],[45,64,1],[45.5,64,1],[50,64,1.1],[50.5,64,1.3],[51,64,1.4],[51.5,64,1.4],[52,64,2.5],[52.5,64,9],[53,64,8.8],[53.5,64,23.9],[54,64,1.7],[54.5,64,1.7],[55,64,1.7],[55.5,64,1.4],[57,64,13],[66.5,64,15.2],[74.5,64,15.6],[-21,63.5,260.5],[-20.5,63.5,260.5],[7,63.5,28.6],[7.5,63.5,84.1],[8,63.5,7.1],[8.5,63.5,5.5],[9,63.5,5],[9.5,63.5,11.8],[10,63.5,108],[10.5,63.5,47.7],[11,63.5,8.3],[11.5,63.5,1.8],[12,63.5,1.3],[12.5,63.5,1.2],[13,63.5,1.2],[13.5,63.5,1.5],[14,63.5,3.2],[14.5,63.5,21.7],[15,63.5,13.4],[15.5,63.5,2.4],[16,63.5,2.8],[16.5,63.5,3.6],[17,63.5,4.6],[17.5,63.5,8],[18,63.5,9.3],[18.5,63.5,8.3],[19,63.5,8],[19.5,63.5,7.1],[20.5,63.5,14.5],[21,63.5,53.9],[21.5,63.5,87.3],[22,63.5,12.5],[22.5,63.5,13.5],[23,63.5,12.3],[23.5,63.5,9.6],[24,63.5,6.4],[24.5,63.5,3.6],[25,63.5,4.3],[25.5,63.5,5.2],[26,63.5,5.6],[26.5,63.5,6.2],[27,63.5,15.8],[27.5,63.5,19.6],[28,63.5,7.9],[28.5,63.5,4.6],[29,63.5,4.6],[29.5,63.5,4.8],[30,63.5,4.3],[30.5,63.5,3.2],[31,63.5,1.5],[32.5,63.5,1.6],[33,63.5,2.8],[33.5,63.5,2.5],[34,63.5,1.9],[34.5,63.5,2],[35,63.5,2.1],[35.5,63.5,2],[36,63.5,1.4],[39.5,63.5,2.2],[40,63.5,2.2],[40.5,63.5,2.1],[41,63.5,1.8],[41.5,63.5,1.7],[42,63.5,1.6],[42.5,63.5,1.5],[43,63.5,1.4],[43.5,63.5,1.2],[44,63.5,1.2],[44.5,63.5,1.2],[45,63.5,1.1],[45.5,63.5,1],[46,63.5,1],[46.5,63.5,1],[50.5,63.5,1.2],[51,63.5,1.4],[51.5,63.5,1.4],[52,63.5,1.4],[52.5,63.5,6.1],[53,63.5,9.5],[53.5,63.5,9.5],[54,63.5,6.6],[54.5,63.5,2.5],[55,63.5,1.7],[65,63.5,1.3],[65.5,63.5,1],[75,63.5,52],[128.5,63.5,1],[129,63.5,1.1],[129.5,63.5,1],[148.5,63.5,1],[149,63.5,1],[149.5,63.5,1],[150,63.5,1.1],[-116,63,1.7],[-114.5,63,2.9],[-92.5,63,2.4],[6,63,80.3],[6.5,63,26.7],[7,63,26.7],[7.5,63,14.9],[8,63,4.8],[8.5,63,4.4],[9,63,3.6],[9.5,63,3.2],[10,63,3],[10.5,63,2.6],[11,63,2.1],[11.5,63,2.1],[12,63,1.3],[12.5,63,1.2],[13,63,1.2],[13.5,63,1.2],[14,63,1.3],[14.5,63,5.4],[15,63,2.4],[15.5,63,2.5],[16,63,4.1],[16.5,63,22.1],[17,63,20.1],[17.5,63,19.6],[18,63,13.9],[18.5,63,11],[20.5,63,12],[21,63,10.7],[21.5,63,13.2],[22,63,16.8],[22.5,63,36.8],[23,63,16.1],[23.5,63,10.2],[24,63,6.5],[24.5,63,4.7],[25,63,8.1],[25.5,63,19.2],[26,63,6.6],[26.5,63,6.5],[27,63,25],[27.5,63,50.4],[28,63,21.8],[28.5,63,7.9],[29,63,11.2],[29.5,63,62.1],[30,63,7.8],[30.5,63,2.8],[31,63,2.2],[31.5,63,1.5],[32,63,1.4],[32.5,63,1.4],[33,63,1.7],[33.5,63,1.9],[34,63,1.9],[34.5,63,2.7],[35,63,2.8],[35.5,63,2.7],[36,63,2.3],[36.5,63,1.3],[37,63,1.3],[37.5,63,1.6],[38,63,1.7],[38.5,63,2.1],[39,63,2.1],[39.5,63,2.2],[40,63,2.2],[40.5,63,2.2],[41,63,2.2],[41.5,63,2],[42,63,1.5],[42.5,63,1.5],[43,63,1.5],[43.5,63,1.5],[44,63,1.3],[44.5,63,1.2],[45,63,1.1],[45.5,63,1],[46,63,1],[46.5,63,1],[48.5,63,1.2],[49,63,1.1],[49.5,63,3.8],[50,63,1.4],[50.5,63,1.4],[51,63,1.4],[51.5,63,1.3],[52,63,1.3],[52.5,63,1.4],[53,63,4.1],[53.5,63,6.2],[54,63,7],[54.5,63,5],[55,63,1.3],[65,63,1.5],[65.5,63,1.5],[66,63,1.4],[113.5,63,16.1],[128.5,63,1.3],[129,63,1.3],[129.5,63,1.3],[130,63,1],[149,63,1.1],[149.5,63,1.1],[150,63,1.1],[150.5,63,1.1],[151,63,1],[-115,62.5,3.9],[-114.5,62.5,25.7],[-76,62.5,1.1],[-50,62.5,1.3],[-8,62.5,1.9],[-7.5,62.5,36.5],[-7,62.5,37.1],[-6.5,62.5,23.1],[4.5,62.5,35.2],[5,62.5,15.6],[5.5,62.5,31.3],[6,62.5,46.2],[6.5,62.5,14.6],[7,62.5,4.3],[7.5,62.5,2.9],[8,62.5,2],[8.5,62.5,1.8],[9,62.5,2.2],[9.5,62.5,2.1],[10,62.5,2.1],[10.5,62.5,2.5],[11,62.5,1.5],[11.5,62.5,1.7],[12,62.5,1.2],[12.5,62.5,1],[14,62.5,1.1],[14.5,62.5,1.3],[15,62.5,2.5],[15.5,62.5,3.5],[16,62.5,8.6],[16.5,62.5,19.4],[17,62.5,20.6],[17.5,62.5,24.4],[21,62.5,13.8],[21.5,62.5,8.9],[22,62.5,9.6],[22.5,62.5,8.9],[23,62.5,7.5],[23.5,62.5,7],[24,62.5,9],[24.5,62.5,13.1],[25,62.5,12.4],[25.5,62.5,97.1],[26,62.5,11.8],[26.5,62.5,6.4],[27,62.5,14.6],[27.5,62.5,24.2],[28,62.5,8.9],[28.5,62.5,7.4],[29,62.5,6.9],[29.5,62.5,10.7],[30,62.5,9.3],[30.5,62.5,6.2],[31,62.5,1.5],[31.5,62.5,1.5],[32,62.5,1.5],[32.5,62.5,1.5],[33,62.5,1.4],[33.5,62.5,1.4],[34,62.5,24.6],[34.5,62.5,2],[35,62.5,2.7],[35.5,62.5,1.9],[36,62.5,1.9],[36.5,62.5,1.9],[37,62.5,1.9],[37.5,62.5,2.1],[38,62.5,2.2],[38.5,62.5,2.2],[39,62.5,2.2],[39.5,62.5,2.3],[40,62.5,3.5],[40.5,62.5,3.6],[41,62.5,2.7],[41.5,62.5,1.6],[42,62.5,1.6],[42.5,62.5,1.6],[43,62.5,1.5],[43.5,62.5,1.3],[44,62.5,1],[44.5,62.5,1],[45,62.5,1],[45.5,62.5,1],[46,62.5,1.2],[46.5,62.5,1.4],[47,62.5,1.3],[47.5,62.5,1.1],[48,62.5,1.4],[48.5,62.5,1.7],[49,62.5,2.1],[49.5,62.5,7.8],[50,62.5,6.1],[50.5,62.5,2.9],[51,62.5,1.5],[51.5,62.5,1.3],[52,62.5,1.3],[52.5,62.5,1.3],[53,62.5,1.3],[53.5,62.5,1.4],[54,62.5,1.4],[54.5,62.5,1.4],[55,62.5,1.2],[62,62.5,1.1],[62.5,62.5,1.2],[63,62.5,1.2],[63.5,62.5,1.4],[64,62.5,1.5],[64.5,62.5,1.4],[65,62.5,50.7],[65.5,62.5,1.5],[66,62.5,1.5],[66.5,62.5,1.5],[67,62.5,1.2],[74.5,62.5,39.1],[77.5,62.5,37.1],[113.5,62.5,5.6],[128.5,62.5,23.7],[129,62.5,25.6],[129.5,62.5,26.8],[130,62.5,1.7],[130.5,62.5,1.7],[131,62.5,1.3],[131.5,62.5,1.1],[132,62.5,1.2],[149.5,62.5,1.1],[150,62.5,1.1],[150.5,62.5,1.1],[151,62.5,1.1],[151.5,62.5,1.1],[-150,62,8.3],[-149.5,62,23.6],[-149,62,1.6],[-72,62,1.1],[-50,62,19.1],[-7,62,24],[4.5,62,9.2],[5,62,13.8],[5.5,62,9.2],[6,62,7.6],[6.5,62,5.5],[7,62,3.5],[7.5,62,1.6],[8,62,1.3],[8.5,62,1.9],[9,62,4.5],[9.5,62,5],[10,62,2.8],[10.5,62,1.6],[12,62,1.3],[12.5,62,1.1],[13,62,1.1],[13.5,62,1],[14,62,2],[14.5,62,2.7],[15,62,3.6],[15.5,62,4],[16,62,8],[16.5,62,13.3],[17,62,11.6],[17.5,62,12.7],[21,62,31.1],[21.5,62,43.7],[22,62,12.1],[22.5,62,10.8],[23,62,16.5],[23.5,62,127],[24,62,45.1],[24.5,62,8.8],[25,62,9.5],[25.5,62,6.3],[26,62,6],[26.5,62,8.8],[27,62,24.3],[27.5,62,12.5],[28,62,6],[28.5,62,20.9],[29,62,13.4],[29.5,62,8.5],[30,62,12.1],[30.5,62,12],[31,62,3.7],[31.5,62,9.8],[32,62,2.2],[32.5,62,2.4],[33,62,2.8],[33.5,62,3.1],[34,62,153.8],[34.5,62,5],[35,62,3.6],[35.5,62,1.9],[36,62,1.9],[36.5,62,1.9],[37,62,1.9],[37.5,62,1.9],[38,62,2.2],[38.5,62,2.2],[39,62,2.2],[39.5,62,2.7],[40,62,3.7],[40.5,62,3.7],[41,62,4.2],[41.5,62,4],[42,62,2.8],[42.5,62,2.9],[43,62,3],[43.5,62,2.4],[44,62,2.2],[44.5,62,1.9],[45,62,1.9],[45.5,62,1.7],[46,62,1.8],[46.5,62,1.8],[47,62,2.3],[47.5,62,2.2],[48,62,1.7],[48.5,62,1.7],[49,62,4.2],[49.5,62,5.6],[50,62,3.7],[50.5,62,95.8],[51,62,59],[51.5,62,1.3],[52,62,1.3],[52.5,62,1.3],[53,62,1.3],[53.5,62,1.4],[54,62,1.4],[54.5,62,1.4],[55,62,1.4],[55.5,62,1.2],[59,62,1],[59.5,62,1.2],[61,62,2.2],[61.5,62,2.8],[62,62,2.8],[62.5,62,2.8],[63,62,2.8],[63.5,62,2.8],[64,62,2.8],[64.5,62,2.4],[65,62,2.1],[65.5,62,2],[66,62,1.5],[66.5,62,1.5],[67,62,1.5],[67.5,62,1.1],[75,62,10.8],[128.5,62,11.2],[129,62,26],[129.5,62,16.3],[130,62,2.2],[130.5,62,2.2],[131,62,2.1],[131.5,62,1.4],[132,62,1.4],[132.5,62,1.2],[133,62,1],[133.5,62,1],[150.5,62,1.1],[151,62,1],[151.5,62,1],[-150.5,61.5,7],[-150,61.5,217.4],[-149.5,61.5,12.7],[-149,61.5,4.1],[-94.5,61.5,1.3],[-70,61.5,3.2],[-45.5,61.5,1.9],[-7,61.5,28.4],[4.5,61.5,5.8],[5,61.5,7.2],[5.5,61.5,7.5],[6,61.5,6.7],[6.5,61.5,7.2],[7,61.5,3.5],[7.5,61.5,3.9],[8,61.5,1.9],[8.5,61.5,2.5],[9,61.5,4.4],[9.5,61.5,5.3],[10,61.5,17.7],[10.5,61.5,17.7],[11,61.5,10],[11.5,61.5,5.8],[12,61.5,3],[12.5,61.5,2.3],[13,61.5,2.1],[13.5,61.5,1.7],[14,61.5,4.8],[14.5,61.5,4.3],[15,61.5,5.3],[15.5,61.5,6.9],[16,61.5,11.5],[16.5,61.5,18.5],[17,61.5,25.7],[21,61.5,96.5],[21.5,61.5,55.8],[22,61.5,22.6],[22.5,61.5,18.8],[23,61.5,25.7],[23.5,61.5,67.1],[24,61.5,34],[24.5,61.5,16.9],[25,61.5,12.9],[25.5,61.5,37.7],[26,61.5,16],[26.5,61.5,7.9],[27,61.5,6.8],[27.5,61.5,10.6],[28,61.5,30.9],[28.5,61.5,36],[29,61.5,11.2],[29.5,61.5,7.5],[30,61.5,7.3],[30.5,61.5,6.4],[31,61.5,5.6],[31.5,61.5,5.6],[32,61.5,5],[32.5,61.5,5.3],[33,61.5,5.6],[33.5,61.5,3],[34,61.5,3.3],[34.5,61.5,3],[35,61.5,3.1],[35.5,61.5,2.8],[36,61.5,2.5],[36.5,61.5,2.6],[37,61.5,2.7],[37.5,61.5,2.6],[38,61.5,2.2],[38.5,61.5,2.2],[39,61.5,2.4],[39.5,61.5,2.8],[40,61.5,3.2],[40.5,61.5,3.2],[41,61.5,4.9],[41.5,61.5,5.3],[42,61.5,5.3],[42.5,61.5,5],[43,61.5,2.8],[43.5,61.5,2.7],[44,61.5,2.7],[44.5,61.5,2.7],[45,61.5,2.7],[45.5,61.5,2.6],[46,61.5,2.7],[46.5,61.5,44.7],[47,61.5,24.6],[47.5,61.5,2.1],[48,61.5,1.9],[48.5,61.5,1.9],[49,61.5,2.3],[49.5,61.5,2.9],[50,61.5,3],[50.5,61.5,3.4],[51,61.5,3],[51.5,61.5,1.3],[52,61.5,1.3],[52.5,61.5,1.3],[53,61.5,1.4],[53.5,61.5,1.4],[54,61.5,1.4],[54.5,61.5,1.4],[55,61.5,1.4],[55.5,61.5,1.4],[56,61.5,1.4],[56.5,61.5,1.5],[57,61.5,1.5],[57.5,61.5,1.5],[58,61.5,1.5],[58.5,61.5,1.6],[59,61.5,1.5],[59.5,61.5,1.5],[60,61.5,1.5],[60.5,61.5,1.5],[61,61.5,1.5],[61.5,61.5,1.7],[62,61.5,2],[62.5,61.5,2.6],[63,61.5,2.8],[63.5,61.5,2.8],[64,61.5,2.8],[64.5,61.5,2.8],[65,61.5,2.6],[65.5,61.5,1.7],[69,61.5,27.4],[72.5,61.5,73.9],[73,61.5,115.3],[73.5,61.5,85.6],[75,61.5,23.9],[76,61.5,5.8],[125.5,61.5,1],[126,61.5,1.1],[126.5,61.5,1.1],[127,61.5,1.2],[127.5,61.5,1.2],[128,61.5,1.2],[128.5,61.5,1.2],[129,61.5,1.2],[129.5,61.5,1.4],[130,61.5,1.9],[130.5,61.5,1.8],[151,61.5,1],[151.5,61.5,1],[152,61.5,1],[-162,61,3.8],[-151.5,61,25.3],[-151,61,3.1],[-149,61,1.3],[-135.5,61,9.4],[-135,61,3.6],[-116,61,2.9],[-78.5,61,2.2],[-46.5,61,6.2],[-2,61,3.3],[-1.5,61,3.7],[-1,61,4.8],[4.5,61,44.6],[5,61,27.1],[5.5,61,8.6],[6,61,6.4],[6.5,61,5.1],[7,61,1.3],[7.5,61,2.1],[8,61,3.1],[8.5,61,4.7],[9,61,5.6],[9.5,61,5.2],[10,61,17.3],[10.5,61,34.5],[11,61,33.8],[11.5,61,12.3],[12,61,6.6],[12.5,61,3.2],[13,61,2.7],[13.5,61,3.6],[14,61,6.2],[14.5,61,10.2],[15,61,17.6],[15.5,61,23.1],[16,61,20.5],[16.5,61,26.4],[17,61,52.3],[17.5,61,20.3],[18,61,13.8],[20.5,61,11.6],[21,61,26],[21.5,61,19],[22,61,77.8],[22.5,61,18.6],[23,61,20.3],[23.5,61,21.7],[24,61,27.9],[24.5,61,69.1],[25,61,36.2],[25.5,61,69.1],[26,61,13.3],[26.5,61,74.8],[27,61,26],[27.5,61,10.2],[28,61,29.1],[28.5,61,60.4],[29,61,12.7],[29.5,61,7.7],[30,61,19.5],[30.5,61,10.5],[32.5,61,5.5],[33,61,3.2],[33.5,61,14.5],[34,61,13.4],[34.5,61,1.9],[35,61,2.1],[35.5,61,2.7],[36,61,2.7],[36.5,61,2.7],[37,61,2.8],[37.5,61,3],[38,61,3.2],[38.5,61,3.1],[39,61,3.3],[39.5,61,3.3],[40,61,3.3],[40.5,61,3.3],[41,61,3.5],[41.5,61,4.4],[42,61,4.5],[42.5,61,4.2],[43,61,2.9],[43.5,61,3],[44,61,2.9],[44.5,61,2.7],[45,61,3],[45.5,61,3.2],[46,61,34.2],[46.5,61,3.1],[47,61,4.8],[47.5,61,5.2],[48,61,4],[48.5,61,1.9],[49,61,2.1],[49.5,61,2.6],[50,61,2.2],[50.5,61,1.7],[51,61,1.4],[51.5,61,1.2],[52,61,1.3],[52.5,61,1.3],[53,61,1.3],[53.5,61,1.3],[54,61,1.3],[54.5,61,1.3],[55,61,1.5],[55.5,61,1.5],[56,61,1.5],[56.5,61,1.5],[57,61,1.6],[57.5,61,1.6],[58,61,1.6],[58.5,61,1.6],[59,61,4.2],[59.5,61,5.3],[60,61,2.8],[60.5,61,1.5],[61,61,1.5],[61.5,61,1.5],[62,61,1.5],[62.5,61,1.7],[63,61,2.8],[63.5,61,2.6],[64,61,2],[64.5,61,1.4],[70.5,61,1.1],[71,61,1.2],[71.5,61,1.2],[72,61,1.2],[72.5,61,29.6],[73,61,1.8],[76,61,31.4],[76.5,61,184.4],[130,61,1.2],[-151.5,60.5,5.1],[-151,60.5,2.5],[-150.5,60.5,2.1],[-150,60.5,1],[-149.5,60.5,3],[-112.5,60.5,1.2],[-45.5,60.5,4.4],[-2.5,60.5,6.4],[-2,60.5,5.8],[-1.5,60.5,20.8],[-1,60.5,46],[4.5,60.5,110.3],[5,60.5,273.9],[5.5,60.5,48.1],[6,60.5,10.8],[6.5,60.5,3.4],[7,60.5,1.5],[7.5,60.5,1.3],[8,60.5,2.2],[8.5,60.5,1.9],[9,60.5,2.9],[9.5,60.5,10.4],[10,60.5,26.5],[10.5,60.5,173.4],[11,60.5,45.8],[11.5,60.5,15],[12,60.5,12.8],[12.5,60.5,4.9],[13,60.5,4.9],[13.5,60.5,5.5],[14,60.5,7.8],[14.5,60.5,13.1],[15,60.5,29.9],[15.5,60.5,18.9],[16,60.5,23.4],[16.5,60.5,26.2],[17,60.5,29],[17.5,60.5,26.4],[18,60.5,20.3],[18.5,60.5,23.8],[19,60.5,9.6],[19.5,60.5,33.7],[20,60.5,11.5],[20.5,60.5,7.2],[21,60.5,9],[21.5,60.5,21.3],[22,60.5,221.7],[22.5,60.5,21.5],[23,60.5,31.4],[23.5,60.5,24],[24,60.5,47.2],[24.5,60.5,583.1],[25,60.5,507.3],[25.5,60.5,56.6],[26,60.5,30.3],[26.5,60.5,54.1],[27,60.5,83.8],[27.5,60.5,10.1],[28,60.5,11.3],[28.5,60.5,12.7],[29,60.5,12.7],[29.5,60.5,343],[30,60.5,259.8],[30.5,60.5,31.3],[31,60.5,31.1],[31.5,60.5,11.5],[32,60.5,6.3],[32.5,60.5,6.2],[33,60.5,4.7],[33.5,60.5,2.7],[34,60.5,1.7],[34.5,60.5,1.7],[35,60.5,2.5],[35.5,60.5,3],[36,60.5,3.1],[36.5,60.5,4.2],[37,60.5,4.4],[37.5,60.5,4.6],[38,60.5,4.5],[38.5,60.5,4.2],[39,60.5,4.3],[39.5,60.5,5.5],[40,60.5,5.1],[40.5,60.5,4.7],[41,60.5,3.4],[41.5,60.5,3.6],[42,60.5,3.7],[42.5,60.5,3.4],[43,60.5,3.3],[43.5,60.5,3.1],[44,60.5,2.7],[44.5,60.5,2.8],[45,60.5,3.3],[45.5,60.5,3.4],[46,60.5,3.4],[46.5,60.5,4.3],[47,60.5,6],[47.5,60.5,5.9],[48,60.5,5.2],[48.5,60.5,2.4],[49,60.5,1.9],[49.5,60.5,1.9],[50,60.5,1.5],[50.5,60.5,1.1],[51,60.5,1.1],[51.5,60.5,1.7],[52,60.5,2.9],[52.5,60.5,2.7],[53,60.5,2.6],[53.5,60.5,1.5],[54,60.5,1.3],[54.5,60.5,1.9],[55,60.5,2],[55.5,60.5,1.5],[56,60.5,1.5],[56.5,60.5,1.7],[57,60.5,1.6],[57.5,60.5,1.6],[58,60.5,1.6],[58.5,60.5,2],[59,60.5,13.4],[59.5,60.5,15.4],[60,60.5,7.6],[60.5,60.5,1.8],[61,60.5,1.7],[64.5,60.5,30.3],[70.5,60.5,1.2],[71,60.5,1.2],[71.5,60.5,1.2],[72,60.5,1.2],[72.5,60.5,1.2],[73,60.5,1],[78,60.5,32.3],[-152,60,9.1],[-151.5,60,3.4],[-151,60,1.2],[-2,60,23.7],[-1.5,60,22.8],[5,60,43.8],[5.5,60,15.5],[6,60,7.7],[6.5,60,4.4],[7,60,1.7],[7.5,60,1.4],[8,60,2.5],[8.5,60,4.3],[9,60,10.6],[9.5,60,25.1],[10,60,159.2],[10.5,60,370.5],[11,60,64.8],[11.5,60,9.9],[12,60,10.3],[12.5,60,13.5],[13,60,17.6],[13.5,60,30],[14,60,8.3],[14.5,60,9.6],[15,60,14.6],[15.5,60,21.5],[16,60,59.7],[16.5,60,62],[17,60,47.3],[17.5,60,97.3],[18,60,60.8],[18.5,60,32.8],[19,60,26.1],[20,60,9.6],[20.5,60,11.7],[21,60,10.6],[21.5,60,8.6],[22,60,16.4],[22.5,60,28.4],[23,60,40.2],[23.5,60,19],[24,60,85.2],[24.5,60,243.7],[25,60,35.6],[25.5,60,19.3],[26,60,6.4],[26.5,60,63.8],[27,60,6.8],[27.5,60,6.8],[28,60,6.8],[28.5,60,8.2],[29,60,56],[29.5,60,696.1],[30,60,1594.3],[30.5,60,64.8],[31,60,20.8],[31.5,60,12.1],[32,60,29.7],[32.5,60,5.4],[33,60,36.7],[33.5,60,1.7],[34,60,1.8],[34.5,60,1.9],[35,60,2.7],[35.5,60,3.1],[36,60,3.2],[36.5,60,4.6],[37,60,4.8],[37.5,60,5.1],[38,60,5.3],[38.5,60,5.3],[39,60,7.9],[39.5,60,5],[40,60,5.8],[40.5,60,4.3],[41,60,3.7],[41.5,60,3.5],[42,60,3.5],[42.5,60,3.3],[43,60,2.5],[43.5,60,2.4],[44,60,2.4],[44.5,60,3.9],[45,60,4.1],[45.5,60,3.7],[46,60,3.6],[46.5,60,3.6],[47,60,3.2],[47.5,60,3],[48,60,2.8],[48.5,60,3.2],[49,60,2],[49.5,60,1.9],[50,60,1.7],[50.5,60,1.9],[51,60,2],[51.5,60,3.8],[52,60,4.6],[52.5,60,4.6],[53,60,4.6],[53.5,60,4.1],[54,60,4.2],[54.5,60,3.8],[55,60,3.3],[55.5,60,2.7],[56,60,2.5],[56.5,60,58.3],[57,60,2.1],[57.5,60,3.7],[58,60,4.2],[58.5,60,6.8],[59,60,9.6],[59.5,60,9.1],[60,60,70.1],[60.5,60,51.4],[61,60,3.1],[61.5,60,1.2],[72,60,1.2],[72.5,60,1.1],[99.5,60,1.1],[150.5,60,60.6],[151,60,6.5],[-159,59.5,1.1],[-6.5,59.5,17.4],[-6,59.5,17.4],[-4.5,59.5,10.4],[-3.5,59.5,10.9],[-3,59.5,11.8],[-2.5,59.5,8],[4.5,59.5,43.2],[5,59.5,140],[5.5,59.5,44.4],[6,59.5,7],[6.5,59.5,1.7],[7.5,59.5,1.4],[8,59.5,2],[8.5,59.5,5.5],[9,59.5,27.2],[9.5,59.5,59.9],[10,59.5,131.7],[10.5,59.5,158.3],[11,59.5,63.5],[11.5,59.5,12.8],[12,59.5,9],[12.5,59.5,16.1],[13,59.5,39.4],[13.5,59.5,74.5],[14,59.5,29.5],[14.5,59.5,34.4],[15,59.5,67.5],[15.5,59.5,46.9],[16,59.5,53.8],[16.5,59.5,44],[17,59.5,54.6],[17.5,59.5,568.7],[18,59.5,768.1],[18.5,59.5,97.6],[22,59.5,3.6],[22.5,59.5,20.8],[23,59.5,2.7],[23.5,59.5,6.7],[24,59.5,28.6],[24.5,59.5,309.4],[25,59.5,18.8],[25.5,59.5,14.8],[26,59.5,26.6],[26.5,59.5,14],[27,59.5,50.7],[27.5,59.5,22.1],[28,59.5,81.4],[28.5,59.5,29.9],[29,59.5,13.5],[29.5,59.5,21.8],[30,59.5,32.8],[30.5,59.5,13.9],[31,59.5,14.5],[31.5,59.5,8.9],[32,59.5,32.7],[32.5,59.5,3.5],[33,59.5,2.6],[33.5,59.5,13.2],[34,59.5,15.3],[34.5,59.5,3.3],[35,59.5,4.9],[35.5,59.5,4.7],[36,59.5,3.6],[36.5,59.5,6],[37,59.5,6.2],[37.5,59.5,223.5],[38,59.5,10.2],[38.5,59.5,12.8],[39,59.5,12],[39.5,59.5,199.9],[40,59.5,36.3],[40.5,59.5,3.6],[41,59.5,4.2],[41.5,59.5,4.2],[42,59.5,3.9],[42.5,59.5,3.8],[43,59.5,3.2],[43.5,59.5,2.6],[44,59.5,3.1],[44.5,59.5,4],[45,59.5,4],[45.5,59.5,4.2],[46,59.5,4.7],[46.5,59.5,4.7],[47,59.5,3.8],[47.5,59.5,3.8],[48,59.5,4.7],[48.5,59.5,7.1],[49,59.5,6.8],[49.5,59.5,5.9],[50,59.5,3.2],[50.5,59.5,2.7],[51,59.5,3.5],[51.5,59.5,5],[52,59.5,6.6],[52.5,59.5,5.8],[53,59.5,3.8],[53.5,59.5,4.1],[54,59.5,25.1],[54.5,59.5,6],[55,59.5,6.9],[55.5,59.5,6],[56,59.5,4.5],[56.5,59.5,90.8],[57,59.5,14],[57.5,59.5,10.6],[58,59.5,17.4],[58.5,59.5,11],[59,59.5,5.9],[59.5,59.5,5.4],[60,59.5,4.7],[60.5,59.5,5.9],[61,59.5,3.3],[61.5,59.5,2.6],[62,59.5,1.4],[62.5,59.5,1],[94.5,59.5,1],[95,59.5,1.4],[95.5,59.5,1.2],[96,59.5,1.1],[96.5,59.5,1.1],[97,59.5,1.1],[97.5,59.5,1.1],[98,59.5,1.1],[98.5,59.5,1.1],[99,59.5,1.1],[99.5,59.5,1.1],[100,59.5,1.1],[100.5,59.5,1.1],[101,59.5,1.1],[101.5,59.5,1.1],[102,59.5,1],[150,59.5,86.6],[150.5,59.5,86.6],[-159,59,1.2],[-135,59,3.1],[-134.5,59,1.8],[-123,59,3.1],[-117.5,59,1.6],[-94.5,59,1.4],[-6.5,59,17.4],[-5.5,59,1.3],[-5,59,1.3],[-4.5,59,1.3],[-4,59,32.2],[-3.5,59,10.7],[-3,59,47.7],[5,59,133.7],[5.5,59,173.3],[6,59,13.5],[6.5,59,3.6],[7,59,2],[7.5,59,2.6],[8,59,3.5],[8.5,59,16.7],[9,59,26.4],[9.5,59,52.4],[10,59,76.2],[10.5,59,30.8],[11,59,17.1],[11.5,59,14],[12,59,19.4],[12.5,59,25],[13,59,37.9],[13.5,59,41.8],[14,59,20.2],[14.5,59,14.4],[15,59,34.2],[15.5,59,35.2],[16,59,53.6],[16.5,59,41],[17,59,45.6],[17.5,59,73.5],[18,59,149.6],[21.5,59,4],[22,59,4.2],[22.5,59,10.4],[23,59,11],[23.5,59,16.1],[24,59,8.2],[24.5,59,12.1],[25,59,13.8],[25.5,59,18.5],[26,59,13.5],[26.5,59,10.9],[27,59,14.9],[27.5,59,5.7],[28,59,5.4],[28.5,59,5.2],[29,59,5.3],[29.5,59,24.4],[30,59,4.8],[30.5,59,6.3],[31,59,114.8],[31.5,59,12.2],[32,59,7],[32.5,59,7.5],[33,59,5.7],[33.5,59,5.1],[34,59,5.7],[34.5,59,5.2],[35,59,8.4],[35.5,59,9.6],[36,59,6.6],[36.5,59,7],[37,59,7.9],[37.5,59,7.2],[38,59,7.3],[38.5,59,7.9],[39,59,8],[39.5,59,8.5],[40,59,9.6],[40.5,59,10.1],[41,59,5],[41.5,59,3.6],[42,59,4.4],[42.5,59,4.4],[43,59,4.1],[43.5,59,3.4],[44,59,2.7],[44.5,59,2.9],[45,59,3.2],[45.5,59,3.6],[46,59,4.7],[46.5,59,5.1],[47,59,4.6],[47.5,59,4.7],[48,59,5.3],[48.5,59,10.4],[49,59,40.4],[49.5,59,233.8],[50,59,86],[50.5,59,6.5],[51,59,6.9],[51.5,59,9.3],[52,59,11.2],[52.5,59,8.1],[53,59,3.3],[53.5,59,4],[54,59,7.3],[54.5,59,7.8],[55,59,8.3],[55.5,59,8.5],[56,59,9.4],[56.5,59,9.8],[57,59,15.1],[57.5,59,25.4],[58,59,11.6],[58.5,59,4.3],[59,59,25.4],[59.5,59,29.7],[60,59,9],[60.5,59,4.5],[61,59,4.3],[61.5,59,3.9],[62,59,3.8],[62.5,59,4.6],[63,59,3.6],[66.5,59,1.2],[67,59,1.5],[67.5,59,1.5],[82.5,59,1.5],[83,59,1.8],[83.5,59,1.8],[93.5,59,1],[94,59,1.4],[94.5,59,1.5],[95,59,1.4],[95.5,59,1.1],[96,59,1.1],[96.5,59,1.1],[97,59,1.1],[97.5,59,1.1],[98,59,1.1],[98.5,59,1.1],[99,59,1.1],[99.5,59,1.1],[100,59,1.1],[100.5,59,1.1],[101,59,1.1],[101.5,59,1.1],[102,59,1],[150,59,86.6],[150.5,59,86.6],[-135,58.5,15.8],[-134.5,58.5,10.3],[-134,58.5,1.2],[-103.5,58.5,1],[-78.5,58.5,10.4],[-68.5,58.5,1],[-8,58.5,1.6],[-7.5,58.5,1.8],[-7,58.5,4.1],[-6.5,58.5,23.5],[-5.5,58.5,1.7],[-5,58.5,1.4],[-4.5,58.5,2.4],[-4,58.5,3.6],[-3.5,58.5,18.1],[5.5,58.5,33.3],[6,58.5,16.8],[6.5,58.5,17.5],[7,58.5,12.9],[7.5,58.5,44.6],[8,58.5,64.6],[8.5,58.5,97.9],[11,58.5,66.6],[11.5,58.5,62.8],[12,58.5,73.3],[12.5,58.5,35.6],[13,58.5,32.1],[13.5,58.5,40.2],[14,58.5,36.5],[14.5,58.5,29],[15,58.5,46.2],[15.5,58.5,51],[16,58.5,19.3],[16.5,58.5,24.8],[17,58.5,28.4],[19,58.5,17.9],[21.5,58.5,4.3],[22,58.5,16.3],[22.5,58.5,15.1],[23,58.5,7.7],[23.5,58.5,5.5],[24,58.5,28.7],[24.5,58.5,34.4],[25,58.5,8],[25.5,58.5,26.9],[26,58.5,16.6],[26.5,58.5,80.1],[27,58.5,17.4],[27.5,58.5,7.2],[28,58.5,7.9],[28.5,58.5,5.3],[29,58.5,5.2],[29.5,58.5,7.6],[30,58.5,9],[30.5,58.5,8],[31,58.5,90.9],[31.5,58.5,10.9],[32,58.5,6.2],[32.5,58.5,7.7],[33,58.5,13.4],[33.5,58.5,14.4],[34,58.5,39.6],[34.5,58.5,4.6],[35,58.5,5.6],[35.5,58.5,6.3],[36,58.5,6.8],[36.5,58.5,7.7],[37,58.5,10.7],[37.5,58.5,8.7],[38,58.5,9.9],[38.5,58.5,15.3],[39,58.5,11.9],[39.5,58.5,11.9],[40,58.5,12.2],[40.5,58.5,12.5],[41,58.5,17.1],[41.5,58.5,20.2],[42,58.5,19.1],[42.5,58.5,4.8],[43,58.5,4.2],[43.5,58.5,10.9],[44,58.5,3.5],[44.5,58.5,16.4],[45,58.5,4.1],[45.5,58.5,29.8],[46,58.5,6.9],[46.5,58.5,5.4],[47,58.5,5.7],[47.5,58.5,6.6],[48,58.5,28.2],[48.5,58.5,12],[49,58.5,19.1],[49.5,58.5,63.7],[50,58.5,24.3],[50.5,58.5,12.6],[51,58.5,10.6],[51.5,58.5,9.5],[52,58.5,13],[52.5,58.5,77.5],[53,58.5,13],[53.5,58.5,10.4],[54,58.5,12.4],[54.5,58.5,13.1],[55,58.5,15.5],[55.5,58.5,49.1],[56,58.5,214.1],[56.5,58.5,152.6],[57,58.5,6.4],[57.5,58.5,67.2],[58,58.5,4.8],[58.5,58.5,4.8],[59,58.5,23],[59.5,58.5,40.5],[60,58.5,29],[60.5,58.5,52.9],[61,58.5,4],[61.5,58.5,4.6],[62,58.5,4.6],[62.5,58.5,5.4],[63,58.5,5.8],[63.5,58.5,5.8],[64,58.5,3.8],[64.5,58.5,1.4],[65,58.5,30.9],[65.5,58.5,1.7],[66,58.5,1.7],[66.5,58.5,2.1],[67,58.5,2.1],[67.5,58.5,1.5],[68,58.5,76.2],[68.5,58.5,1.5],[69,58.5,1.4],[69.5,58.5,1.4],[70,58.5,1.6],[70.5,58.5,2.2],[71,58.5,1.8],[74.5,58.5,1.4],[81,58.5,1.2],[81.5,58.5,1.6],[82,58.5,1.9],[82.5,58.5,22.5],[83,58.5,1.8],[83.5,58.5,1.7],[84,58.5,1.3],[84.5,58.5,1.3],[85,58.5,1.4],[85.5,58.5,1.1],[86,58.5,1.8],[86.5,58.5,1.8],[87,58.5,1.6],[87.5,58.5,1.1],[92,58.5,56.4],[92.5,58.5,8.8],[93.5,58.5,1.5],[94,58.5,1.5],[94.5,58.5,1.5],[95,58.5,1.4],[95.5,58.5,1.2],[96,58.5,1.1],[96.5,58.5,1.1],[97,58.5,1.1],[97.5,58.5,1.1],[98,58.5,1.1],[98.5,58.5,1.1],[99,58.5,1.1],[99.5,58.5,1.2],[100,58.5,1.1],[100.5,58.5,1.1],[102.5,58.5,70.7],[-153,58,1.3],[-152.5,58,28.4],[-9,58,2.5],[-8.5,58,2.5],[-8,58,4],[-7.5,58,3.7],[-7,58,4],[-6.5,58,5.3],[-6,58,1.9],[-5.5,58,2.1],[-5,58,4.3],[-4.5,58,27.2],[-4,58,44.2],[-3.5,58,70.3],[-3,58,55.6],[-2.5,58,52.8],[-2,58,116.2],[7,58,22.2],[7.5,58,64.5],[9.5,58,81.1],[10,58,92],[10.5,58,89],[11.5,58,520.6],[12,58,219.8],[12.5,58,59.5],[13,58,34.5],[13.5,58,36.2],[14,58,55],[14.5,58,27.6],[15,58,12.3],[15.5,58,11.4],[16,58,16.8],[16.5,58,19.3],[18,58,17.9],[18.5,58,17.9],[19,58,17.9],[21.5,58,3.6],[22,58,5.8],[22.5,58,14.5],[23,58,5.9],[24,58,19.2],[24.5,58,14.3],[25,58,32.4],[25.5,58,12.3],[26,58,18.7],[26.5,58,16.2],[27,58,15.8],[27.5,58,17.7],[28,58,147.5],[28.5,58,9.6],[29,58,10.5],[29.5,58,12],[30,58,13],[30.5,58,4.7],[31,58,28],[31.5,58,7.4],[32,58,6.6],[32.5,58,8.5],[33,58,10.3],[33.5,58,28.5],[34,58,10.2],[34.5,58,44.1],[35,58,25.5],[35.5,58,9.2],[36,58,7.2],[36.5,58,24.2],[37,58,11.1],[37.5,58,10.6],[38,58,10.9],[38.5,58,164.7],[39,58,41],[39.5,58,413.9],[40,58,20.8],[40.5,58,183.6],[41,58,42.6],[41.5,58,15.9],[42,58,11.5],[42.5,58,8.3],[43,58,5.5],[43.5,58,5.8],[44,58,5.6],[44.5,58,5.7],[45,58,8],[45.5,58,11.2],[46,58,19.5],[46.5,58,14.1],[47,58,7.1],[47.5,58,7.5],[48,58,7.8],[48.5,58,10.4],[49,58,10.5],[49.5,58,11.4],[50,58,8.3],[50.5,58,5.8],[51,58,6.3],[51.5,58,7.1],[52,58,11.5],[52.5,58,12.7],[53,58,17.7],[53.5,58,13.5],[54,58,9.5],[54.5,58,10.7],[55,58,16.6],[55.5,58,24.7],[56,58,157.8],[56.5,58,54.6],[57,58,6.7],[57.5,58,5.6],[58,58,4.6],[58.5,58,5.6],[59,58,6.8],[59.5,58,143.4],[60,58,140],[60.5,58,5.7],[61,58,25.6],[61.5,58,18],[62,58,7.4],[62.5,58,7.6],[63,58,38.9],[63.5,58,7.9],[64,58,7.3],[64.5,58,4.5],[65,58,2.7],[65.5,58,3.2],[66,58,3.6],[66.5,58,3.8],[67,58,4.1],[67.5,58,2.5],[68,58,1.6],[68.5,58,1.6],[69,58,1.6],[69.5,58,1.6],[70,58,1.6],[70.5,58,2.3],[71,58,2.5],[71.5,58,2.4],[72,58,2],[72.5,58,2],[73,58,2],[73.5,58,2.6],[74,58,1.7],[74.5,58,1.7],[75,58,1.7],[81,58,1],[81.5,58,2.7],[82,58,3.1],[82.5,58,3.1],[83,58,3.3],[83.5,58,3.7],[84,58,3.9],[84.5,58,4.1],[85,58,4],[85.5,58,5.6],[86,58,2],[86.5,58,2],[87,58,1.9],[89,58,1],[89.5,58,1.1],[90,58,1.3],[91,58,1.1],[91.5,58,1.3],[92,58,1.8],[92.5,58,2.1],[93,58,2.8],[93.5,58,2.9],[94,58,2],[94.5,58,1.8],[95,58,1.7],[95.5,58,1.3],[96,58,1.2],[96.5,58,1.1],[97,58,1.1],[97.5,58,1.1],[98,58,1.2],[98.5,58,1.2],[99,58,1.5],[99.5,58,1.9],[100,58,1.6],[100.5,58,1.1],[103.5,58,2.6],[104,58,2],[114,58,12.1],[-135.5,57.5,4.6],[-8,57.5,11.9],[-7.5,57.5,7.6],[-7,57.5,3.3],[-6.5,57.5,6],[-6,57.5,3.5],[-5.5,57.5,2.2],[-5,57.5,3.9],[-4.5,57.5,35.5],[-4,57.5,8.5],[-3.5,57.5,5.3],[-3,57.5,17.8],[-2.5,57.5,195.6],[-2,57.5,73.5],[8,57.5,45.9],[8.5,57.5,41.3],[9,57.5,33.3],[9.5,57.5,112.6],[10,57.5,86.6],[10.5,57.5,67.4],[11,57.5,19.6],[11.5,57.5,104],[12,57.5,70.5],[12.5,57.5,33.8],[13,57.5,16.6],[13.5,57.5,22.4],[14,57.5,19.3],[14.5,57.5,24.7],[15,57.5,16.1],[15.5,57.5,11.2],[16,57.5,19.5],[16.5,57.5,20.5],[17,57.5,16.2],[17.5,57.5,17.9],[18,57.5,17.9],[18.5,57.5,17.9],[19,57.5,17.9],[21,57.5,6.8],[21.5,57.5,35.5],[22,57.5,6.8],[22.5,57.5,28.6],[23,57.5,14.8],[23.5,57.5,2103.4],[24,57.5,387.5],[24.5,57.5,26],[25,57.5,27.8],[25.5,57.5,15.6],[26,57.5,9.5],[26.5,57.5,15.3],[27,57.5,18.9],[27.5,57.5,11.7],[28,57.5,24],[28.5,57.5,7],[29,57.5,8.9],[29.5,57.5,7],[30,57.5,6.4],[30.5,57.5,3.8],[31,57.5,3],[31.5,57.5,3.9],[32,57.5,3.8],[32.5,57.5,3.4],[33,57.5,18],[33.5,57.5,6.9],[34,57.5,9.8],[34.5,57.5,20.1],[35,57.5,18.3],[35.5,57.5,14.9],[36,57.5,7.2],[36.5,57.5,7.1],[37,57.5,7.4],[37.5,57.5,22],[38,57.5,35],[38.5,57.5,10.1],[39,57.5,37.8],[39.5,57.5,21.6],[40,57.5,23],[40.5,57.5,124.2],[41,57.5,83.9],[41.5,57.5,61.5],[42,57.5,79.5],[42.5,57.5,22.3],[43,57.5,13.5],[43.5,57.5,9.3],[44,57.5,10.4],[44.5,57.5,10.2],[45,57.5,12.2],[45.5,57.5,15.6],[46,57.5,10],[46.5,57.5,9.7],[47,57.5,10.1],[47.5,57.5,15.1],[48,57.5,15.5],[48.5,57.5,15.8],[49,57.5,15.4],[49.5,57.5,11.8],[50,57.5,10.6],[50.5,57.5,6.5],[51,57.5,8.3],[51.5,57.5,9.3],[52,57.5,12.4],[52.5,57.5,18.1],[53,57.5,17.7],[53.5,57.5,15.9],[54,57.5,75.3],[54.5,57.5,8.2],[55,57.5,11.7],[55.5,57.5,11.8],[56,57.5,8.2],[56.5,57.5,45.8],[57,57.5,9.5],[57.5,57.5,9],[58,57.5,7.4],[58.5,57.5,7.6],[59,57.5,13.5],[59.5,57.5,45.4],[60,57.5,36.8],[60.5,57.5,47.8],[61,57.5,69.7],[61.5,57.5,68],[62,57.5,13.6],[62.5,57.5,9],[63,57.5,11.6],[63.5,57.5,12.5],[64,57.5,10.2],[64.5,57.5,9.8],[65,57.5,15.7],[65.5,57.5,348.1],[66,57.5,10.1],[66.5,57.5,4.7],[67,57.5,4.1],[67.5,57.5,3.8],[68,57.5,2.4],[68.5,57.5,2.4],[69,57.5,2.9],[69.5,57.5,2.1],[70,57.5,2.2],[70.5,57.5,3.4],[71,57.5,2.8],[71.5,57.5,1.5],[72,57.5,1.5],[72.5,57.5,1.5],[73,57.5,2.2],[73.5,57.5,4.3],[74,57.5,2.3],[74.5,57.5,1.7],[75,57.5,2.2],[75.5,57.5,2.4],[76,57.5,1.3],[76.5,57.5,1],[82,57.5,1.2],[83,57.5,3.9],[83.5,57.5,5.8],[84,57.5,6.1],[84.5,57.5,7],[85,57.5,6.5],[85.5,57.5,25.2],[86,57.5,1.9],[86.5,57.5,1.8],[87,57.5,1.3],[87.5,57.5,1.3],[88,57.5,1.5],[88.5,57.5,1.4],[89,57.5,1.4],[89.5,57.5,1.4],[90,57.5,1.5],[90.5,57.5,1.5],[91,57.5,1.6],[91.5,57.5,1.9],[92,57.5,2.7],[92.5,57.5,3.5],[93,57.5,3.7],[93.5,57.5,3.4],[94,57.5,2.2],[94.5,57.5,2.2],[95,57.5,2.8],[95.5,57.5,2.8],[96,57.5,3.5],[96.5,57.5,3.3],[97,57.5,2.3],[97.5,57.5,1.2],[98,57.5,1.2],[98.5,57.5,1.3],[99,57.5,1.9],[99.5,57.5,1.9],[100,57.5,1.9],[100.5,57.5,1.6],[102.5,57.5,2.6],[103,57.5,4],[103.5,57.5,4.1],[104,57.5,3.9],[-133,57,3.2],[-118,57,1.1],[-79.5,57,2.8],[-77,57,1.1],[-8,57,11.9],[-7.5,57,11.9],[-7,57,5.6],[-6.5,57,2.7],[-6,57,1.8],[-5.5,57,8],[-5,57,3.1],[-4.5,57,2.4],[-4,57,6],[-3.5,57,19.8],[-3,57,51.3],[-2.5,57,58.5],[8,57,46.8],[8.5,57,64.4],[9,57,59.8],[9.5,57,74.3],[10,57,59.8],[10.5,57,33.3],[11.5,57,95.7],[12,57,34],[12.5,57,58.5],[13,57,34.1],[13.5,57,15.2],[14,57,16.6],[14.5,57,28.3],[15,57,18.9],[15.5,57,19.4],[16,57,42.6],[16.5,57,17.8],[18,57,17.9],[20.5,57,1508],[21,57,68.5],[21.5,57,22.4],[22,57,16.4],[22.5,57,15],[23,57,35.4],[23.5,57,126.2],[24,57,323.6],[24.5,57,36.5],[25,57,20.8],[25.5,57,22.6],[26,57,16.8],[26.5,57,13.2],[27,57,29.5],[27.5,57,18.3],[28,57,9.3],[28.5,57,13.8],[29,57,10.1],[29.5,57,7.5],[30,57,7.6],[30.5,57,8],[31,57,8.2],[31.5,57,6.6],[32,57,5],[32.5,57,4.3],[33,57,5.1],[33.5,57,6.1],[34,57,8.6],[34.5,57,16.8],[35,57,12.3],[35.5,57,218.6],[36,57,60.9],[36.5,57,47.6],[37,57,99.1],[37.5,57,26.1],[38,57,28.1],[38.5,57,35.7],[39,57,15.2],[39.5,57,16.8],[40,57,16.2],[40.5,57,152.3],[41,57,114.6],[41.5,57,21.3],[42,57,15.4],[42.5,57,17.6],[43,57,61.7],[43.5,57,55.9],[44,57,17],[44.5,57,16.4],[45,57,9.9],[45.5,57,8.4],[46,57,7.4],[46.5,57,6.3],[47,57,9.9],[47.5,57,173.8],[48,57,20.3],[48.5,57,20.6],[49,57,23.8],[49.5,57,19.8],[50,57,16.9],[50.5,57,12.2],[51,57,9],[51.5,57,12],[52,57,15.1],[52.5,57,22.6],[53,57,407.6],[53.5,57,84.6],[54,57,53.2],[54.5,57,7.9],[55,57,8.7],[55.5,57,10.8],[56,57,14.4],[56.5,57,8],[57,57,10.2],[57.5,57,39.2],[58,57,11.3],[58.5,57,14.2],[59,57,21.9],[59.5,57,59.5],[60,57,335],[60.5,57,591.3],[61,57,52.4],[61.5,57,47.4],[62,57,40.3],[62.5,57,30],[63,57,12.4],[63.5,57,14.2],[64,57,11.8],[64.5,57,9.3],[65,57,12.3],[65.5,57,13.7],[66,57,31.3],[66.5,57,7],[67,57,6.4],[67.5,57,5.5],[68,57,5.8],[68.5,57,5.5],[69,57,4.8],[69.5,57,4.7],[70,57,4.6],[70.5,57,5],[71,57,4.5],[71.5,57,1.9],[72,57,1.3],[72.5,57,1.1],[73,57,2.6],[73.5,57,3.2],[74,57,18],[74.5,57,3.1],[75,57,3.5],[75.5,57,3.5],[76,57,2.6],[76.5,57,1.9],[77,57,1.9],[77.5,57,1.6],[78,57,1.1],[83,57,4.5],[83.5,57,6.5],[84,57,7.3],[84.5,57,330.1],[85,57,8],[85.5,57,7.2],[86,57,4],[86.5,57,2.5],[87,57,2.4],[87.5,57,2.4],[88,57,2.8],[88.5,57,2],[89,57,1.4],[89.5,57,1.4],[90,57,2.7],[90.5,57,4],[91,57,3.7],[91.5,57,3.6],[92,57,6.2],[92.5,57,4.6],[93,57,4.2],[93.5,57,4.3],[94,57,4.4],[94.5,57,5.6],[95,57,5.9],[95.5,57,4.6],[96,57,3.7],[96.5,57,4.1],[97,57,4.7],[97.5,57,4],[98,57,1.2],[98.5,57,1.6],[99,57,1.9],[99.5,57,1.9],[100,57,2.1],[100.5,57,2.2],[101,57,2.2],[101.5,57,2.3],[102,57,2],[102.5,57,2.6],[103,57,4.1],[103.5,57,4.1],[104,57,4.1],[104.5,57,2.3],[105.5,57,34.4],[112.5,57,1.3],[-121,56.5,9.7],[-118.5,56.5,2.7],[-118,56.5,3.1],[-117.5,56.5,4.9],[-109.5,56.5,1.1],[-96.5,56.5,1.3],[-7,56.5,5.6],[-6.5,56.5,2.9],[-6,56.5,4],[-5.5,56.5,11.8],[-5,56.5,24.4],[-4.5,56.5,15.9],[-4,56.5,147.9],[-3.5,56.5,273.7],[-3,56.5,281.7],[-2.5,56.5,35.1],[8,56.5,47.6],[8.5,56.5,66.7],[9,56.5,78],[9.5,56.5,95.6],[10,56.5,282.5],[10.5,56.5,56.3],[11,56.5,67.9],[11.5,56.5,276.9],[12,56.5,215.5],[12.5,56.5,171.7],[13,56.5,42],[13.5,56.5,33.9],[14,56.5,38.7],[14.5,56.5,45.7],[15,56.5,35],[15.5,56.5,44],[16,56.5,25.2],[16.5,56.5,20.3],[20.5,56.5,34.9],[21,56.5,29.2],[21.5,56.5,27.9],[22,56.5,45.7],[22.5,56.5,34.9],[23,56.5,26.5],[23.5,56.5,24.9],[24,56.5,33.3],[24.5,56.5,21.6],[25,56.5,13.7],[25.5,56.5,20.4],[26,56.5,15.7],[26.5,56.5,18.9],[27,56.5,20.1],[27.5,56.5,10.5],[28,56.5,10.7],[28.5,56.5,8.7],[29,56.5,7.9],[29.5,56.5,11.2],[30,56.5,69.9],[30.5,56.5,14.8],[31,56.5,6.5],[31.5,56.5,8.9],[32,56.5,6.3],[32.5,56.5,19.8],[33,56.5,5.8],[33.5,56.5,6],[34,56.5,44.2],[34.5,56.5,8.6],[35,56.5,11],[35.5,56.5,24.4],[36,56.5,25.4],[36.5,56.5,126.9],[37,56.5,49.2],[37.5,56.5,104.1],[38,56.5,161.6],[38.5,56.5,79.9],[39,56.5,53.7],[39.5,56.5,19.8],[40,56.5,239.6],[40.5,56.5,28.9],[41,56.5,111.3],[41.5,56.5,22.6],[42,56.5,49.4],[42.5,56.5,27.7],[43,56.5,78.6],[43.5,56.5,940.5],[44,56.5,220.1],[44.5,56.5,23.3],[45,56.5,19.8],[45.5,56.5,12.3],[46,56.5,15.4],[46.5,56.5,35.1],[47,56.5,294.3],[47.5,56.5,93.8],[48,56.5,18.4],[48.5,56.5,20.7],[49,56.5,24.6],[49.5,56.5,30.1],[50,56.5,27.4],[50.5,56.5,32.2],[51,56.5,56.6],[51.5,56.5,10.3],[52,56.5,42.9],[52.5,56.5,19.3],[53,56.5,19.6],[53.5,56.5,16.3],[54,56.5,96.9],[54.5,56.5,15.4],[55,56.5,23.1],[55.5,56.5,18.1],[56,56.5,17.7],[56.5,56.5,9.9],[57,56.5,9.8],[57.5,56.5,11.2],[58,56.5,14],[58.5,56.5,13.5],[59,56.5,11.6],[59.5,56.5,26.1],[60,56.5,42.8],[60.5,56.5,24.2],[61,56.5,13.3],[61.5,56.5,98],[62,56.5,42],[62.5,56.5,12.8],[63,56.5,12],[63.5,56.5,69.7],[64,56.5,10.5],[64.5,56.5,10.4],[65,56.5,9.4],[65.5,56.5,8.6],[66,56.5,8],[66.5,56.5,23.7],[67,56.5,6.7],[67.5,56.5,6.7],[68,56.5,7],[68.5,56.5,7.2],[69,56.5,45.3],[69.5,56.5,6.8],[70,56.5,7.1],[70.5,56.5,6.9],[71,56.5,4.1],[71.5,56.5,4.1],[72,56.5,3.6],[72.5,56.5,3.3],[73,56.5,3.9],[73.5,56.5,4.7],[74,56.5,8],[74.5,56.5,6.8],[75,56.5,4.7],[75.5,56.5,4.4],[76,56.5,3.4],[76.5,56.5,3.2],[77,56.5,3.1],[77.5,56.5,2.1],[78,56.5,1.3],[79,56.5,1.2],[79.5,56.5,1.2],[80,56.5,1.4],[80.5,56.5,1.6],[81,56.5,1.6],[81.5,56.5,1.8],[82,56.5,2.3],[82.5,56.5,2.6],[83,56.5,5.4],[83.5,56.5,7.6],[84,56.5,8.3],[84.5,56.5,8.3],[85,56.5,8.9],[85.5,56.5,24.7],[86,56.5,73.5],[86.5,56.5,6.2],[87,56.5,4.6],[87.5,56.5,27.6],[88,56.5,6.3],[88.5,56.5,9.1],[89,56.5,5.2],[89.5,56.5,20.6],[90,56.5,40.6],[90.5,56.5,80.7],[91,56.5,4.5],[91.5,56.5,5.3],[92,56.5,7.1],[92.5,56.5,403.3],[93,56.5,54.3],[93.5,56.5,7.2],[94,56.5,7.7],[94.5,56.5,7],[95,56.5,6.6],[95.5,56.5,72.8],[96,56.5,8.6],[96.5,56.5,6.6],[97,56.5,5.8],[97.5,56.5,2.3],[98,56.5,12.8],[98.5,56.5,1.5],[99,56.5,1.9],[99.5,56.5,1.9],[100,56.5,1.9],[100.5,56.5,2.3],[101,56.5,2.4],[101.5,56.5,214.4],[102,56.5,2.4],[102.5,56.5,2.8],[103,56.5,2.6],[103.5,56.5,2.3],[104,56.5,2.7],[104.5,56.5,3.1],[112.5,56.5,1.7],[113,56.5,1.9],[113.5,56.5,1.9],[114,56.5,1.8],[-122,56,2.3],[-120.5,56,7.3],[-119,56,2],[-117.5,56,2.1],[-117,56,1],[-99,56,1.1],[-98,56,8.4],[-7,56,2],[-6.5,56,4.3],[-6,56,6.8],[-5.5,56,16.3],[-5,56,330.3],[-4.5,56,797.3],[-4,56,249.3],[-3.5,56,363.2],[-3,56,53.9],[-2.5,56,26.8],[-2,56,26.4],[8,56,64.6],[8.5,56,52.1],[9,56,62.6],[9.5,56,165.2],[10,56,79.2],[10.5,56,62.5],[11,56,83.5],[11.5,56,109.8],[12,56,622.2],[12.5,56,1363.4],[13,56,217.4],[13.5,56,47],[14,56,47.7],[14.5,56,84],[21,56,184.6],[21.5,56,35.1],[22,56,35.7],[22.5,56,28],[23,56,110.1],[23.5,56,30.6],[24,56,95.7],[24.5,56,22.3],[25,56,23.7],[25.5,56,29.1],[26,56,38.4],[26.5,56,71.5],[27,56,21.1],[27.5,56,16.1],[28,56,21.2],[28.5,56,35.7],[29,56,39.2],[29.5,56,14.4],[30,56,12],[30.5,56,22.3],[31,56,7.6],[31.5,56,7.8],[32,56,5.7],[32.5,56,5.2],[33,56,5.5],[33.5,56,7.3],[34,56,8],[34.5,56,6.8],[35,56,29.5],[35.5,56,29.7],[36,56,49.4],[36.5,56,118.7],[37,56,2331.3],[37.5,56,4868.4],[38,56,466],[38.5,56,194.2],[39,56,56.6],[39.5,56,56.4],[40,56,27.5],[40.5,56,60.7],[41,56,17],[41.5,56,39.4],[42,56,79.4],[42.5,56,27.2],[43,56,66.6],[43.5,56,23.5],[44,56,22.7],[44.5,56,23.8],[45,56,24.2],[45.5,56,22.4],[46,56,30],[46.5,56,38],[47,56,44.2],[47.5,56,47.4],[48,56,77.5],[48.5,56,185.3],[49,56,628.2],[49.5,56,23.2],[50,56,21.9],[50.5,56,21.3],[51,56,19.8],[51.5,56,141.9],[52,56,396.8],[52.5,56,20],[53,56,18.5],[53.5,56,14.7],[54,56,27.7],[54.5,56,18.6],[55,56,18.4],[55.5,56,16.2],[56,56,14.1],[56.5,56,8.9],[57,56,9],[57.5,56,10.2],[58,56,13.9],[58.5,56,10.5],[59,56,8.7],[59.5,56,12.8],[60,56,37],[60.5,56,40.7],[61,56,13.9],[61.5,56,11.5],[62,56,12.3],[62.5,56,12.9],[63,56,13.5],[63.5,56,9.9],[64,56,13],[64.5,56,13.4],[65,56,11.4],[65.5,56,8.7],[66,56,9],[66.5,56,6.3],[67,56,5.8],[67.5,56,4.8],[68,56,4.8],[68.5,56,5],[69,56,7.9],[69.5,56,7.4],[70,56,5.4],[70.5,56,4.6],[71,56,11.7],[71.5,56,3.8],[72,56,10.9],[72.5,56,4.4],[73,56,6.5],[73.5,56,7.6],[74,56,9.6],[74.5,56,7.5],[75,56,5.1],[75.5,56,3.7],[76,56,3.9],[76.5,56,4.3],[77,56,4.5],[77.5,56,2.8],[78,56,2.4],[78.5,56,2],[79,56,2.5],[79.5,56,1.9],[80,56,1.8],[80.5,56,2.5],[81,56,3],[81.5,56,3.5],[82,56,3.2],[82.5,56,2.9],[83,56,4.7],[83.5,56,10.6],[84,56,11.9],[84.5,56,63.9],[85,56,9.6],[85.5,56,9.3],[86,56,41.6],[86.5,56,6.9],[87,56,5.2],[87.5,56,4.6],[88,56,3.7],[88.5,56,5.3],[89,56,38.8],[89.5,56,6.3],[90,56,6.6],[90.5,56,5.9],[91,56,3.8],[91.5,56,3.8],[92,56,27.3],[92.5,56,126.9],[93,56,9.3],[93.5,56,4.7],[94,56,9.9],[94.5,56,29.6],[95,56,4],[95.5,56,4],[96,56,7],[96.5,56,5],[97,56,1.2],[97.5,56,1.2],[98,56,22.4],[99,56,1.2],[99.5,56,1.3],[100,56,1.9],[100.5,56,2.3],[101,56,2.4],[101.5,56,2.4],[102,56,2.4],[102.5,56,2.4],[103,56,2.3],[104.5,56,1.3],[109,56,20.6],[113,56,1.6],[-132,55.5,20.3],[-128,55.5,2.1],[-123.5,55.5,3.7],[-121.5,55.5,1.3],[-120,55.5,3.2],[-119.5,55.5,4.6],[-119,55.5,22.6],[-118.5,55.5,1.1],[-117.5,55.5,1.8],[-116.5,55.5,2.3],[-115,55.5,4.9],[-108,55.5,1.4],[-105.5,55.5,5.7],[-105,55.5,1.1],[-103,55.5,1.3],[-9,55.5,31.3],[-8.5,55.5,26],[-8,55.5,24.5],[-7.5,55.5,90.3],[-7,55.5,116.9],[-6.5,55.5,35.2],[-6,55.5,20.6],[-5.5,55.5,11.3],[-5,55.5,66.7],[-4.5,55.5,23],[-4,55.5,32.3],[-3.5,55.5,16.3],[-3,55.5,38.5],[-2.5,55.5,25.9],[-2,55.5,277.7],[-1.5,55.5,2057.4],[8,55.5,112.7],[8.5,55.5,54.6],[9,55.5,64.7],[9.5,55.5,109.4],[10,55.5,178.7],[10.5,55.5,126.1],[11,55.5,121.6],[11.5,55.5,107.7],[12,55.5,105.2],[12.5,55.5,209.7],[13,55.5,120.8],[13.5,55.5,70.8],[14,55.5,60.4],[14.5,55.5,77.8],[15,55.5,70.5],[20.5,55.5,29.1],[21,55.5,26.8],[21.5,55.5,60.9],[22,55.5,36],[22.5,55.5,31.7],[23,55.5,31.5],[23.5,55.5,45.2],[24,55.5,46.5],[24.5,55.5,33],[25,55.5,24.6],[25.5,55.5,28.8],[26,55.5,38.8],[26.5,55.5,24.5],[27,55.5,22.1],[27.5,55.5,24.8],[28,55.5,33.2],[28.5,55.5,40.5],[29,55.5,22.8],[29.5,55.5,37.5],[30,55.5,110.4],[30.5,55.5,76.7],[31,55.5,11.5],[31.5,55.5,8.3],[32,55.5,8],[32.5,55.5,28.2],[33,55.5,37.9],[33.5,55.5,7],[34,55.5,40.6],[34.5,55.5,6.4],[35,55.5,8.1],[35.5,55.5,17.2],[36,55.5,64.1],[36.5,55.5,134.8],[37,55.5,119],[37.5,55.5,398],[38,55.5,81.5],[38.5,55.5,175.7],[39,55.5,75.7],[39.5,55.5,24.6],[40,55.5,13.8],[40.5,55.5,11.7],[41,55.5,15.8],[41.5,55.5,19.3],[42,55.5,63.5],[42.5,55.5,43.1],[43,55.5,18],[43.5,55.5,89],[44,55.5,23.7],[44.5,55.5,18.1],[45,55.5,20.6],[45.5,55.5,15.5],[46,55.5,37.8],[46.5,55.5,21.6],[47,55.5,64.5],[47.5,55.5,41.1],[48,55.5,25.6],[48.5,55.5,18.7],[49,55.5,23.1],[49.5,55.5,16.8],[50,55.5,15.1],[50.5,55.5,58.1],[51,55.5,16.9],[51.5,55.5,17],[52,55.5,34],[52.5,55.5,25.1],[53,55.5,17.2],[53.5,55.5,15.7],[54,55.5,18],[54.5,55.5,35.1],[55,55.5,16.9],[55.5,55.5,35.3],[56,55.5,26.5],[56.5,55.5,8.9],[57,55.5,12.6],[57.5,55.5,14.4],[58,55.5,9.3],[58.5,55.5,12.6],[59,55.5,64.3],[59.5,55.5,88.5],[60,55.5,79.4],[60.5,55.5,18.1],[61,55.5,540.4],[61.5,55.5,263.3],[62,55.5,12],[62.5,55.5,11.9],[63,55.5,15.6],[63.5,55.5,10.5],[64,55.5,11.9],[64.5,55.5,15.2],[65,55.5,253.7],[65.5,55.5,12.7],[66,55.5,8.9],[66.5,55.5,8.6],[67,55.5,9.1],[67.5,55.5,9.7],[68,55.5,9.3],[68.5,55.5,8.1],[69,55.5,8],[69.5,55.5,7.6],[70,55.5,6.5],[70.5,55.5,6.3],[71,55.5,5.3],[71.5,55.5,7],[72,55.5,13.2],[72.5,55.5,14.3],[73,55.5,323.7],[73.5,55.5,33.7],[74,55.5,11.3],[74.5,55.5,22.6],[75,55.5,6.3],[75.5,55.5,14.4],[76,55.5,11.3],[76.5,55.5,6.6],[77,55.5,6.8],[77.5,55.5,4.4],[78,55.5,54.6],[78.5,55.5,3.6],[79,55.5,1.6],[79.5,55.5,2.4],[80,55.5,4.6],[80.5,55.5,4.1],[81,55.5,3.9],[81.5,55.5,9.1],[82,55.5,8.6],[82.5,55.5,415.4],[83,55.5,157.9],[83.5,55.5,13.9],[84,55.5,11.6],[84.5,55.5,10.6],[85,55.5,10.2],[85.5,55.5,28.5],[86,55.5,319.3],[86.5,55.5,7.5],[87,55.5,3.6],[87.5,55.5,3.1],[88,55.5,3.1],[88.5,55.5,3.5],[89,55.5,4.8],[89.5,55.5,9.6],[90,55.5,10.1],[90.5,55.5,6.7],[91,55.5,4.3],[91.5,55.5,3.2],[92,55.5,2.8],[92.5,55.5,3.3],[93,55.5,4.4],[93.5,55.5,3.9],[94,55.5,3.2],[94.5,55.5,2.3],[95,55.5,2.2],[95.5,55.5,2.1],[96,55.5,2.1],[96.5,55.5,1.6],[97,55.5,1.2],[97.5,55.5,1.2],[98,55.5,1],[100,55.5,1.9],[100.5,55.5,2.4],[101,55.5,2.5],[101.5,55.5,3.1],[102,55.5,2.9],[102.5,55.5,2],[103,55.5,1.5],[111,55.5,1.5],[111.5,55.5,1.1],[124.5,55.5,31],[-129,55,7.9],[-127.5,55,4.3],[-115.5,55,1.7],[-114,55,1.1],[-113.5,55,2.5],[-113,55,1.8],[-112.5,55,1.1],[-112,55,2.6],[-102,55,5.3],[-98,55,2.7],[-95.5,55,1],[-9,55,13.6],[-8.5,55,18.9],[-8,55,33.1],[-7.5,55,70.3],[-7,55,64.7],[-6.5,55,157],[-6,55,593.3],[-5.5,55,59.7],[-5,55,12.6],[-4.5,55,14.5],[-4,55,36.6],[-3.5,55,73.9],[-3,55,45.6],[-2.5,55,42.2],[-2,55,432.9],[-1.5,55,1026.5],[-1,55,410.2],[8,55,79.4],[8.5,55,72.7],[9,55,121.8],[9.5,55,116.1],[10,55,89.2],[10.5,55,86.1],[11,55,62.8],[11.5,55,72.3],[12,55,48.7],[12.5,55,48.8],[13,55,75.2],[13.5,55,75.2],[14.5,55,36.3],[15,55,79.7],[16,55,30.2],[16.5,55,97.1],[17,55,28.6],[17.5,55,74.1],[18,55,256.1],[18.5,55,969.8],[19.5,55,225.5],[20,55,241.3],[20.5,55,156.6],[21,55,24.2],[21.5,55,36.3],[22,55,28.6],[22.5,55,27.8],[23,55,44.7],[23.5,55,227.4],[24,55,81.8],[24.5,55,37],[25,55,359],[25.5,55,30.8],[26,55,26.6],[26.5,55,26.1],[27,55,22.5],[27.5,55,17.8],[28,55,30.1],[28.5,55,31.7],[29,55,24.9],[29.5,55,22.3],[30,55,66.2],[30.5,55,28.9],[31,55,18.8],[31.5,55,174.6],[32,55,46.8],[32.5,55,19.3],[33,55,15.3],[33.5,55,8.7],[34,55,6],[34.5,55,6.4],[35,55,7.1],[35.5,55,25.7],[36,55,105.1],[36.5,55,20.9],[37,55,129.2],[37.5,55,31.5],[38,55,105.6],[38.5,55,100.7],[39,55,38.4],[39.5,55,298.8],[40,55,20.4],[40.5,55,12.6],[41,55,34],[41.5,55,11.5],[42,55,11.4],[42.5,55,17.5],[43,55,14.7],[43.5,55,17],[44,55,19],[44.5,55,17.6],[45,55,17.8],[45.5,55,23.1],[46,55,25.2],[46.5,55,38.5],[47,55,24.6],[47.5,55,28.3],[48,55,26.7],[48.5,55,20.9],[49,55,11.6],[49.5,55,12.9],[50,55,18.1],[50.5,55,27.1],[51,55,17.9],[51.5,55,14.5],[52,55,99.5],[52.5,55,108.3],[53,55,40.5],[53.5,55,77],[54,55,18.3],[54.5,55,16],[55,55,18.9],[55.5,55,158.6],[56,55,525.9],[56.5,55,14.9],[57,55,35.5],[57.5,55,9.2],[58,55,40.7],[58.5,55,8.5],[59,55,35.5],[59.5,55,35.2],[60,55,56.6],[60.5,55,12.2],[61,55,84.5],[61.5,55,16.7],[62,55,10.3],[62.5,55,9.5],[63,55,8.9],[63.5,55,8.9],[64,55,10.7],[64.5,55,11.3],[65,55,12.5],[65.5,55,8],[66,55,7.4],[66.5,55,7.7],[67,55,7.9],[67.5,55,8.8],[68,55,9.4],[68.5,55,9.7],[69,55,142.5],[69.5,55,8.4],[70,55,8.8],[70.5,55,8.3],[71,55,21.9],[71.5,55,10.7],[72,55,13.2],[72.5,55,13.1],[73,55,334.7],[73.5,55,43.7],[74,55,14.4],[74.5,55,7.6],[75,55,6.4],[75.5,55,4.8],[76,55,4.4],[76.5,55,4.5],[77,55,7.1],[77.5,55,5.9],[78,55,4.5],[78.5,55,4.7],[79,55,4.5],[79.5,55,5.3],[80,55,5.1],[80.5,55,4.2],[81,55,3.8],[81.5,55,8.2],[82,55,12.9],[82.5,55,75.8],[83,55,378.7],[83.5,55,16.6],[84,55,9.5],[84.5,55,10],[85,55,13.3],[85.5,55,13.5],[86,55,107.8],[86.5,55,8.6],[87,55,6.9],[87.5,55,1.4],[88,55,1.2],[88.5,55,3],[89,55,4.7],[89.5,55,5],[90,55,5.7],[90.5,55,5.2],[91,55,6],[91.5,55,4.8],[92,55,3.2],[92.5,55,3.2],[93,55,2.8],[93.5,55,3.1],[94,55,3],[94.5,55,2.6],[95,55,2.2],[95.5,55,2.1],[96,55,2],[98.5,55,18.8],[99,55,10.5],[100,55,20.9],[100.5,55,11.5],[101,55,3.6],[101.5,55,3.9],[102,55,3.6],[102.5,55,1.8],[103,55,1.1],[110.5,55,1.5],[111,55,1.5],[-132.5,54.5,8.7],[-130.5,54.5,13.5],[-129,54.5,4.2],[-127,54.5,2.5],[-126,54.5,1.6],[-125,54.5,1.1],[-124.5,54.5,3.1],[-124,54.5,1],[-123,54.5,5.9],[-117,54.5,1.5],[-116,54.5,5],[-115,54.5,1.8],[-114.5,54.5,4.8],[-114,54.5,5.2],[-113.5,54.5,1.9],[-113,54.5,1.7],[-112.5,54.5,1.9],[-112,54.5,2.4],[-111.5,54.5,1.5],[-111,54.5,4.5],[-110.5,54.5,6.1],[-110,54.5,1],[-109.5,54.5,1.1],[-108.5,54.5,3.8],[-10.5,54.5,21.7],[-10,54.5,7.4],[-9.5,54.5,26.3],[-9,54.5,21.2],[-8.5,54.5,27.9],[-8,54.5,28.2],[-7.5,54.5,29.6],[-7,54.5,58.5],[-6.5,54.5,141.1],[-6,54.5,82.7],[-5.5,54.5,116.6],[-5,54.5,101.8],[-4.5,54.5,178.4],[-4,54.5,91.3],[-3.5,54.5,125.6],[-3,54.5,97.3],[-2.5,54.5,43.7],[-2,54.5,72.8],[-1.5,54.5,97.1],[-1,54.5,76.9],[-0.5,54.5,128.5],[7.5,54.5,440.1],[8.5,54.5,86.5],[9,54.5,98.4],[9.5,54.5,150.3],[10,54.5,289.1],[10.5,54.5,141.7],[11,54.5,138.2],[11.5,54.5,82.5],[12,54.5,285.3],[12.5,54.5,56.5],[13,54.5,141.9],[13.5,54.5,64.4],[14,54.5,58.7],[14.5,54.5,71.8],[15,54.5,59.7],[15.5,54.5,125.3],[16,54.5,135.4],[16.5,54.5,51.9],[17,54.5,81.2],[17.5,54.5,53],[18,54.5,153.1],[18.5,54.5,444.7],[19,54.5,175.7],[19.5,54.5,46.1],[20,54.5,33.3],[20.5,54.5,50],[21,54.5,44.2],[21.5,54.5,46.9],[22,54.5,30.3],[22.5,54.5,66.5],[23,54.5,33.5],[23.5,54.5,31.8],[24,54.5,59.1],[24.5,54.5,21.7],[25,54.5,29.1],[25.5,54.5,26.3],[26,54.5,31.8],[26.5,54.5,68.1],[27,54.5,68.2],[27.5,54.5,32.8],[28,54.5,164.6],[28.5,54.5,57.1],[29,54.5,17.4],[29.5,54.5,22.6],[30,54.5,57.5],[30.5,54.5,46.7],[31,54.5,29.5],[31.5,54.5,18.2],[32,54.5,18.8],[32.5,54.5,12.8],[33,54.5,10],[33.5,54.5,8.4],[34,54.5,25.2],[34.5,54.5,9.4],[35,54.5,14.4],[35.5,54.5,19.6],[36,54.5,102.2],[36.5,54.5,20.1],[37,54.5,68.9],[37.5,54.5,365.4],[38,54.5,28.2],[38.5,54.5,29.4],[39,54.5,19.7],[39.5,54.5,26.3],[40,54.5,17.2],[40.5,54.5,16.2],[41,54.5,14.9],[41.5,54.5,31.2],[42,54.5,15.1],[42.5,54.5,20.2],[43,54.5,20.5],[43.5,54.5,26.2],[44,54.5,17],[44.5,54.5,43.1],[45,54.5,218.6],[45.5,54.5,30.8],[46,54.5,22.9],[46.5,54.5,13.7],[47,54.5,12.5],[47.5,54.5,14.4],[48,54.5,293],[48.5,54.5,97],[49,54.5,12.1],[49.5,54.5,65],[50,54.5,12.5],[50.5,54.5,14.7],[51,54.5,13],[51.5,54.5,10],[52,54.5,9.7],[52.5,54.5,12.1],[53,54.5,26.2],[53.5,54.5,66.3],[54,54.5,57.2],[54.5,54.5,15.5],[55,54.5,30.5],[55.5,54.5,22.2],[56,54.5,22.7],[56.5,54.5,11.3],[57,54.5,6.7],[57.5,54.5,3.4],[58,54.5,42.7],[58.5,54.5,4.4],[59,54.5,8.6],[59.5,54.5,34],[60,54.5,13.3],[60.5,54.5,15.2],[61,54.5,37.3],[61.5,54.5,52.8],[62,54.5,8.4],[62.5,54.5,7.9],[63,54.5,7.7],[63.5,54.5,7.6],[64,54.5,7.9],[64.5,54.5,7.8],[65,54.5,6.5],[65.5,54.5,5.5],[66,54.5,6],[66.5,54.5,6.1],[67,54.5,7.3],[67.5,54.5,9],[68,54.5,9.5],[68.5,54.5,9],[69,54.5,7.8],[69.5,54.5,8.5],[70,54.5,9.1],[70.5,54.5,7.4],[71,54.5,7.4],[71.5,54.5,7.6],[72,54.5,7.9],[72.5,54.5,8.9],[73,54.5,12.3],[73.5,54.5,12.1],[74,54.5,13],[74.5,54.5,9.8],[75,54.5,8.1],[75.5,54.5,5.8],[76,54.5,4.7],[76.5,54.5,6.2],[77,54.5,7.5],[77.5,54.5,6.8],[78,54.5,7.6],[78.5,54.5,7.5],[79,54.5,7],[79.5,54.5,6.6],[80,54.5,6.6],[80.5,54.5,6.6],[81,54.5,7.6],[81.5,54.5,8.3],[82,54.5,7.9],[82.5,54.5,12.4],[83,54.5,17.2],[83.5,54.5,15.3],[84,54.5,7.4],[84.5,54.5,7.3],[85,54.5,6.1],[85.5,54.5,7.6],[86,54.5,126],[86.5,54.5,81.5],[87,54.5,5.6],[88.5,54.5,1.1],[89,54.5,5.4],[89.5,54.5,6.4],[90,54.5,5.9],[90.5,54.5,5.4],[91,54.5,5.1],[91.5,54.5,6],[92,54.5,3.5],[92.5,54.5,2.7],[93,54.5,2.4],[93.5,54.5,2.4],[94,54.5,2.4],[94.5,54.5,2.3],[95,54.5,2.3],[95.5,54.5,1.7],[99.5,54.5,1.5],[100,54.5,2.1],[100.5,54.5,2.4],[101,54.5,3.6],[101.5,54.5,3.5],[102,54.5,10.6],[102.5,54.5,2.4],[108.5,54.5,1.2],[109,54.5,1.3],[110,54.5,1.6],[110.5,54.5,1.7],[111,54.5,1.2],[120.5,54.5,1],[121,54.5,1.3],[121.5,54.5,1.4],[122,54.5,1.1],[122.5,54.5,1.5],[123,54.5,2],[123.5,54.5,1.4],[139.5,54.5,1.1],[140,54.5,1.2],[-129,54,3.5],[-123,54,36.1],[-119.5,54,2.5],[-116.5,54,4.3],[-115.5,54,2.7],[-115,54,5.7],[-114.5,54,10],[-114,54,149.7],[-113.5,54,166.3],[-113,54,9.4],[-112.5,54,3.9],[-112,54,2.4],[-111.5,54,4.5],[-111,54,2.6],[-110.5,54,2],[-110,54,1.7],[-109.5,54,1.2],[-108,54,1.2],[-107.5,54,1.5],[-101.5,54,5.3],[-98,54,1.6],[-95,54,3.7],[-79.5,54,2.2],[-79,54,1.6],[-10.5,54,20.2],[-10,54,13],[-9.5,54,27.3],[-9,54,25.9],[-8.5,54,21.2],[-8,54,24.3],[-7.5,54,33.3],[-7,54,52.8],[-6.5,54,123.4],[-3.5,54,1271],[-3,54,578.7],[-2.5,54,843.2],[-2,54,876.8],[-1.5,54,567.5],[-1,54,177.3],[-0.5,54,359.7],[0,54,157],[6,54,45.3],[6.5,54,146.3],[7,54,139.6],[7.5,54,117.5],[8,54,356.8],[8.5,54,191.4],[9,54,122.7],[9.5,54,521.3],[10,54,531.5],[10.5,54,226.1],[11,54,133],[11.5,54,57.2],[12,54,55.4],[12.5,54,49.1],[13,54,79.4],[13.5,54,54.8],[14,54,84.3],[14.5,54,72.7],[15,54,48.8],[15.5,54,47.1],[16,54,35.7],[16.5,54,46.8],[17,54,35.8],[17.5,54,65.4],[18,54,41.1],[18.5,54,122.2],[19,54,51.1],[19.5,54,81.4],[20,54,99.6],[20.5,54,75.7],[21,54,47.7],[21.5,54,35.5],[22,54,74.3],[22.5,54,32.8],[23,54,31.6],[23.5,54,108.7],[24,54,98.8],[24.5,54,34.3],[25,54,77.7],[25.5,54,33.8],[26,54,27.4],[26.5,54,29],[27,54,177.1],[27.5,54,760.3],[28,54,29.4],[28.5,54,23.1],[29,54,15.8],[29.5,54,45.6],[30,54,136.6],[30.5,54,56.9],[31,54,22.2],[31.5,54,31.4],[32,54,18.9],[32.5,54,45],[33,54,33.7],[33.5,54,20.8],[34,54,61.7],[34.5,54,8.3],[35,54,10.4],[35.5,54,13.3],[36,54,25.6],[36.5,54,13.4],[37,54,30.3],[37.5,54,85.3],[38,54,213.5],[38.5,54,37.6],[39,54,18.6],[39.5,54,43.1],[40,54,21.5],[40.5,54,13.3],[41,54,13.5],[41.5,54,14.9],[42,54,18],[42.5,54,20.3],[43,54,19.7],[43.5,54,34],[44,54,16.6],[44.5,54,19.2],[45,54,16.8],[45.5,54,19.3],[46,54,17.6],[46.5,54,13],[47,54,21.9],[47.5,54,10.9],[48,54,9.7],[48.5,54,17.5],[49,54,78.1],[49.5,54,10],[50,54,11.5],[50.5,54,13.5],[51,54,14],[51.5,54,10.3],[52,54,51.8],[52.5,54,9.2],[53,54,10.5],[53.5,54,23.8],[54,54,12.7],[54.5,54,16.8],[55,54,17.7],[55.5,54,16.5],[56,54,155.5],[56.5,54,8.4],[57,54,5],[57.5,54,3.3],[58,54,18.1],[58.5,54,9.1],[59,54,14.4],[59.5,54,10.7],[60,54,9.5],[60.5,54,8.6],[61,54,8],[61.5,54,11.8],[62,54,7.2],[62.5,54,6.8],[63,54,7.4],[63.5,54,8.6],[64,54,6.9],[64.5,54,6.5],[65,54,5.7],[65.5,54,6],[66,54,5.5],[66.5,54,5.7],[67,54,8.5],[67.5,54,8.8],[68,54,8.5],[68.5,54,8.2],[69,54,8],[69.5,54,10.2],[70,54,6.5],[70.5,54,6.3],[71,54,5],[71.5,54,4.7],[72,54,4.8],[72.5,54,4.6],[73,54,5.7],[73.5,54,7.2],[74,54,8],[74.5,54,8.1],[75,54,5.4],[75.5,54,4.7],[76,54,5],[76.5,54,5.9],[77,54,7.3],[77.5,54,9.7],[78,54,10.2],[78.5,54,8.4],[79,54,7.2],[79.5,54,6.9],[80,54,6.4],[80.5,54,6],[81,54,30.8],[81.5,54,6.1],[82,54,7.5],[82.5,54,9.1],[83,54,13.7],[83.5,54,15],[84,54,12.8],[84.5,54,35.9],[85,54,6],[85.5,54,6.3],[86,54,6.7],[86.5,54,152.1],[87,54,396.7],[87.5,54,30.9],[88,54,60.7],[88.5,54,2.1],[89,54,5.4],[89.5,54,6.5],[90,54,6.5],[90.5,54,6.5],[91,54,148.2],[91.5,54,55.4],[92,54,7.7],[92.5,54,2.5],[93,54,2.1],[93.5,54,2.2],[94,54,2.3],[94.5,54,2.4],[95,54,2.4],[95.5,54,2.3],[96,54,1.6],[99.5,54,1.9],[100,54,2.1],[100.5,54,2.5],[101,54,2.2],[101.5,54,14],[102,54,27.8],[102.5,54,9],[103,54,6.3],[103.5,54,4.2],[104,54,4.2],[108,54,1.2],[108.5,54,2.3],[109,54,2.3],[109.5,54,2.3],[110,54,2.3],[110.5,54,2.3],[117.5,54,1.2],[118,54,1.6],[118.5,54,1.3],[119,54,1.3],[119.5,54,1.3],[120,54,1.3],[120.5,54,1.3],[121,54,1.3],[121.5,54,1.6],[122,54,2.2],[122.5,54,2.2],[123,54,2.3],[123.5,54,2.2],[124,54,2.2],[124.5,54,1.9],[125,54,2],[125.5,54,2],[127,54,17.9],[139.5,54,1.2],[140,54,1.2],[140.5,54,1.2],[142.5,54,27.8],[-132,53.5,1.4],[-123,53.5,1.6],[-122.5,53.5,1.1],[-118,53.5,5.8],[-115.5,53.5,2.1],[-115,53.5,8.9],[-114.5,53.5,7.7],[-114,53.5,92.9],[-113.5,53.5,81.8],[-113,53.5,13.5],[-112.5,53.5,3.7],[-112,53.5,2.3],[-111.5,53.5,1.7],[-111,53.5,3.5],[-110.5,53.5,8.9],[-110,53.5,6],[-109.5,53.5,1.4],[-109,53.5,1.5],[-108.5,53.5,1.6],[-108,53.5,1.2],[-107,53.5,2],[-106.5,53.5,2.2],[-106,53.5,22.9],[-105.5,53.5,1.7],[-105,53.5,1.2],[-104.5,53.5,3.6],[-104,53.5,2.1],[-93.5,53.5,1],[-61,53.5,1.7],[-60.5,53.5,2.9],[-10.5,53.5,18],[-10,53.5,14.6],[-9.5,53.5,69.4],[-9,53.5,32],[-8.5,53.5,20.9],[-8,53.5,35],[-7.5,53.5,40.7],[-7,53.5,80.8],[-6.5,53.5,770.3],[-6,53.5,224.6],[-5,53.5,91.3],[-4.5,53.5,69.8],[-4,53.5,59.6],[-3.5,53.5,363.5],[-3,53.5,813.1],[-2.5,53.5,935.3],[-2,53.5,337.6],[-1.5,53.5,672.4],[-1,53.5,175],[-0.5,53.5,95.7],[0,53.5,77.6],[4.5,53.5,77.8],[5,53.5,133.9],[5.5,53.5,229.9],[6,53.5,220.8],[6.5,53.5,246.6],[7,53.5,166.2],[7.5,53.5,134.4],[8,53.5,212.5],[8.5,53.5,432.1],[9,53.5,97.6],[9.5,53.5,235],[10,53.5,318.4],[10.5,53.5,87],[11,53.5,52.7],[11.5,53.5,47.1],[12,53.5,45],[12.5,53.5,44.2],[13,53.5,67.5],[13.5,53.5,50.6],[14,53.5,69.5],[14.5,53.5,250.3],[15,53.5,67.6],[15.5,53.5,28],[16,53.5,39.5],[16.5,53.5,78.9],[17,53.5,61.1],[17.5,53.5,121.8],[18,53.5,232.3],[18.5,53.5,203.5],[19,53.5,79.8],[19.5,53.5,57.9],[20,53.5,69.6],[20.5,53.5,36.4],[21,53.5,35.7],[21.5,53.5,71.4],[22,53.5,71],[22.5,53.5,44.6],[23,53.5,202.6],[23.5,53.5,38.5],[24,53.5,52.5],[24.5,53.5,37.4],[25,53.5,38.5],[25.5,53.5,74.4],[26,53.5,58.7],[26.5,53.5,37.4],[27,53.5,32.3],[27.5,53.5,45],[28,53.5,26.6],[28.5,53.5,47.9],[29,53.5,73.3],[29.5,53.5,39.3],[30,53.5,27.4],[30.5,53.5,19.5],[31,53.5,13.5],[31.5,53.5,17.7],[32,53.5,21.9],[32.5,53.5,21.9],[33,53.5,18.2],[33.5,53.5,29.9],[34,53.5,294.7],[34.5,53.5,24],[35,53.5,15.8],[35.5,53.5,18.8],[36,53.5,21.3],[36.5,53.5,43],[37,53.5,15.4],[37.5,53.5,15.5],[38,53.5,44.6],[38.5,53.5,14.8],[39,53.5,32.2],[39.5,53.5,23.8],[40,53.5,27.4],[40.5,53.5,20.5],[41,53.5,20.4],[41.5,53.5,43.9],[42,53.5,16.7],[42.5,53.5,17],[43,53.5,16.7],[43.5,53.5,24.3],[44,53.5,31],[44.5,53.5,126.8],[45,53.5,221.9],[45.5,53.5,26.6],[46,53.5,18.5],[46.5,53.5,74.6],[47,53.5,12.6],[47.5,53.5,12.2],[48,53.5,87.2],[48.5,53.5,26.6],[49,53.5,348.5],[49.5,53.5,63.6],[50,53.5,560.3],[50.5,53.5,32.2],[51,53.5,35.4],[51.5,53.5,10.6],[52,53.5,9.9],[52.5,53.5,10.3],[53,53.5,10.2],[53.5,53.5,9.4],[54,53.5,10],[54.5,53.5,11],[55,53.5,11.5],[55.5,53.5,98],[56,53.5,48.1],[56.5,53.5,7.1],[57,53.5,3.5],[57.5,53.5,3.7],[58,53.5,7.8],[58.5,53.5,116.3],[59,53.5,154.8],[59.5,53.5,9.4],[60,53.5,6.1],[60.5,53.5,27.3],[61,53.5,8.8],[61.5,53.5,8.2],[62,53.5,7.4],[62.5,53.5,9.7],[63,53.5,58.8],[63.5,53.5,129.2],[64,53.5,5.6],[64.5,53.5,5.5],[65,53.5,5.8],[65.5,53.5,6],[66,53.5,6.2],[66.5,53.5,6.9],[67,53.5,7.7],[67.5,53.5,8.5],[68,53.5,8.2],[68.5,53.5,8.8],[69,53.5,77.4],[69.5,53.5,13.7],[70,53.5,17.4],[70.5,53.5,5.9],[71,53.5,4.9],[71.5,53.5,4],[72,53.5,3],[72.5,53.5,3.9],[73,53.5,4.1],[73.5,53.5,3.9],[74,53.5,4.3],[74.5,53.5,4.2],[75,53.5,4.1],[75.5,53.5,5.1],[76,53.5,6.1],[76.5,53.5,6.1],[77,53.5,5.8],[77.5,53.5,6.7],[78,53.5,6.5],[78.5,53.5,41.7],[79,53.5,9.5],[79.5,53.5,8],[80,53.5,7.3],[80.5,53.5,7.7],[81,53.5,8.1],[81.5,53.5,8.2],[82,53.5,9.7],[82.5,53.5,14.1],[83,53.5,22.6],[83.5,53.5,386.5],[84,53.5,30.1],[84.5,53.5,10.8],[85,53.5,8.7],[85.5,53.5,7.5],[86,53.5,6],[86.5,53.5,5.2],[87,53.5,4.9],[87.5,53.5,3.7],[88,53.5,3.8],[88.5,53.5,3.4],[89,53.5,5.2],[89.5,53.5,6.5],[90,53.5,6.4],[90.5,53.5,5.5],[91,53.5,46.6],[91.5,53.5,7.8],[92,53.5,2.2],[92.5,53.5,1.6],[93,53.5,1.8],[93.5,53.5,2.1],[94,53.5,2.1],[100,53.5,1],[100.5,53.5,3.5],[101,53.5,3.9],[101.5,53.5,4.1],[102,53.5,5.3],[102.5,53.5,8.2],[103,53.5,56.2],[103.5,53.5,7.1],[104,53.5,6.4],[104.5,53.5,5.8],[105,53.5,4.9],[105.5,53.5,4.3],[107,53.5,1],[107.5,53.5,1.2],[108,53.5,2.5],[108.5,53.5,2.4],[109,53.5,2.4],[109.5,53.5,2.4],[110,53.5,2.3],[110.5,53.5,1],[116.5,53.5,1.8],[117,53.5,3.5],[117.5,53.5,3.8],[118,53.5,2.5],[118.5,53.5,1.7],[119,53.5,1.9],[119.5,53.5,1.3],[120,53.5,1],[120.5,53.5,2.1],[121,53.5,2.4],[121.5,53.5,3.8],[122,53.5,5.1],[122.5,53.5,5.1],[123,53.5,5.3],[123.5,53.5,5.7],[124,53.5,5.5],[124.5,53.5,3.8],[125,53.5,3.7],[125.5,53.5,2.2],[126,53.5,1.8],[140,53.5,1.1],[140.5,53.5,19.6],[141,53.5,1.2],[158,53.5,20.8],[158.5,53.5,124.4],[-123,53,2.3],[-122.5,53,2.6],[-122,53,1],[-121.5,53,1.2],[-121,53,1.2],[-118.5,53,1.8],[-115.5,53,1.4],[-115,53,1.9],[-114.5,53,4.9],[-114,53,7.9],[-113.5,53,9.6],[-113,53,4.9],[-112.5,53,2.7],[-112,53,2.4],[-111.5,53,1.8],[-111,53,3.8],[-110.5,53,1.4],[-109.5,53,1.2],[-109,53,1.2],[-108.5,53,11.1],[-107,53,2.2],[-106.5,53,3.6],[-106,53,2.1],[-105.5,53,1.9],[-105,53,4.4],[-104.5,53,3.1],[-104,53,1],[-103.5,53,1.1],[-102.5,53,1.1],[-67.5,53,1.7],[-67,53,5.9],[-10,53,18.5],[-9.5,53,24.3],[-9,53,87.3],[-8.5,53,28.1],[-8,53,29.8],[-7.5,53,37.3],[-7,53,42.8],[-6.5,53,41.5],[-6,53,119.1],[-5,53,45.3],[-4.5,53,45.2],[-4,53,50.4],[-3.5,53,67.9],[-3,53,139.9],[-2.5,53,557.6],[-2,53,687.2],[-1.5,53,819.9],[-1,53,141.1],[-0.5,53,184.3],[0,53,107.1],[0.5,53,94.1],[1,53,213],[1.5,53,289.4],[4.5,53,449.9],[5,53,380.7],[5.5,53,147],[6,53,161.5],[6.5,53,111.4],[7,53,109.6],[7.5,53,122.2],[8,53,129.2],[8.5,53,110.6],[9,53,145],[9.5,53,182],[10,53,110.4],[10.5,53,79],[11,53,43.7],[11.5,53,48.1],[12,53,59.7],[12.5,53,66.2],[13,53,808.5],[13.5,53,250.6],[14,53,68.4],[14.5,53,56.4],[15,53,105.4],[15.5,53,43.6],[16,53,49.4],[16.5,53,85.1],[17,53,67.2],[17.5,53,98.6],[18,53,113.6],[18.5,53,109.3],[19,53,110.5],[19.5,53,121.5],[20,53,60.6],[20.5,53,76.8],[21,53,68.5],[21.5,53,64.9],[22,53,53.7],[22.5,53,43.1],[23,53,39.2],[23.5,53,31.1],[24,53,20.8],[24.5,53,30.9],[25,53,34.5],[25.5,53,38.7],[26,53,27.5],[26.5,53,29.8],[27,53,52.7],[27.5,53,44.9],[28,53,21.5],[28.5,53,20.5],[29,53,54.8],[29.5,53,55.4],[30,53,41.8],[30.5,53,55.7],[31,53,21.6],[31.5,53,18.6],[32,53,61.6],[32.5,53,36],[33,53,32],[33.5,53,25.4],[34,53,18.7],[34.5,53,21.2],[35,53,15.3],[35.5,53,26.8],[36,53,211.1],[36.5,53,17.6],[37,53,20],[37.5,53,16.7],[38,53,19.4],[38.5,53,86.5],[39,53,57.9],[39.5,53,268.3],[40,53,57.7],[40.5,53,45.9],[41,53,208.2],[41.5,53,59.9],[42,53,16],[42.5,53,26.1],[43,53,17.4],[43.5,53,18.3],[44,53,15.6],[44.5,53,17.5],[45,53,14.7],[45.5,53,14.2],[46,53,16],[46.5,53,16.8],[47,53,14.3],[47.5,53,10.9],[48,53,9.4],[48.5,53,11.1],[49,53,10.1],[49.5,53,48.2],[50,53,10.2],[50.5,53,12.8],[51,53,11],[51.5,53,8],[52,53,56.7],[52.5,53,10.5],[53,53,8.9],[53.5,53,9],[54,53,7.7],[54.5,53,7.8],[55,53,8.4],[55.5,53,80.7],[56,53,9.5],[56.5,53,8.9],[57,53,4.6],[57.5,53,6],[58,53,16.9],[58.5,53,36.6],[59,53,7.7],[59.5,53,7.2],[60,53,6],[60.5,53,5.5],[61,53,5.2],[61.5,53,5.3],[62,53,14.7],[62.5,53,18.8],[63,53,32.8],[63.5,53,8.5],[64,53,6.1],[64.5,53,5.5],[65,53,4.7],[65.5,53,4.7],[66,53,6.8],[66.5,53,6.4],[67,53,6.1],[67.5,53,6.4],[68,53,6.5],[68.5,53,6.9],[69,53,7.9],[69.5,53,6.9],[70,53,29.3],[70.5,53,5.2],[71,53,4],[71.5,53,2.1],[72,53,1.9],[72.5,53,2.2],[73,53,2.6],[73.5,53,2.8],[74,53,3.1],[74.5,53,3],[75,53,2.9],[75.5,53,3],[76,53,3.5],[76.5,53,6.1],[77,53,6.2],[77.5,53,5.8],[78,53,6.3],[78.5,53,9.9],[79,53,11.3],[79.5,53,12.6],[80,53,11.4],[80.5,53,10.7],[81,53,9.2],[81.5,53,12.5],[82,53,9],[82.5,53,24.7],[83,53,9.2],[83.5,53,9.1],[84,53,9.4],[84.5,53,9.7],[85,53,143.3],[85.5,53,12.9],[86,53,6.6],[86.5,53,4.3],[87,53,2.8],[87.5,53,16.6],[88,53,2.9],[88.5,53,2.9],[89,53,2.2],[89.5,53,2.3],[90,53,2.6],[90.5,53,3.6],[91,53,4.6],[91.5,53,4.6],[92,53,2],[92.5,53,1.4],[93,53,1.4],[93.5,53,1.5],[94,53,1.6],[101,53,2.4],[101.5,53,3.2],[102,53,3.2],[102.5,53,3.7],[103,53,6.6],[103.5,53,211],[104,53,5],[104.5,53,5.7],[105,53,5.4],[105.5,53,2.6],[106,53,1.2],[106.5,53,1.2],[107,53,8.3],[107.5,53,2.5],[108,53,2.5],[108.5,53,2.3],[109,53,1.9],[109.5,53,1.8],[110,53,1.7],[110.5,53,1],[114,53,3],[114.5,53,2.2],[115.5,53,1.3],[116,53,4.9],[116.5,53,3.8],[117,53,3.5],[117.5,53,2.7],[118,53,2.3],[118.5,53,2],[119,53,1.4],[120,53,2],[120.5,53,3],[121,53,3.5],[121.5,53,5.1],[122,53,5.8],[122.5,53,5.3],[123,53,5.5],[123.5,53,7.3],[124,53,7.4],[124.5,53,7.4],[125,53,7.4],[125.5,53,3.7],[126,53,2],[126.5,53,1.9],[127,53,1.5],[140.5,53,1],[141,53,1.2],[142.5,53,1],[143,53,1],[-128.5,52.5,1.2],[-122.5,52.5,6.5],[-122,52.5,1.4],[-121.5,52.5,1.3],[-121,52.5,1.3],[-115,52.5,4.4],[-114.5,52.5,8.9],[-114,52.5,52.2],[-113.5,52.5,5.7],[-113,52.5,4.6],[-112.5,52.5,1.1],[-112,52.5,1.4],[-111.5,52.5,1.4],[-111,52.5,1.1],[-110.5,52.5,1.7],[-110,52.5,1.5],[-109.5,52.5,2.1],[-109,52.5,1.4],[-108.5,52.5,1],[-108,52.5,2],[-107.5,52.5,2.4],[-107,52.5,116.1],[-106.5,52.5,1.8],[-106,52.5,1.7],[-105.5,52.5,3.9],[-105,52.5,2.2],[-104.5,52.5,1.6],[-104,52.5,2],[-101.5,52.5,3.6],[-55.5,52.5,1],[-11,52.5,10.6],[-10.5,52.5,17.8],[-10,52.5,49.5],[-9.5,52.5,28],[-9,52.5,30.3],[-8.5,52.5,27.1],[-8,52.5,33.6],[-7.5,52.5,69.3],[-7,52.5,42.5],[-6.5,52.5,90.9],[-5.5,52.5,71],[-5,52.5,59.7],[-4.5,52.5,48.1],[-4,52.5,54.7],[-3.5,52.5,61.2],[-3,52.5,76.3],[-2.5,52.5,386.4],[-2,52.5,709.2],[-1.5,52.5,242.9],[-1,52.5,401.5],[-0.5,52.5,205.7],[0,52.5,189.4],[0.5,52.5,136.4],[1,52.5,186.3],[1.5,52.5,209.6],[4,52.5,2492.2],[4.5,52.5,1169],[5,52.5,838.6],[5.5,52.5,351.9],[6,52.5,286.5],[6.5,52.5,346.5],[7,52.5,193.4],[7.5,52.5,256.3],[8,52.5,295.1],[8.5,52.5,373.4],[9,52.5,262.9],[9.5,52.5,382.6],[10,52.5,326.9],[10.5,52.5,270.3],[11,52.5,80.8],[11.5,52.5,193.6],[12,52.5,88.7],[12.5,52.5,104.4],[13,52.5,680.2],[13.5,52.5,434.7],[14,52.5,101.5],[14.5,52.5,67.9],[15,52.5,41.8],[15.5,52.5,67.7],[16,52.5,79.9],[16.5,52.5,369.9],[17,52.5,150.7],[17.5,52.5,89.2],[18,52.5,122.5],[18.5,52.5,84.1],[19,52.5,98.8],[19.5,52.5,83.2],[20,52.5,104.4],[20.5,52.5,590.4],[21,52.5,692.9],[21.5,52.5,77.8],[22,52.5,104.9],[22.5,52.5,48],[23,52.5,68.8],[23.5,52.5,102.7],[24,52.5,42.2],[24.5,52.5,39.3],[25,52.5,34.6],[25.5,52.5,42.4],[26,52.5,56],[26.5,52.5,32.7],[27,52.5,29.7],[27.5,52.5,21.1],[28,52.5,16.2],[28.5,52.5,29.4],[29,52.5,35.9],[29.5,52.5,32.8],[30,52.5,35.8],[30.5,52.5,153.1],[31,52.5,134.4],[31.5,52.5,43.6],[32,52.5,27.5],[32.5,52.5,22.8],[33,52.5,24.3],[33.5,52.5,23.4],[34,52.5,19.2],[34.5,52.5,20.6],[35,52.5,59.2],[35.5,52.5,18.8],[36,52.5,20.6],[36.5,52.5,18],[37,52.5,17.1],[37.5,52.5,46.4],[38,52.5,22.4],[38.5,52.5,25.8],[39,52.5,30.6],[39.5,52.5,50.1],[40,52.5,23.8],[40.5,52.5,17],[41,52.5,18.5],[41.5,52.5,18.5],[42,52.5,21.3],[42.5,52.5,15.5],[43,52.5,14],[43.5,52.5,35.9],[44,52.5,34.4],[44.5,52.5,8.3],[45,52.5,27.3],[45.5,52.5,9.4],[46,52.5,14.2],[46.5,52.5,11.9],[47,52.5,53],[47.5,52.5,86.8],[48,52.5,17.5],[48.5,52.5,14.1],[49,52.5,7.6],[49.5,52.5,7.4],[50,52.5,6.5],[50.5,52.5,5.9],[51,52.5,5.9],[51.5,52.5,6.7],[52,52.5,9.3],[52.5,52.5,10.4],[53,52.5,22.1],[53.5,52.5,8.4],[54,52.5,9.7],[54.5,52.5,9.5],[55,52.5,9.4],[55.5,52.5,10.8],[56,52.5,11.8],[56.5,52.5,8.3],[57,52.5,4.7],[57.5,52.5,4.5],[58,52.5,6.8],[58.5,52.5,6.3],[59,52.5,5.5],[59.5,52.5,5],[60,52.5,6.4],[60.5,52.5,5.5],[61,52.5,28.7],[61.5,52.5,4.3],[62,52.5,4.3],[62.5,52.5,6.9],[63,52.5,6.5],[63.5,52.5,6],[64,52.5,6],[64.5,52.5,5],[65,52.5,4],[65.5,52.5,3.8],[66,52.5,5.8],[66.5,52.5,5.4],[67,52.5,5.1],[67.5,52.5,5.2],[68,52.5,5],[68.5,52.5,5.4],[69,52.5,6.3],[69.5,52.5,9.7],[70,52.5,9],[70.5,52.5,7.3],[71,52.5,5.6],[71.5,52.5,4.8],[72,52.5,4],[72.5,52.5,3.7],[73,52.5,3.8],[73.5,52.5,3.7],[74,52.5,1.6],[74.5,52.5,1.2],[75,52.5,1.7],[75.5,52.5,3.6],[76,52.5,4.1],[76.5,52.5,99.8],[77,52.5,123],[77.5,52.5,6.1],[78,52.5,5.3],[78.5,52.5,6.6],[79,52.5,6.8],[79.5,52.5,7],[80,52.5,7.3],[80.5,52.5,7],[81,52.5,6.8],[81.5,52.5,9.2],[82,52.5,9.3],[82.5,52.5,8.1],[83,52.5,7.7],[83.5,52.5,8],[84,52.5,9.2],[84.5,52.5,15.8],[85,52.5,11],[85.5,52.5,11.2],[86,52.5,7.8],[86.5,52.5,3.4],[87,52.5,1.4],[87.5,52.5,1.4],[88,52.5,1.8],[88.5,52.5,2.1],[89,52.5,1.8],[89.5,52.5,1.8],[90,52.5,1.7],[90.5,52.5,3.7],[91,52.5,4.1],[91.5,52.5,2.8],[92,52.5,1.5],[92.5,52.5,1.4],[93,52.5,1.4],[93.5,52.5,1.5],[94,52.5,1.5],[94.5,52.5,1.1],[101.5,52.5,1],[102,52.5,1.6],[102.5,52.5,6],[103,52.5,7.6],[103.5,52.5,6],[104,52.5,373.4],[104.5,52.5,4.9],[105,52.5,4.9],[105.5,52.5,4.9],[106,52.5,8.4],[106.5,52.5,8.3],[107,52.5,3.9],[107.5,52.5,2.9],[108,52.5,5],[108.5,52.5,3.9],[109,52.5,1.7],[109.5,52.5,1.8],[110,52.5,1.6],[110.5,52.5,1.2],[111,52.5,1.4],[111.5,52.5,1.2],[112,52.5,1.8],[112.5,52.5,2.9],[113,52.5,182.4],[113.5,52.5,3.6],[114,52.5,3.7],[114.5,52.5,4.4],[115,52.5,5.4],[115.5,52.5,5.1],[116,52.5,6.3],[116.5,52.5,4.5],[117,52.5,2.4],[117.5,52.5,2.2],[118,52.5,2],[118.5,52.5,1.3],[119,52.5,1],[120,52.5,1.2],[120.5,52.5,2.5],[121,52.5,3.2],[121.5,52.5,5.7],[122,52.5,7.9],[122.5,52.5,4.9],[123,52.5,2.4],[123.5,52.5,2.1],[124,52.5,3.7],[124.5,52.5,3.3],[125,52.5,3.4],[125.5,52.5,2],[126,52.5,1.8],[127.5,52.5,13.8],[141,52.5,1.2],[142.5,52.5,1.2],[143,52.5,1.2],[-122.5,52,1.2],[-122,52,1.2],[-121.5,52,2.3],[-121,52,1.4],[-115,52,3.3],[-114.5,52,11.3],[-114,52,3.3],[-113.5,52,4.5],[-113,52,1.4],[-112,52,1.9],[-109.5,52,1.2],[-108,52,1.7],[-107.5,52,1.5],[-107,52,1.3],[-106.5,52,1.9],[-106,52,1.1],[-105.5,52,2.9],[-104.5,52,2.5],[-104,52,2.6],[-103.5,52,1],[-103,52,1.9],[-102.5,52,2.3],[-102,52,2.8],[-100,52,1.4],[-99,52,1.1],[-56,52,2.9],[-55.5,52,7],[-11,52,9.8],[-10.5,52,13],[-10,52,11.2],[-9.5,52,18.7],[-9,52,70.4],[-8.5,52,232.1],[-8,52,55.2],[-5.5,52,71],[-5,52,71.1],[-4.5,52,134.5],[-4,52,275.8],[-3.5,52,474.6],[-3,52,216.3],[-2.5,52,304.7],[-2,52,198.3],[-1.5,52,255.5],[-1,52,427],[-0.5,52,2142.7],[0,52,850.1],[0.5,52,427.4],[1,52,309.7],[3,52,161.1],[3.5,52,208.9],[4,52,805.3],[4.5,52,683.2],[5,52,491.8],[5.5,52,489.3],[6,52,313.2],[6.5,52,533.7],[7,52,799.9],[7.5,52,544.8],[8,52,279.7],[8.5,52,292.2],[9,52,160],[9.5,52,152.4],[10,52,160.7],[10.5,52,130.1],[11,52,133.1],[11.5,52,184.7],[12,52,169.3],[12.5,52,94.8],[13,52,74.3],[13.5,52,82],[14,52,140.8],[14.5,52,67.1],[15,52,96.7],[15.5,52,128.6],[16,52,86.7],[16.5,52,112.8],[17,52,82.3],[17.5,52,133.7],[18,52,123.3],[18.5,52,98.9],[19,52,403.3],[19.5,52,269.7],[20,52,107.3],[20.5,52,68.2],[21,52,71.3],[21.5,52,95.1],[22,52,73.8],[22.5,52,66.7],[23,52,28.1],[23.5,52,102],[24,52,31.6],[24.5,52,37.4],[25,52,30],[25.5,52,30.9],[26,52,34.1],[26.5,52,28.1],[27,52,25.7],[27.5,52,13.7],[28,52,12.1],[28.5,52,29.3],[29,52,30.6],[29.5,52,13.3],[30,52,10],[30.5,52,30.7],[31,52,119.5],[31.5,52,27.5],[32,52,27.6],[32.5,52,24.9],[33,52,54.9],[33.5,52,64],[34,52,21.9],[34.5,52,19.2],[35,52,26.8],[35.5,52,48.6],[36,52,219.1],[36.5,52,25.3],[37,52,16.5],[37.5,52,17.9],[38,52,21.2],[38.5,52,38.5],[39,52,543.4],[39.5,52,35.5],[40,52,24.5],[40.5,52,23.2],[41,52,22.4],[41.5,52,21.7],[42,52,29],[42.5,52,13.5],[43,52,29.5],[43.5,52,13],[44,52,10],[44.5,52,7.7],[45,52,23.5],[45.5,52,283.2],[46,52,150.2],[46.5,52,29.6],[47,52,11.5],[47.5,52,50.6],[48,52,9],[48.5,52,24.1],[49,52,7.2],[49.5,52,6.8],[50,52,5.7],[50.5,52,6.3],[51,52,6.5],[51.5,52,6.2],[52,52,7.7],[52.5,52,8.4],[53,52,8.5],[53.5,52,8.8],[54,52,11.1],[54.5,52,10],[55,52,320.2],[55.5,52,10.7],[56,52,10.5],[56.5,52,8.5],[57,52,6.6],[57.5,52,5.4],[58,52,6.1],[58.5,52,6.3],[59,52,7.1],[59.5,52,5.1],[60,52,4.7],[60.5,52,3.9],[61,52,3.6],[61.5,52,2.7],[62,52,2.6],[62.5,52,3.3],[63,52,4.2],[63.5,52,4],[64,52,2.5],[64.5,52,2.2],[65,52,3.6],[65.5,52,5.1],[66,52,5.4],[66.5,52,5.2],[67,52,4.4],[67.5,52,4.2],[68,52,23.5],[68.5,52,3.6],[69,52,5.5],[69.5,52,7.3],[70,52,7.1],[70.5,52,7.3],[71,52,7.3],[71.5,52,6.8],[72,52,4],[72.5,52,3.7],[73,52,3.7],[73.5,52,3.2],[74,52,1.4],[74.5,52,1.2],[75,52,64.5],[75.5,52,10.1],[76,52,2.1],[76.5,52,3.7],[77,52,2.8],[77.5,52,3.5],[78,52,3.9],[78.5,52,3.8],[79,52,4.8],[79.5,52,7.1],[80,52,5.3],[80.5,52,6.5],[81,52,100.1],[81.5,52,10.7],[82,52,8.7],[82.5,52,8],[83,52,6.7],[83.5,52,5],[84,52,4.5],[84.5,52,9.6],[85,52,7.2],[85.5,52,9],[86,52,35],[86.5,52,2.5],[87,52,1.4],[87.5,52,1.4],[88,52,1.8],[88.5,52,1.8],[89,52,1.7],[89.5,52,2.2],[90,52,3.3],[90.5,52,1.7],[91,52,1.6],[91.5,52,1.7],[92,52,2.1],[92.5,52,2.6],[93,52,2.4],[93.5,52,1.5],[94,52,44.1],[94.5,52,4],[98.5,52,1.1],[99,52,1.3],[101,52,1.4],[101.5,52,1.6],[102,52,1.8],[102.5,52,2.3],[103,52,6.3],[103.5,52,7.7],[104,52,7.8],[104.5,52,6.2],[105,52,7],[105.5,52,8.4],[106,52,7.7],[106.5,52,7],[107,52,6.8],[107.5,52,209.4],[108,52,8.5],[108.5,52,7.6],[109,52,5.3],[109.5,52,2.7],[110,52,2.7],[110.5,52,2.7],[111,52,2.5],[111.5,52,2.4],[112,52,2.8],[112.5,52,2.8],[113,52,3.3],[113.5,52,3.9],[114,52,4.3],[114.5,52,4.5],[115,52,7.4],[115.5,52,8.6],[116,52,5.9],[116.5,52,14.6],[117,52,2.3],[117.5,52,2.7],[118,52,1.1],[119,52,1.2],[119.5,52,1.5],[120,52,2.3],[120.5,52,3.1],[121,52,3.5],[121.5,52,7.4],[122,52,7.9],[122.5,52,6],[123,52,2],[123.5,52,2],[124,52,2],[124.5,52,2.1],[125,52,3.4],[125.5,52,2.1],[126,52,1.9],[127,52,1],[127.5,52,1.6],[128,52,1.8],[136.5,52,1.1],[137,52,1.3],[137.5,52,1.1],[141,52,1],[141.5,52,1.1],[142,52,1.1],[142.5,52,1.2],[143,52,1.2],[-119.5,51.5,1.7],[-119,51.5,2.3],[-118.5,51.5,2.7],[-117,51.5,2.5],[-116,51.5,3.8],[-115.5,51.5,5.6],[-115,51.5,4],[-114.5,51.5,236.6],[-114,51.5,91.2],[-113.5,51.5,5.6],[-113,51.5,6.1],[-109.5,51.5,3.1],[-109,51.5,1.1],[-107.5,51.5,1.8],[-106,51.5,1.2],[-105,51.5,1.7],[-104.5,51.5,1.5],[-104,51.5,1.1],[-103.5,51.5,1.1],[-103,51.5,2.6],[-102.5,51.5,8.6],[-101.5,51.5,2],[-101,51.5,1.2],[-100.5,51.5,5.8],[-100,51.5,2],[-99.5,51.5,1.2],[-99,51.5,1],[-98,51.5,1.7],[-97.5,51.5,1.9],[-94,51.5,1.7],[-81,51.5,1.6],[-58,51.5,1.2],[-57.5,51.5,3.4],[-57,51.5,2.9],[-56,51.5,4],[-55.5,51.5,4.4],[-10,51.5,13.9],[-9.5,51.5,27.6],[-5,51.5,59.6],[-4.5,51.5,77],[-4,51.5,104],[-3.5,51.5,277.6],[-3,51.5,381],[-2.5,51.5,215.9],[-2,51.5,116.7],[-1.5,51.5,224.4],[-1,51.5,609.3],[-0.5,51.5,1761.2],[0,51.5,733.8],[0.5,51.5,348.8],[1,51.5,448.9],[2,51.5,1210.4],[2.5,51.5,309.9],[3,51.5,305.1],[3.5,51.5,395.7],[4,51.5,735.6],[4.5,51.5,367.9],[5,51.5,377.8],[5.5,51.5,373.5],[6,51.5,523.8],[6.5,51.5,1481.9],[7,51.5,1274.3],[7.5,51.5,442.5],[8,51.5,182.8],[8.5,51.5,118.4],[9,51.5,208.9],[9.5,51.5,177.4],[10,51.5,128.2],[10.5,51.5,128.5],[11,51.5,130.5],[11.5,51.5,202.3],[12,51.5,434.5],[12.5,51.5,149.8],[13,51.5,155.3],[13.5,51.5,360.8],[14,51.5,146.4],[14.5,51.5,147.1],[15,51.5,85.6],[15.5,51.5,87.5],[16,51.5,166.6],[16.5,51.5,240.6],[17,51.5,245.9],[17.5,51.5,72.6],[18,51.5,77.2],[18.5,51.5,76],[19,51.5,113.2],[19.5,51.5,101.9],[20,51.5,79.9],[20.5,51.5,107.2],[21,51.5,230.5],[21.5,51.5,82.9],[22,51.5,117.4],[22.5,51.5,266.4],[23,51.5,70.7],[23.5,51.5,44.7],[24,51.5,29.1],[24.5,51.5,63.2],[25,51.5,30.7],[25.5,51.5,49.5],[26,51.5,41.9],[26.5,51.5,47.6],[27,51.5,24.3],[27.5,51.5,22.4],[28,51.5,22.8],[28.5,51.5,21],[29,51.5,11.4],[29.5,51.5,8.2],[30,51.5,12.1],[30.5,51.5,23.4],[31,51.5,91.7],[31.5,51.5,67.5],[32,51.5,29.1],[32.5,51.5,34.4],[33,51.5,78.2],[33.5,51.5,32.8],[34,51.5,35.8],[34.5,51.5,33.7],[35,51.5,30],[35.5,51.5,25.4],[36,51.5,29.6],[36.5,51.5,22.3],[37,51.5,24.8],[37.5,51.5,174.9],[38,51.5,21.9],[38.5,51.5,23],[39,51.5,47.7],[39.5,51.5,47.4],[40,51.5,27.2],[40.5,51.5,29.1],[41,51.5,24.7],[41.5,51.5,21.2],[42,51.5,60.3],[42.5,51.5,13.5],[43,51.5,45.1],[43.5,51.5,11.5],[44,51.5,12.3],[44.5,51.5,12.6],[45,51.5,11.2],[45.5,51.5,113.7],[46,51.5,172.4],[46.5,51.5,16.8],[47,51.5,13.3],[47.5,51.5,9.7],[48,51.5,12.5],[48.5,51.5,9.2],[49,51.5,7.6],[49.5,51.5,6.9],[50,51.5,5.3],[50.5,51.5,5.7],[51,51.5,115.6],[51.5,51.5,13.9],[52,51.5,8],[52.5,51.5,7.5],[53,51.5,7.3],[53.5,51.5,6.4],[54,51.5,9.2],[54.5,51.5,10.6],[55,51.5,11.2],[55.5,51.5,7.9],[56,51.5,7],[56.5,51.5,6.2],[57,51.5,20.3],[57.5,51.5,25.5],[58,51.5,66.6],[58.5,51.5,170],[59,51.5,9.2],[59.5,51.5,4.4],[60,51.5,3.4],[60.5,51.5,4.4],[61,51.5,4.2],[61.5,51.5,2.1],[62,51.5,2.4],[62.5,51.5,2.6],[63,51.5,1.7],[63.5,51.5,1.6],[64,51.5,1.6],[64.5,51.5,1.7],[65,51.5,2.4],[65.5,51.5,4.4],[66,51.5,4.4],[66.5,51.5,3.7],[67,51.5,3.3],[67.5,51.5,3.7],[68,51.5,3.5],[68.5,51.5,3.1],[69,51.5,4.6],[69.5,51.5,4.9],[70,51.5,5.4],[70.5,51.5,6.4],[71,51.5,122.8],[71.5,51.5,33.6],[72,51.5,5.1],[72.5,51.5,4],[73,51.5,3.9],[73.5,51.5,3.7],[74,51.5,1.3],[74.5,51.5,1.4],[75,51.5,1.7],[75.5,51.5,2],[76,51.5,1.9],[76.5,51.5,1.3],[77,51.5,1.3],[77.5,51.5,1.6],[78,51.5,3.1],[78.5,51.5,3.2],[79,51.5,3.2],[79.5,51.5,3.4],[80,51.5,3.8],[80.5,51.5,8.4],[81,51.5,11.1],[81.5,51.5,9.5],[82,51.5,12.5],[82.5,51.5,6.2],[83,51.5,4.5],[83.5,51.5,2.4],[84,51.5,3],[84.5,51.5,3.1],[85,51.5,3.7],[85.5,51.5,3.3],[86,51.5,3.6],[86.5,51.5,2.3],[87,51.5,1.3],[89,51.5,1.5],[89.5,51.5,2.2],[90,51.5,4.2],[90.5,51.5,4.1],[91,51.5,2.8],[91.5,51.5,3.1],[92,51.5,2.6],[92.5,51.5,2.8],[93,51.5,3.3],[93.5,51.5,3.3],[94,51.5,3.1],[94.5,51.5,2.3],[98,51.5,1.3],[98.5,51.5,1.3],[99,51.5,1.3],[99.5,51.5,1.3],[100,51.5,1.3],[100.5,51.5,1.3],[101,51.5,1.3],[101.5,51.5,1.4],[102,51.5,2],[102.5,51.5,2.3],[103,51.5,2.3],[103.5,51.5,3.8],[104,51.5,5.2],[104.5,51.5,6.5],[105,51.5,6],[105.5,51.5,4.5],[106,51.5,3.3],[106.5,51.5,20.1],[107,51.5,5.6],[107.5,51.5,6.1],[108,51.5,6.3],[108.5,51.5,16.1],[109,51.5,2.6],[109.5,51.5,2.5],[110,51.5,2.4],[110.5,51.5,2.4],[111,51.5,2.2],[111.5,51.5,2.1],[112,51.5,1.9],[112.5,51.5,2.3],[113,51.5,3.4],[113.5,51.5,4.3],[114,51.5,4.9],[114.5,51.5,4.8],[115,51.5,4.6],[115.5,51.5,6.3],[116,51.5,7.9],[116.5,51.5,6.1],[117,51.5,2.2],[117.5,51.5,2.1],[118,51.5,1.8],[118.5,51.5,3],[119,51.5,1.9],[119.5,51.5,2.1],[120,51.5,3.7],[120.5,51.5,5],[121,51.5,7.1],[121.5,51.5,7.9],[122,51.5,7.9],[122.5,51.5,6],[123,51.5,4.6],[123.5,51.5,5],[124,51.5,5],[124.5,51.5,5.2],[125,51.5,5.3],[125.5,51.5,4.5],[126,51.5,4.8],[126.5,51.5,2.2],[127,51.5,1.9],[127.5,51.5,2.8],[128,51.5,45.8],[128.5,51.5,7.7],[129,51.5,3.5],[129.5,51.5,1.1],[130,51.5,1.2],[130.5,51.5,1.1],[134.5,51.5,1.3],[135,51.5,1.3],[135.5,51.5,1.3],[136,51.5,1.3],[136.5,51.5,1.3],[137,51.5,1.3],[137.5,51.5,1.2],[138,51.5,1.1],[138.5,51.5,1],[142,51.5,1.2],[142.5,51.5,2.7],[143,51.5,1.6],[143.5,51.5,1.2],[-127.5,51,7.7],[-127,51,1.4],[-124.5,51,1],[-122,51,1.9],[-121.5,51,2.4],[-121,51,2.1],[-120.5,51,40.9],[-120,51,3.1],[-119.5,51,12.4],[-119,51,3.6],[-118.5,51,3.5],[-116.5,51,1.6],[-114.5,51,100],[-114,51,79.2],[-113.5,51,1.8],[-113,51,1.9],[-112.5,51,2],[-112,51,6.9],[-110,51,1.1],[-108.5,51,1],[-105.5,51,1.2],[-105,51,6.7],[-104.5,51,2.8],[-104,51,4.5],[-103.5,51,1.5],[-103,51,3.6],[-102.5,51,2.7],[-102,51,2.2],[-101.5,51,2.1],[-101,51,1.5],[-100.5,51,1.1],[-100,51,1.1],[-99.5,51,1.2],[-99,51,3.1],[-98.5,51,1.4],[-98,51,1.3],[-97.5,51,3.5],[-97,51,11.2],[-96.5,51,2.9],[-74,51,1.6],[-57.5,51,3.5],[-56.5,51,1.4],[-56,51,1.2],[-5.5,51,67.2],[-5,51,70],[-4.5,51,58.2],[-4,51,136.7],[-3.5,51,175.7],[-3,51,116.5],[-2.5,51,164.8],[-2,51,466.4],[-1.5,51,810.6],[-1,51,308.1],[-0.5,51,809.4],[0,51,293.4],[0.5,51,396.7],[1.5,51,225.5],[2,51,153.2],[2.5,51,283.1],[3,51,840.9],[3.5,51,274.5],[4,51,963.6],[4.5,51,334],[5,51,296.5],[5.5,51,637.8],[6,51,489.5],[6.5,51,550.5],[7,51,693.6],[7.5,51,254.4],[8,51,243.6],[8.5,51,223],[9,51,111.8],[9.5,51,133.8],[10,51,127.1],[10.5,51,174.6],[11,51,178.7],[11.5,51,153.1],[12,51,263.8],[12.5,51,382.7],[13,51,163.5],[13.5,51,222.9],[14,51,159.1],[14.5,51,138.4],[15,51,156.4],[15.5,51,142.2],[16,51,212.7],[16.5,51,140.1],[17,51,107.2],[17.5,51,129.9],[18,51,98.9],[18.5,51,104.8],[19,51,239.9],[19.5,51,57.4],[20,51,78],[20.5,51,186.7],[21,51,121.1],[21.5,51,119.9],[22,51,111.4],[22.5,51,63.9],[23,51,101.3],[23.5,51,54.6],[24,51,93.6],[24.5,51,41.7],[25,51,159.6],[25.5,51,52],[26,51,193],[26.5,51,50.2],[27,51,37.1],[27.5,51,52.2],[28,51,28.2],[28.5,51,67.9],[29,51,35.2],[29.5,51,35.2],[30,51,376.8],[30.5,51,295.3],[31,51,38.1],[31.5,51,30.2],[32,51,60.6],[32.5,51,28.4],[33,51,43],[33.5,51,39.4],[34,51,35.1],[34.5,51,188.8],[35,51,30.1],[35.5,51,37.2],[36,51,42.2],[36.5,51,202.9],[37,51,29.5],[37.5,51,31.3],[38,51,29.2],[38.5,51,38.4],[39,51,40.6],[39.5,51,35.3],[40,51,30.7],[40.5,51,28.6],[41,51,21.3],[41.5,51,30.4],[42,51,15.7],[42.5,51,13.8],[43,51,10.5],[43.5,51,13.8],[44,51,11.8],[44.5,51,17.9],[45,51,14.9],[45.5,51,9],[46,51,9.1],[46.5,51,11.9],[47,51,11.1],[47.5,51,8.4],[48,51,9.2],[48.5,51,6.7],[49,51,4.1],[49.5,51,2.6],[50,51,2.7],[50.5,51,4.2],[51,51,4.1],[51.5,51,3.9],[52,51,3.9],[52.5,51,4.5],[53,51,5.2],[53.5,51,3.8],[54,51,5],[54.5,51,7],[55,51,5.8],[55.5,51,6.8],[56,51,6.6],[56.5,51,6.3],[57,51,7.3],[57.5,51,6.1],[58,51,4.8],[58.5,51,13.3],[59,51,5.6],[59.5,51,19.5],[60,51,2.1],[60.5,51,3],[61,51,2.7],[61.5,51,1.1],[62,51,1.2],[62.5,51,1.3],[63,51,1],[64,51,1.2],[64.5,51,1.5],[65,51,1.5],[65.5,51,2.4],[66,51,3.5],[66.5,51,2.2],[67,51,2.1],[67.5,51,2.6],[68,51,2.8],[68.5,51,2.5],[69,51,2.5],[69.5,51,2.1],[70,51,1.8],[70.5,51,4.5],[71,51,4.9],[71.5,51,4.4],[72,51,5.5],[72.5,51,5.5],[73,51,5.2],[73.5,51,4.7],[74,51,2.6],[74.5,51,2.2],[75,51,2],[75.5,51,2],[76,51,1.8],[76.5,51,1.4],[77,51,1.3],[77.5,51,1.3],[78,51,1.6],[78.5,51,2.8],[79,51,3.5],[79.5,51,3.1],[80,51,4.1],[80.5,51,8.5],[81,51,9.3],[81.5,51,13.8],[82,51,13.1],[82.5,51,12],[83,51,7.1],[83.5,51,6.1],[84,51,3],[84.5,51,2.7],[85,51,2.1],[85.5,51,1.6],[86,51,1.6],[86.5,51,1.6],[87,51,1.4],[89.5,51,1.4],[90,51,1.5],[90.5,51,4.2],[91,51,3.1],[91.5,51,2.3],[92,51,1.7],[92.5,51,1.7],[93,51,1.7],[93.5,51,1.6],[94,51,1.5],[94.5,51,1.8],[95,51,1.6],[96.5,51,1],[97,51,1.1],[97.5,51,1.1],[98,51,1.3],[98.5,51,1.3],[99,51,1.3],[99.5,51,1.3],[100,51,1.3],[100.5,51,1.3],[101,51,1.3],[101.5,51,1.3],[102,51,1.7],[102.5,51,2.4],[103,51,2.4],[103.5,51,2.4],[104,51,2.7],[104.5,51,4.3],[105,51,4.4],[105.5,51,4.2],[106,51,4.8],[106.5,51,6.7],[107,51,5.7],[107.5,51,5.8],[108,51,4.3],[108.5,51,2.5],[109,51,2],[109.5,51,1.7],[110,51,1.6],[110.5,51,1.5],[111,51,1.8],[111.5,51,1.9],[112,51,2],[112.5,51,2.2],[113,51,2.3],[113.5,51,2.4],[114,51,3.6],[114.5,51,4.9],[115,51,4.9],[115.5,51,7.4],[116,51,8.1],[116.5,51,4.2],[117,51,3.3],[117.5,51,2.1],[118,51,2.6],[118.5,51,4.7],[119,51,4.2],[119.5,51,3.2],[120,51,3.5],[120.5,51,7.1],[121,51,9.7],[121.5,51,12.9],[122,51,9.7],[122.5,51,5.4],[123,51,5.3],[123.5,51,5.3],[124,51,5.3],[124.5,51,5.3],[125,51,5.3],[125.5,51,17.4],[126,51,24.1],[126.5,51,14.7],[127,51,9.5],[127.5,51,8.2],[128,51,46.3],[128.5,51,7.2],[129,51,3.9],[129.5,51,3],[130,51,1.8],[130.5,51,1.7],[134.5,51,1.2],[135,51,1.3],[135.5,51,1.4],[136,51,1.3],[136.5,51,25.7],[137,51,115.1],[137.5,51,1.2],[138,51,1.2],[138.5,51,1.3],[139,51,1.7],[139.5,51,1.7],[140,51,1.5],[140.5,51,1.6],[142,51,10.8],[142.5,51,2.9],[143,51,2.5],[143.5,51,1.2],[155,51,1.1],[155.5,51,1.1],[156,51,1.1],[-126,50.5,1.5],[-125.5,50.5,13.1],[-124.5,50.5,1.7],[-124,50.5,2],[-123.5,50.5,1.5],[-123,50.5,3.9],[-121,50.5,5.2],[-120,50.5,5.9],[-119.5,50.5,38.3],[-119,50.5,3.2],[-118.5,50.5,1.7],[-118,50.5,2.3],[-117.5,50.5,1.3],[-117,50.5,1.2],[-116.5,50.5,1.1],[-115,50.5,1.6],[-114.5,50.5,1.6],[-114,50.5,4.6],[-113.5,50.5,2.3],[-113,50.5,1.5],[-112.5,50.5,1.8],[-112,50.5,1.4],[-111,50.5,26.5],[-108.5,50.5,1.1],[-108,50.5,8.8],[-107.5,50.5,1.2],[-106,50.5,18.8],[-105.5,50.5,2.2],[-105,50.5,92.1],[-104.5,50.5,3.4],[-104,50.5,1.3],[-103.5,50.5,1.7],[-103,50.5,2.3],[-102.5,50.5,1.4],[-102,50.5,2.7],[-101.5,50.5,1.7],[-101,50.5,1.9],[-100.5,50.5,2.3],[-100,50.5,3.1],[-99.5,50.5,3.2],[-99,50.5,2.1],[-98.5,50.5,3.4],[-98,50.5,2.9],[-97.5,50.5,11.9],[-97,50.5,18.8],[-96.5,50.5,3.8],[-96,50.5,1.8],[-92,50.5,2],[-67,50.5,9.2],[-66.5,50.5,16.4],[-64.5,50.5,1.4],[-64,50.5,1.2],[-63.5,50.5,1.2],[-58,50.5,2.8],[-56.5,50.5,1.8],[-56,50.5,1.3],[-6,50.5,205.2],[-5.5,50.5,194.1],[-5,50.5,163.5],[-4.5,50.5,477.1],[-4,50.5,190.1],[-3.5,50.5,1096.9],[1,50.5,225.4],[1.5,50.5,89.1],[2,50.5,62.5],[2.5,50.5,314.4],[3,50.5,322],[3.5,50.5,294],[4,50.5,318.7],[4.5,50.5,178],[5,50.5,73.4],[5.5,50.5,53.3],[6,50.5,63.4],[6.5,50.5,99.2],[7,50.5,169.6],[7.5,50.5,228.2],[8,50.5,465.9],[8.5,50.5,735],[9,50.5,255.2],[9.5,50.5,135.3],[10,50.5,127.7],[10.5,50.5,121],[11,50.5,135.3],[11.5,50.5,136.7],[12,50.5,154.3],[12.5,50.5,141.5],[13,50.5,73.2],[13.5,50.5,81.7],[14,50.5,462.1],[14.5,50.5,342.8],[15,50.5,98.7],[15.5,50.5,180.5],[16,50.5,108.9],[16.5,50.5,79.7],[17,50.5,90.6],[17.5,50.5,92.1],[18,50.5,226.5],[18.5,50.5,889.9],[19,50.5,704],[19.5,50.5,336.6],[20,50.5,252],[20.5,50.5,134.9],[21,50.5,167.6],[21.5,50.5,137.2],[22,50.5,177.2],[22.5,50.5,78.8],[23,50.5,64.7],[23.5,50.5,69.1],[24,50.5,111.1],[24.5,50.5,53.5],[25,50.5,54.2],[25.5,50.5,72.9],[26,50.5,61],[26.5,50.5,70.8],[27,50.5,71.2],[27.5,50.5,43.2],[28,50.5,40.8],[28.5,50.5,191.2],[29,50.5,38.7],[29.5,50.5,65.5],[30,50.5,422],[30.5,50.5,771.3],[31,50.5,64.3],[31.5,50.5,41.3],[32,50.5,39.8],[32.5,50.5,47.5],[33,50.5,42.6],[33.5,50.5,35.8],[34,50.5,35.1],[34.5,50.5,54.7],[35,50.5,35.6],[35.5,50.5,44.7],[36,50.5,384.9],[36.5,50.5,84.7],[37,50.5,28.7],[37.5,50.5,28.3],[38,50.5,47.8],[38.5,50.5,22.4],[39,50.5,25.5],[39.5,50.5,48.1],[40,50.5,23.2],[40.5,50.5,23.1],[41,50.5,22.3],[41.5,50.5,9.3],[42,50.5,9.8],[42.5,50.5,12.4],[43,50.5,43.8],[43.5,50.5,6.7],[44,50.5,7.3],[44.5,50.5,15.1],[45,50.5,84.3],[45.5,50.5,12.4],[46,50.5,10.5],[46.5,50.5,6.4],[47,50.5,5.3],[47.5,50.5,4.2],[48,50.5,8],[48.5,50.5,4.9],[49,50.5,2.1],[49.5,50.5,2.5],[50,50.5,3.2],[50.5,50.5,3.2],[51,50.5,3.1],[51.5,50.5,2.4],[52,50.5,2.6],[52.5,50.5,2.9],[53,50.5,2.8],[53.5,50.5,2.8],[54,50.5,3.4],[54.5,50.5,2.7],[55,50.5,2.7],[55.5,50.5,2.7],[56,50.5,4.7],[56.5,50.5,6.7],[57,50.5,132.7],[57.5,50.5,5.4],[58,50.5,5],[58.5,50.5,5],[59,50.5,2.8],[59.5,50.5,1.2],[60,50.5,1.1],[60.5,50.5,1.1],[61,50.5,1.1],[61.5,50.5,1.1],[62,50.5,1.1],[64.5,50.5,1.3],[65,50.5,1.3],[65.5,50.5,1.5],[66,50.5,1.9],[66.5,50.5,33],[67,50.5,1.9],[67.5,50.5,1.6],[68,50.5,1.6],[68.5,50.5,1.7],[69,50.5,1.7],[69.5,50.5,1.6],[70,50.5,1.6],[70.5,50.5,1.4],[71,50.5,1.2],[71.5,50.5,3],[72,50.5,5.8],[72.5,50.5,59.2],[73,50.5,66.9],[73.5,50.5,4.2],[74,50.5,4.1],[74.5,50.5,3.9],[75,50.5,1.9],[75.5,50.5,1.7],[76,50.5,1.6],[76.5,50.5,1.4],[77,50.5,1.2],[77.5,50.5,1.1],[78,50.5,1.2],[78.5,50.5,2.4],[79,50.5,3],[79.5,50.5,3],[80,50.5,173.2],[80.5,50.5,3.2],[81,50.5,6],[81.5,50.5,11.4],[82,50.5,11],[82.5,50.5,55.4],[83,50.5,20.6],[83.5,50.5,33.9],[84,50.5,4.2],[84.5,50.5,2.2],[85,50.5,1.5],[85.5,50.5,1.5],[86,50.5,1.5],[86.5,50.5,1.3],[87,50.5,1.1],[89.5,50.5,1.2],[90,50.5,1.3],[90.5,50.5,1.5],[91,50.5,1.5],[91.5,50.5,1.5],[92,50.5,1.5],[92.5,50.5,1.5],[93,50.5,1.5],[93.5,50.5,1.5],[94,50.5,1.5],[97,50.5,1],[97.5,50.5,1.1],[98,50.5,1.2],[98.5,50.5,1.3],[99,50.5,1.3],[99.5,50.5,1.3],[100,50.5,1.3],[100.5,50.5,1.3],[101,50.5,1.3],[101.5,50.5,1.3],[102,50.5,1.3],[102.5,50.5,1.6],[103,50.5,1.8],[103.5,50.5,2],[104,50.5,1.9],[104.5,50.5,3],[105,50.5,2.8],[105.5,50.5,2.8],[106,50.5,4.6],[106.5,50.5,5.2],[107,50.5,7.9],[107.5,50.5,6.1],[108,50.5,1.9],[111,50.5,1.7],[111.5,50.5,1.5],[112,50.5,1.5],[112.5,50.5,1.8],[113,50.5,1.8],[113.5,50.5,1.6],[114,50.5,1.7],[114.5,50.5,1.9],[115,50.5,2.8],[115.5,50.5,3.2],[116,50.5,3.4],[116.5,50.5,20.7],[117,50.5,3.3],[117.5,50.5,2.1],[118,50.5,36.2],[118.5,50.5,3.8],[119,50.5,4.3],[119.5,50.5,3.5],[120,50.5,3.4],[120.5,50.5,3.8],[121,50.5,14.7],[121.5,50.5,13.6],[122,50.5,6.3],[122.5,50.5,5.3],[123,50.5,5.3],[123.5,50.5,5.3],[124,50.5,5.3],[124.5,50.5,5.3],[125,50.5,12.3],[125.5,50.5,30.9],[126,50.5,15.3],[126.5,50.5,14.7],[127,50.5,13.3],[127.5,50.5,110.6],[128,50.5,10.8],[128.5,50.5,7],[129,50.5,8.3],[129.5,50.5,8.1],[130,50.5,4.4],[130.5,50.5,2.8],[131,50.5,1.7],[133.5,50.5,1.4],[134,50.5,1.7],[134.5,50.5,2.2],[135,50.5,2],[135.5,50.5,1.9],[136,50.5,1.6],[136.5,50.5,27.5],[137,50.5,1.2],[137.5,50.5,1.2],[138,50.5,1.2],[138.5,50.5,1.3],[139,50.5,1.7],[139.5,50.5,1.7],[140,50.5,1.7],[140.5,50.5,1.7],[142,50.5,1.4],[142.5,50.5,2.2],[143,50.5,2],[143.5,50.5,1.5],[154.5,50.5,1.1],[155,50.5,1.1],[155.5,50.5,1.1],[156,50.5,1.1],[-127,50,1.1],[-126.5,50,1.2],[-126,50,1.1],[-125.5,50,21.2],[-125,50,73.9],[-124.5,50,2.1],[-124,50,4.3],[-123.5,50,9.8],[-123,50,1.4],[-120,50,32.9],[-119.5,50,48],[-119,50,1.5],[-118.5,50,1.3],[-118,50,1.3],[-117.5,50,3.4],[-117,50,2],[-116.5,50,2.1],[-116,50,11.2],[-115.5,50,2.4],[-115,50,4.3],[-114.5,50,2.3],[-114,50,1.9],[-113.5,50,4.1],[-113,50,42.6],[-112.5,50,5.9],[-112,50,1.4],[-111.5,50,1.4],[-111,50,2.6],[-109.5,50,1.5],[-108.5,50,1.4],[-107,50,1.3],[-106,50,1.7],[-104,50,5.4],[-103.5,50,1],[-102.5,50,2.4],[-102,50,1.3],[-101.5,50,1.6],[-101,50,3.3],[-100.5,50,3.3],[-100,50,23.5],[-99.5,50,2.5],[-99,50,3.4],[-98.5,50,11],[-98,50,4.5],[-97.5,50,321.6],[-97,50,26.5],[-96.5,50,3.3],[-95,50,4.5],[-94.5,50,5.9],[-93,50,4.7],[-87,50,2.8],[-84,50,2.9],[-78,50,1.2],[-75,50,1.3],[-74.5,50,4.5],[-67,50,11.2],[-58,50,2],[-57,50,1.2],[-56.5,50,4.3],[-56,50,6.5],[-55.5,50,1.5],[-55,50,23.6],[-54.5,50,12.3],[-6.5,50,99.9],[-5.5,50,195.8],[-3,50,658.5],[-2.5,50,658.5],[-2,50,241.1],[-1.5,50,76.4],[0,50,321.7],[0.5,50,105.8],[1,50,89.9],[1.5,50,44.2],[2,50,136.4],[2.5,50,68.6],[3,50,119.2],[3.5,50,54.6],[4,50,37.9],[4.5,50,100],[5,50,42],[5.5,50,127.2],[6,50,157],[6.5,50,164.9],[7,50,123.7],[7.5,50,168.6],[8,50,469.4],[8.5,50,470.6],[9,50,204.3],[9.5,50,181.7],[10,50,123.2],[10.5,50,217.8],[11,50,189.6],[11.5,50,119],[12,50,91.4],[12.5,50,42.8],[13,50,146.6],[13.5,50,70.9],[14,50,134.4],[14.5,50,71.2],[15,50,68.3],[15.5,50,101.4],[16,50,93.8],[16.5,50,98.8],[17,50,143.8],[17.5,50,104.5],[18,50,448.8],[18.5,50,305.5],[19,50,275.2],[19.5,50,201.6],[20,50,159.9],[20.5,50,192],[21,50,138.4],[21.5,50,158.3],[22,50,108.8],[22.5,50,107],[23,50,97.5],[23.5,50,265.8],[24,50,313.4],[24.5,50,63.2],[25,50,58.7],[25.5,50,186.8],[26,50,52.1],[26.5,50,51.2],[27,50,54.6],[27.5,50,49.1],[28,50,36.4],[28.5,50,89.3],[29,50,34.3],[29.5,50,43.8],[30,50,152.6],[30.5,50,53.2],[31,50,49.9],[31.5,50,48.8],[32,50,45.8],[32.5,50,36.6],[33,50,37.1],[33.5,50,52.6],[34,50,63.1],[34.5,50,175.9],[35,50,37.6],[35.5,50,48.6],[36,50,554.6],[36.5,50,69],[37,50,28.8],[37.5,50,55.5],[38,50,19.9],[38.5,50,19.1],[39,50,21.4],[39.5,50,18.4],[40,50,18.2],[40.5,50,15.8],[41,50,10.5],[41.5,50,9.2],[42,50,9.3],[42.5,50,8.5],[43,50,6.7],[43.5,50,27.2],[44,50,6.2],[44.5,50,7.6],[45,50,10.6],[45.5,50,9.9],[46,50,5.9],[46.5,50,3.8],[47,50,2.7],[47.5,50,2.3],[48,50,3.1],[48.5,50,2.6],[49,50,2.2],[49.5,50,2.2],[50,50,1.8],[50.5,50,2],[51,50,3],[51.5,50,1.6],[52,50,1.9],[52.5,50,2.6],[53,50,2.3],[53.5,50,2.2],[54,50,2.1],[54.5,50,2.3],[55,50,2.4],[55.5,50,2.7],[56,50,3.5],[56.5,50,5.4],[57,50,5.3],[57.5,50,5.3],[58,50,4.9],[58.5,50,3.4],[59,50,1.6],[59.5,50,1.2],[60,50,1.2],[60.5,50,1.1],[61.5,50,1],[62,50,1],[65,50,1.3],[65.5,50,1.4],[66,50,1.5],[66.5,50,1.6],[67.5,50,1],[68,50,1.4],[68.5,50,1.5],[69,50,1.5],[69.5,50,1.5],[70,50,1.2],[70.5,50,1.2],[71,50,1.2],[71.5,50,2.8],[72,50,6.7],[72.5,50,218.8],[73,50,206.2],[73.5,50,4.2],[74,50,3.1],[74.5,50,2.6],[75,50,1.9],[75.5,50,1.7],[76,50,1.3],[76.5,50,1.2],[78.5,50,1],[79,50,1.4],[79.5,50,1.9],[80,50,2.8],[80.5,50,3.2],[81,50,3.4],[81.5,50,5.6],[82,50,6.4],[82.5,50,120.9],[83,50,8.4],[83.5,50,7.2],[84,50,29.9],[84.5,50,4.2],[85,50,2.3],[85.5,50,1.7],[86,50,1.7],[86.5,50,1.4],[89,50,1],[89.5,50,1.9],[90,50,1.8],[90.5,50,1.5],[91,50,1.5],[91.5,50,1.5],[92,50,1.5],[92.5,50,1.5],[93,50,1.5],[93.5,50,1.5],[94,50,1.5],[94.5,50,1.5],[95,50,1.4],[95.5,50,1.1],[96,50,1.1],[96.5,50,1.1],[97,50,1.1],[97.5,50,1.3],[98,50,1.3],[98.5,50,1.3],[99,50,1.3],[99.5,50,1.3],[100,50,1.3],[100.5,50,1.3],[101,50,1.3],[101.5,50,1.3],[102,50,1.3],[102.5,50,1.4],[103,50,1.4],[103.5,50,1.4],[104,50,1.4],[104.5,50,2.2],[105,50,2.6],[105.5,50,4.6],[106,50,8.7],[106.5,50,4.1],[107,50,2.7],[107.5,50,2.6],[111,50,1.2],[111.5,50,1.1],[112,50,1.1],[112.5,50,1.1],[115.5,50,1],[116.5,50,4.6],[117,50,40.6],[117.5,50,35.6],[118,50,2.2],[118.5,50,3.8],[119,50,4],[119.5,50,7.5],[120,50,4.6],[120.5,50,7.9],[121,50,15.2],[121.5,50,14.8],[122,50,11.2],[122.5,50,5.3],[123,50,5.3],[123.5,50,5.3],[124,50,8.9],[124.5,50,20.7],[125,50,30.3],[125.5,50,32.5],[126,50,26.5],[126.5,50,17],[127,50,18.7],[127.5,50,12.9],[128,50,7.7],[128.5,50,6.9],[129,50,11.9],[129.5,50,19.1],[130,50,2.4],[130.5,50,1.8],[131,50,1.6],[133,50,2.1],[133.5,50,2.3],[134,50,2.3],[134.5,50,1.9],[135,50,1.6],[135.5,50,1.6],[136,50,1.2],[138,50,1.1],[138.5,50,1.4],[139,50,1.5],[139.5,50,1.7],[140,50,1.7],[140.5,50,1.7],[142,50,3.5],[142.5,50,2.1],[143,50,1.9],[143.5,50,2],[144,50,2],[154,50,1.1],[154.5,50,1.1],[155,50,1.1],[-126.5,49.5,1.2],[-126,49.5,1.3],[-125.5,49.5,2.4],[-125,49.5,21.1],[-124.5,49.5,44.4],[-124,49.5,117.4],[-123.5,49.5,1048],[-123,49.5,505.3],[-122.5,49.5,104.7],[-122,49.5,31.4],[-121.5,49.5,3.5],[-121,49.5,1.2],[-120.5,49.5,2.7],[-120,49.5,15.9],[-119.5,49.5,4.4],[-119,49.5,1.7],[-118.5,49.5,3.3],[-118,49.5,14.5],[-117.5,49.5,5.4],[-117,49.5,4.5],[-116.5,49.5,2.1],[-116,49.5,2.5],[-115.5,49.5,1.6],[-114,49.5,3.2],[-113.5,49.5,3.7],[-113,49.5,4],[-112.5,49.5,1.6],[-106,49.5,1.3],[-103.5,49.5,2.4],[-103,49.5,5.5],[-102.5,49.5,1.4],[-102,49.5,1.4],[-101,49.5,1.9],[-100.5,49.5,1.9],[-100,49.5,2.3],[-99.5,49.5,1.6],[-99,49.5,2.9],[-98.5,49.5,6.4],[-98,49.5,10],[-97.5,49.5,4.7],[-97,49.5,5.8],[-96.5,49.5,1.3],[-86,49.5,1.7],[-82.5,49.5,5.6],[-82,49.5,1],[-81.5,49.5,2.6],[-69,49.5,1.3],[-68.5,49.5,22.3],[-67.5,49.5,1.2],[-67,49.5,16.6],[-66.5,49.5,6.8],[-66,49.5,2.1],[-65.5,49.5,2.2],[-65,49.5,5.9],[-64.5,49.5,13.2],[-58.5,49.5,6],[-58,49.5,1.7],[-57.5,49.5,3.7],[-56,49.5,1.3],[-55.5,49.5,9.6],[-55,49.5,3.5],[-54.5,49.5,2],[-54,49.5,4.6],[-53.5,49.5,4.6],[-3,49.5,658.5],[-2.5,49.5,722.3],[-2,49.5,59.9],[-1.5,49.5,69.8],[-1,49.5,68.8],[-0.5,49.5,288.8],[0,49.5,135.7],[0.5,49.5,92.2],[1,49.5,338.2],[1.5,49.5,109.5],[2,49.5,444.3],[2.5,49.5,162.2],[3,49.5,81.9],[3.5,49.5,72.5],[4,49.5,138.1],[4.5,49.5,17.3],[5,49.5,29.4],[5.5,49.5,79.2],[6,49.5,306.1],[6.5,49.5,365.6],[7,49.5,309.1],[7.5,49.5,173.1],[8,49.5,462],[8.5,49.5,517.8],[9,49.5,311.7],[9.5,49.5,136.2],[10,49.5,108.5],[10.5,49.5,178.6],[11,49.5,360.1],[11.5,49.5,120.2],[12,49.5,142.3],[12.5,49.5,81.8],[13,49.5,56.8],[13.5,49.5,58.7],[14,49.5,70],[14.5,49.5,68.9],[15,49.5,55.1],[15.5,49.5,95.6],[16,49.5,106.5],[16.5,49.5,273.4],[17,49.5,166.1],[17.5,49.5,168.6],[18,49.5,111.5],[18.5,49.5,188.7],[19,49.5,77],[19.5,49.5,86.9],[20,49.5,122.5],[20.5,49.5,73.5],[21,49.5,95.9],[21.5,49.5,46.9],[22,49.5,29.2],[22.5,49.5,37.4],[23,49.5,100.5],[23.5,49.5,151.7],[24,49.5,117.7],[24.5,49.5,81.5],[25,49.5,68.2],[25.5,49.5,72.2],[26,49.5,62],[26.5,49.5,121.3],[27,49.5,103.7],[27.5,49.5,37.7],[28,49.5,126.3],[28.5,49.5,83.6],[29,49.5,27.8],[29.5,49.5,44.7],[30,49.5,46.8],[30.5,49.5,54.9],[31,49.5,61.2],[31.5,49.5,97],[32,49.5,231.7],[32.5,49.5,36.4],[33,49.5,211.5],[33.5,49.5,57.4],[34,49.5,33.7],[34.5,49.5,30],[35,49.5,36.3],[35.5,49.5,33.2],[36,49.5,35.8],[36.5,49.5,38.6],[37,49.5,49.8],[37.5,49.5,33.9],[38,49.5,60],[38.5,49.5,30.5],[39,49.5,25.1],[39.5,49.5,17.5],[40,49.5,15.8],[40.5,49.5,14.4],[41,49.5,10.3],[41.5,49.5,9.6],[42,49.5,7.6],[42.5,49.5,6.5],[43,49.5,7.4],[43.5,49.5,9.7],[44,49.5,11.1],[44.5,49.5,12.4],[45,49.5,12.7],[45.5,49.5,6.3],[46,49.5,4.2],[46.5,49.5,3.8],[47,49.5,2.2],[47.5,49.5,2],[48,49.5,1.7],[48.5,49.5,1.6],[49,49.5,1.8],[49.5,49.5,1.8],[50,49.5,1],[50.5,49.5,1],[51,49.5,1.5],[51.5,49.5,1.5],[52,49.5,1.5],[52.5,49.5,1.8],[53,49.5,2],[53.5,49.5,1.7],[54,49.5,1.9],[54.5,49.5,1.9],[55,49.5,2.3],[55.5,49.5,2.9],[56,49.5,2.9],[56.5,49.5,3.7],[57,49.5,4.1],[57.5,49.5,4.3],[58,49.5,2.4],[58.5,49.5,1.5],[59,49.5,1.4],[59.5,49.5,1.2],[60,49.5,1],[65,49.5,1.3],[65.5,49.5,1.3],[66,49.5,1],[68.5,49.5,1.2],[69,49.5,1.2],[69.5,49.5,1.2],[70,49.5,1.2],[71.5,49.5,3],[72,49.5,3.9],[72.5,49.5,3.5],[73,49.5,3.3],[73.5,49.5,2.9],[74,49.5,2.3],[74.5,49.5,2.2],[75,49.5,2.2],[75.5,49.5,2.2],[76,49.5,2.2],[76.5,49.5,1.7],[77,49.5,1],[80,49.5,1.6],[80.5,49.5,3.2],[81,49.5,3.3],[81.5,49.5,3.3],[82,49.5,3.9],[82.5,49.5,5.1],[83,49.5,5.2],[83.5,49.5,4.8],[84,49.5,5.4],[84.5,49.5,6.5],[85,49.5,3.4],[85.5,49.5,2.7],[86,49.5,2.7],[86.5,49.5,3.1],[87,49.5,2.7],[87.5,49.5,2.1],[88,49.5,1.9],[88.5,49.5,2.1],[89,49.5,2.1],[89.5,49.5,2.1],[90,49.5,2.1],[90.5,49.5,1.9],[91,49.5,1.5],[91.5,49.5,1.5],[92,49.5,1.5],[92.5,49.5,1.5],[93,49.5,1.5],[93.5,49.5,1.5],[94,49.5,1.5],[94.5,49.5,1.5],[95,49.5,1.5],[95.5,49.5,1.2],[96,49.5,1.2],[96.5,49.5,1.2],[97,49.5,1.2],[97.5,49.5,1.3],[98,49.5,1.3],[98.5,49.5,1.3],[99,49.5,1.3],[99.5,49.5,1.3],[100,49.5,1.3],[100.5,49.5,1.5],[101,49.5,1.3],[101.5,49.5,1.3],[102,49.5,1.4],[102.5,49.5,1.4],[103,49.5,1.4],[103.5,49.5,2.7],[104,49.5,28.5],[104.5,49.5,5.9],[105,49.5,2.6],[105.5,49.5,6.9],[106,49.5,18.7],[106.5,49.5,12.5],[107,49.5,2.6],[107.5,49.5,2.4],[108,49.5,2.3],[109.5,49.5,1],[110,49.5,1],[110.5,49.5,1],[116,49.5,1],[116.5,49.5,1.6],[117,49.5,1.6],[117.5,49.5,30.9],[118,49.5,2.4],[118.5,49.5,3.9],[119,49.5,4.3],[119.5,49.5,60.8],[120,49.5,69.9],[120.5,49.5,18.3],[121,49.5,15.2],[121.5,49.5,13.8],[122,49.5,5.7],[122.5,49.5,15.5],[123,49.5,18.5],[123.5,49.5,13.5],[124,49.5,26],[124.5,49.5,30.1],[125,49.5,31.8],[125.5,49.5,32.7],[126,49.5,33.5],[126.5,49.5,31.5],[127,49.5,26.6],[127.5,49.5,10.3],[128,49.5,6.4],[128.5,49.5,6.4],[129,49.5,9],[129.5,49.5,6.9],[130,49.5,1.8],[130.5,49.5,1.8],[131,49.5,2.1],[131.5,49.5,1.9],[132,49.5,2.5],[132.5,49.5,2.4],[133,49.5,2.4],[133.5,49.5,2.3],[134,49.5,2.3],[134.5,49.5,1.9],[135,49.5,1.5],[138.5,49.5,1.4],[139,49.5,1.7],[139.5,49.5,1.6],[140,49.5,1.7],[140.5,49.5,1.7],[142,49.5,12.6],[142.5,49.5,2.7],[143,49.5,24.8],[143.5,49.5,2],[144,49.5,2],[154,49.5,1.1],[154.5,49.5,1.1],[-126,49,33.5],[-124.5,49,3.7],[-124,49,38.2],[-123.5,49,178.3],[-123,49,90.7],[-122.5,49,62.8],[-122,49,2.2],[-121.5,49,1.6],[-121,49,1],[-120,49,2.6],[-119.5,49,2.6],[-119,49,2.3],[-118.5,49,2.3],[-118,49,6.7],[-117.5,49,1.4],[-117,49,1.9],[-116.5,49,3.5],[-116,49,1.4],[-115.5,49,2.3],[-115,49,1.4],[-113.5,49,2.9],[-113,49,1],[-112.5,49,2.5],[-110,49,6],[-105,49,1.2],[-103.5,49,1.1],[-102,49,1.3],[-101,49,1.1],[-100.5,49,3.4],[-100,49,5.7],[-98.5,49,1.9],[-98,49,3.1],[-97.5,49,2.3],[-97,49,1.9],[-96.5,49,1.9],[-96,49,4.9],[-95.5,49,2.5],[-95,49,2],[-94.5,49,1.1],[-94,49,2.2],[-93.5,49,13.6],[-92,49,2],[-89.5,49,5.6],[-89,49,1.3],[-88.5,49,2.4],[-87.5,49,4.4],[-86.5,49,3.1],[-82,49,2.9],[-81.5,49,6.3],[-81,49,4.3],[-79.5,49,9.8],[-79,49,1.9],[-78.5,49,5.6],[-78,49,4.1],[-73,49,6.1],[-72.5,49,22.9],[-72,49,23.1],[-71.5,49,7],[-69.5,49,3.6],[-69,49,2.7],[-68.5,49,44.1],[-68,49,18.6],[-67.5,49,5.7],[-65,49,2.9],[-64.5,49,10.3],[-59.5,49,10.9],[-59,49,19.1],[-58.5,49,4.8],[-58,49,10.8],[-56,49,7.1],[-55,49,5.8],[-54.5,49,2.6],[-54,49,5.5],[-53.5,49,19.4],[-5,49,127.7],[-4.5,49,111.8],[-4,49,107.9],[-3.5,49,100.8],[-3,49,234.1],[-2.5,49,134.7],[-2,49,177.4],[-1.5,49,55.7],[-1,49,60.8],[-0.5,49,46.5],[0,49,29],[0.5,49,41.5],[1,49,83.1],[1.5,49,269.3],[2,49,3821.4],[2.5,49,778.2],[3,49,69.6],[3.5,49,34.1],[4,49,46.6],[4.5,49,50],[5,49,36.7],[5.5,49,43.5],[6,49,227.2],[6.5,49,35.2],[7,49,92],[7.5,49,370],[8,49,294.9],[8.5,49,407.5],[9,49,841.7],[9.5,49,329.3],[10,49,185.3],[10.5,49,115.7],[11,49,166.1],[11.5,49,121.4],[12,49,151.1],[12.5,49,118.8],[13,49,127.6],[13.5,49,69.2],[14,49,75.7],[14.5,49,60.3],[15,49,40.9],[15.5,49,44],[16,49,72.5],[16.5,49,89.2],[17,49,117.6],[17.5,49,112.5],[18,49,144.9],[18.5,49,99.1],[19,49,106.6],[19.5,49,45.6],[20,49,51.1],[20.5,49,83.3],[21,49,206.4],[21.5,49,126.5],[22,49,123.1],[22.5,49,64.9],[23,49,51.7],[23.5,49,55.4],[24,49,74.3],[24.5,49,210.7],[25,49,119.7],[25.5,49,89.3],[26,49,71.8],[26.5,49,109.9],[27,49,56],[27.5,49,35.3],[28,49,38.1],[28.5,49,38.7],[29,49,40.6],[29.5,49,44.9],[30,49,87.9],[30.5,49,38.8],[31,49,42.3],[31.5,49,39.8],[32,49,123.9],[32.5,49,48.3],[33,49,69.4],[33.5,49,37.7],[34,49,54.1],[34.5,49,171.3],[35,49,134],[35.5,49,81.2],[36,49,61.7],[36.5,49,29.1],[37,49,88.1],[37.5,49,267.2],[38,49,180.2],[38.5,49,193.5],[39,49,264.2],[39.5,49,21.7],[40,49,34.3],[40.5,49,12.9],[41,49,10.7],[41.5,49,9.5],[42,49,9.3],[42.5,49,10.1],[43,49,12.1],[43.5,49,16.3],[44,49,364.8],[44.5,49,344.4],[45,49,15.6],[45.5,49,5.9],[46,49,3.9],[46.5,49,2.1],[47,49,1],[47.5,49,1],[48,49,1],[48.5,49,1],[49,49,1],[49.5,49,1],[50,49,1],[50.5,49,1.1],[51,49,1.9],[51.5,49,1.8],[52,49,1.6],[52.5,49,1.3],[53,49,1.2],[53.5,49,1.2],[54,49,1.6],[54.5,49,1.5],[55,49,1.3],[55.5,49,1.3],[56.5,49,2.5],[57,49,2.8],[57.5,49,2.3],[58,49,1.6],[58.5,49,1.3],[59,49,1.3],[72,49,1.4],[72.5,49,1.5],[73,49,1.8],[73.5,49,2],[74,49,1.6],[74.5,49,1.4],[75,49,1.4],[75.5,49,1.7],[76,49,1.8],[76.5,49,2.2],[77,49,1.6],[80,49,1.7],[80.5,49,3.3],[81,49,3.3],[81.5,49,3.5],[82,49,3.8],[82.5,49,4],[83,49,4.5],[83.5,49,3],[84,49,3.1],[84.5,49,2.9],[85,49,2.6],[85.5,49,2.2],[86,49,2.2],[86.5,49,7],[87,49,6.9],[87.5,49,7.7],[88,49,2.7],[88.5,49,2.1],[89,49,2.1],[89.5,49,2.1],[90,49,2.1],[90.5,49,2],[91,49,1.6],[91.5,49,1.3],[92,49,1.4],[92.5,49,1.5],[93,49,1.5],[93.5,49,1.4],[94,49,1.3],[94.5,49,1.4],[95,49,1.3],[95.5,49,1.2],[96,49,1.2],[96.5,49,1.2],[97,49,1.2],[97.5,49,1.2],[98,49,1.2],[98.5,49,1.2],[99,49,1.3],[99.5,49,1.3],[100,49,1.4],[100.5,49,1.9],[101,49,1.9],[101.5,49,1.8],[102,49,1.5],[102.5,49,1.4],[103,49,1.4],[103.5,49,1.4],[104,49,6.4],[104.5,49,2.3],[105,49,2.3],[105.5,49,1.7],[106,49,2.1],[106.5,49,2.4],[107,49,2.3],[107.5,49,1.7],[108,49,1.4],[108.5,49,1.3],[116,49,1.5],[116.5,49,1.6],[117,49,1.6],[117.5,49,2],[118,49,2.1],[118.5,49,3.8],[119,49,7.7],[119.5,49,7.9],[120,49,7.9],[120.5,49,9.9],[121,49,15.1],[121.5,49,15.2],[122,49,18.7],[122.5,49,28.4],[123,49,28.9],[123.5,49,29],[124,49,32.8],[124.5,49,83.6],[125,49,76.1],[125.5,49,84.3],[126,49,34.9],[126.5,49,35.3],[127,49,34],[127.5,49,7],[128,49,6.4],[128.5,49,6.8],[129,49,28.3],[129.5,49,25.6],[130,49,12.1],[130.5,49,4.4],[131,49,3],[131.5,49,3],[132,49,3.1],[132.5,49,43.5],[133,49,3.9],[133.5,49,3.3],[134,49,3.2],[134.5,49,2.6],[135,49,110.6],[135.5,49,2],[136,49,1.1],[137,49,1.5],[137.5,49,1.1],[138.5,49,1.4],[139,49,1.5],[139.5,49,1.4],[140,49,32.8],[141.5,49,4.3],[142,49,4],[142.5,49,6],[144,49,2],[144.5,49,2],[153,49,1.1],[153.5,49,1.1],[154,49,1.1],[-125,48.5,4],[-124.5,48.5,2],[-124,48.5,32.9],[-123.5,48.5,367.6],[-123,48.5,118.2],[-122.5,48.5,115],[-122,48.5,7.8],[-121.5,48.5,2.1],[-120.5,48.5,1.8],[-120,48.5,8.1],[-119.5,48.5,3],[-119,48.5,1.4],[-118.5,48.5,1.5],[-118,48.5,6],[-117.5,48.5,7.3],[-117,48.5,11.9],[-116.5,48.5,6],[-116,48.5,2.9],[-115.5,48.5,1.6],[-115,48.5,2],[-114.5,48.5,32.6],[-114,48.5,1.4],[-112.5,48.5,1.2],[-112,48.5,1.9],[-110,48.5,1.6],[-109,48.5,1.2],[-107,48.5,1.6],[-106,48.5,2.7],[-105.5,48.5,1.1],[-105,48.5,1],[-104,48.5,8.1],[-103.5,48.5,1.1],[-103,48.5,1.1],[-102,48.5,1.6],[-101.5,48.5,25.4],[-101,48.5,1.3],[-100.5,48.5,1.4],[-100,48.5,1.3],[-99.5,48.5,1.5],[-99,48.5,5.6],[-98.5,48.5,1.3],[-98,48.5,2.7],[-97.5,48.5,5],[-97,48.5,2.8],[-96.5,48.5,6.6],[-96,48.5,1.7],[-95.5,48.5,1.9],[-95,48.5,1.2],[-90,48.5,2.5],[-89.5,48.5,111.8],[-85,48.5,1.6],[-82,48.5,3.2],[-81.5,48.5,6.7],[-81,48.5,2.5],[-80.5,48.5,4.1],[-80,48.5,2.3],[-79.5,48.5,10.8],[-79,48.5,8.9],[-78.5,48.5,4.6],[-78,48.5,9.8],[-77.5,48.5,3.7],[-72.5,48.5,6.6],[-72,48.5,7.6],[-71.5,48.5,57.7],[-71,48.5,19.8],[-70.5,48.5,1.3],[-70,48.5,2.9],[-69.5,48.5,13.9],[-69,48.5,23.8],[-68.5,48.5,9.8],[-68,48.5,1.7],[-67.5,48.5,5.5],[-67,48.5,4.3],[-66.5,48.5,9],[-66,48.5,6.6],[-65.5,48.5,5.8],[-65,48.5,14.1],[-64.5,48.5,16.8],[-59.5,48.5,4],[-59,48.5,1.4],[-54.5,48.5,3.4],[-54,48.5,4.2],[-53.5,48.5,5.4],[-53,48.5,16.1],[-5.5,48.5,61.5],[-5,48.5,288.8],[-4.5,48.5,160.8],[-4,48.5,37.1],[-3.5,48.5,28.9],[-3,48.5,72.4],[-2.5,48.5,52.6],[-2,48.5,231.6],[-1.5,48.5,76.8],[-1,48.5,81.4],[-0.5,48.5,32.2],[0,48.5,110.3],[0.5,48.5,42],[1,48.5,73.8],[1.5,48.5,46.7],[2,48.5,72.1],[2.5,48.5,120.5],[3,48.5,67.8],[3.5,48.5,29.8],[4,48.5,85.9],[4.5,48.5,20.5],[5,48.5,34.6],[5.5,48.5,28.4],[6,48.5,62.2],[6.5,48.5,83.5],[7,48.5,135.7],[7.5,48.5,229.4],[8,48.5,198.5],[8.5,48.5,205.5],[9,48.5,198],[9.5,48.5,187.3],[10,48.5,189.9],[10.5,48.5,286.2],[11,48.5,428.1],[11.5,48.5,630.9],[12,48.5,133.1],[12.5,48.5,125.4],[13,48.5,102.3],[13.5,48.5,115.3],[14,48.5,261.1],[14.5,48.5,84.7],[15,48.5,61.1],[15.5,48.5,109.7],[16,48.5,816],[16.5,48.5,172.5],[17,48.5,300.4],[17.5,48.5,167.9],[18,48.5,135.8],[18.5,48.5,71.5],[19,48.5,53.5],[19.5,48.5,100.5],[20,48.5,79.6],[20.5,48.5,177],[21,48.5,61.7],[21.5,48.5,85.4],[22,48.5,96],[22.5,48.5,156.5],[23,48.5,120.8],[23.5,48.5,86.1],[24,48.5,57.2],[24.5,48.5,62.9],[25,48.5,73.2],[25.5,48.5,170.7],[26,48.5,112.9],[26.5,48.5,72.8],[27,48.5,90.9],[27.5,48.5,86.5],[28,48.5,68.6],[28.5,48.5,42.1],[29,48.5,36.7],[29.5,48.5,42.8],[30,48.5,43],[30.5,48.5,65.5],[31,48.5,31.7],[31.5,48.5,29.5],[32,48.5,61],[32.5,48.5,25.1],[33,48.5,85.5],[33.5,48.5,87.8],[34,48.5,29.1],[34.5,48.5,259.9],[35,48.5,318.5],[35.5,48.5,64.1],[36,48.5,38.4],[36.5,48.5,27.4],[37,48.5,171.8],[37.5,48.5,348.7],[38,48.5,446.8],[38.5,48.5,284],[39,48.5,153.2],[39.5,48.5,171.7],[40,48.5,94.2],[40.5,48.5,63.7],[41,48.5,20.1],[41.5,48.5,15.7],[42,48.5,10.9],[42.5,48.5,10.6],[43,48.5,10.4],[43.5,48.5,11.9],[44,48.5,37.9],[44.5,48.5,35.6],[45,48.5,4.4],[45.5,48.5,4.6],[46,48.5,23.6],[46.5,48.5,3],[47,48.5,1.9],[47.5,48.5,1.7],[48,48.5,1.4],[48.5,48.5,1.3],[49,48.5,1.1],[49.5,48.5,1.2],[50,48.5,1.8],[50.5,48.5,2.5],[51,48.5,2.5],[51.5,48.5,2.5],[52,48.5,2.5],[52.5,48.5,1.7],[53,48.5,1.2],[53.5,48.5,1.2],[54,48.5,1.2],[54.5,48.5,1.1],[57,48.5,1.3],[57.5,48.5,1.5],[58,48.5,1.4],[67.5,48.5,1.6],[70,48.5,1.9],[70.5,48.5,8.3],[79,48.5,1.2],[79.5,48.5,3.1],[80,48.5,3.8],[80.5,48.5,4],[81,48.5,4],[81.5,48.5,2.5],[82,48.5,2.6],[82.5,48.5,3.3],[83,48.5,3.6],[83.5,48.5,3],[84,48.5,2.9],[84.5,48.5,2.3],[85,48.5,2.1],[85.5,48.5,7],[86,48.5,9.9],[86.5,48.5,9.1],[87,48.5,7.5],[87.5,48.5,14.9],[88,48.5,14.7],[88.5,48.5,3.1],[89,48.5,2.2],[89.5,48.5,2.2],[90,48.5,2.1],[90.5,48.5,1.8],[91,48.5,1.3],[91.5,48.5,1.3],[92,48.5,1.3],[92.5,48.5,1.3],[93,48.5,1.3],[93.5,48.5,1.2],[94,48.5,1.2],[94.5,48.5,1.2],[95,48.5,1.2],[95.5,48.5,1.2],[96,48.5,1.2],[96.5,48.5,1.2],[97,48.5,1.2],[97.5,48.5,1.2],[98,48.5,1.3],[98.5,48.5,1.5],[99,48.5,1.6],[99.5,48.5,1.7],[100,48.5,1.8],[100.5,48.5,1.9],[101,48.5,1.9],[101.5,48.5,1.9],[102,48.5,1.8],[102.5,48.5,1.5],[103,48.5,1.4],[103.5,48.5,1.4],[104,48.5,1.4],[104.5,48.5,1.4],[105,48.5,1.4],[105.5,48.5,1.4],[106,48.5,16.6],[106.5,48.5,91.4],[107,48.5,42.3],[107.5,48.5,1.4],[108,48.5,1.4],[108.5,48.5,1.4],[115.5,48.5,1.2],[116,48.5,1.6],[116.5,48.5,1.6],[117,48.5,1.6],[117.5,48.5,1.9],[118,48.5,2.1],[118.5,48.5,2.2],[119,48.5,4.7],[119.5,48.5,6.4],[120,48.5,7.9],[120.5,48.5,8.9],[121,48.5,15.7],[121.5,48.5,21.1],[122,48.5,20.9],[122.5,48.5,25.7],[123,48.5,32.6],[123.5,48.5,56.3],[124,48.5,68.5],[124.5,48.5,92.2],[125,48.5,118.5],[125.5,48.5,135.1],[126,48.5,103],[126.5,48.5,77.3],[127,48.5,66.1],[127.5,48.5,43.5],[128,48.5,28.2],[128.5,48.5,38.6],[129,48.5,42.9],[129.5,48.5,80.6],[130,48.5,47.7],[130.5,48.5,17.4],[131,48.5,2.4],[131.5,48.5,3.4],[132,48.5,4.4],[132.5,48.5,4],[133,48.5,9.7],[133.5,48.5,13.4],[134,48.5,12],[134.5,48.5,4.6],[135,48.5,152.5],[135.5,48.5,1.9],[136,48.5,1.6],[136.5,48.5,1.4],[137,48.5,1.6],[138.5,48.5,1.3],[139,48.5,1.4],[139.5,48.5,1.4],[140,48.5,1.4],[142,48.5,3.5],[142.5,48.5,6.4],[144.5,48.5,2],[153,48.5,1.1],[-125,48,1.7],[-124.5,48,3.3],[-124,48,1],[-123.5,48,3.4],[-123,48,134.1],[-122.5,48,1011.7],[-122,48,34.9],[-121.5,48,4.2],[-121,48,2.7],[-120.5,48,9.6],[-120,48,2.5],[-119.5,48,2.3],[-119,48,1.4],[-118.5,48,2.7],[-118,48,20.9],[-117.5,48,180.2],[-117,48,50.1],[-116.5,48,3.3],[-116,48,1.6],[-115.5,48,1.5],[-115,48,1.7],[-114.5,48,9.4],[-114,48,1.9],[-112.5,48,1.2],[-112,48,2],[-111.5,48,21],[-104.5,48,3.8],[-103.5,48,1.2],[-103,48,1.4],[-102.5,48,1.8],[-102,48,1.4],[-101.5,48,2.5],[-101,48,1.2],[-100,48,2.2],[-99.5,48,2.1],[-99,48,1.7],[-98.5,48,1.3],[-98,48,2.1],[-97.5,48,32.5],[-97,48,7.6],[-96.5,48,4.1],[-96,48,3.9],[-95.5,48,4.5],[-95,48,7.4],[-94.5,48,1.8],[-94,48,1.7],[-93.5,48,1.7],[-93,48,7.6],[-92.5,48,7],[-92,48,3.5],[-90.5,48,2.8],[-90,48,1.2],[-85,48,1.3],[-83.5,48,1.7],[-80,48,6.7],[-79.5,48,1.9],[-78.5,48,1.2],[-78,48,5.1],[-70.5,48,9.6],[-70,48,26.9],[-69.5,48,8],[-69,48,6.5],[-68.5,48,2.2],[-67.5,48,2.9],[-67,48,5.9],[-66.5,48,3.6],[-66,48,26],[-65.5,48,11.9],[-65,48,37],[-64.5,48,25.3],[-62,48,32],[-61.5,48,11.5],[-59.5,48,5.6],[-59,48,2.4],[-58,48,1.4],[-56,48,2.5],[-55,48,1.4],[-54,48,7],[-53.5,48,30.2],[-53,48,204.2],[-5,48,104.3],[-4.5,48,196.5],[-4,48,119.4],[-3.5,48,176.7],[-3,48,110.3],[-2.5,48,61.8],[-2,48,49.8],[-1.5,48,44.4],[-1,48,70.9],[-0.5,48,57.1],[0,48,110.1],[0.5,48,35.8],[1,48,76.6],[1.5,48,161.9],[2,48,47.8],[2.5,48,49.7],[3,48,28.9],[3.5,48,61.5],[4,48,20.7],[4.5,48,11.8],[5,48,23.6],[5.5,48,18.7],[6,48,56.4],[6.5,48,137.3],[7,48,226.3],[7.5,48,414.3],[8,48,169.2],[8.5,48,274.5],[9,48,239.8],[9.5,48,185.9],[10,48,148.8],[10.5,48,120],[11,48,126.9],[11.5,48,136.6],[12,48,153.9],[12.5,48,102.6],[13,48,172.5],[13.5,48,67.4],[14,48,42.2],[14.5,48,54.5],[15,48,46.3],[15.5,48,63],[16,48,119.1],[16.5,48,92.3],[17,48,68.5],[17.5,48,131],[18,48,139.7],[18.5,48,166.8],[19,48,512.4],[19.5,48,104.1],[20,48,89.3],[20.5,48,59.4],[21,48,68.5],[21.5,48,177.9],[22,48,81.4],[22.5,48,111.8],[23,48,71],[23.5,48,143.8],[24,48,52.3],[24.5,48,40.3],[25,48,25.8],[25.5,48,102.5],[26,48,164.4],[26.5,48,126.5],[27,48,67.6],[27.5,48,140.5],[28,48,107.4],[28.5,48,82.8],[29,48,59.7],[29.5,48,53.6],[30,48,31.2],[30.5,48,26],[31,48,64.5],[31.5,48,21.5],[32,48,23.9],[32.5,48,22],[33,48,288.3],[33.5,48,45.6],[34,48,132.6],[34.5,48,124.1],[35,48,522.3],[35.5,48,32.3],[36,48,30.2],[36.5,48,27.2],[37,48,57.8],[37.5,48,392.7],[38,48,152.7],[38.5,48,34.5],[39,48,20.9],[39.5,48,89.6],[40,48,182.7],[40.5,48,22.3],[41,48,21.5],[41.5,48,18.4],[42,48,158.5],[42.5,48,11],[43,48,12.9],[43.5,48,8.6],[44,48,5],[44.5,48,3.3],[45,48,2.3],[45.5,48,2.8],[46,48,4.2],[46.5,48,3.7],[47,48,3.2],[47.5,48,3.1],[48,48,2.7],[48.5,48,2.4],[49,48,2.4],[49.5,48,2.3],[50,48,2.3],[50.5,48,2.3],[51,48,2.3],[51.5,48,2.3],[52,48,2.2],[52.5,48,1.4],[53,48,1.7],[53.5,48,1.8],[54,48,1.8],[54.5,48,1.9],[61,48,1.4],[61.5,48,2],[67,48,24.8],[67.5,48,68.5],[79.5,48,2.8],[80,48,4.2],[80.5,48,4.3],[81,48,4.4],[81.5,48,2.7],[82,48,2.4],[82.5,48,2.4],[83,48,3.8],[83.5,48,4],[84,48,4.1],[84.5,48,3.8],[85,48,4.3],[85.5,48,5.2],[86,48,6.8],[86.5,48,7],[87,48,12.2],[87.5,48,15.9],[88,48,15.6],[88.5,48,4.2],[89,48,2.7],[89.5,48,2.6],[90,48,2.3],[90.5,48,2.1],[91,48,1.5],[91.5,48,1.3],[92,48,1.3],[92.5,48,1.3],[93,48,1.3],[95,48,1.1],[95.5,48,1.2],[96,48,1.2],[96.5,48,1.2],[97,48,1.2],[97.5,48,1.2],[98,48,1.4],[98.5,48,1.5],[99,48,1.8],[99.5,48,1.8],[100,48,1.9],[100.5,48,1.9],[101,48,1.9],[101.5,48,1.9],[102,48,1.9],[102.5,48,1.8],[103,48,1.5],[103.5,48,1.4],[104,48,1.4],[104.5,48,1.4],[105,48,1.4],[105.5,48,1.4],[106,48,1.9],[106.5,48,106],[107,48,125.1],[107.5,48,15.7],[108,48,1.4],[115.5,48,1],[117,48,1.1],[118.5,48,1.1],[119,48,1.9],[119.5,48,2.5],[120,48,6.4],[120.5,48,17.7],[121,48,24.4],[121.5,48,25.1],[122,48,25.2],[122.5,48,57],[123,48,77.5],[123.5,48,245.5],[124,48,161.3],[124.5,48,77.3],[125,48,123.8],[125.5,48,143.2],[126,48,143.6],[126.5,48,123],[127,48,118.2],[127.5,48,85.2],[128,48,59.6],[128.5,48,42.9],[129,48,42.9],[129.5,48,77.4],[130,48,113.7],[130.5,48,35],[131,48,19.5],[131.5,48,27.4],[132,48,30.4],[132.5,48,36.7],[133,48,40],[133.5,48,23.4],[134,48,15],[134.5,48,7.2],[135,48,4],[135.5,48,1.7],[136,48,1.7],[136.5,48,1.7],[137,48,1.7],[137.5,48,1.1],[138.5,48,1.1],[139,48,1.4],[139.5,48,1.4],[141.5,48,5.9],[142,48,4.5],[142.5,48,7.9],[152.5,48,1.1],[153,48,1.1],[-124.5,47.5,6.9],[-124,47.5,7.1],[-123.5,47.5,23.9],[-123,47.5,224],[-122.5,47.5,543.6],[-122,47.5,18.1],[-121.5,47.5,2.3],[-121,47.5,7.2],[-120.5,47.5,29.2],[-120,47.5,9.7],[-119.5,47.5,17.9],[-119,47.5,1.3],[-118.5,47.5,1.4],[-118,47.5,6.5],[-117.5,47.5,3.3],[-117,47.5,4.1],[-116.5,47.5,3.8],[-116,47.5,1.4],[-115,47.5,2],[-114.5,47.5,4.9],[-114,47.5,2.8],[-112,47.5,1.8],[-111.5,47.5,14.3],[-109.5,47.5,3.2],[-105,47.5,3.9],[-102,47.5,4],[-101.5,47.5,1.6],[-101,47.5,1.6],[-99.5,47.5,1.8],[-98.5,47.5,1.4],[-98,47.5,1.3],[-97.5,47.5,3.3],[-97,47.5,3.8],[-96.5,47.5,4],[-96,47.5,3.1],[-95.5,47.5,3.6],[-95,47.5,11.4],[-94.5,47.5,3.2],[-94,47.5,8.7],[-93.5,47.5,9.9],[-93,47.5,15],[-92.5,47.5,3.7],[-92,47.5,4.5],[-91.5,47.5,4.6],[-91,47.5,2],[-90.5,47.5,2.4],[-89,47.5,32.1],[-88.5,47.5,12],[-80,47.5,4.6],[-79.5,47.5,4.7],[-73,47.5,6],[-72,47.5,3],[-71.5,47.5,5.3],[-71,47.5,10.1],[-70.5,47.5,21.2],[-70,47.5,5.3],[-69.5,47.5,1.3],[-69,47.5,5.8],[-68.5,47.5,16.6],[-68,47.5,7.9],[-67.5,47.5,1.3],[-66,47.5,5.5],[-65.5,47.5,13.7],[-65,47.5,18],[-64.5,47.5,22.4],[-64,47.5,22.4],[-62.5,47.5,31.4],[-62,47.5,61.5],[-61,47.5,2.8],[-60.5,47.5,2.1],[-56.5,47.5,6.2],[-56,47.5,15],[-55.5,47.5,9],[-55,47.5,2.2],[-54,47.5,5.5],[-53.5,47.5,9.4],[-53,47.5,84.7],[-3.5,47.5,99.3],[-3,47.5,248.9],[-2.5,47.5,192.9],[-2,47.5,289.1],[-1.5,47.5,133.4],[-1,47.5,167.5],[-0.5,47.5,81.2],[0,47.5,45.7],[0.5,47.5,195.2],[1,47.5,39.9],[1.5,47.5,34.4],[2,47.5,86.7],[2.5,47.5,31.5],[3,47.5,36.5],[3.5,47.5,20.3],[4,47.5,16.6],[4.5,47.5,59.4],[5,47.5,154.1],[5.5,47.5,71.9],[6,47.5,82.4],[6.5,47.5,124.3],[7,47.5,165.2],[7.5,47.5,264.7],[8,47.5,466.2],[8.5,47.5,515.4],[9,47.5,198.5],[9.5,47.5,186.9],[10,47.5,64],[10.5,47.5,31.3],[11,47.5,124.7],[11.5,47.5,54.4],[12,47.5,43],[12.5,47.5,33.3],[13,47.5,40.7],[13.5,47.5,26.4],[14,47.5,28.9],[14.5,47.5,52.5],[15,47.5,180.8],[15.5,47.5,89],[16,47.5,67.7],[16.5,47.5,96.8],[17,47.5,53.4],[17.5,47.5,87.8],[18,47.5,125.8],[18.5,47.5,184],[19,47.5,505.7],[19.5,47.5,97.7],[20,47.5,95.2],[20.5,47.5,50.9],[21,47.5,52.9],[21.5,47.5,172.9],[22,47.5,76.6],[22.5,47.5,51.8],[23,47.5,79.5],[23.5,47.5,62.9],[24,47.5,70.8],[24.5,47.5,57.4],[25,47.5,26.5],[25.5,47.5,67.1],[26,47.5,96.7],[26.5,47.5,123.6],[27,47.5,80.9],[27.5,47.5,262.9],[28,47.5,103.2],[28.5,47.5,324],[29,47.5,85.1],[29.5,47.5,28.7],[30,47.5,22.1],[30.5,47.5,24.1],[31,47.5,23.2],[31.5,47.5,44.7],[32,47.5,43.1],[32.5,47.5,25.9],[33,47.5,23.7],[33.5,47.5,27.5],[34,47.5,24.8],[34.5,47.5,42.4],[35,47.5,38.4],[35.5,47.5,45.9],[36,47.5,26],[36.5,47.5,21.6],[37,47.5,55.2],[37.5,47.5,298.7],[38,47.5,33.9],[38.5,47.5,254.5],[39,47.5,112.9],[39.5,47.5,579.1],[40,47.5,137.1],[40.5,47.5,27.7],[41,47.5,27.4],[41.5,47.5,19.1],[42,47.5,11.6],[42.5,47.5,7.5],[43,47.5,6.9],[43.5,47.5,5.4],[44,47.5,3.6],[44.5,47.5,2.5],[45,47.5,2.1],[45.5,47.5,1.8],[46,47.5,1.6],[46.5,47.5,3.3],[47,47.5,3.9],[47.5,47.5,3.7],[48,47.5,4.6],[48.5,47.5,3.6],[49,47.5,2.4],[49.5,47.5,2.4],[50,47.5,2.3],[50.5,47.5,2.3],[51,47.5,2.3],[51.5,47.5,69.2],[52,47.5,18.4],[52.5,47.5,2.3],[53,47.5,2.5],[53.5,47.5,2.5],[54,47.5,2.5],[54.5,47.5,2.5],[60.5,47.5,1.3],[61,47.5,2.4],[61.5,47.5,2.6],[62,47.5,2.5],[62.5,47.5,1.1],[71,47.5,1.5],[75,47.5,1.4],[79,47.5,1.8],[79.5,47.5,4.1],[80,47.5,3.4],[80.5,47.5,3.4],[81,47.5,5.5],[81.5,47.5,6.8],[82,47.5,3.3],[82.5,47.5,3.4],[83,47.5,18.2],[83.5,47.5,5.5],[84,47.5,4.1],[84.5,47.5,4.2],[85,47.5,4.2],[85.5,47.5,4],[86,47.5,4.4],[86.5,47.5,4.3],[87,47.5,4.2],[87.5,47.5,4],[88,47.5,7],[88.5,47.5,2.8],[89,47.5,2.7],[89.5,47.5,2.7],[90,47.5,3.2],[90.5,47.5,2.3],[91,47.5,1.9],[91.5,47.5,1.3],[92,47.5,1.3],[92.5,47.5,1.3],[93,47.5,1.3],[93.5,47.5,1.1],[96.5,47.5,1.2],[97,47.5,1.2],[97.5,47.5,1.1],[99.5,47.5,1],[100,47.5,1.6],[100.5,47.5,1.9],[101,47.5,1.9],[101.5,47.5,1.9],[102,47.5,1.9],[102.5,47.5,1.9],[103,47.5,1.9],[103.5,47.5,1.7],[104,47.5,1.5],[104.5,47.5,1.4],[105,47.5,1.4],[105.5,47.5,1.4],[106,47.5,1.4],[106.5,47.5,1.4],[107,47.5,1.4],[107.5,47.5,1.4],[108,47.5,1.4],[108.5,47.5,1],[119.5,47.5,3.4],[120,47.5,5.7],[120.5,47.5,11.3],[121,47.5,23.6],[121.5,47.5,31.7],[122,47.5,35.1],[122.5,47.5,77.8],[123,47.5,93.6],[123.5,47.5,280.5],[124,47.5,195.6],[124.5,47.5,65.4],[125,47.5,97.3],[125.5,47.5,141.3],[126,47.5,152.1],[126.5,47.5,178.5],[127,47.5,144.2],[127.5,47.5,66.4],[128,47.5,63.7],[128.5,47.5,51.3],[129,47.5,43],[129.5,47.5,57.6],[130,47.5,110.6],[130.5,47.5,74.4],[131,47.5,76.9],[131.5,47.5,63.4],[132,47.5,55.9],[132.5,47.5,54.6],[133,47.5,37.3],[133.5,47.5,21.7],[134,47.5,12.1],[134.5,47.5,4.2],[135,47.5,3.7],[135.5,47.5,1.7],[136,47.5,1.7],[136.5,47.5,1.7],[137,47.5,1.5],[139,47.5,1.4],[141.5,47.5,5.9],[142,47.5,25.2],[142.5,47.5,57.2],[143,47.5,5.4],[152,47.5,1.4],[152.5,47.5,1.1],[-124.5,47,23.6],[-124,47,21],[-123.5,47,14.5],[-123,47,48.5],[-122.5,47,16.4],[-122,47,2.1],[-121.5,47,2.5],[-121,47,54.9],[-120.5,47,17],[-120,47,5.1],[-119.5,47,9.7],[-119,47,3.2],[-118.5,47,1.1],[-118,47,1.7],[-117.5,47,19.2],[-117,47,12.3],[-116.5,47,2.6],[-115,47,1.3],[-114.5,47,30.1],[-114,47,14.2],[-112.5,47,15.9],[-112,47,10.1],[-109.5,47,1.1],[-103,47,9.6],[-102.5,47,1.1],[-102,47,1.5],[-101.5,47,1.6],[-101,47,41.5],[-100.5,47,1.5],[-99.5,47,1],[-99,47,8.9],[-98.5,47,3.1],[-98,47,3],[-97.5,47,3.6],[-97,47,72.8],[-96.5,47,6.9],[-96,47,12.8],[-95.5,47,8.5],[-95,47,6.7],[-94.5,47,8.7],[-94,47,4.9],[-93.5,47,2.2],[-93,47,5.7],[-92.5,47,72.9],[-92,47,10.4],[-91.5,47,3.7],[-91,47,7.4],[-90.5,47,3.7],[-90,47,2.5],[-89.5,47,3],[-89,47,3.2],[-88.5,47,3.5],[-88,47,10.5],[-87.5,47,172.3],[-87,47,6.2],[-86.5,47,3.9],[-86,47,2.1],[-85.5,47,1.8],[-85,47,10.8],[-84.5,47,36.3],[-81.5,47,20.3],[-81,47,17.4],[-79.5,47,1.3],[-79,47,1],[-76,47,3.5],[-75.5,47,7.9],[-74,47,1.4],[-73.5,47,1.5],[-73,47,32.7],[-72.5,47,11.3],[-72,47,33],[-71.5,47,340.9],[-71,47,23.2],[-70.5,47,6.3],[-70,47,1.8],[-68.5,47,8.2],[-68,47,13.5],[-67.5,47,2.5],[-67,47,1.3],[-66.5,47,1.5],[-66,47,5.5],[-65.5,47,5.6],[-65,47,12.6],[-64.5,47,15.2],[-64,47,11.9],[-63.5,47,8.1],[-61.5,47,3.2],[-61,47,2.7],[-60.5,47,2.1],[-56.5,47,49.4],[-56,47,4.5],[-55.5,47,7.8],[-54.5,47,2.8],[-54,47,4.2],[-53.5,47,1.9],[-53,47,5.4],[-2.5,47,104.3],[-2,47,81.8],[-1.5,47,88.4],[-1,47,61.4],[-0.5,47,46.3],[0,47,103.6],[0.5,47,48.2],[1,47,21.3],[1.5,47,59.4],[2,47,26],[2.5,47,24.2],[3,47,65],[3.5,47,19.6],[4,47,70.7],[4.5,47,88.2],[5,47,38.2],[5.5,47,48.1],[6,47,55.2],[6.5,47,248.6],[7,47,216],[7.5,47,135.4],[8,47,56.4],[8.5,47,27.1],[9,47,30.6],[9.5,47,44],[10,47,16.1],[10.5,47,28.5],[11,47,75.3],[11.5,47,51.9],[12,47,26.3],[12.5,47,26.4],[13,47,28.6],[13.5,47,71.2],[14,47,93],[14.5,47,59.4],[15,47,79.2],[15.5,47,143.1],[16,47,88.1],[16.5,47,70.4],[17,47,73.2],[17.5,47,54.6],[18,47,52.5],[18.5,47,82.8],[19,47,48.5],[19.5,47,94.9],[20,47,64.6],[20.5,47,62],[21,47,90.3],[21.5,47,42.6],[22,47,52.1],[22.5,47,27.9],[23,47,34.3],[23.5,47,243.8],[24,47,55.2],[24.5,47,143.3],[25,47,34.4],[25.5,47,42.7],[26,47,94],[26.5,47,221.3],[27,47,67.5],[27.5,47,93.3],[28,47,93.5],[28.5,47,233.4],[29,47,152.6],[29.5,47,172.1],[30,47,52.5],[30.5,47,168.3],[31,47,32.9],[31.5,47,145.3],[32,47,224.8],[32.5,47,198.8],[33,47,77.2],[33.5,47,42.6],[34,47,19.6],[34.5,47,22.2],[35,47,110],[35.5,47,20.7],[36,47,24.3],[36.5,47,149.9],[37,47,28.9],[37.5,47,20.3],[38,47,127.2],[38.5,47,28.5],[39,47,31.5],[39.5,47,28.7],[40,47,24.6],[40.5,47,23.5],[41,47,17.8],[41.5,47,18.4],[42,47,11.2],[42.5,47,9.5],[43,47,7.2],[43.5,47,5.5],[44,47,3.9],[44.5,47,3.1],[45,47,1.5],[45.5,47,1.4],[46,47,1.5],[46.5,47,1.7],[47,47,4.7],[47.5,47,5.1],[48,47,6],[48.5,47,4.7],[49,47,2.4],[49.5,47,2.4],[50,47,2.3],[50.5,47,2.3],[51,47,2.3],[51.5,47,2.3],[52,47,2.3],[52.5,47,2.5],[53,47,2.5],[53.5,47,2.5],[54,47,2.5],[54.5,47,2.5],[55,47,2],[59.5,47,1.3],[60,47,2],[60.5,47,2.6],[61,47,2.6],[61.5,47,2.6],[62,47,2.4],[62.5,47,1.9],[63,47,1.6],[63.5,47,1.1],[74,47,1.5],[74.5,47,69.8],[75,47,17.1],[77,47,1.7],[79,47,1.3],[79.5,47,1.7],[80,47,3.5],[80.5,47,4],[81,47,7.3],[81.5,47,6],[82,47,4.2],[82.5,47,16.5],[83,47,41.6],[83.5,47,21.8],[84,47,21.3],[84.5,47,12.8],[85,47,2.3],[85.5,47,2.2],[86,47,2.2],[86.5,47,2.2],[87,47,2.4],[87.5,47,2.4],[88,47,2.4],[88.5,47,2.6],[89,47,2.7],[89.5,47,2.8],[90,47,3.6],[90.5,47,3.5],[91,47,2],[91.5,47,1.5],[92,47,1.3],[92.5,47,1.3],[93,47,1.3],[93.5,47,1.1],[97,47,1],[100.5,47,1.1],[101,47,1.3],[101.5,47,1.9],[102,47,1.9],[102.5,47,1.9],[103,47,1.9],[103.5,47,1.9],[104,47,1.7],[104.5,47,1.4],[105,47,1.4],[105.5,47,1.2],[106,47,1.3],[106.5,47,1.3],[107,47,1.4],[107.5,47,1.3],[108,47,1.7],[108.5,47,2.2],[109,47,1.1],[118,47,1.4],[118.5,47,1.5],[119,47,1.2],[119.5,47,4],[120,47,13.7],[120.5,47,15.9],[121,47,19.2],[121.5,47,29.2],[122,47,35.2],[122.5,47,39.9],[123,47,66.3],[123.5,47,66.3],[124,47,38.1],[124.5,47,217.5],[125,47,158.3],[125.5,47,147],[126,47,179.8],[126.5,47,256.6],[127,47,204],[127.5,47,85.3],[128,47,57.1],[128.5,47,52.9],[129,47,57.4],[129.5,47,108],[130,47,394.9],[130.5,47,126],[131,47,261.8],[131.5,47,77.2],[132,47,43.1],[132.5,47,41],[133,47,33.2],[133.5,47,22.8],[134,47,11.2],[134.5,47,1.3],[135,47,1.2],[135.5,47,1.3],[136,47,1.4],[136.5,47,1.3],[137,47,1.2],[137.5,47,1.1],[141.5,47,49.9],[142,47,8.6],[142.5,47,63.5],[143,47,3.7],[143.5,47,3.7],[150.5,47,1.5],[151.5,47,1.5],[152,47,1.5],[-124.5,46.5,77.1],[-124,46.5,17.2],[-123.5,46.5,11.6],[-123,46.5,39],[-122.5,46.5,3.4],[-121.5,46.5,1.7],[-121,46.5,3.8],[-120.5,46.5,22.6],[-120,46.5,17.7],[-119.5,46.5,76.5],[-119,46.5,3.6],[-118.5,46.5,23.6],[-118,46.5,2.2],[-117.5,46.5,13.5],[-117,46.5,12.4],[-116.5,46.5,5.3],[-114.5,46.5,8.2],[-114,46.5,3.9],[-113.5,46.5,1.4],[-113,46.5,11.8],[-112.5,46.5,2.9],[-112,46.5,1.7],[-111.5,46.5,3.1],[-111,46.5,1.6],[-109,46.5,2.1],[-108.5,46.5,1.6],[-108,46.5,1.8],[-107,46.5,1.3],[-106.5,46.5,1.2],[-106,46.5,4.4],[-103.5,46.5,1.2],[-103,46.5,1.1],[-101,46.5,1.3],[-100.5,46.5,1.4],[-100,46.5,1.2],[-99.5,46.5,1],[-99,46.5,1.3],[-98.5,46.5,2.1],[-98,46.5,2.8],[-97.5,46.5,2.3],[-97,46.5,8.2],[-96.5,46.5,10.4],[-96,46.5,7],[-95.5,46.5,9.3],[-95,46.5,8.5],[-94.5,46.5,19.9],[-94,46.5,8.5],[-93.5,46.5,4.1],[-93,46.5,6.3],[-92.5,46.5,3.7],[-92,46.5,3.7],[-91.5,46.5,3.6],[-91,46.5,3.1],[-90.5,46.5,7.4],[-90,46.5,4],[-89.5,46.5,2.5],[-89,46.5,4.4],[-88.5,46.5,3.1],[-88,46.5,6.8],[-87.5,46.5,8.4],[-87,46.5,3.5],[-86.5,46.5,1.8],[-86,46.5,2.4],[-85.5,46.5,2.7],[-85,46.5,5.6],[-84.5,46.5,20],[-84,46.5,5.1],[-83.5,46.5,2.1],[-83,46.5,9.4],[-82.5,46.5,3.2],[-82,46.5,5.2],[-81.5,46.5,17.6],[-81,46.5,22.3],[-80.5,46.5,3.3],[-80,46.5,8.2],[-79.5,46.5,33],[-79,46.5,1.9],[-77.5,46.5,2.7],[-76.5,46.5,2.8],[-76,46.5,5.9],[-75.5,46.5,2],[-75,46.5,9.8],[-74.5,46.5,13.4],[-74,46.5,18.1],[-73.5,46.5,52.3],[-73,46.5,95.8],[-72.5,46.5,24.7],[-72,46.5,29.3],[-71.5,46.5,25.2],[-71,46.5,33.3],[-70.5,46.5,6.4],[-68.5,46.5,2],[-68,46.5,13.9],[-67.5,46.5,5.2],[-67,46.5,6.4],[-66.5,46.5,3.8],[-66,46.5,2.1],[-65.5,46.5,4.2],[-65,46.5,67.9],[-64.5,46.5,13.9],[-64,46.5,32],[-63.5,46.5,55.5],[-63,46.5,12.1],[-62.5,46.5,9.4],[-62,46.5,7.6],[-61.5,46.5,5.1],[-61,46.5,5.2],[-60.5,46.5,33.8],[-60,46.5,37.6],[-2,46.5,148.8],[-1.5,46.5,174.3],[-1,46.5,60.4],[-0.5,46.5,69.9],[0,46.5,33],[0.5,46.5,21.6],[1,46.5,23.3],[1.5,46.5,30.1],[2,46.5,17.8],[2.5,46.5,55.4],[3,46.5,62.2],[3.5,46.5,26.8],[4,46.5,81.5],[4.5,46.5,93.8],[5,46.5,70.2],[5.5,46.5,67.5],[6,46.5,412.4],[6.5,46.5,121.9],[7,46.5,78],[7.5,46.5,52],[8,46.5,35.1],[8.5,46.5,95.5],[9,46.5,70.8],[9.5,46.5,51.6],[10,46.5,39.2],[10.5,46.5,29],[11,46.5,169.3],[11.5,46.5,41.5],[12,46.5,72.1],[12.5,46.5,54.3],[13,46.5,141.6],[13.5,46.5,24.8],[14,46.5,162.7],[14.5,46.5,145],[15,46.5,127.7],[15.5,46.5,528.5],[16,46.5,229.8],[16.5,46.5,118.8],[17,46.5,52.9],[17.5,46.5,68.5],[18,46.5,140.8],[18.5,46.5,83.5],[19,46.5,53.2],[19.5,46.5,62.9],[20,46.5,137.8],[20.5,46.5,55.8],[21,46.5,139.1],[21.5,46.5,43.5],[22,46.5,24.1],[22.5,46.5,34.6],[23,46.5,32.7],[23.5,46.5,100.2],[24,46.5,100.3],[24.5,46.5,63.5],[25,46.5,54.8],[25.5,46.5,57.9],[26,46.5,51.6],[26.5,46.5,109.8],[27,46.5,71.5],[27.5,46.5,87.4],[28,46.5,66],[28.5,46.5,79.4],[29,46.5,30.8],[29.5,46.5,43.3],[30,46.5,92.6],[30.5,46.5,1773.5],[31.5,46.5,29.4],[32,46.5,27.2],[32.5,46.5,38.1],[33,46.5,35.6],[33.5,46.5,27.1],[34,46.5,25.1],[34.5,46.5,36.5],[35,46.5,27],[35.5,46.5,18],[36,46.5,25.3],[37.5,46.5,20.6],[38,46.5,21],[38.5,46.5,33.8],[39,46.5,37.2],[39.5,46.5,33.5],[40,46.5,29.3],[40.5,46.5,24.3],[41,46.5,19.7],[41.5,46.5,47.8],[42,46.5,11.6],[42.5,46.5,10],[43,46.5,7.3],[43.5,46.5,5.1],[44,46.5,40.6],[44.5,46.5,2.3],[45,46.5,1.4],[45.5,46.5,1.4],[46,46.5,1.4],[46.5,46.5,3],[47,46.5,9.7],[47.5,46.5,105],[48,46.5,113],[48.5,46.5,11.7],[49,46.5,6.2],[49.5,46.5,2.4],[52.5,46.5,2.5],[53,46.5,2.5],[53.5,46.5,2.3],[54,46.5,1.6],[54.5,46.5,1.4],[55,46.5,1.1],[55.5,46.5,1.3],[56,46.5,1.6],[59,46.5,1.5],[59.5,46.5,2.5],[60,46.5,2.6],[60.5,46.5,2.6],[61,46.5,2.5],[61.5,46.5,2.5],[62,46.5,2.1],[62.5,46.5,1.9],[63,46.5,1.7],[63.5,46.5,1.4],[64,46.5,1.5],[64.5,46.5,1.6],[65,46.5,1.5],[74.5,46.5,1.2],[75,46.5,1.2],[75.5,46.5,1.2],[76,46.5,2],[76.5,46.5,2.6],[77,46.5,2.5],[77.5,46.5,1.2],[79.5,46.5,2.1],[80,46.5,4.5],[80.5,46.5,4],[81,46.5,4.1],[81.5,46.5,4.2],[82,46.5,4.2],[82.5,46.5,7.8],[83,46.5,7.5],[83.5,46.5,10.9],[84,46.5,12.2],[84.5,46.5,13],[85,46.5,9.4],[85.5,46.5,18.7],[86,46.5,2.3],[86.5,46.5,2.2],[87,46.5,2.3],[87.5,46.5,2.4],[88,46.5,2.4],[88.5,46.5,2.6],[89,46.5,2.7],[89.5,46.5,2.7],[90,46.5,3.6],[90.5,46.5,3.5],[91,46.5,1.3],[91.5,46.5,1.3],[92,46.5,1.3],[92.5,46.5,1.3],[93,46.5,1.2],[101.5,46.5,1.9],[102,46.5,1.9],[102.5,46.5,1.9],[103,46.5,1.9],[103.5,46.5,1.9],[104,46.5,1.8],[108,46.5,1.4],[108.5,46.5,1.8],[116.5,46.5,1.6],[117,46.5,1.8],[117.5,46.5,2.2],[118,46.5,2.2],[118.5,46.5,2.2],[119,46.5,2.1],[119.5,46.5,6.7],[120,46.5,19.9],[120.5,46.5,20.7],[121,46.5,26.7],[121.5,46.5,50.6],[122,46.5,117.4],[122.5,46.5,31.5],[123,46.5,61.9],[123.5,46.5,61],[124,46.5,96.4],[124.5,46.5,286.8],[125,46.5,166.3],[125.5,46.5,191.5],[126,46.5,200.4],[126.5,46.5,275.4],[127,46.5,196.7],[127.5,46.5,116],[128,46.5,65.5],[128.5,46.5,40.8],[129,46.5,55.4],[129.5,46.5,78.4],[130,46.5,86.1],[130.5,46.5,92.6],[131,46.5,81.9],[131.5,46.5,41],[132,46.5,37.4],[132.5,46.5,34.2],[133,46.5,30.7],[133.5,46.5,20.3],[134,46.5,1.2],[134.5,46.5,1.1],[135,46.5,1.1],[135.5,46.5,1],[136,46.5,1],[136.5,46.5,1],[141,46.5,5.3],[141.5,46.5,5.3],[142,46.5,9.1],[143,46.5,3.7],[143.5,46.5,3.7],[149.5,46.5,1.5],[150,46.5,1.5],[150.5,46.5,1.5],[-124,46,9.3],[-123.5,46,22.6],[-123,46,384.8],[-122.5,46,76.2],[-122,46,11.8],[-121.5,46,13.8],[-121,46,2],[-120.5,46,1.6],[-120,46,3.8],[-119.5,46,16.9],[-119,46,9.3],[-118.5,46,6.4],[-118,46,1.6],[-117.5,46,1.1],[-117,46,1.2],[-116.5,46,2.6],[-113,46,6.3],[-112.5,46,5.1],[-112,46,1.5],[-111.5,46,20.2],[-111,46,10],[-110,46,1],[-109.5,46,2.2],[-109,46,40.8],[-108.5,46,15.8],[-108,46,1.5],[-107.5,46,1.2],[-107,46,1.5],[-100.5,46,2.9],[-100,46,1.1],[-99.5,46,1.1],[-99,46,2.4],[-98.5,46,2.6],[-98,46,2],[-97.5,46,3],[-97,46,2.6],[-96.5,46,2.9],[-96,46,7.5],[-95.5,46,16.1],[-95,46,14.5],[-94.5,46,62.3],[-94,46,16.1],[-93.5,46,19.7],[-93,46,13.6],[-92.5,46,9.3],[-92,46,11.6],[-91.5,46,4.9],[-91,46,2.9],[-90.5,46,5.1],[-90,46,10.4],[-89.5,46,13.8],[-89,46,3.5],[-88.5,46,11.7],[-88,46,7.6],[-87.5,46,20.9],[-87,46,2.7],[-86.5,46,10],[-86,46,5.4],[-85.5,46,12.1],[-85,46,13.6],[-84.5,46,17.8],[-84,46,3.9],[-83,46,1.2],[-82.5,46,4.5],[-82,46,6.6],[-81.5,46,1.2],[-80,46,1.8],[-79.5,46,5],[-78,46,1.3],[-77.5,46,22],[-77,46,8.2],[-76.5,46,6],[-76,46,44.2],[-75.5,46,26.9],[-75,46,17.2],[-74.5,46,63.9],[-74,46,911.7],[-73.5,46,262.7],[-73,46,60.2],[-72.5,46,31.4],[-72,46,14.5],[-71.5,46,7.9],[-71,46,10.9],[-69,46,4],[-68.5,46,2.1],[-68,46,1.7],[-67.5,46,3.3],[-67,46,32.5],[-66.5,46,8],[-66,46,9.4],[-65.5,46,5.5],[-65,46,7.4],[-64.5,46,13.4],[-64,46,5.4],[-63.5,46,12.1],[-63,46,30.9],[-62.5,46,9.4],[-62,46,13.7],[-61.5,46,8],[-61,46,15.3],[-60.5,46,32.1],[-60,46,37.6],[-1.5,46,119.6],[-1,46,85.2],[-0.5,46,53],[0,46,87],[0.5,46,34.3],[1,46,122.1],[1.5,46,16.2],[2,46,19.4],[2.5,46,22.1],[3,46,208.3],[3.5,46,36],[4,46,98.5],[4.5,46,734.3],[5,46,160.1],[5.5,46,135.5],[6,46,129.3],[6.5,46,45.8],[7,46,40.2],[7.5,46,47.3],[8,46,154.8],[8.5,46,646.9],[9,46,1280.9],[9.5,46,458.8],[10,46,300.6],[10.5,46,120.1],[11,46,209.1],[11.5,46,314.8],[12,46,382.1],[12.5,46,232.7],[13,46,152.3],[13.5,46,295.8],[14,46,44.4],[14.5,46,44.6],[15,46,67.5],[15.5,46,74.2],[16,46,82.5],[16.5,46,42.5],[17,46,37.8],[17.5,46,28.6],[18,46,48.3],[18.5,46,66.3],[19,46,88.3],[19.5,46,90.4],[20,46,89.4],[20.5,46,70.9],[21,46,194.5],[21.5,46,43],[22,46,31.4],[22.5,46,100.4],[23,46,57.8],[23.5,46,45.3],[24,46,119],[24.5,46,35.2],[25,46,64.1],[25.5,46,227],[26,46,38.9],[26.5,46,36.6],[27,46,150.4],[27.5,46,78.1],[28,46,106.5],[28.5,46,60.3],[29,46,41.6],[29.5,46,35.1],[30,46,36.7],[32.5,46,24.2],[33,46,29.4],[33.5,46,59],[34,46,63.2],[34.5,46,46.9],[35,46,39.9],[37.5,46,27.6],[38,46,26.3],[38.5,46,41.7],[39,46,56.7],[39.5,46,37.3],[40,46,63.7],[40.5,46,29],[41,46,27.5],[41.5,46,25.1],[42,46,19.6],[42.5,46,19.3],[43,46,14.5],[43.5,46,9.9],[44,46,4],[44.5,46,2.1],[45,46,1.7],[46.5,46,2],[47,46,10.2],[47.5,46,18],[48,46,15],[48.5,46,13.3],[49,46,12.9],[49.5,46,12.9],[52.5,46,1.2],[53,46,1.7],[53.5,46,1.2],[59,46,2.6],[59.5,46,2.6],[60.5,46,2.6],[61,46,2.2],[61.5,46,2],[62,46,1.9],[62.5,46,1.9],[63,46,1.5],[63.5,46,1.4],[64,46,1.4],[64.5,46,1.7],[65,46,1.9],[65.5,46,1.8],[66,46,1.8],[66.5,46,1.7],[67,46,1.4],[67.5,46,1.1],[68,46,1.1],[68.5,46,1.1],[74,46,1.2],[74.5,46,1.2],[75,46,1.2],[75.5,46,1.2],[76,46,2],[76.5,46,2.6],[77,46,2.6],[77.5,46,2.6],[78,46,1.5],[78.5,46,3.9],[79,46,6.7],[79.5,46,9],[80,46,8.1],[80.5,46,5.6],[81,46,4.9],[81.5,46,4],[82,46,5.4],[82.5,46,7.8],[83,46,4.4],[83.5,46,4.3],[84,46,4.3],[84.5,46,11.4],[85,46,28.3],[85.5,46,11.4],[86,46,2.2],[86.5,46,2.2],[87,46,2.3],[87.5,46,2.4],[88,46,2.4],[88.5,46,2.5],[89,46,2.7],[89.5,46,2.8],[90,46,3.6],[90.5,46,2.7],[91,46,1.3],[91.5,46,1.3],[92,46,1.3],[92.5,46,1.3],[101,46,1.3],[101.5,46,1.9],[102,46,1.9],[102.5,46,1.9],[103,46,1.9],[103.5,46,1.5],[116,46,1.7],[116.5,46,2.2],[117,46,2.2],[117.5,46,2.2],[118,46,2.2],[118.5,46,2.2],[119,46,6.7],[119.5,46,20.7],[120,46,21.4],[120.5,46,27.3],[121,46,52.7],[121.5,46,69.2],[122,46,127.1],[122.5,46,182],[123,46,92.4],[123.5,46,84.5],[124,46,90.3],[124.5,46,191],[125,46,140.5],[125.5,46,176.7],[126,46,705.4],[126.5,46,1179.7],[127,46,206.4],[127.5,46,133.3],[128,46,98.3],[128.5,46,77.7],[129,46,66.7],[129.5,46,59.2],[130,46,64.3],[130.5,46,174.4],[131,46,227.4],[131.5,46,55],[132,46,49.2],[132.5,46,36.5],[133,46,27.8],[133.5,46,17.8],[134,46,1.6],[134.5,46,1.1],[141.5,46,45],[142,46,7.3],[148.5,46,1.5],[149,46,1.5],[149.5,46,1.5],[150,46,1.5],[-124.5,45.5,31.8],[-124,45.5,9.4],[-123.5,45.5,39.7],[-123,45.5,344.4],[-122.5,45.5,50.1],[-122,45.5,4.4],[-121.5,45.5,1.1],[-118.5,45.5,6.6],[-118,45.5,3.1],[-117.5,45.5,1.5],[-114,45.5,1.2],[-113,45.5,2.9],[-111.5,45.5,1.5],[-111,45.5,1.4],[-110.5,45.5,1.1],[-110,45.5,1.2],[-109.5,45.5,2.8],[-109,45.5,1.1],[-100.5,45.5,1.1],[-100,45.5,1.2],[-99.5,45.5,1.2],[-99,45.5,4.5],[-98.5,45.5,9.4],[-98,45.5,2.4],[-97.5,45.5,2.4],[-97,45.5,4.5],[-96.5,45.5,4.7],[-96,45.5,5.6],[-95.5,45.5,14.9],[-95,45.5,14.6],[-94.5,45.5,22.5],[-94,45.5,72.7],[-93.5,45.5,391.7],[-93,45.5,69.4],[-92.5,45.5,16.1],[-92,45.5,16.4],[-91.5,45.5,10.8],[-91,45.5,5.4],[-90.5,45.5,9.5],[-90,45.5,15.9],[-89.5,45.5,10.8],[-89,45.5,4.9],[-88.5,45.5,6.1],[-88,45.5,21.9],[-87.5,45.5,5.3],[-87,45.5,2.4],[-86.5,45.5,13.2],[-86,45.5,19.6],[-85.5,45.5,26.2],[-85,45.5,20.5],[-84.5,45.5,6.7],[-84,45.5,10.2],[-83.5,45.5,46.9],[-82,45.5,2.8],[-81.5,45.5,2.4],[-80.5,45.5,14.5],[-80,45.5,5.4],[-79.5,45.5,15.1],[-79,45.5,3.2],[-78.5,45.5,2.8],[-78,45.5,5.5],[-77.5,45.5,1.9],[-77,45.5,7.9],[-76.5,45.5,31.8],[-76,45.5,386.6],[-75.5,45.5,53.5],[-75,45.5,41.4],[-74.5,45.5,67.3],[-74,45.5,475.9],[-73.5,45.5,164.8],[-73,45.5,57.7],[-72.5,45.5,31.3],[-72,45.5,74.3],[-71.5,45.5,2.5],[-71,45.5,1.1],[-70.5,45.5,1.2],[-70,45.5,2.4],[-69.5,45.5,8.2],[-69,45.5,7],[-68.5,45.5,3.6],[-68,45.5,1.4],[-67.5,45.5,10.6],[-67,45.5,4.9],[-66.5,45.5,41.4],[-66,45.5,54],[-65.5,45.5,5.9],[-65,45.5,19],[-64.5,45.5,20.5],[-64,45.5,9.6],[-63.5,45.5,17.5],[-63,45.5,5.4],[-62.5,45.5,3.3],[-62,45.5,3.1],[-61.5,45.5,3.6],[-61,45.5,41.3],[-1.5,45.5,17.1],[-1,45.5,51.2],[-0.5,45.5,49.2],[0,45.5,31.9],[0.5,45.5,59.6],[1,45.5,44.3],[1.5,45.5,57.5],[2,45.5,21.1],[2.5,45.5,14.1],[3,45.5,29.8],[3.5,45.5,41.3],[4,45.5,189.9],[4.5,45.5,115],[5,45.5,83.1],[5.5,45.5,279],[6,45.5,30.7],[6.5,45.5,18.7],[7,45.5,74],[7.5,45.5,754],[8,45.5,105.1],[8.5,45.5,242],[9,45.5,863.9],[9.5,45.5,241.7],[10,45.5,205.9],[10.5,45.5,270.5],[11,45.5,237.4],[11.5,45.5,361.2],[12,45.5,307.8],[12.5,45.5,539.3],[13,45.5,33.4],[13.5,45.5,97.1],[14,45.5,72.1],[14.5,45.5,39.8],[15,45.5,44.8],[15.5,45.5,36.9],[16,45.5,40],[16.5,45.5,86.5],[17,45.5,46],[17.5,45.5,47.6],[18,45.5,67.6],[18.5,45.5,63.8],[19,45.5,77.9],[19.5,45.5,90.4],[20,45.5,90.8],[20.5,45.5,85.7],[21,45.5,61.6],[21.5,45.5,67.7],[22,45.5,43.2],[22.5,45.5,17.4],[23,45.5,120.7],[23.5,45.5,36.2],[24,45.5,101.2],[24.5,45.5,63.2],[25,45.5,93.7],[25.5,45.5,127],[26,45.5,88.1],[26.5,45.5,132],[27,45.5,70],[27.5,45.5,133.3],[28,45.5,150.9],[28.5,45.5,125.4],[29,45.5,15.5],[29.5,45.5,21.7],[32,45.5,24.2],[32.5,45.5,24.2],[33,45.5,134.6],[33.5,45.5,60.6],[34,45.5,70],[34.5,45.5,43.8],[35,45.5,115],[35.5,45.5,30.7],[36,45.5,99.1],[36.5,45.5,116.4],[37,45.5,78.5],[37.5,45.5,42],[38,45.5,65],[38.5,45.5,166.4],[39,45.5,237.8],[39.5,45.5,91.1],[40,45.5,51],[40.5,45.5,84.3],[41,45.5,51.9],[41.5,45.5,182.7],[42,45.5,45.2],[42.5,45.5,31.7],[43,45.5,23.5],[43.5,45.5,20.5],[44,45.5,10.9],[44.5,45.5,9.6],[45,45.5,6.2],[45.5,45.5,1.3],[46.5,45.5,2.6],[47,45.5,4.4],[47.5,45.5,8.7],[48,45.5,15],[50,45.5,1.7],[51,45.5,1.5],[51.5,45.5,1.3],[58.5,45.5,1.1],[60.5,45.5,2.6],[61,45.5,2.4],[61.5,45.5,1.9],[62,45.5,1.9],[62.5,45.5,1.8],[63,45.5,1.4],[63.5,45.5,1.4],[64,45.5,1.4],[64.5,45.5,1.7],[65,45.5,1.8],[65.5,45.5,1.7],[66,45.5,1.7],[66.5,45.5,2],[67,45.5,2.3],[67.5,45.5,1.1],[68,45.5,1.1],[68.5,45.5,1.1],[69,45.5,1.1],[73.5,45.5,1.1],[74,45.5,1.8],[74.5,45.5,1.6],[75,45.5,1.5],[75.5,45.5,1.2],[76,45.5,1.3],[76.5,45.5,2.6],[77,45.5,3.2],[77.5,45.5,3],[78,45.5,54],[78.5,45.5,7.2],[79,45.5,5.9],[79.5,45.5,6.7],[80,45.5,9.1],[80.5,45.5,9.2],[81,45.5,9.5],[81.5,45.5,15.1],[82,45.5,17.6],[82.5,45.5,10.9],[83,45.5,5.8],[83.5,45.5,6.8],[84,45.5,9.3],[84.5,45.5,27.4],[85,45.5,24.4],[85.5,45.5,14],[86,45.5,14.1],[86.5,45.5,17.8],[87,45.5,26.9],[87.5,45.5,9.1],[88,45.5,4.8],[88.5,45.5,4.8],[89,45.5,4.6],[89.5,45.5,4.3],[90,45.5,7.5],[90.5,45.5,9.7],[91,45.5,4.2],[91.5,45.5,1.5],[92,45.5,1.4],[92.5,45.5,1.3],[101,45.5,1.6],[101.5,45.5,1.9],[102,45.5,1.9],[102.5,45.5,1.9],[103,45.5,1.9],[103.5,45.5,1.1],[114.5,45.5,1.7],[115,45.5,1.6],[115.5,45.5,2],[116,45.5,2.6],[116.5,45.5,2.4],[117,45.5,2.6],[117.5,45.5,3],[118,45.5,3],[118.5,45.5,3],[119,45.5,14.4],[119.5,45.5,23.2],[120,45.5,18.7],[120.5,45.5,19.4],[121,45.5,22.5],[121.5,45.5,33.9],[122,45.5,49.2],[122.5,45.5,64.7],[123,45.5,61.3],[123.5,45.5,94.4],[124,45.5,94.5],[124.5,45.5,223],[125,45.5,170.4],[125.5,45.5,183.2],[126,45.5,243.4],[126.5,45.5,210.1],[127,45.5,132.6],[127.5,45.5,78.7],[128,45.5,69.3],[128.5,45.5,68.5],[129,45.5,54],[129.5,45.5,54.2],[130,45.5,70.4],[130.5,45.5,316.6],[131,45.5,102.9],[131.5,45.5,42],[132,45.5,52.4],[132.5,45.5,52.6],[133,45.5,30],[133.5,45.5,4.1],[134,45.5,2.4],[134.5,45.5,1.7],[135,45.5,1.2],[135.5,45.5,1.1],[140.5,45.5,47.9],[141,45.5,41],[141.5,45.5,32.8],[142,45.5,9.1],[142.5,45.5,15.7],[147.5,45.5,1.5],[148,45.5,1.5],[148.5,45.5,1.5],[-124.5,45,73.9],[-124,45,9.5],[-123.5,45,125.4],[-123,45,62.5],[-122.5,45,3.8],[-122,45,2.6],[-121.5,45,5.7],[-121,45,1.2],[-118,45,5],[-117.5,45,1.2],[-116.5,45,1.3],[-116,45,1.3],[-109.5,45,4.2],[-109,45,5.2],[-108.5,45,2.3],[-108,45,1.4],[-107.5,45,3.4],[-107,45,8.2],[-104.5,45,1.7],[-104,45,5.1],[-103.5,45,1],[-99,45,2.6],[-98.5,45,1.5],[-98,45,1.5],[-97.5,45,12.7],[-97,45,3.3],[-96.5,45,4.2],[-96,45,9.2],[-95.5,45,9],[-95,45,6.7],[-94.5,45,20.6],[-94,45,80.6],[-93.5,45,618.9],[-93,45,101.6],[-92.5,45,14.4],[-92,45,33.2],[-91.5,45,43.6],[-91,45,9.5],[-90.5,45,23.9],[-90,45,57.1],[-89.5,45,12.1],[-89,45,17.9],[-88.5,45,54.9],[-88,45,32.5],[-87.5,45,21.3],[-86.5,45,17.6],[-86,45,45.2],[-85.5,45,19.9],[-85,45,13.2],[-84.5,45,7.4],[-84,45,5.1],[-83.5,45,14.2],[-81.5,45,13],[-81,45,42.9],[-80.5,45,54.5],[-80,45,40.7],[-79.5,45,32.7],[-79,45,9.7],[-78.5,45,5.6],[-78,45,4],[-77.5,45,3.5],[-77,45,4.2],[-76.5,45,18.4],[-76,45,33.6],[-75.5,45,27.6],[-75,45,20.1],[-74.5,45,13.6],[-74,45,18.9],[-73.5,45,75],[-73,45,18.9],[-72.5,45,15.6],[-72,45,6.2],[-71.5,45,5.8],[-71,45,5.4],[-70.5,45,13],[-70,45,32.4],[-69.5,45,17.1],[-69,45,51.3],[-68.5,45,5.6],[-68,45,5],[-67.5,45,8],[-67,45,19.9],[-66.5,45,5.1],[-66,45,11.4],[-65.5,45,8.3],[-65,45,13.1],[-64.5,45,14.8],[-64,45,158.7],[-63.5,45,25.5],[-63,45,4.3],[-62.5,45,2.3],[-62,45,1.4],[-1.5,45,92.1],[-1,45,345.9],[-0.5,45,116.7],[0,45,56],[0.5,45,33.8],[1,45,34],[1.5,45,25.9],[2,45,53.2],[2.5,45,17.6],[3,45,19.7],[3.5,45,15.4],[4,45,33.9],[4.5,45,132.9],[5,45,23.3],[5.5,45,16],[6,45,29.6],[6.5,45,15.2],[7,45,88.6],[7.5,45,205.2],[8,45,130.4],[8.5,45,152.3],[9,45,36.5],[9.5,45,57.2],[10,45,186.1],[10.5,45,371.3],[11,45,274.4],[11.5,45,149.6],[12,45,87],[12.5,45,40.3],[13.5,45,76.2],[14,45,19.8],[14.5,45,20.8],[15,45,10.8],[15.5,45,27.6],[16,45,84],[16.5,45,73.5],[17,45,61.2],[17.5,45,63.8],[18,45,75.9],[18.5,45,85],[19,45,79.1],[19.5,45,98.3],[20,45,99.7],[20.5,45,96.9],[21,45,92.9],[21.5,45,56.8],[22,45,43.8],[22.5,45,97.3],[23,45,77.2],[23.5,45,59.1],[24,45,77.3],[24.5,45,146.6],[25,45,136.5],[25.5,45,176.4],[26,45,224.6],[26.5,45,61.5],[27,45,63.3],[27.5,45,40.4],[28,45,19.8],[28.5,45,33.3],[29,45,6.7],[29.5,45,1.8],[33,45,482.3],[33.5,45,177.1],[34,45,283.9],[34.5,45,52.1],[35,45,65.8],[35.5,45,25],[37,45,188.2],[37.5,45,211.2],[38,45,51.1],[38.5,45,55],[39,45,58.6],[39.5,45,56.6],[40,45,117.4],[40.5,45,79.1],[41,45,96],[41.5,45,101.1],[42,45,36.5],[42.5,45,23.2],[43,45,23.3],[43.5,45,21.1],[44,45,47.1],[44.5,45,14.1],[45,45,14.6],[45.5,45,11],[46,45,4],[46.5,45,8],[47,45,4.4],[49.5,45,1.7],[50,45,1.7],[50.5,45,1.7],[51,45,1.3],[60.5,45,1.9],[61,45,1.9],[61.5,45,1.9],[62,45,1.9],[62.5,45,1.7],[63,45,1.4],[63.5,45,1.5],[64,45,1.6],[64.5,45,1.7],[65,45,31.4],[65.5,45,40.9],[66,45,1.8],[66.5,45,3.1],[67,45,3.4],[67.5,45,1.1],[68,45,1.1],[68.5,45,1.1],[69,45,1.1],[73.5,45,1.2],[74,45,1.3],[74.5,45,1.9],[75,45,4.1],[75.5,45,1.9],[76,45,5.6],[76.5,45,3.5],[77,45,6],[77.5,45,6.1],[78,45,16.4],[78.5,45,25.8],[79,45,11.3],[79.5,45,10.2],[80,45,21.7],[80.5,45,41.7],[81,45,30.6],[81.5,45,33.8],[82,45,25.3],[82.5,45,16.6],[83,45,13],[83.5,45,13.2],[84,45,13.3],[84.5,45,69.7],[85,45,69.3],[85.5,45,18.4],[86,45,42.4],[86.5,45,24.9],[87,45,45.5],[87.5,45,45.8],[88,45,19.3],[88.5,45,17.2],[89,45,14.4],[89.5,45,12.4],[90,45,12.3],[90.5,45,10.5],[91,45,6.6],[91.5,45,2.6],[92,45,2.6],[92.5,45,2.6],[93,45,2.5],[93.5,45,2],[101.5,45,1.8],[102,45,1.9],[102.5,45,1.9],[103,45,1],[112,45,1.1],[112.5,45,1],[113.5,45,1.3],[114,45,1.8],[114.5,45,1.8],[115,45,3.2],[115.5,45,10.2],[116,45,10.5],[116.5,45,3.4],[117,45,3.1],[117.5,45,3.1],[118,45,3.3],[118.5,45,10],[119,45,40.8],[119.5,45,24.3],[120,45,20],[120.5,45,18.7],[121,45,18.9],[121.5,45,21.3],[122,45,35.5],[122.5,45,40.4],[123,45,68.7],[123.5,45,96.9],[124,45,96.5],[124.5,45,155.2],[125,45,200.8],[125.5,45,251.1],[126,45,249.8],[126.5,45,227.3],[127,45,137.3],[127.5,45,111.4],[128,45,66.8],[128.5,45,54.4],[129,45,121.5],[129.5,45,323.4],[130,45,47],[130.5,45,40.9],[131,45,36.5],[131.5,45,7.2],[132,45,11.7],[132.5,45,33.8],[133,45,5.3],[133.5,45,5.9],[134,45,2.4],[134.5,45,2.2],[135,45,3.1],[135.5,45,19.4],[141.5,45,8.3],[142,45,5.8],[142.5,45,10.7],[143,45,9.1],[146,45,5.6],[146.5,45,1.5],[147,45,1.5],[147.5,45,1.5],[-124.5,44.5,20.4],[-124,44.5,6],[-123.5,44.5,102.2],[-123,44.5,26.8],[-122.5,44.5,1.7],[-122,44.5,2.5],[-121.5,44.5,43.2],[-121,44.5,4.3],[-120.5,44.5,1.6],[-119.5,44.5,1.2],[-118,44.5,1.3],[-117.5,44.5,4.9],[-117,44.5,10.7],[-116.5,44.5,1.8],[-111.5,44.5,1.2],[-108,44.5,2.6],[-107,44.5,2.5],[-106,44.5,8.1],[-105.5,44.5,5.8],[-104.5,44.5,1.5],[-104,44.5,10.8],[-103.5,44.5,39.2],[-100.5,44.5,7.5],[-100,44.5,1.1],[-99.5,44.5,1],[-99,44.5,1.5],[-98.5,44.5,7.3],[-98,44.5,1.8],[-97.5,44.5,4.9],[-97,44.5,13.5],[-96.5,44.5,5],[-96,44.5,10.9],[-95.5,44.5,5.8],[-95,44.5,9.2],[-94.5,44.5,24.9],[-94,44.5,33.7],[-93.5,44.5,40.9],[-93,44.5,25.4],[-92.5,44.5,41.1],[-92,44.5,20.4],[-91.5,44.5,14.3],[-91,44.5,9.1],[-90.5,44.5,6.1],[-90,44.5,30.3],[-89.5,44.5,20.4],[-89,44.5,59.3],[-88.5,44.5,151.7],[-88,44.5,59],[-87.5,44.5,23.3],[-87,44.5,16.9],[-86.5,44.5,18.5],[-86,44.5,8.6],[-85.5,44.5,18.3],[-85,44.5,16.2],[-84.5,44.5,14.3],[-84,44.5,13.8],[-83.5,44.5,34.2],[-83,44.5,20.6],[-82,44.5,24.5],[-81.5,44.5,20.8],[-81,44.5,11.7],[-80.5,44.5,24.2],[-80,44.5,106.3],[-79.5,44.5,118.8],[-79,44.5,60.7],[-78.5,44.5,62],[-78,44.5,37.6],[-77.5,44.5,38.4],[-77,44.5,67.5],[-76.5,44.5,41.1],[-76,44.5,22.7],[-75.5,44.5,8.5],[-75,44.5,3.7],[-74.5,44.5,7.8],[-74,44.5,9.2],[-73.5,44.5,61.1],[-73,44.5,28.5],[-72.5,44.5,18.2],[-72,44.5,12.8],[-71.5,44.5,10.3],[-71,44.5,14.6],[-70.5,44.5,54.8],[-70,44.5,40.6],[-69.5,44.5,30.9],[-69,44.5,18.9],[-68.5,44.5,25.4],[-68,44.5,12.4],[-66.5,44.5,10],[-66,44.5,7],[-65.5,44.5,3.2],[-65,44.5,12.6],[-64.5,44.5,21.5],[-64,44.5,41.1],[-1.5,44.5,26.1],[-1,44.5,10.9],[-0.5,44.5,12.9],[0,44.5,39.5],[0.5,44.5,81.1],[1,44.5,65.7],[1.5,44.5,22.5],[2,44.5,38.2],[2.5,44.5,39.7],[3,44.5,20.6],[3.5,44.5,15.1],[4,44.5,73],[4.5,44.5,120],[5,44.5,47.4],[5.5,44.5,17.3],[6,44.5,19.2],[6.5,44.5,6.3],[7,44.5,27.1],[7.5,44.5,73.8],[8,44.5,148.5],[8.5,44.5,1164.7],[9,44.5,382.6],[9.5,44.5,143.2],[10,44.5,117],[10.5,44.5,78.7],[11,44.5,188.3],[11.5,44.5,132.5],[12,44.5,297.5],[12.5,44.5,1036.2],[14,44.5,11.9],[14.5,44.5,61.9],[15,44.5,96.7],[15.5,44.5,49.8],[16,44.5,54.1],[16.5,44.5,78.7],[17,44.5,77.7],[17.5,44.5,86],[18,44.5,92],[18.5,44.5,78.5],[19,44.5,78.1],[19.5,44.5,101.6],[20,44.5,102.9],[20.5,44.5,102.9],[21,44.5,102.9],[21.5,44.5,102.9],[22,44.5,100.5],[22.5,44.5,67.2],[23,44.5,49.2],[23.5,44.5,198],[24,44.5,89.8],[24.5,44.5,70.6],[25,44.5,74.9],[25.5,44.5,129.3],[26,44.5,956.2],[26.5,44.5,64.5],[27,44.5,92.2],[27.5,44.5,43.6],[28,44.5,56.2],[28.5,44.5,473],[33.5,44.5,446],[34,44.5,468.4],[38,44.5,84.8],[38.5,44.5,39.4],[39,44.5,61.4],[39.5,44.5,33.2],[40,44.5,15.9],[40.5,44.5,21.2],[41,44.5,24.3],[41.5,44.5,37.1],[42,44.5,91.8],[42.5,44.5,80],[43,44.5,232.3],[43.5,44.5,44],[44,44.5,25.7],[44.5,44.5,15.3],[45,44.5,12.9],[45.5,44.5,2.4],[46,44.5,4.6],[46.5,44.5,13.4],[47,44.5,15.6],[47.5,44.5,35],[50,44.5,1.7],[50.5,44.5,1.7],[51,44.5,1.3],[60,44.5,1.6],[60.5,44.5,1.6],[61,44.5,1.9],[61.5,44.5,1.9],[62,44.5,1.9],[62.5,44.5,1.5],[63,44.5,1.4],[63.5,44.5,1.6],[64,44.5,1.6],[64.5,44.5,1.7],[65,44.5,1.8],[65.5,44.5,1.8],[66,44.5,2.9],[66.5,44.5,3.5],[67,44.5,3.6],[67.5,44.5,2.2],[68,44.5,1.1],[68.5,44.5,1.1],[69,44.5,1.1],[70,44.5,1.2],[70.5,44.5,2.4],[71,44.5,2],[71.5,44.5,1.1],[72,44.5,1],[73,44.5,1.3],[73.5,44.5,1.1],[74,44.5,3.9],[74.5,44.5,6],[75,44.5,8.8],[75.5,44.5,3.4],[76,44.5,9.8],[76.5,44.5,14.5],[77,44.5,12.2],[77.5,44.5,6.4],[78,44.5,5.3],[78.5,44.5,5.8],[79,44.5,9.8],[79.5,44.5,10.3],[80,44.5,21.3],[80.5,44.5,64.4],[81,44.5,196.3],[81.5,44.5,75.3],[82,44.5,18.6],[82.5,44.5,14],[83,44.5,13.8],[83.5,44.5,13.4],[84,44.5,13.3],[84.5,44.5,21.5],[85,44.5,31.9],[85.5,44.5,82.6],[86,44.5,188.7],[86.5,44.5,26.7],[87,44.5,46.8],[87.5,44.5,42.4],[88,44.5,19.5],[88.5,44.5,17.2],[89,44.5,15],[89.5,44.5,12.4],[90,44.5,7.5],[90.5,44.5,6.2],[91,44.5,5],[91.5,44.5,2.6],[92,44.5,2.6],[92.5,44.5,2.6],[93,44.5,2.6],[93.5,44.5,2.6],[94,44.5,2.3],[94.5,44.5,1.1],[101.5,44.5,1.3],[102,44.5,1.4],[102.5,44.5,1.2],[111.5,44.5,1.1],[112,44.5,1.1],[112.5,44.5,1.1],[113,44.5,1.1],[113.5,44.5,1.2],[114,44.5,1.7],[114.5,44.5,1.8],[115,44.5,3.4],[115.5,44.5,11.5],[116,44.5,11.1],[116.5,44.5,6.5],[117,44.5,7.8],[117.5,44.5,19.2],[118,44.5,35.8],[118.5,44.5,28.4],[119,44.5,51.4],[119.5,44.5,29],[120,44.5,22.4],[120.5,44.5,20.1],[121,44.5,53.3],[121.5,44.5,52.6],[122,44.5,53.8],[122.5,44.5,59.7],[123,44.5,79.7],[123.5,44.5,111.2],[124,44.5,138.6],[124.5,44.5,201.9],[125,44.5,437.5],[125.5,44.5,257],[126,44.5,315.7],[126.5,44.5,319.7],[127,44.5,122.3],[127.5,44.5,99.7],[128,44.5,48],[128.5,44.5,55.3],[129,44.5,56.2],[129.5,44.5,52.3],[130,44.5,41.3],[130.5,44.5,29],[131,44.5,21.6],[131.5,44.5,11.8],[132,44.5,15.4],[132.5,44.5,13.9],[133,44.5,28.8],[133.5,44.5,4],[134,44.5,1.9],[134.5,44.5,4.2],[135,44.5,6.1],[135.5,44.5,3.8],[136,44.5,2],[141,44.5,19.9],[141.5,44.5,11.6],[142,44.5,24.9],[142.5,44.5,12.1],[143,44.5,25.5],[143.5,44.5,26.3],[144,44.5,72.8],[144.5,44.5,18.9],[145,44.5,18.2],[145.5,44.5,5.6],[146,44.5,5.6],[146.5,44.5,2.5],[147,44.5,1.5],[-124.5,44,10],[-124,44,3.7],[-123.5,44,13.4],[-123,44,8],[-122.5,44,2.1],[-122,44,4],[-121.5,44,6.3],[-120,44,1.2],[-119.5,44,1.6],[-117.5,44,5.1],[-117,44,64.6],[-116.5,44,133.5],[-116,44,1.9],[-115,44,1.1],[-114.5,44,4.7],[-114,44,1.5],[-112.5,44,11.4],[-112,44,26.9],[-111.5,44,4],[-111,44,1.4],[-108.5,44,1.8],[-108,44,1.2],[-104.5,44,2.2],[-104,44,3.1],[-103.5,44,3.4],[-103,44,1.4],[-102.5,44,1.1],[-99.5,44,2.5],[-99,44,1.5],[-98.5,44,6.8],[-98,44,4.9],[-97.5,44,5.8],[-97,44,65.2],[-96.5,44,9.2],[-96,44,10.7],[-95.5,44,5.9],[-95,44,9.4],[-94.5,44,11.7],[-94,44,7.4],[-93.5,44,18.9],[-93,44,20.3],[-92.5,44,19.3],[-92,44,11.2],[-91.5,44,53],[-91,44,19.4],[-90.5,44,16.5],[-90,44,18.4],[-89.5,44,17.7],[-89,44,35.1],[-88.5,44,53.3],[-88,44,90.8],[-87,44,18],[-86.5,44,22.4],[-86,44,15.4],[-85.5,44,21.7],[-85,44,37.4],[-84.5,44,53.2],[-84,44,99.3],[-83.5,44,18.2],[-83,44,12.7],[-82,44,23.6],[-81.5,44,13.4],[-81,44,32.5],[-80.5,44,97.1],[-80,44,773.2],[-79.5,44,2020.8],[-79,44,399.7],[-78.5,44,141.4],[-78,44,18.7],[-77.5,44,20.6],[-77,44,8.9],[-76.5,44,21.4],[-76,44,26.5],[-75.5,44,6.5],[-75,44,1.4],[-74.5,44,2.2],[-74,44,8.9],[-73.5,44,22.3],[-73,44,21],[-72.5,44,29.6],[-72,44,18.1],[-71.5,44,28.7],[-71,44,29.4],[-70.5,44,158.5],[-70,44,67.9],[-69.5,44,31],[-69,44,14.1],[-66.5,44,36.4],[-66,44,8.4],[-65.5,44,4.9],[-65,44,2.9],[-8.5,44,267.3],[-8,44,44.6],[-7.5,44,74.3],[-7,44,69.3],[-6.5,44,94.6],[-6,44,691.8],[-5.5,44,48.7],[-4,44,62.7],[-2,44,1007.4],[-1.5,44,80.5],[-1,44,44.2],[-0.5,44,37.1],[0,44,23.6],[0.5,44,33.7],[1,44,352.9],[1.5,44,82.5],[2,44,90.1],[2.5,44,15.5],[3,44,29.9],[3.5,44,215.7],[4,44,178.5],[4.5,44,186],[5,44,182.4],[5.5,44,53.5],[6,44,29.5],[6.5,44,103.7],[7,44,567.6],[7.5,44,211.6],[8,44,336.1],[10,44,459],[10.5,44,277.4],[11,44,457.6],[11.5,44,73.7],[12,44,65.1],[12.5,44,177.7],[13,44,302.6],[13.5,44,586.1],[15,44,287.6],[15.5,44,44.3],[16,44,110.3],[16.5,44,61.4],[17,44,91.9],[17.5,44,92],[18,44,86.8],[18.5,44,69.2],[19,44,69.4],[19.5,44,102.4],[20,44,102.9],[20.5,44,102.9],[21,44,102.9],[21.5,44,102.9],[22,44,90.2],[22.5,44,45.9],[23,44,64.7],[23.5,44,54.9],[24,44,69.3],[24.5,44,76],[25,44,79.6],[25.5,44,84.1],[26,44,108.1],[26.5,44,52.8],[27,44,42.2],[27.5,44,57.9],[28,44,28.3],[28.5,44,130.1],[39,44,112.7],[39.5,44,102.3],[40,44,65.6],[40.5,44,17.4],[41,44,11],[41.5,44,35.8],[42,44,26.4],[42.5,44,90.3],[43,44,45.3],[43.5,44,69],[44,44,72.6],[44.5,44,40],[45,44,26.4],[45.5,44,21],[46,44,15.6],[46.5,44,34.1],[47,44,37.9],[47.5,44,407.1],[50.5,44,1.7],[51,44,85.8],[51.5,44,5.1],[58.5,44,1.6],[59,44,10.8],[59.5,44,1.6],[60,44,1.6],[60.5,44,1.8],[61,44,3.1],[61.5,44,2.6],[62,44,1.7],[62.5,44,1.2],[63,44,1.1],[63.5,44,1.2],[64,44,1.3],[64.5,44,1.4],[65,44,1.5],[65.5,44,2.4],[66,44,3.4],[66.5,44,3.5],[67,44,3.7],[67.5,44,4.6],[68,44,13.9],[68.5,44,30.3],[69,44,1.2],[69.5,44,24.6],[70.5,44,2.6],[71,44,2.7],[71.5,44,12],[72,44,10.1],[72.5,44,7.2],[73,44,5.8],[73.5,44,22.7],[74,44,5.1],[74.5,44,9],[75,44,9.5],[75.5,44,6.9],[76,44,7],[76.5,44,17.9],[77,44,45.7],[77.5,44,24.4],[78,44,11.5],[78.5,44,11.1],[79,44,7.6],[79.5,44,7.5],[80,44,8.7],[80.5,44,31.7],[81,44,71.7],[81.5,44,56.2],[82,44,39.5],[82.5,44,24.5],[83,44,28.1],[83.5,44,27.1],[84,44,20.1],[84.5,44,13.8],[85,44,16],[85.5,44,16.3],[86,44,21],[86.5,44,43.2],[87,44,335.5],[87.5,44,533.4],[88,44,33.5],[88.5,44,27.3],[89,44,15.1],[89.5,44,11.5],[90,44,6.2],[90.5,44,6],[91,44,5.7],[91.5,44,3.6],[92,44,2.9],[92.5,44,3],[93,44,2.8],[93.5,44,2.1],[94,44,1.2],[94.5,44,1.1],[95,44,1.1],[111.5,44,3.3],[112,44,21.3],[112.5,44,2],[113,44,1.7],[113.5,44,1.1],[114,44,1.2],[114.5,44,1.8],[115,44,1.9],[115.5,44,5.3],[116,44,11.4],[116.5,44,12.2],[117,44,13.4],[117.5,44,26.6],[118,44,40.2],[118.5,44,17.3],[119,44,27.3],[119.5,44,26.8],[120,44,22.6],[120.5,44,43.6],[121,44,77.3],[121.5,44,129.8],[122,44,168],[122.5,44,107.9],[123,44,77.9],[123.5,44,141.7],[124,44,211],[124.5,44,228.4],[125,44,508.5],[125.5,44,646.8],[126,44,209.3],[126.5,44,386.3],[127,44,71.6],[127.5,44,59.4],[128,44,42.1],[128.5,44,47],[129,44,38.6],[129.5,44,30.4],[130,44,30.1],[130.5,44,28.9],[131,44,16.8],[131.5,44,65.1],[132,44,9],[132.5,44,8.3],[133,44,4.4],[133.5,44,2.4],[134,44,1.9],[134.5,44,2.2],[135,44,2.1],[135.5,44,2.1],[141,44,10.8],[141.5,44,56.5],[142,44,171.8],[142.5,44,40.2],[143,44,9.8],[143.5,44,63.1],[144,44,33.8],[144.5,44,19.9],[145,44,13.9],[145.5,44,5.6],[146,44,5.6],[146.5,44,5.6],[-124.5,43.5,30],[-124,43.5,4.6],[-123.5,43.5,28.5],[-123,43.5,1.5],[-122.5,43.5,1.1],[-117,43.5,3.1],[-116.5,43.5,8],[-116,43.5,10],[-115.5,43.5,1.1],[-115,43.5,1.8],[-114.5,43.5,1.2],[-114,43.5,1.3],[-113.5,43.5,1.2],[-113,43.5,3.4],[-112.5,43.5,27.5],[-112,43.5,8.8],[-111,43.5,6.1],[-109.5,43.5,1.5],[-109,43.5,1.3],[-108.5,43.5,6.3],[-106.5,43.5,1],[-104,43.5,1],[-103.5,43.5,2.3],[-103,43.5,2.4],[-102.5,43.5,1.9],[-102,43.5,1],[-101.5,43.5,1.8],[-101,43.5,2.1],[-100.5,43.5,1.2],[-100,43.5,2.4],[-99.5,43.5,2],[-99,43.5,2.5],[-98.5,43.5,3.6],[-98,43.5,4.2],[-97.5,43.5,4.8],[-97,43.5,12.7],[-96.5,43.5,13.7],[-96,43.5,9.3],[-95.5,43.5,14.3],[-95,43.5,9.5],[-94.5,43.5,7.2],[-94,43.5,9.9],[-93.5,43.5,23.5],[-93,43.5,11.6],[-92.5,43.5,9],[-92,43.5,11.9],[-91.5,43.5,10.7],[-91,43.5,9.8],[-90.5,43.5,11.1],[-90,43.5,42.6],[-89.5,43.5,145.2],[-89,43.5,48.4],[-88.5,43.5,235.1],[-88,43.5,930.9],[-86.5,43.5,139.2],[-86,43.5,80.5],[-85.5,43.5,41.3],[-85,43.5,30.2],[-84.5,43.5,45.7],[-84,43.5,185],[-83.5,43.5,42.3],[-83,43.5,27.8],[-82.5,43.5,130],[-82,43.5,17.4],[-81.5,43.5,63],[-81,43.5,105.1],[-80.5,43.5,205.1],[-80,43.5,478.5],[-79.5,43.5,345.3],[-79,43.5,179.3],[-78.5,43.5,47.2],[-78,43.5,435.1],[-77.5,43.5,155.1],[-77,43.5,42.3],[-76.5,43.5,212.7],[-76,43.5,46.2],[-75.5,43.5,94.4],[-75,43.5,12.2],[-74.5,43.5,25.4],[-74,43.5,78.1],[-73.5,43.5,19.6],[-73,43.5,13.3],[-72.5,43.5,30.6],[-72,43.5,54.9],[-71.5,43.5,65.6],[-71,43.5,128.1],[-70.5,43.5,213.4],[-66.5,43.5,5.4],[-66,43.5,31.7],[-65.5,43.5,12.1],[-9.5,43.5,57.9],[-9,43.5,76],[-8.5,43.5,244.3],[-8,43.5,39.6],[-7.5,43.5,29.1],[-7,43.5,16.9],[-6.5,43.5,25.6],[-6,43.5,250.3],[-5.5,43.5,22.6],[-5,43.5,15.3],[-4.5,43.5,74.7],[-4,43.5,144],[-3.5,43.5,217.4],[-3,43.5,435.8],[-2.5,43.5,272.9],[-2,43.5,230.4],[-1.5,43.5,47.1],[-1,43.5,44],[-0.5,43.5,118.7],[0,43.5,73.7],[0.5,43.5,34.9],[1,43.5,61.9],[1.5,43.5,49.5],[2,43.5,67.9],[2.5,43.5,45.1],[3,43.5,175.4],[3.5,43.5,283.2],[4,43.5,31.4],[4.5,43.5,118.3],[5,43.5,1348.1],[5.5,43.5,396.8],[6,43.5,145.8],[6.5,43.5,195.4],[9,43.5,10.6],[9.5,43.5,180.2],[10,43.5,468.8],[10.5,43.5,50.5],[11,43.5,72.2],[11.5,43.5,97.3],[12,43.5,133.8],[12.5,43.5,83.6],[13,43.5,112.6],[13.5,43.5,271.5],[15,43.5,28.5],[15.5,43.5,32.7],[16,43.5,188.7],[16.5,43.5,66.5],[17,43.5,120.7],[17.5,43.5,91.3],[18,43.5,62.5],[18.5,43.5,55.4],[19,43.5,54.2],[19.5,43.5,84.3],[20,43.5,102.3],[20.5,43.5,130.9],[21,43.5,112.8],[21.5,43.5,102.9],[22,43.5,102.9],[22.5,43.5,73.3],[23,43.5,46],[23.5,43.5,65.3],[24,43.5,50.6],[24.5,43.5,92.7],[25,43.5,51.5],[25.5,43.5,72.5],[26,43.5,42],[26.5,43.5,65.6],[27,43.5,59.1],[27.5,43.5,180.1],[28,43.5,97.6],[28.5,43.5,28.4],[39.5,43.5,112.7],[40,43.5,35.6],[40.5,43.5,20.9],[41,43.5,27.4],[41.5,43.5,13.3],[42,43.5,8.5],[42.5,43.5,35.9],[43,43.5,74.2],[43.5,43.5,146],[44,43.5,66.4],[44.5,43.5,126],[45,43.5,68.3],[45.5,43.5,290.2],[46,43.5,90.4],[46.5,43.5,103.4],[47,43.5,60.2],[47.5,43.5,426.6],[51,43.5,15.5],[52.5,43.5,24.8],[58.5,43.5,31.8],[59,43.5,12],[59.5,43.5,20.3],[60,43.5,4.9],[60.5,43.5,3.5],[61,43.5,3.9],[61.5,43.5,3.7],[62,43.5,2.2],[65.5,43.5,2.5],[66,43.5,3.4],[66.5,43.5,3.6],[67,43.5,3.7],[67.5,43.5,5.3],[68,43.5,42],[68.5,43.5,15.8],[69,43.5,6.4],[69.5,43.5,4.3],[70,43.5,22],[70.5,43.5,7.6],[71,43.5,14],[71.5,43.5,13.3],[72,43.5,7.4],[72.5,43.5,7.3],[73,43.5,10],[73.5,43.5,11],[74,43.5,31.3],[74.5,43.5,20.2],[75,43.5,11.1],[75.5,43.5,7.9],[76,43.5,14.6],[76.5,43.5,488.2],[77,43.5,121.9],[77.5,43.5,27.7],[78,43.5,11.7],[78.5,43.5,9.1],[79,43.5,6.9],[79.5,43.5,6.9],[80,43.5,7.2],[80.5,43.5,13.6],[81,43.5,15.3],[81.5,43.5,16.8],[82,43.5,19.9],[82.5,43.5,33.7],[83,43.5,30.5],[83.5,43.5,22.3],[84,43.5,16.5],[84.5,43.5,4.9],[85,43.5,5.2],[85.5,43.5,5.4],[86,43.5,9.1],[86.5,43.5,29.1],[87,43.5,21],[87.5,43.5,14],[88,43.5,16],[88.5,43.5,16.8],[89,43.5,18.1],[89.5,43.5,12.5],[90,43.5,5.2],[90.5,43.5,5.2],[91,43.5,5],[91.5,43.5,4.8],[92,43.5,4.8],[92.5,43.5,4.8],[93,43.5,4.8],[93.5,43.5,4.5],[94,43.5,3.2],[94.5,43.5,1.8],[95,43.5,2.5],[95.5,43.5,3.3],[110.5,43.5,2],[111,43.5,5.9],[111.5,43.5,4.2],[112,43.5,3.2],[112.5,43.5,3.2],[113,43.5,3.2],[113.5,43.5,2.2],[114,43.5,1.1],[114.5,43.5,1.7],[115,43.5,4],[115.5,43.5,4.1],[116,43.5,9.1],[116.5,43.5,13],[117,43.5,13.4],[117.5,43.5,13.4],[118,43.5,29.7],[118.5,43.5,32.7],[119,43.5,32.6],[119.5,43.5,36.5],[120,43.5,43.7],[120.5,43.5,51],[121,43.5,47.2],[121.5,43.5,41.5],[122,43.5,37.5],[122.5,43.5,35],[123,43.5,52.9],[123.5,43.5,181.7],[124,43.5,374.7],[124.5,43.5,207.2],[125,43.5,335],[125.5,43.5,270.8],[126,43.5,122.9],[126.5,43.5,74.8],[127,43.5,70.4],[127.5,43.5,46.4],[128,43.5,36.7],[128.5,43.5,32],[129,43.5,138.8],[129.5,43.5,134.3],[130,43.5,29.5],[130.5,43.5,29.3],[131,43.5,17.8],[131.5,43.5,169.9],[132,43.5,198.2],[132.5,43.5,9.4],[133,43.5,19.9],[133.5,43.5,4.2],[134,43.5,3.3],[134.5,43.5,2.1],[135,43.5,2.1],[140,43.5,12.4],[140.5,43.5,91.7],[141,43.5,1502.6],[141.5,43.5,138.3],[142,43.5,30.6],[142.5,43.5,15.7],[143,43.5,24.3],[143.5,43.5,11],[144,43.5,82],[144.5,43.5,15.2],[145,43.5,27.4],[145.5,43.5,68.7],[146,43.5,5.6],[-125,43,1.8],[-124.5,43,3.8],[-124,43,2.5],[-123.5,43,10],[-123,43,5.3],[-122.5,43,1.2],[-115,43,16.5],[-114.5,43,21.3],[-114,43,13.5],[-113.5,43,2],[-113,43,3.6],[-112.5,43,30.6],[-112,43,1.9],[-111.5,43,1.7],[-111,43,2.8],[-109,43,4.2],[-107,43,1.7],[-106.5,43,26.2],[-106,43,1.5],[-105.5,43,3.3],[-103.5,43,2.2],[-103,43,2],[-102.5,43,1.6],[-99,43,1.7],[-98.5,43,2.6],[-98,43,4.6],[-97.5,43,11.5],[-97,43,12.1],[-96.5,43,36.1],[-96,43,8.5],[-95.5,43,10.9],[-95,43,6],[-94.5,43,15.3],[-94,43,8],[-93.5,43,8.4],[-93,43,12.8],[-92.5,43,35.2],[-92,43,12.4],[-91.5,43,9.9],[-91,43,31.8],[-90.5,43,16.9],[-90,43,21.6],[-89.5,43,72.9],[-89,43,61.1],[-88.5,43,132.8],[-88,43,539],[-86.5,43,135.4],[-86,43,230.8],[-85.5,43,46.4],[-85,43,127.7],[-84.5,43,87.1],[-84,43,164.3],[-83.5,43,446.5],[-83,43,244.7],[-82.5,43,73.4],[-82,43,20.5],[-81.5,43,198.6],[-81,43,32.8],[-80.5,43,43],[-80,43,37.4],[-79.5,43,134.7],[-79,43,394.7],[-78.5,43,32.8],[-78,43,40.7],[-77.5,43,40.9],[-77,43,54.8],[-76.5,43,51.5],[-76,43,25.9],[-75.5,43,21.9],[-75,43,18.9],[-74.5,43,40.8],[-74,43,277.3],[-73.5,43,40.8],[-73,43,33.1],[-72.5,43,51.2],[-72,43,130.5],[-71.5,43,447.4],[-71,43,334.5],[-9.5,43,110.3],[-9,43,156.3],[-8.5,43,61.9],[-8,43,44.6],[-7.5,43,23.3],[-7,43,32.5],[-6.5,43,17.5],[-6,43,91.8],[-5.5,43,11.2],[-5,43,10.4],[-4.5,43,12.8],[-4,43,4.6],[-3.5,43,14.3],[-3,43,123.6],[-2.5,43,30.3],[-2,43,137.5],[-1.5,43,7.6],[-1,43,6],[-0.5,43,9],[0,43,8.7],[0.5,43,10.9],[1,43,15],[1.5,43,39.8],[2,43,17.5],[2.5,43,131.3],[3,43,216.2],[6,43,392],[8.5,43,55],[9,43,62.5],[9.5,43,114.7],[10,43,118.1],[10.5,43,112],[11,43,49.9],[11.5,43,41.5],[12,43,69.4],[12.5,43,113.3],[13,43,22.2],[13.5,43,201.7],[14,43,382.5],[15.5,43,28.5],[16,43,28.9],[16.5,43,53.3],[17,43,65.9],[17.5,43,78.9],[18,43,70.6],[18.5,43,48.4],[19,43,47.9],[19.5,43,52.5],[20,43,135.9],[20.5,43,200.3],[21,43,187.3],[21.5,43,126.4],[22,43,98.9],[22.5,43,37.6],[23,43,404],[23.5,43,164.4],[24,43,37.3],[24.5,43,45.4],[25,43,80],[25.5,43,51.9],[26,43,68],[26.5,43,39.3],[27,43,97.7],[27.5,43,60.1],[40.5,43,1828],[41,43,29.7],[41.5,43,69.4],[42,43,42],[42.5,43,18.1],[43,43,11.6],[43.5,43,17.1],[44,43,24.2],[44.5,43,180.2],[45,43,34],[45.5,43,16.7],[46,43,39.4],[46.5,43,34.7],[47,43,76.8],[47.5,43,158.2],[58,43,4.6],[58.5,43,26.4],[59,43,48.4],[59.5,43,48.6],[60,43,7.5],[60.5,43,7.6],[61,43,9.3],[61.5,43,20],[62,43,2.6],[65.5,43,1],[66,43,3.1],[66.5,43,3.4],[67,43,2.9],[67.5,43,2.8],[68,43,2.9],[68.5,43,5.6],[69,43,10.2],[69.5,43,31.2],[70,43,21.5],[70.5,43,12.3],[71,43,150.1],[71.5,43,18.2],[72,43,24.5],[72.5,43,7.7],[73,43,10.6],[73.5,43,47.8],[74,43,62.5],[74.5,43,428.1],[75,43,57.9],[75.5,43,14.7],[76,43,16.2],[76.5,43,27.1],[77,43,28.6],[77.5,43,17.5],[78,43,25.8],[78.5,43,11.8],[79,43,10.5],[79.5,43,7.2],[80,43,10.3],[80.5,43,14.6],[81,43,14.8],[81.5,43,15.7],[82,43,15.6],[82.5,43,12.3],[83,43,12.3],[83.5,43,10.1],[84,43,4.8],[84.5,43,4.6],[85,43,4.6],[85.5,43,4.6],[86,43,4.6],[86.5,43,4.6],[87,43,5],[87.5,43,5.3],[88,43,7.2],[88.5,43,10.8],[89,43,18.1],[89.5,43,8.8],[90,43,5.2],[90.5,43,5.2],[91,43,5.1],[91.5,43,4.8],[92,43,4.8],[92.5,43,4.8],[93,43,4.8],[93.5,43,4.8],[94,43,4.8],[94.5,43,4.8],[95,43,4.8],[95.5,43,4.8],[96,43,2.2],[109.5,43,1.3],[110,43,2.7],[110.5,43,7.1],[111,43,7.7],[111.5,43,7.3],[112,43,4.2],[112.5,43,3.2],[113,43,3.2],[113.5,43,3.7],[114,43,4.8],[114.5,43,9.4],[115,43,9.7],[115.5,43,7.2],[116,43,7.1],[116.5,43,15.1],[117,43,19.2],[117.5,43,46.3],[118,43,101.5],[118.5,43,81.6],[119,43,85.8],[119.5,43,73],[120,43,70.6],[120.5,43,53.7],[121,43,47],[121.5,43,56.9],[122,43,84.8],[122.5,43,101.9],[123,43,152.7],[123.5,43,233.4],[124,43,168.3],[124.5,43,124.9],[125,43,205.2],[125.5,43,229.9],[126,43,154.8],[126.5,43,79.8],[127,43,57.7],[127.5,43,49.1],[128,43,28.9],[128.5,43,35.5],[129,43,66.8],[129.5,43,139.3],[130,43,79.2],[130.5,43,19.6],[131,43,9.9],[131.5,43,1033.5],[132,43,7.2],[132.5,43,198.7],[133,43,4.9],[133.5,43,3.7],[134,43,3.7],[139.5,43,13.9],[140,43,22.3],[140.5,43,36.1],[141,43,235.5],[141.5,43,140.8],[142,43,13.4],[142.5,43,45.7],[143,43,71.8],[143.5,43,9.7],[144,43,264.1],[144.5,43,61.2],[-124.5,42.5,6.9],[-124,42.5,5.6],[-123.5,42.5,30.2],[-123,42.5,65.5],[-122.5,42.5,1.5],[-122,42.5,24.6],[-121.5,42.5,1.2],[-121,42.5,1.6],[-115,42.5,1.2],[-114.5,42.5,2.7],[-114,42.5,3.3],[-113,42.5,1.2],[-112.5,42.5,2.1],[-112,42.5,5.3],[-111.5,42.5,2.4],[-105.5,42.5,1.1],[-105,42.5,2.5],[-104.5,42.5,4.2],[-103,42.5,4.9],[-99,42.5,2.9],[-98.5,42.5,2.5],[-98,42.5,4.5],[-97.5,42.5,17.4],[-97,42.5,7.2],[-96.5,42.5,31],[-96,42.5,5.9],[-95.5,42.5,8.9],[-95,42.5,11.8],[-94.5,42.5,12.1],[-94,42.5,39],[-93.5,42.5,11.8],[-93,42.5,21.2],[-92.5,42.5,36.2],[-92,42.5,48.8],[-91.5,42.5,16.3],[-91,42.5,23.8],[-90.5,42.5,12.5],[-90,42.5,25.9],[-89.5,42.5,115.4],[-89,42.5,59.9],[-88.5,42.5,418.1],[-88,42.5,1126],[-87,42.5,466.2],[-86.5,42.5,75.4],[-86,42.5,121.5],[-85.5,42.5,67.3],[-85,42.5,34.5],[-84.5,42.5,78.2],[-84,42.5,191.4],[-83.5,42.5,1066.5],[-83,42.5,380],[-82.5,42.5,56.6],[-82,42.5,26.2],[-80.5,42.5,517.4],[-80,42.5,40.3],[-79.5,42.5,53.9],[-79,42.5,21.6],[-78.5,42.5,26.2],[-78,42.5,21],[-77.5,42.5,28.9],[-77,42.5,65.3],[-76.5,42.5,68.8],[-76,42.5,68.9],[-75.5,42.5,24.6],[-75,42.5,11.3],[-74.5,42.5,18.4],[-74,42.5,54.7],[-73.5,42.5,45.2],[-73,42.5,229.1],[-72.5,42.5,90.5],[-72,42.5,273],[-71.5,42.5,1023.8],[-71,42.5,641.5],[-70.5,42.5,92.7],[-9.5,42.5,373.7],[-9,42.5,442.4],[-8.5,42.5,54.3],[-8,42.5,86.8],[-7.5,42.5,18.1],[-7,42.5,21.2],[-6.5,42.5,16.7],[-6,42.5,33.5],[-5.5,42.5,10.2],[-5,42.5,21.3],[-4.5,42.5,9.3],[-4,42.5,81.5],[-3.5,42.5,6.8],[-3,42.5,29.6],[-2.5,42.5,69.2],[-2,42.5,61.9],[-1.5,42.5,12.8],[-1,42.5,6.3],[-0.5,42.5,25.5],[0,42.5,11.6],[0.5,42.5,6.5],[1,42.5,13.6],[1.5,42.5,36.7],[2,42.5,42.5],[2.5,42.5,65.1],[3,42.5,86.9],[8.5,42.5,8.3],[9,42.5,14.5],[9.5,42.5,46.5],[10,42.5,237.9],[10.5,42.5,60.6],[11,42.5,67.5],[11.5,42.5,87.8],[12,42.5,247.8],[12.5,42.5,169.1],[13,42.5,64.7],[13.5,42.5,71.2],[14,42.5,247.2],[14.5,42.5,189.2],[15,42.5,120],[15.5,42.5,120],[16,42.5,28.5],[18,42.5,27.7],[18.5,42.5,47.8],[19,42.5,56],[19.5,42.5,73.8],[20,42.5,78],[20.5,42.5,198.2],[21,42.5,241.4],[21.5,42.5,152.8],[22,42.5,63],[22.5,42.5,47.8],[23,42.5,79.4],[23.5,42.5,67.5],[24,42.5,105.4],[24.5,42.5,207.5],[25,42.5,59.5],[25.5,42.5,98.9],[26,42.5,48.6],[26.5,42.5,29.9],[27,42.5,39.9],[27.5,42.5,25.6],[28,42.5,19.8],[33,42.5,27.3],[33.5,42.5,27.3],[34.5,42.5,35.6],[35,42.5,35.6],[41.5,42.5,140.4],[42,42.5,98.6],[42.5,42.5,189.4],[43,42.5,84.7],[43.5,42.5,54.8],[44,42.5,34],[44.5,42.5,12.9],[45,42.5,24.9],[45.5,42.5,28.7],[46,42.5,17],[46.5,42.5,20],[47,42.5,40.5],[47.5,42.5,40.7],[48,42.5,191.8],[57,42.5,1.2],[57.5,42.5,9.8],[58,42.5,21],[58.5,42.5,25],[59,42.5,70.9],[59.5,42.5,153.5],[60,42.5,48],[60.5,42.5,9.1],[61,42.5,9.8],[61.5,42.5,17.5],[63.5,42.5,13.5],[66,42.5,2.8],[66.5,42.5,3.7],[67,42.5,5.6],[67.5,42.5,6.5],[68,42.5,8],[68.5,42.5,25],[69,42.5,75.6],[69.5,42.5,188.3],[70,42.5,30.2],[70.5,42.5,25.2],[71,42.5,16.4],[71.5,42.5,11.2],[72,42.5,11.3],[72.5,42.5,9.9],[73,42.5,9.6],[73.5,42.5,19.6],[74,42.5,26.6],[74.5,42.5,16.8],[75,42.5,12.2],[75.5,42.5,9.1],[76,42.5,31.2],[76.5,42.5,7.2],[77,42.5,7],[77.5,42.5,6.1],[78,42.5,27.4],[78.5,42.5,6.8],[79,42.5,7],[79.5,42.5,6.9],[80,42.5,12.3],[80.5,42.5,14.8],[81,42.5,13],[81.5,42.5,12.8],[82,42.5,12.8],[82.5,42.5,13.6],[83,42.5,26.3],[83.5,42.5,24.8],[84,42.5,6.4],[84.5,42.5,6.3],[85,42.5,18.2],[85.5,42.5,25.9],[86,42.5,30],[86.5,42.5,22.9],[87,42.5,8.6],[87.5,42.5,5.3],[88,42.5,7.2],[88.5,42.5,11.4],[89,42.5,18.1],[89.5,42.5,6.6],[90,42.5,5.2],[90.5,42.5,5.2],[91,42.5,5.2],[91.5,42.5,4.9],[92,42.5,4.8],[92.5,42.5,4.8],[93,42.5,4.8],[93.5,42.5,4.8],[94,42.5,4.8],[94.5,42.5,4.8],[95,42.5,4.8],[95.5,42.5,4.8],[106.5,42.5,1.3],[107,42.5,2.6],[107.5,42.5,5.5],[108,42.5,5.8],[108.5,42.5,5.6],[109,42.5,5.7],[109.5,42.5,5.8],[110,42.5,5.9],[110.5,42.5,6.5],[111,42.5,7.7],[111.5,42.5,7.7],[112,42.5,7.7],[112.5,42.5,7.9],[113,42.5,23.2],[113.5,42.5,24.6],[114,42.5,27.1],[114.5,42.5,39.2],[115,42.5,27.5],[115.5,42.5,21],[116,42.5,23.9],[116.5,42.5,36.5],[117,42.5,51.1],[117.5,42.5,53.3],[118,42.5,139.5],[118.5,42.5,145],[119,42.5,132.1],[119.5,42.5,90.1],[120,42.5,77.3],[120.5,42.5,101.7],[121,42.5,110.3],[121.5,42.5,443.2],[122,42.5,152.2],[122.5,42.5,173.4],[123,42.5,591.7],[123.5,42.5,887.4],[124,42.5,144.2],[124.5,42.5,90.7],[125,42.5,125.5],[125.5,42.5,127.2],[126,42.5,122.4],[126.5,42.5,140.4],[127,42.5,66],[127.5,42.5,46.8],[128,42.5,29.5],[128.5,42.5,36.5],[129,42.5,74.3],[129.5,42.5,160.6],[130,42.5,142.9],[130.5,42.5,75.3],[139,42.5,27.6],[139.5,42.5,17.9],[140,42.5,22.7],[140.5,42.5,212.8],[141,42.5,382.1],[142,42.5,21],[142.5,42.5,21.7],[143,42.5,15.9],[-124.5,42,24.9],[-124,42,3.4],[-123,42,6],[-122.5,42,3.1],[-122,42,1.2],[-121,42,1.8],[-120,42,1.7],[-112.5,42,12.5],[-112,42,40.8],[-111,42,1.9],[-109.5,42,12.6],[-107.5,42,3.9],[-104.5,42,1.5],[-104,42,15.1],[-103.5,42,1.9],[-103,42,1.2],[-99.5,42,1.1],[-99,42,2.3],[-98.5,42,2.8],[-98,42,4.8],[-97.5,42,5.1],[-97,42,7.2],[-96.5,42,10.6],[-96,42,7.4],[-95.5,42,8.3],[-95,42,6.1],[-94.5,42,14.4],[-94,42,168.8],[-93.5,42,28.3],[-93,42,13.7],[-92.5,42,9.7],[-92,42,82.3],[-91.5,42,21.7],[-91,42,68.7],[-90.5,42,52.2],[-90,42,28],[-89.5,42,24.1],[-89,42,46.2],[-88.5,42,564.6],[-88,42,2217],[-87.5,42,529.5],[-87,42,86.5],[-86.5,42,161.1],[-86,42,88.7],[-85.5,42,40.1],[-85,42,34],[-84.5,42,40.9],[-84,42,233.7],[-83.5,42,136.5],[-83,42,89.4],[-82.5,42,810.8],[-82,42,2102.4],[-81.5,42,274.5],[-81,42,54.8],[-80.5,42,42.8],[-80,42,25.6],[-79.5,42,17.6],[-79,42,16.8],[-78.5,42,10.7],[-78,42,6.9],[-77.5,42,14.6],[-77,42,18.6],[-76.5,42,16.6],[-76,42,35.5],[-75.5,42,21.4],[-75,42,26.8],[-74.5,42,83.8],[-74,42,136.4],[-73.5,42,126.8],[-73,42,438.8],[-72.5,42,114.9],[-72,42,116.6],[-71.5,42,554.4],[-71,42,229.1],[-70.5,42,245.2],[-70,42,116.5],[-9,42,198],[-8.5,42,136.5],[-8,42,25.6],[-7.5,42,38.9],[-7,42,22.9],[-6.5,42,9.2],[-6,42,34.5],[-5.5,42,11.4],[-5,42,189.8],[-4.5,42,14.4],[-4,42,21.6],[-3.5,42,8.9],[-3,42,17.1],[-2.5,42,7.1],[-2,42,20],[-1.5,42,92.6],[-1,42,199.7],[-0.5,42,7.7],[0,42,39.1],[0.5,42,79.7],[1,42,26],[1.5,42,165.5],[2,42,448],[2.5,42,210.7],[3,42,229.1],[8.5,42,76.1],[9,42,15.3],[11.5,42,295.8],[12,42,1610.5],[12.5,42,658.2],[13,42,146.6],[13.5,42,79.1],[14,42,47],[14.5,42,77.5],[15,42,82.5],[15.5,42,103.7],[16,42,79.4],[19,42,76.5],[19.5,42,114.7],[20,42,69.1],[20.5,42,110.1],[21,42,112.5],[21.5,42,89.4],[22,42,59.5],[22.5,42,45],[23,42,39.1],[23.5,42,48.9],[24,42,31.7],[24.5,42,45.6],[25,42,68.9],[25.5,42,64.1],[26,42,35.6],[26.5,42,60.7],[27,42,47.6],[27.5,42,45.6],[28,42,62.3],[31.5,42,179.4],[32,42,108.6],[32.5,42,62.6],[33,42,27.3],[33.5,42,27.3],[34,42,29.8],[34.5,42,35.2],[35,42,38.7],[35.5,42,126.3],[36,42,126.3],[41.5,42,241.2],[42,42,67.4],[42.5,42,40.5],[43,42,37.3],[43.5,42,54.2],[44,42,71.5],[44.5,42,606.9],[45,42,111],[45.5,42,65.1],[46,42,60.6],[46.5,42,50],[47,42,14.3],[47.5,42,30.5],[48,42,82.9],[48.5,42,106.4],[57,42,10.3],[57.5,42,14.3],[58,42,21.6],[58.5,42,11],[59,42,15],[59.5,42,86.9],[60,42,157.2],[60.5,42,166.6],[61,42,32.5],[61.5,42,11.4],[64,42,23.6],[64.5,42,8.1],[66,42,1.1],[66.5,42,5],[67,42,5.9],[67.5,42,5.9],[68,42,16.1],[68.5,42,19.5],[69,42,25.2],[69.5,42,63.1],[70,42,24.1],[70.5,42,9.6],[71,42,10.2],[71.5,42,21.4],[72,42,17.8],[72.5,42,18.2],[73,42,12.6],[73.5,42,8.9],[74,42,10],[74.5,42,7],[75,42,6.3],[75.5,42,6.4],[76,42,6.4],[76.5,42,6.6],[77,42,6.9],[77.5,42,6.3],[78,42,6.3],[78.5,42,8.4],[79,42,15.7],[79.5,42,15.3],[80,42,16.4],[80.5,42,16.2],[81,42,13.7],[81.5,42,18.6],[82,42,21.3],[82.5,42,22.8],[83,42,26.5],[83.5,42,24.9],[84,42,6.6],[84.5,42,6.4],[85,42,32.4],[85.5,42,57.3],[86,42,34.9],[86.5,42,10.2],[87,42,8.6],[87.5,42,4.6],[88,42,5.5],[88.5,42,7.1],[89,42,15.8],[89.5,42,7.5],[90,42,5.2],[90.5,42,5.2],[91,42,5.2],[91.5,42,5],[92,42,4.8],[92.5,42,4.8],[93,42,4.8],[93.5,42,4.8],[94,42,4.8],[94.5,42,5.6],[95,42,4.5],[95.5,42,1.7],[103.5,42,1.1],[104,42,1.4],[105,42,1],[105.5,42,1.9],[106,42,2.2],[106.5,42,2.2],[107,42,2.4],[107.5,42,6.2],[108,42,6.5],[108.5,42,6.5],[109,42,6.3],[109.5,42,7.3],[110,42,6.2],[110.5,42,5.9],[111,42,6.8],[111.5,42,7.7],[112,42,22.6],[112.5,42,38.6],[113,42,53.1],[113.5,42,61.5],[114,42,64.1],[114.5,42,65.6],[115,42,51.4],[115.5,42,47.5],[116,42,38.9],[116.5,42,45.9],[117,42,63.8],[117.5,42,62.7],[118,42,92],[118.5,42,132.4],[119,42,126.5],[119.5,42,114.9],[120,42,300.9],[120.5,42,126],[121,42,148.2],[121.5,42,235.1],[122,42,255.7],[122.5,42,273.6],[123,42,1071.4],[123.5,42,1121.5],[124,42,87.2],[124.5,42,67.2],[125,42,69.9],[125.5,42,127],[126,42,212.6],[126.5,42,97.7],[127,42,51.2],[127.5,42,36.2],[128,42,22.7],[128.5,42,47.3],[129,42,115.7],[129.5,42,165],[130,42,196.5],[139,42,38],[139.5,42,37.1],[140,42,30.8],[140.5,42,332.4],[141,42,74.9],[143,42,22.1],[-124.5,41.5,5.8],[-124,41.5,2.8],[-123.5,41.5,1.2],[-123,41.5,2.6],[-122.5,41.5,5.9],[-122,41.5,1.5],[-120,41.5,1.7],[-116,41.5,1.7],[-112.5,41.5,142.4],[-112,41.5,100.8],[-111.5,41.5,4.5],[-111,41.5,3.4],[-110.5,41.5,2.4],[-109.5,41.5,2],[-106,41.5,13.2],[-105,41.5,32.2],[-104.5,41.5,1.6],[-104,41.5,1.7],[-103.5,41.5,1.9],[-103,41.5,3.1],[-102.5,41.5,1.1],[-102,41.5,3.4],[-101.5,41.5,1.5],[-101,41.5,12],[-100.5,41.5,1.1],[-100,41.5,2.9],[-99.5,41.5,1.8],[-99,41.5,3.5],[-98.5,41.5,4.1],[-98,41.5,4.8],[-97.5,41.5,17.7],[-97,41.5,11.5],[-96.5,41.5,164.2],[-96,41.5,147.8],[-95.5,41.5,9.7],[-95,41.5,5.7],[-94.5,41.5,10],[-94,41.5,19.9],[-93.5,41.5,13.5],[-93,41.5,17.6],[-92.5,41.5,15.9],[-92,41.5,13.4],[-91.5,41.5,22.2],[-91,41.5,37.7],[-90.5,41.5,32.2],[-90,41.5,13.9],[-89.5,41.5,28.2],[-89,41.5,30.4],[-88.5,41.5,38.6],[-88,41.5,106.1],[-87.5,41.5,84.2],[-87,41.5,22.3],[-86.5,41.5,33.1],[-86,41.5,47.6],[-85.5,41.5,162.8],[-85,41.5,30.4],[-84.5,41.5,32.9],[-84,41.5,57],[-83.5,41.5,50.1],[-83,41.5,67],[-82.5,41.5,139.7],[-82,41.5,621],[-81.5,41.5,208.3],[-81,41.5,197.1],[-80.5,41.5,69.8],[-80,41.5,31.8],[-79.5,41.5,20.4],[-79,41.5,30.2],[-78.5,41.5,12.3],[-78,41.5,8.7],[-77.5,41.5,40.6],[-77,41.5,39.6],[-76.5,41.5,44.7],[-76,41.5,179.6],[-75.5,41.5,47.8],[-75,41.5,72.7],[-74.5,41.5,269.6],[-74,41.5,415.7],[-73.5,41.5,491.8],[-73,41.5,421.1],[-72.5,41.5,175.2],[-72,41.5,131.1],[-71.5,41.5,448.3],[-71,41.5,56],[-70.5,41.5,72.1],[-70,41.5,34.9],[-9,41.5,1293.5],[-8.5,41.5,373],[-8,41.5,85.9],[-7.5,41.5,31],[-7,41.5,14.2],[-6.5,41.5,9.2],[-6,41.5,22.7],[-5.5,41.5,15.8],[-5,41.5,29.1],[-4.5,41.5,17.4],[-4,41.5,7.8],[-3.5,41.5,3.4],[-3,41.5,5.1],[-2.5,41.5,3.4],[-2,41.5,15.4],[-1.5,41.5,11.8],[-1,41.5,17.6],[-0.5,41.5,15],[0,41.5,15],[0.5,41.5,24.5],[1,41.5,195.9],[1.5,41.5,331.5],[2,41.5,6239.5],[8,41.5,207],[8.5,41.5,14.7],[9,41.5,46.2],[9.5,41.5,73.7],[12.5,41.5,403],[13,41.5,152.6],[13.5,41.5,178.1],[14,41.5,267.5],[14.5,41.5,140.3],[15,41.5,71.5],[15.5,41.5,118.7],[16,41.5,259.1],[16.5,41.5,868.4],[17,41.5,477.1],[19,41.5,305.1],[19.5,41.5,315.4],[20,41.5,136.6],[20.5,41.5,77],[21,41.5,57.5],[21.5,41.5,45.2],[22,41.5,29.6],[22.5,41.5,58.1],[23,41.5,46],[23.5,41.5,46.9],[24,41.5,45.7],[24.5,41.5,46.9],[25,41.5,58.1],[25.5,41.5,31.6],[26,41.5,29.8],[26.5,41.5,70.2],[27,41.5,79.8],[27.5,41.5,89.9],[28,41.5,1483.6],[28.5,41.5,1976.3],[29,41.5,1968.5],[29.5,41.5,1558.4],[30,41.5,280.1],[30.5,41.5,166.3],[31,41.5,93.4],[31.5,41.5,166.9],[32,41.5,127.6],[32.5,41.5,73.2],[33,41.5,28.1],[33.5,41.5,27.5],[34,41.5,32.3],[34.5,41.5,46.4],[35,41.5,83],[35.5,41.5,126.2],[36,41.5,126.2],[36.5,41.5,126.3],[37,41.5,144],[37.5,41.5,150.5],[38.5,41.5,77.1],[39,41.5,174.8],[39.5,41.5,196.2],[40,41.5,97.5],[40.5,41.5,96.9],[41,41.5,62.1],[41.5,41.5,32.1],[42,41.5,25.6],[42.5,41.5,29.3],[43,41.5,36.4],[43.5,41.5,59],[44,41.5,67],[44.5,41.5,105.4],[45,41.5,74.1],[45.5,41.5,53.7],[46,41.5,33.2],[46.5,41.5,35.2],[47,41.5,60.9],[47.5,41.5,37.2],[48,41.5,48.1],[48.5,41.5,59.6],[49,41.5,47.9],[56.5,41.5,5.5],[57,41.5,10.2],[57.5,41.5,10.6],[58,41.5,10.5],[58.5,41.5,14.3],[59,41.5,13.9],[59.5,41.5,9.1],[60,41.5,88.7],[60.5,41.5,121.6],[61,41.5,34],[61.5,41.5,21.4],[62,41.5,14.6],[62.5,41.5,5.9],[63.5,41.5,2.7],[64,41.5,3.6],[64.5,41.5,3.5],[65,41.5,1.4],[65.5,41.5,1.1],[66,41.5,1.4],[66.5,41.5,5.4],[67,41.5,7.1],[67.5,41.5,7],[68,41.5,25.4],[68.5,41.5,82.6],[69,41.5,1462.2],[69.5,41.5,161.6],[70,41.5,79.8],[70.5,41.5,41.5],[71,41.5,81.7],[71.5,41.5,319.1],[72,41.5,121],[72.5,41.5,51.1],[73,41.5,70.5],[73.5,41.5,28.6],[74,41.5,5.1],[74.5,41.5,4.7],[75,41.5,4.5],[75.5,41.5,13.3],[76,41.5,10.6],[76.5,41.5,3],[77,41.5,3.6],[77.5,41.5,4.6],[78,41.5,4.9],[78.5,41.5,14.4],[79,41.5,23.2],[79.5,41.5,22.5],[80,41.5,25],[80.5,41.5,16.8],[81,41.5,25.4],[81.5,41.5,29.7],[82,41.5,16.2],[82.5,41.5,7.4],[83,41.5,15.2],[83.5,41.5,21.8],[84,41.5,7.3],[84.5,41.5,3.7],[85,41.5,8.9],[85.5,41.5,15.7],[86,41.5,2.9],[86.5,41.5,1.8],[87,41.5,1.8],[87.5,41.5,1.8],[88,41.5,1.8],[88.5,41.5,1.8],[89,41.5,2.3],[89.5,41.5,1.9],[90,41.5,1.5],[90.5,41.5,2],[91,41.5,1.8],[91.5,41.5,1.4],[92,41.5,1.7],[92.5,41.5,2.4],[93,41.5,3.8],[93.5,41.5,5],[94,41.5,7.3],[94.5,41.5,7.2],[95,41.5,4.4],[95.5,41.5,3.4],[104,41.5,1.7],[104.5,41.5,1.9],[105,41.5,2],[105.5,41.5,2.2],[106,41.5,2.5],[106.5,41.5,13.4],[107,41.5,103.2],[107.5,41.5,102.2],[108,41.5,62.5],[108.5,41.5,31.2],[109,41.5,31.8],[109.5,41.5,34],[110,41.5,32.7],[110.5,41.5,30.1],[111,41.5,29.8],[111.5,41.5,192.5],[112,41.5,71.7],[112.5,41.5,51],[113,41.5,182.3],[113.5,41.5,71.1],[114,41.5,67.2],[114.5,41.5,96.8],[115,41.5,55.5],[115.5,41.5,48.1],[116,41.5,45.3],[116.5,41.5,52],[117,41.5,61.7],[117.5,41.5,201],[118,41.5,126.1],[118.5,41.5,138.9],[119,41.5,171.6],[119.5,41.5,173.6],[120,41.5,159.4],[120.5,41.5,279.1],[121,41.5,501.3],[121.5,41.5,199.8],[122,41.5,436.1],[122.5,41.5,540],[123,41.5,910.7],[123.5,41.5,429.1],[124,41.5,89.3],[124.5,41.5,69],[125,41.5,75.9],[125.5,41.5,67.5],[126,41.5,66.5],[126.5,41.5,77.4],[127,41.5,44.3],[127.5,41.5,33.1],[128,41.5,119.7],[128.5,41.5,55.9],[129,41.5,82.5],[129.5,41.5,83.5],[139,41.5,38],[139.5,41.5,38],[140,41.5,43.6],[140.5,41.5,34.8],[141,41.5,74.6],[-124.5,41,77.5],[-124,41,5.8],[-123.5,41,1.4],[-123,41,2.7],[-122.5,41,48.7],[-122,41,3],[-121.5,41,1.9],[-121,41,2.1],[-120,41,1.7],[-118,41,1.6],[-117.5,41,2.5],[-116,41,7],[-115.5,41,2.9],[-112.5,41,119.5],[-112,41,387.3],[-111.5,41,6.3],[-111,41,1.3],[-110,41,2.6],[-109.5,41,2.3],[-108,41,3.1],[-107.5,41,2.1],[-107,41,2.4],[-106,41,1.6],[-105.5,41,61.9],[-105,41,6.6],[-103.5,41,7.3],[-103,41,1.8],[-102.5,41,2],[-102,41,1.5],[-101.5,41,1.2],[-101,41,1.2],[-100.5,41,3.5],[-100,41,8],[-99.5,41,16.1],[-99,41,6.3],[-98.5,41,36.5],[-98,41,8.8],[-97.5,41,9.1],[-97,41,109.3],[-96.5,41,8.3],[-96,41,12.3],[-95.5,41,10.6],[-95,41,5.3],[-94.5,41,3.8],[-94,41,5.1],[-93.5,41,4.5],[-93,41,8.7],[-92.5,41,9.8],[-92,41,11.9],[-91.5,41,28.5],[-91,41,12],[-90.5,41,32.6],[-90,41,112],[-89.5,41,39.7],[-89,41,32.6],[-88.5,41,8.7],[-88,41,11.1],[-87.5,41,11.5],[-87,41,21.8],[-86.5,41,39.3],[-86,41,44.8],[-85.5,41,28.8],[-85,41,32.9],[-84.5,41,66],[-84,41,27.9],[-83.5,41,39.2],[-83,41,68.7],[-82.5,41,46.9],[-82,41,103.2],[-81.5,41,171.4],[-81,41,70.1],[-80.5,41,181.2],[-80,41,151.1],[-79.5,41,38.2],[-79,41,29.3],[-78.5,41,51.4],[-78,41,65.4],[-77.5,41,25.5],[-77,41,63.9],[-76.5,41,74],[-76,41,119.1],[-75.5,41,241.7],[-75,41,241.2],[-74.5,41,2045.5],[-74,41,5920.4],[-73.5,41,1148.2],[-73,41,324.3],[-72.5,41,110.6],[-9,41,368.3],[-8.5,41,119.6],[-8,41,82.5],[-7.5,41,34.8],[-7,41,12.7],[-6.5,41,10.1],[-6,41,88.4],[-5.5,41,12.9],[-5,41,28.1],[-4.5,41,76.2],[-4,41,602.7],[-3.5,41,95.2],[-3,41,6.3],[-2.5,41,2.3],[-2,41,4],[-1.5,41,6.7],[-1,41,5.2],[-0.5,41,9.7],[0,41,26],[0.5,41,79.3],[8,41,166.7],[8.5,41,61.5],[9,41,29.9],[9.5,41,45.2],[12.5,41,316.3],[13,41,370.2],[13.5,41,1022.8],[14,41,2924.7],[14.5,41,655.1],[15,41,83.7],[15.5,41,87.6],[16,41,60],[16.5,41,138.6],[17,41,246.3],[17.5,41,220.2],[18,41,260.5],[19,41,172.2],[19.5,41,191.2],[20,41,88.8],[20.5,41,96.3],[21,41,44],[21.5,41,37.2],[22,41,80.1],[22.5,41,447.4],[23,41,47.2],[23.5,41,30.6],[24,41,81.8],[24.5,41,50.8],[25,41,25],[25.5,41,61.6],[26,41,51.6],[26.5,41,70.5],[27,41,96.3],[27.5,41,77.9],[28.5,41,702.9],[29,41,593.3],[29.5,41,362.6],[30,41,227.9],[30.5,41,134.9],[31,41,51.7],[31.5,41,51.7],[32,41,53.8],[32.5,41,69.8],[33,41,30.4],[33.5,41,29.9],[34,41,42.9],[34.5,41,47],[35,41,53.9],[35.5,41,70.7],[36,41,73.4],[36.5,41,106.1],[37,41,130.3],[37.5,41,148.4],[38,41,91.5],[38.5,41,71.6],[39,41,109],[39.5,41,160.2],[40,41,174.4],[40.5,41,80.9],[41,41,42.8],[41.5,41,29.3],[42,41,36.3],[42.5,41,30.3],[43,41,30.9],[43.5,41,90.2],[44,41,88.9],[44.5,41,93.4],[45,41,63.7],[45.5,41,78.3],[46,41,204.1],[46.5,41,81.8],[47,41,101],[47.5,41,73.5],[48,41,42.8],[48.5,41,34.7],[49,41,30.1],[49.5,41,923.3],[50,41,957.7],[56.5,41,4.5],[57,41,10.5],[57.5,41,9.3],[58,41,14.6],[58.5,41,12.5],[59,41,10.8],[59.5,41,7.4],[60,41,4.9],[60.5,41,2.9],[61,41,2.9],[61.5,41,3.1],[62,41,40.3],[62.5,41,17],[63,41,8.8],[63.5,41,13.9],[64,41,23.2],[64.5,41,32],[65,41,16.1],[65.5,41,8.2],[66,41,9],[66.5,41,9.8],[67,41,8.6],[67.5,41,34.1],[68,41,106.5],[68.5,41,202.3],[69,41,141.7],[69.5,41,147.4],[70,41,63.5],[70.5,41,214.3],[71,41,242.1],[71.5,41,387.5],[72,41,660.3],[72.5,41,316.7],[73,41,96.1],[73.5,41,39.3],[74,41,18.3],[74.5,41,3.9],[75,41,2.6],[75.5,41,2.5],[76,41,2.5],[76.5,41,9.2],[77,41,10.4],[77.5,41,5],[78,41,3.9],[78.5,41,4.2],[79,41,6.2],[79.5,41,22.7],[80,41,22.7],[80.5,41,28.3],[81,41,32.6],[81.5,41,26.3],[82,41,6.7],[82.5,41,6.6],[83,41,6.6],[83.5,41,7.2],[84,41,3.5],[84.5,41,1.8],[85,41,1.8],[85.5,41,1.8],[86,41,1.8],[86.5,41,1.8],[87,41,1.8],[87.5,41,1.8],[88,41,1.7],[88.5,41,1.5],[89,41,1.1],[93,41,1.4],[93.5,41,5.9],[94,41,8.3],[94.5,41,7.5],[95,41,4.4],[95.5,41,4.4],[96,41,4.4],[96.5,41,4.6],[97,41,9.3],[97.5,41,10.1],[98,41,8.2],[98.5,41,4.7],[99,41,8.3],[99.5,41,9],[100,41,3.5],[104.5,41,1.9],[105,41,2],[105.5,41,2],[106,41,10.9],[106.5,41,61],[107,41,120.5],[107.5,41,37.3],[108,41,16.2],[108.5,41,27.6],[109,41,86],[109.5,41,396.2],[110,41,335.9],[110.5,41,115.9],[111,41,127.8],[111.5,41,354.9],[112,41,140.2],[112.5,41,61.9],[113,41,81.7],[113.5,41,83.6],[114,41,116.2],[114.5,41,358.5],[115,41,238.4],[115.5,41,90.1],[116,41,106.9],[116.5,41,160.2],[117,41,145.4],[117.5,41,129.6],[118,41,115.2],[118.5,41,132.4],[119,41,166.2],[119.5,41,181.5],[120,41,234.5],[120.5,41,319],[121,41,202.8],[121.5,41,172.4],[122,41,598],[122.5,41,440.9],[123,41,182.7],[123.5,41,104],[124,41,94.3],[124.5,41,54.9],[125,41,52.3],[125.5,41,51.6],[126,41,55.3],[126.5,41,78.2],[127,41,77.6],[127.5,41,45.9],[128,41,36.3],[128.5,41,114.5],[129,41,144.8],[129.5,41,158.6],[139.5,41,22.4],[140,41,170.2],[140.5,41,243],[141,41,170.8],[141.5,41,1139.2],[-124.5,40.5,5.2],[-124,40.5,4.7],[-123,40.5,1.7],[-122.5,40.5,26.9],[-122,40.5,2.2],[-121.5,40.5,4.2],[-121,40.5,6.8],[-120.5,40.5,4.7],[-120,40.5,1.7],[-116,40.5,1.5],[-112.5,40.5,7.8],[-112,40.5,185.6],[-111.5,40.5,3.7],[-110.5,40.5,3.8],[-110,40.5,4.2],[-109.5,40.5,1.5],[-107.5,40.5,1.3],[-107,40.5,5],[-106.5,40.5,1.5],[-106,40.5,6.2],[-105.5,40.5,123.3],[-105,40.5,68.1],[-104.5,40.5,2.7],[-104,40.5,10.5],[-103.5,40.5,1.5],[-103,40.5,1.7],[-102.5,40.5,1.7],[-102,40.5,1.2],[-101.5,40.5,1.3],[-101,40.5,5],[-100.5,40.5,1.9],[-100,40.5,2.4],[-99.5,40.5,5.3],[-99,40.5,3.4],[-98.5,40.5,3.5],[-98,40.5,3.6],[-97.5,40.5,5],[-97,40.5,10.2],[-96.5,40.5,3.8],[-96,40.5,7.1],[-95.5,40.5,4.3],[-95,40.5,10.4],[-94.5,40.5,5.4],[-94,40.5,6.6],[-93.5,40.5,4.4],[-93,40.5,11.8],[-92.5,40.5,4.9],[-92,40.5,7],[-91.5,40.5,16],[-91,40.5,14.7],[-90.5,40.5,11.4],[-90,40.5,12.8],[-89.5,40.5,25.6],[-89,40.5,35.5],[-88.5,40.5,76.6],[-88,40.5,35.3],[-87.5,40.5,15.3],[-87,40.5,80.8],[-86.5,40.5,71.3],[-86,40.5,78.3],[-85.5,40.5,63.1],[-85,40.5,32.3],[-84.5,40.5,58.1],[-84,40.5,36.9],[-83.5,40.5,164.6],[-83,40.5,155.4],[-82.5,40.5,55.5],[-82,40.5,34],[-81.5,40.5,27.6],[-81,40.5,92.4],[-80.5,40.5,216.6],[-80,40.5,409],[-79.5,40.5,53.6],[-79,40.5,70.6],[-78.5,40.5,38],[-78,40.5,22.3],[-77.5,40.5,67.9],[-77,40.5,207.2],[-76.5,40.5,205.2],[-76,40.5,239.7],[-75.5,40.5,744.8],[-75,40.5,451.5],[-74.5,40.5,545.5],[-74,40.5,1192.1],[-9,40.5,119.1],[-8.5,40.5,122.2],[-8,40.5,53.6],[-7.5,40.5,32.1],[-7,40.5,14.2],[-6.5,40.5,25],[-6,40.5,29.5],[-5.5,40.5,15.5],[-5,40.5,18.7],[-4.5,40.5,42.3],[-4,40.5,1408.3],[-3.5,40.5,147],[-3,40.5,7.3],[-2.5,40.5,12.1],[-2,40.5,13.2],[-1.5,40.5,16.3],[-1,40.5,4.5],[-0.5,40.5,40.6],[0,40.5,65.5],[0.5,40.5,225.9],[3.5,40.5,113.8],[4,40.5,28.7],[8,40.5,34.1],[8.5,40.5,36.5],[9,40.5,43.2],[9.5,40.5,28.8],[14.5,40.5,215.7],[15,40.5,83.9],[15.5,40.5,63.1],[16,40.5,34.9],[16.5,40.5,81.6],[17,40.5,509.2],[17.5,40.5,193.9],[18,40.5,307.3],[18.5,40.5,69],[19,40.5,100.7],[19.5,40.5,82.6],[20,40.5,42.4],[20.5,40.5,18.4],[21,40.5,19.9],[21.5,40.5,46.6],[22,40.5,45.1],[22.5,40.5,151.7],[23,40.5,47],[23.5,40.5,24.3],[24,40.5,6.4],[25,40.5,18.8],[25.5,40.5,35.1],[26,40.5,46.6],[26.5,40.5,46.6],[27,40.5,47.7],[27.5,40.5,72.5],[28,40.5,162.1],[28.5,40.5,195.4],[29,40.5,195.4],[29.5,40.5,117],[30,40.5,66.3],[30.5,40.5,67.4],[31,40.5,116.1],[31.5,40.5,118.2],[32,40.5,139.5],[32.5,40.5,153.7],[33,40.5,129.6],[33.5,40.5,78.9],[34,40.5,47.6],[34.5,40.5,47.1],[35,40.5,49.2],[35.5,40.5,72.1],[36,40.5,84.9],[36.5,40.5,71.1],[37,40.5,55.5],[37.5,40.5,52.6],[38,40.5,47.5],[38.5,40.5,63.4],[39,40.5,27.6],[39.5,40.5,27.3],[40,40.5,32],[40.5,40.5,36.8],[41,40.5,38],[41.5,40.5,38],[42,40.5,35.8],[42.5,40.5,31],[43,40.5,32.5],[43.5,40.5,105],[44,40.5,388.2],[44.5,40.5,427],[45,40.5,72.4],[45.5,40.5,58.1],[46,40.5,32.5],[46.5,40.5,64.4],[47,40.5,104.9],[47.5,40.5,65.1],[48,40.5,57.3],[48.5,40.5,56.3],[49,40.5,157.7],[49.5,40.5,795],[50,40.5,957.7],[50.5,40.5,957.7],[52.5,40.5,38.7],[53,40.5,8.1],[55,40.5,1.3],[55.5,40.5,1.5],[56,40.5,2.1],[56.5,40.5,2.3],[57,40.5,7.9],[57.5,40.5,9.4],[58,40.5,10.7],[58.5,40.5,9.8],[59,40.5,7.5],[59.5,40.5,7],[60,40.5,6.2],[60.5,40.5,2.9],[61,40.5,3.1],[61.5,40.5,4.5],[62,40.5,8.3],[62.5,40.5,18.5],[63,40.5,18.7],[63.5,40.5,17.6],[64,40.5,30],[64.5,40.5,67.3],[65,40.5,124.9],[65.5,40.5,73.4],[66,40.5,80],[66.5,40.5,62.1],[67,40.5,29.9],[67.5,40.5,140],[68,40.5,70.5],[68.5,40.5,131.5],[69,40.5,181.3],[69.5,40.5,217.7],[70,40.5,124.3],[70.5,40.5,188.1],[71,40.5,172.2],[71.5,40.5,351.5],[72,40.5,101.3],[72.5,40.5,72.9],[73,40.5,64.9],[73.5,40.5,8.8],[74,40.5,12],[74.5,40.5,6],[75,40.5,2.4],[75.5,40.5,4.4],[76,40.5,12.9],[76.5,40.5,16.6],[77,40.5,16.5],[77.5,40.5,14.7],[78,40.5,9],[78.5,40.5,11.9],[79,40.5,12.8],[79.5,40.5,12.3],[80,40.5,19.8],[80.5,40.5,19.8],[81,40.5,30.3],[81.5,40.5,32.7],[82,40.5,8],[82.5,40.5,6.6],[83,40.5,6.6],[83.5,40.5,6.5],[84,40.5,1.4],[84.5,40.5,1],[85,40.5,1],[85.5,40.5,1],[86,40.5,1],[92.5,40.5,1.6],[93,40.5,8.3],[93.5,40.5,8.3],[94,40.5,8.3],[94.5,40.5,8.2],[95,40.5,5.5],[95.5,40.5,4.2],[96,40.5,4.4],[96.5,40.5,8.9],[97,40.5,14],[97.5,40.5,14],[98,40.5,32.2],[98.5,40.5,16.1],[99,40.5,9.2],[99.5,40.5,6.1],[104.5,40.5,1.7],[105,40.5,1.9],[105.5,40.5,1.9],[106,40.5,1.9],[106.5,40.5,12.4],[107,40.5,7.9],[107.5,40.5,6.7],[108,40.5,6.7],[108.5,40.5,6.7],[109,40.5,38.8],[109.5,40.5,42.6],[110,40.5,40.7],[110.5,40.5,58.6],[111,40.5,77.4],[111.5,40.5,47.8],[112,40.5,53.9],[112.5,40.5,211.2],[113,40.5,569.9],[113.5,40.5,144.5],[114,40.5,130.6],[114.5,40.5,131.9],[115,40.5,125.6],[115.5,40.5,294.6],[116,40.5,2307.4],[116.5,40.5,575.7],[117,40.5,416.3],[117.5,40.5,353.7],[118,40.5,361.6],[118.5,40.5,342.9],[119,40.5,202.9],[119.5,40.5,351.2],[120,40.5,314],[120.5,40.5,222.9],[121.5,40.5,311.4],[122,40.5,302.8],[122.5,40.5,242.8],[123,40.5,132.2],[123.5,40.5,144.9],[124,40.5,542.2],[124.5,40.5,165.5],[125,40.5,74.5],[125.5,40.5,79.8],[126,40.5,67.1],[126.5,40.5,73.5],[127,40.5,109.6],[127.5,40.5,120],[128,40.5,192.6],[128.5,40.5,221.8],[129,40.5,172.8],[139.5,40.5,81.8],[140,40.5,63.2],[140.5,40.5,62.8],[141,40.5,83.7],[141.5,40.5,106.3],[-124.5,40,2.1],[-124,40,2.6],[-123.5,40,2.2],[-123,40,1.1],[-122.5,40,16],[-122,40,65.6],[-121.5,40,6],[-121,40,3.6],[-120.5,40,2.1],[-120,40,98],[-119.5,40,5.4],[-119,40,2.1],[-112.5,40,1.7],[-112,40,6.9],[-111.5,40,3.1],[-111,40,6.9],[-110.5,40,1],[-109,40,1],[-108.5,40,1],[-108,40,5],[-107.5,40,7.1],[-107,40,8.6],[-106.5,40,9],[-106,40,11.1],[-105.5,40,420],[-105,40,467.1],[-104.5,40,3.5],[-104,40,2.1],[-103,40,1.1],[-102.5,40,1.3],[-102,40,1.1],[-101.5,40,1],[-101,40,1.5],[-100,40,2.7],[-99.5,40,2.6],[-99,40,2.4],[-98.5,40,1.8],[-98,40,5.6],[-97.5,40,2.6],[-97,40,5.3],[-96.5,40,3.6],[-96,40,7.2],[-95.5,40,10.9],[-95,40,45.3],[-94.5,40,13.1],[-94,40,8.8],[-93.5,40,6.2],[-93,40,5.3],[-92.5,40,7.4],[-92,40,7.5],[-91.5,40,36.4],[-91,40,9.4],[-90.5,40,19.3],[-90,40,79.9],[-89.5,40,20.6],[-89,40,50.5],[-88.5,40,17.9],[-88,40,13.2],[-87.5,40,30],[-87,40,28.8],[-86.5,40,460.3],[-86,40,87.8],[-85.5,40,38.1],[-85,40,55.7],[-84.5,40,337.1],[-84,40,82.3],[-83.5,40,132.4],[-83,40,198.4],[-82.5,40,47.9],[-82,40,24.3],[-81.5,40,15.4],[-81,40,29.4],[-80.5,40,29.1],[-80,40,74.7],[-79.5,40,19.6],[-79,40,40.3],[-78.5,40,18.6],[-78,40,103.8],[-77.5,40,69.2],[-77,40,154.6],[-76.5,40,108.4],[-76,40,320],[-75.5,40,817.3],[-75,40,190.2],[-74.5,40,175.1],[-31.5,40,29.9],[-9.5,40,149.9],[-9,40,136.3],[-8.5,40,56.6],[-8,40,19.9],[-7.5,40,19.2],[-7,40,12.3],[-6.5,40,22.4],[-6,40,14.8],[-5.5,40,12],[-5,40,40.2],[-4.5,40,44.6],[-4,40,49.2],[-3.5,40,27.4],[-3,40,12.2],[-2.5,40,7.2],[-2,40,6.8],[-1.5,40,12.9],[-1,40,50.7],[-0.5,40,386.2],[0,40,1307.8],[0.5,40,1324],[2,40,139.1],[2.5,40,306],[3,40,94.2],[3.5,40,107.5],[4,40,112.3],[8,40,50.6],[8.5,40,74.4],[9,40,30],[9.5,40,52.1],[15,40,98.5],[15.5,40,91.4],[16,40,83.9],[16.5,40,148.2],[17.5,40,506.7],[18,40,294.2],[19,40,31.9],[19.5,40,165.3],[20,40,35],[20.5,40,54.5],[21,40,10.1],[21.5,40,50.7],[22,40,88.9],[22.5,40,24.8],[23,40,38.2],[23.5,40,35.5],[24,40,18.5],[24.5,40,7.1],[25,40,34.8],[25.5,40,46.6],[26,40,46.6],[26.5,40,53.4],[27,40,63.2],[27.5,40,73.2],[28,40,91.7],[28.5,40,153.4],[29,40,142.1],[29.5,40,61.8],[30,40,44.9],[30.5,40,50.5],[31,40,50.5],[31.5,40,79.5],[32,40,153.7],[32.5,40,153.7],[33,40,144.9],[33.5,40,88.2],[34,40,46.7],[34.5,40,48.5],[35,40,48.6],[35.5,40,48.6],[36,40,37.4],[36.5,40,26.9],[37,40,26.5],[37.5,40,26.5],[38,40,26.7],[38.5,40,27.4],[39,40,27.4],[39.5,40,26.7],[40,40,26.6],[40.5,40,35.8],[41,40,38],[41.5,40,38],[42,40,39.2],[42.5,40,47.9],[43,40,48.9],[43.5,40,46.3],[44,40,45.4],[44.5,40,93.6],[45,40,57.8],[45.5,40,31.8],[46,40,31.9],[46.5,40,67.7],[47,40,66.8],[47.5,40,72.6],[48,40,59.8],[48.5,40,92.9],[49,40,180.8],[49.5,40,957.7],[52.5,40,409.1],[53,40,23.5],[53.5,40,4.4],[54,40,10.7],[54.5,40,7.2],[55,40,2.2],[55.5,40,2.2],[56,40,2.9],[56.5,40,3.3],[57,40,4.6],[57.5,40,6.2],[58,40,8.7],[58.5,40,8.1],[59,40,7.9],[59.5,40,4.3],[60,40,6.6],[60.5,40,6.3],[61,40,6.3],[61.5,40,6.2],[62,40,6.3],[62.5,40,12.2],[63,40,17.1],[63.5,40,21.5],[64,40,163.4],[64.5,40,98.6],[65,40,46.6],[65.5,40,73.4],[66,40,115.8],[66.5,40,425.2],[67,40,214.5],[67.5,40,55.7],[68,40,42],[68.5,40,70.8],[69,40,71.7],[69.5,40,30.4],[70,40,17.9],[70.5,40,17.7],[71,40,16],[71.5,40,16.7],[72,40,19.1],[72.5,40,23.2],[73,40,19.7],[73.5,40,5.3],[74,40,2.4],[74.5,40,2.4],[75,40,14.2],[75.5,40,85.3],[76,40,118.9],[76.5,40,41.8],[77,40,42],[77.5,40,38.2],[78,40,18.4],[78.5,40,17.4],[79,40,17.4],[79.5,40,18],[80,40,19.2],[80.5,40,19.1],[81,40,26.7],[81.5,40,26.2],[82,40,7.4],[82.5,40,5.4],[83,40,5.4],[83.5,40,2.2],[92.5,40,2.3],[93,40,3.8],[93.5,40,3.7],[94,40,4.6],[94.5,40,2.3],[96.5,40,5.3],[97,40,5.9],[97.5,40,11.6],[98,40,51.2],[98.5,40,87.1],[99,40,32],[99.5,40,33.3],[100,40,23.9],[103.5,40,1.1],[104,40,1.3],[104.5,40,1.9],[105,40,1.9],[105.5,40,1.9],[106,40,1.9],[106.5,40,154.5],[107,40,7.9],[107.5,40,5.2],[108,40,5.6],[108.5,40,6.4],[109,40,37.5],[109.5,40,59.3],[110,40,50.1],[110.5,40,39.2],[111,40,47.1],[111.5,40,70.6],[112,40,124.1],[112.5,40,151],[113,40,185.1],[113.5,40,157.6],[114,40,112.2],[114.5,40,119.9],[115,40,199.3],[115.5,40,445.4],[116,40,1756.2],[116.5,40,793.4],[117,40,502.6],[117.5,40,466.3],[118,40,1017.3],[118.5,40,442.1],[119,40,369.7],[119.5,40,521.6],[121,40,311.5],[121.5,40,309.1],[122,40,267.1],[122.5,40,188.1],[123,40,181.4],[123.5,40,219.1],[124,40,306.1],[124.5,40,250],[125,40,274.6],[125.5,40,257.4],[126,40,257.3],[126.5,40,68.8],[127,40,183],[127.5,40,1056.1],[128,40,1560.5],[139.5,40,156.2],[140,40,193.2],[140.5,40,38.6],[141,40,189.5],[141.5,40,38.1],[142,40,160.8],[-124,39.5,16.1],[-123.5,39.5,21.7],[-123,39.5,9.8],[-122.5,39.5,5.5],[-122,39.5,62.9],[-121.5,39.5,38.2],[-121,39.5,12.7],[-120.5,39.5,15.4],[-120,39.5,72.6],[-119.5,39.5,7.9],[-119,39.5,9],[-115,39.5,1.3],[-112.5,39.5,2.3],[-112,39.5,5.2],[-111.5,39.5,3.7],[-111,39.5,1.9],[-109.5,39.5,1],[-109,39.5,32.2],[-108.5,39.5,15],[-108,39.5,4],[-107.5,39.5,6.2],[-107,39.5,7.4],[-106.5,39.5,5.7],[-106,39.5,3.6],[-105.5,39.5,11.6],[-105,39.5,52.7],[-104.5,39.5,6.4],[-104,39.5,1.8],[-102.5,39.5,2.1],[-102,39.5,2.8],[-101.5,39.5,3],[-101,39.5,1.8],[-100.5,39.5,1.3],[-100,39.5,2.2],[-99.5,39.5,2.4],[-99,39.5,1.5],[-98.5,39.5,2.6],[-98,39.5,3.4],[-97.5,39.5,4.9],[-97,39.5,36.4],[-96.5,39.5,8.8],[-96,39.5,64.5],[-95.5,39.5,15.7],[-95,39.5,279.7],[-94.5,39.5,127.4],[-94,39.5,12.6],[-93.5,39.5,11.2],[-93,39.5,8.7],[-92.5,39.5,22.8],[-92,39.5,11.9],[-91.5,39.5,12.1],[-91,39.5,11.7],[-90.5,39.5,16],[-90,39.5,21.2],[-89.5,39.5,15.8],[-89,39.5,18.7],[-88.5,39.5,25.2],[-88,39.5,14.7],[-87.5,39.5,50.9],[-87,39.5,57],[-86.5,39.5,44],[-86,39.5,44.8],[-85.5,39.5,26.1],[-85,39.5,328.3],[-84.5,39.5,351.6],[-84,39.5,33.4],[-83.5,39.5,30.7],[-83,39.5,32.4],[-82.5,39.5,32.5],[-82,39.5,47.2],[-81.5,39.5,27.5],[-81,39.5,11],[-80.5,39.5,56.4],[-80,39.5,15.7],[-79.5,39.5,14.3],[-79,39.5,14],[-78.5,39.5,50.7],[-78,39.5,79.5],[-77.5,39.5,384.1],[-77,39.5,870.1],[-76.5,39.5,232.8],[-76,39.5,60.5],[-75.5,39.5,98.6],[-75,39.5,132.4],[-74.5,39.5,639.9],[-31.5,39.5,22.6],[-28.5,39.5,78.6],[-28,39.5,73.7],[-9.5,39.5,152.6],[-9,39.5,100.3],[-8.5,39.5,36.7],[-8,39.5,15.6],[-7.5,39.5,21.6],[-7,39.5,36.9],[-6.5,39.5,36.4],[-6,39.5,23.6],[-5.5,39.5,9.2],[-5,39.5,4.8],[-4.5,39.5,11.6],[-4,39.5,31],[-3.5,39.5,35.7],[-3,39.5,33.8],[-2.5,39.5,24.6],[-2,39.5,38.5],[-1.5,39.5,13.1],[-1,39.5,87.9],[-0.5,39.5,1035.3],[1,39.5,74.1],[1.5,39.5,82.9],[2,39.5,239.7],[2.5,39.5,124],[3,39.5,72.6],[8,39.5,109.1],[8.5,39.5,80.5],[9,39.5,261.2],[9.5,39.5,27.4],[15.5,39.5,126.5],[16,39.5,167.7],[16.5,39.5,50.9],[17,39.5,180.8],[19.5,39.5,120.9],[20,39.5,80.5],[20.5,39.5,42.1],[21,39.5,21.5],[21.5,39.5,39.6],[22,39.5,29.7],[22.5,39.5,81.5],[23,39.5,49.7],[23.5,39.5,37.1],[24,39.5,18.5],[24.5,39.5,7.1],[25,39.5,7.1],[25.5,39.5,17],[26,39.5,39.7],[26.5,39.5,155.9],[27,39.5,217.6],[27.5,39.5,91],[28,39.5,78.1],[28.5,39.5,70.6],[29,39.5,53.6],[29.5,39.5,53.6],[30,39.5,53.4],[30.5,39.5,52],[31,39.5,52.6],[31.5,39.5,56.1],[32,39.5,143.6],[32.5,39.5,136.4],[33,39.5,124.5],[33.5,39.5,70.2],[34,39.5,39.8],[34.5,39.5,50.7],[35,39.5,50],[35.5,39.5,53.8],[36,39.5,41.8],[36.5,39.5,36.8],[37,39.5,26.5],[37.5,39.5,28.4],[38,39.5,36.2],[38.5,39.5,25.6],[39,39.5,12.7],[39.5,39.5,14.3],[40,39.5,33.7],[40.5,39.5,29.6],[41,39.5,42.2],[41.5,39.5,46.1],[42,39.5,52],[42.5,39.5,51.4],[43,39.5,49],[43.5,39.5,48.9],[44,39.5,41.6],[44.5,39.5,37.3],[45,39.5,79.5],[45.5,39.5,28.6],[46,39.5,39.2],[46.5,39.5,44.3],[47,39.5,51.4],[47.5,39.5,59.9],[48,39.5,67.2],[48.5,39.5,100.1],[49,39.5,58.3],[53,39.5,27.5],[53.5,39.5,28],[54,39.5,27.5],[54.5,39.5,8.4],[55,39.5,2.2],[55.5,39.5,2.2],[56,39.5,2.8],[56.5,39.5,3.6],[57,39.5,5.3],[57.5,39.5,6.9],[58,39.5,10.1],[58.5,39.5,8.1],[59,39.5,7.9],[59.5,39.5,5],[60,39.5,5.1],[60.5,39.5,9.2],[61,39.5,16.8],[61.5,39.5,8.8],[62,39.5,7.7],[62.5,39.5,8.9],[63,39.5,10.7],[63.5,39.5,120.5],[64,39.5,22.5],[64.5,39.5,24.3],[65,39.5,43.2],[65.5,39.5,72.1],[66,39.5,59.9],[66.5,39.5,158.2],[67,39.5,136.8],[67.5,39.5,58.7],[68,39.5,20.4],[68.5,39.5,24.6],[69,39.5,24.8],[69.5,39.5,24.1],[70,39.5,19.1],[70.5,39.5,17.8],[71,39.5,13.5],[71.5,39.5,11.4],[72,39.5,5.2],[72.5,39.5,2.3],[73,39.5,1.4],[73.5,39.5,5],[74,39.5,6.2],[74.5,39.5,4.5],[75,39.5,32.7],[75.5,39.5,68.1],[76,39.5,93.5],[76.5,39.5,68.6],[77,39.5,44.9],[77.5,39.5,19.4],[78,39.5,19.5],[78.5,39.5,18.2],[79,39.5,17.4],[79.5,39.5,17.2],[80,39.5,17.2],[80.5,39.5,17.2],[81,39.5,16.6],[81.5,39.5,4.7],[82,39.5,5.4],[93,39.5,1],[97,39.5,1.1],[97.5,39.5,1.6],[98,39.5,1.9],[98.5,39.5,6],[99,39.5,31.4],[99.5,39.5,17.1],[100,39.5,79.8],[100.5,39.5,95.4],[101,39.5,2.4],[101.5,39.5,1.6],[102,39.5,12.7],[102.5,39.5,9.9],[103,39.5,13.5],[103.5,39.5,19.5],[104,39.5,6.4],[104.5,39.5,1.9],[105,39.5,1.9],[105.5,39.5,1.9],[106,39.5,134.9],[106.5,39.5,122.1],[107,39.5,5],[107.5,39.5,5],[108,39.5,5],[108.5,39.5,7.5],[109,39.5,11],[109.5,39.5,30.5],[110,39.5,46.3],[110.5,39.5,66.9],[111,39.5,97.8],[111.5,39.5,74.8],[112,39.5,110.5],[112.5,39.5,143.8],[113,39.5,120.2],[113.5,39.5,97.5],[114,39.5,79.9],[114.5,39.5,240.9],[115,39.5,404.1],[115.5,39.5,698.4],[116,39.5,633.8],[116.5,39.5,574.3],[117,39.5,2328.1],[117.5,39.5,453.9],[118,39.5,302.3],[118.5,39.5,264.8],[119,39.5,262.9],[121,39.5,508.4],[121.5,39.5,952.3],[122,39.5,716.9],[122.5,39.5,469.9],[123,39.5,606.4],[124.5,39.5,265.7],[125,39.5,419.3],[125.5,39.5,1110.7],[126,39.5,324.1],[126.5,39.5,76.9],[127,39.5,179.8],[127.5,39.5,163.2],[139.5,39.5,114.5],[140,39.5,96.7],[140.5,39.5,102.5],[141,39.5,117.5],[141.5,39.5,82],[142,39.5,80.8],[-124,39,4.8],[-123.5,39,10.2],[-123,39,42.9],[-122.5,39,10.9],[-122,39,89.6],[-121.5,39,463.5],[-121,39,39.6],[-120.5,39,8.9],[-120,39,19.5],[-119.5,39,3.6],[-112.5,39,5.2],[-112,39,1.8],[-111.5,39,1.5],[-110,39,2],[-108.5,39,4.9],[-108,39,8.7],[-107,39,4.4],[-106.5,39,4.4],[-106,39,2.4],[-105.5,39,8.5],[-105,39,194.7],[-104.5,39,4.5],[-101,39,1.2],[-100.5,39,1.1],[-100,39,1.3],[-99.5,39,11],[-99,39,4.6],[-98.5,39,3.3],[-98,39,24.2],[-97.5,39,6.8],[-97,39,4.5],[-96.5,39,3.5],[-96,39,19.4],[-95.5,39,51.6],[-95,39,216.2],[-94.5,39,86.6],[-94,39,23.4],[-93.5,39,18.1],[-93,39,13.1],[-92.5,39,75.6],[-92,39,13.8],[-91.5,39,21.1],[-91,39,192.4],[-90.5,39,599.2],[-90,39,86.6],[-89.5,39,27.2],[-89,39,13.2],[-88.5,39,14],[-88,39,19.3],[-87.5,39,22.4],[-87,39,19.8],[-86.5,39,25.9],[-86,39,34.8],[-85.5,39,25.4],[-85,39,55.3],[-84.5,39,35.2],[-84,39,24.9],[-83.5,39,18.5],[-83,39,50.2],[-82.5,39,26.5],[-82,39,25.7],[-81.5,39,12.3],[-81,39,10],[-80.5,39,12.3],[-80,39,10.8],[-79.5,39,8],[-79,39,22.3],[-78.5,39,29.3],[-78,39,55.5],[-77.5,39,909.7],[-77,39,486.3],[-76.5,39,96.5],[-76,39,40.2],[-75.5,39,67.9],[-75,39,408.3],[-29,39,82.4],[-28.5,39,39.6],[-28,39,27.1],[-27.5,39,134.4],[-9.5,39,1519.8],[-9,39,112.3],[-8.5,39,17.4],[-8,39,35.7],[-7.5,39,32.3],[-7,39,64.5],[-6.5,39,47.7],[-6,39,26.8],[-5.5,39,10.4],[-5,39,8.8],[-4.5,39,25.4],[-4,39,39.5],[-3.5,39,27.9],[-3,39,9.8],[-2.5,39,11],[-2,39,40.6],[-1.5,39,29.7],[-1,39,105.7],[-0.5,39,155.1],[0,39,303.9],[1,39,183.8],[1.5,39,95.2],[8,39,145.8],[8.5,39,24.6],[9,39,48],[13,39,161.4],[14,39,119.2],[14.5,39,102.3],[15,39,119.2],[15.5,39,172.7],[16,39,153.1],[16.5,39,223.6],[17,39,109.8],[20.5,39,41.7],[21,39,51.1],[21.5,39,14.8],[22,39,30.6],[22.5,39,36.8],[23,39,33.3],[23.5,39,36],[24,39,31.7],[24.5,39,11.8],[25,39,10.4],[25.5,39,10.4],[26,39,154.3],[26.5,39,255.7],[27,39,205.2],[27.5,39,101.3],[28,39,95.9],[28.5,39,93.5],[29,39,62.9],[29.5,39,62.9],[30,39,55.5],[30.5,39,55.8],[31,39,55.8],[31.5,39,54.8],[32,39,54.7],[32.5,39,54.5],[33,39,64.1],[33.5,39,112.3],[34,39,57],[34.5,39,57.5],[35,39,62.4],[35.5,39,62.8],[36,39,62.8],[36.5,39,54],[37,39,37.6],[37.5,39,68.8],[38,39,71.7],[38.5,39,61.7],[39,39,47.6],[39.5,39,49.6],[40,39,50.6],[40.5,39,43.2],[41,39,60.7],[41.5,39,57.7],[42,39,52.6],[42.5,39,51.7],[43,39,49],[43.5,39,48.5],[44,39,51.9],[44.5,39,65.1],[45,39,66.5],[45.5,39,65.9],[46,39,36.4],[46.5,39,33.7],[47,39,29.7],[47.5,39,53.2],[48,39,69.1],[48.5,39,153.1],[49,39,100.4],[53,39,27.4],[53.5,39,5.9],[54,39,3.6],[54.5,39,2.5],[55,39,2.4],[55.5,39,2.4],[56,39,24.7],[56.5,39,4.5],[57,39,5.4],[57.5,39,6.9],[58,39,11],[58.5,39,8.1],[59,39,7.1],[59.5,39,6.8],[60,39,8.7],[60.5,39,11.6],[61,39,17.6],[61.5,39,12.5],[62,39,9],[62.5,39,8.4],[63,39,8.4],[63.5,39,18.4],[64,39,13],[64.5,39,15.2],[65,39,42],[65.5,39,192.7],[66,39,53.8],[66.5,39,83.9],[67,39,68.7],[67.5,39,43.8],[68,39,120.6],[68.5,39,386.1],[69,39,70.7],[69.5,39,40.1],[70,39,12.7],[70.5,39,9.4],[71,39,10],[71.5,39,9.1],[72,39,3.3],[73.5,39,3.1],[74,39,5.2],[74.5,39,6.4],[75,39,6.8],[75.5,39,8.6],[76,39,37],[76.5,39,68.8],[77,39,76.1],[77.5,39,27.8],[78,39,20.6],[78.5,39,17.4],[79,39,7.7],[79.5,39,13.3],[80,39,17.2],[80.5,39,17.2],[81,39,12.1],[81.5,39,4.6],[82,39,5.6],[97,39,2.2],[98,39,1.9],[98.5,39,3.1],[99,39,3.1],[99.5,39,1.9],[100,39,49.1],[100.5,39,86.6],[101,39,33.4],[101.5,39,23.7],[102,39,103.8],[102.5,39,20.9],[103,39,19.6],[103.5,39,13],[104,39,2.2],[104.5,39,1.9],[105,39,1.9],[105.5,39,99.3],[106,39,300.7],[106.5,39,46.5],[107,39,5.2],[107.5,39,5.3],[108,39,5.2],[108.5,39,8.5],[109,39,32.3],[109.5,39,59.8],[110,39,51.9],[110.5,39,59.8],[111,39,85.2],[111.5,39,68.7],[112,39,133.3],[112.5,39,213.3],[113,39,138.7],[113.5,39,147.5],[114,39,235.2],[114.5,39,517.3],[115,39,822.2],[115.5,39,787.4],[116,39,659],[116.5,39,434.9],[117,39,339.5],[117.5,39,486.5],[118.5,39,293],[121,39,1042.4],[121.5,39,1042.4],[124.5,39,228.4],[125,39,499.6],[125.5,39,686.8],[126,39,231.1],[126.5,39,94.9],[127,39,94.6],[127.5,39,151.9],[128,39,151.8],[139.5,39,190],[140,39,63.6],[140.5,39,88.9],[141,39,158.7],[141.5,39,236.2],[-123.5,38.5,15.4],[-123,38.5,188.1],[-122.5,38.5,216.1],[-122,38.5,117],[-121.5,38.5,193.8],[-121,38.5,21.2],[-120.5,38.5,12.2],[-120,38.5,3],[-113.5,38.5,1.7],[-113,38.5,1.6],[-112.5,38.5,1],[-108.5,38.5,3],[-108,38.5,9.1],[-106,38.5,1.4],[-105.5,38.5,15.6],[-105,38.5,55.6],[-104.5,38.5,2.7],[-104,38.5,5],[-103.5,38.5,2.6],[-103,38.5,4.9],[-102.5,38.5,1.5],[-101.5,38.5,1.8],[-101,38.5,7.2],[-100.5,38.5,1.1],[-100,38.5,1.4],[-99.5,38.5,3.8],[-99,38.5,10.5],[-98.5,38.5,5.9],[-98,38.5,32.1],[-97.5,38.5,15.1],[-97,38.5,2.9],[-96.5,38.5,14.1],[-96,38.5,4.5],[-95.5,38.5,6.8],[-95,38.5,6.7],[-94.5,38.5,7.7],[-94,38.5,9.5],[-93.5,38.5,8.4],[-93,38.5,23.3],[-92.5,38.5,10.6],[-92,38.5,10.4],[-91.5,38.5,20.3],[-91,38.5,52.6],[-90.5,38.5,96],[-90,38.5,22.9],[-89.5,38.5,17.5],[-89,38.5,21.6],[-88.5,38.5,12.5],[-88,38.5,40.3],[-87.5,38.5,25.3],[-87,38.5,21.9],[-86.5,38.5,22.1],[-86,38.5,370.7],[-85.5,38.5,42.9],[-85,38.5,80],[-84.5,38.5,60],[-84,38.5,20],[-83.5,38.5,17.6],[-83,38.5,49],[-82.5,38.5,59.9],[-82,38.5,90.2],[-81.5,38.5,24.4],[-81,38.5,13.8],[-80.5,38.5,5.2],[-80,38.5,3.4],[-79.5,38.5,25.2],[-79,38.5,71.2],[-78.5,38.5,49.5],[-78,38.5,51.7],[-77.5,38.5,65.2],[-77,38.5,49.6],[-76.5,38.5,54.9],[-76,38.5,50.8],[-75.5,38.5,44.3],[-29,38.5,30.6],[-28.5,38.5,31.4],[-9.5,38.5,133.5],[-9,38.5,27.3],[-8.5,38.5,11.4],[-8,38.5,23.1],[-7.5,38.5,15.6],[-7,38.5,17.9],[-6.5,38.5,24.4],[-6,38.5,11.7],[-5.5,38.5,14.3],[-5,38.5,20.2],[-4.5,38.5,18.7],[-4,38.5,50.4],[-3.5,38.5,27.3],[-3,38.5,15.7],[-2.5,38.5,9.1],[-2,38.5,32.3],[-1.5,38.5,102.8],[-1,38.5,361.8],[-0.5,38.5,668.9],[12,38.5,125.1],[12.5,38.5,176.9],[13,38.5,1249.2],[13.5,38.5,490.1],[14,38.5,94.4],[14.5,38.5,165.1],[15,38.5,330.1],[15.5,38.5,349.7],[16,38.5,127.6],[16.5,38.5,99.4],[20,38.5,67.4],[20.5,38.5,34.6],[21,38.5,47.7],[21.5,38.5,146.5],[22,38.5,43.6],[22.5,38.5,43.4],[23,38.5,48.8],[23.5,38.5,752.5],[24,38.5,29.8],[24.5,38.5,18.3],[25.5,38.5,21.1],[26,38.5,175.3],[26.5,38.5,257.7],[27,38.5,257.7],[27.5,38.5,234.2],[28,38.5,192.6],[28.5,38.5,92.9],[29,38.5,73.2],[29.5,38.5,71.2],[30,38.5,56.6],[30.5,38.5,59.2],[31,38.5,60.7],[31.5,38.5,54.9],[32,38.5,54.5],[32.5,38.5,54.5],[33,38.5,57.3],[33.5,38.5,61.7],[34,38.5,58.7],[34.5,38.5,53.3],[35,38.5,60.7],[35.5,38.5,68.3],[36,38.5,99.1],[36.5,38.5,67.7],[37,38.5,68.3],[37.5,38.5,70.8],[38,38.5,74.7],[38.5,38.5,74.9],[39,38.5,80.2],[39.5,38.5,86.9],[40,38.5,89.9],[40.5,38.5,91.5],[41,38.5,116.1],[41.5,38.5,69.3],[42,38.5,51.4],[42.5,38.5,50.5],[43,38.5,48.6],[43.5,38.5,48.5],[44,38.5,54.5],[44.5,38.5,80.3],[45,38.5,77.5],[45.5,38.5,77.1],[46,38.5,161],[46.5,38.5,33.3],[47,38.5,39.6],[47.5,38.5,88.2],[48,38.5,134.6],[48.5,38.5,115.1],[53.5,38.5,2.7],[54,38.5,2.7],[54.5,38.5,2.7],[55,38.5,4.7],[55.5,38.5,11],[56,38.5,10.2],[56.5,38.5,14.4],[57,38.5,12.2],[57.5,38.5,9],[58,38.5,30.6],[58.5,38.5,8.1],[59,38.5,6.8],[59.5,38.5,6.5],[60,38.5,6.5],[60.5,38.5,8.1],[61,38.5,14.6],[61.5,38.5,14],[62,38.5,10.4],[62.5,38.5,9.5],[63,38.5,9.3],[63.5,38.5,9.3],[64,38.5,9.7],[64.5,38.5,12.5],[65,38.5,13.6],[65.5,38.5,32.6],[66,38.5,28.4],[66.5,38.5,22.9],[67,38.5,23.6],[67.5,38.5,171],[68,38.5,74.8],[68.5,38.5,109.4],[69,38.5,77.1],[69.5,38.5,44.8],[70,38.5,18.2],[70.5,38.5,7.7],[71,38.5,7.3],[71.5,38.5,6.5],[72,38.5,5],[72.5,38.5,2.2],[75,38.5,3.7],[75.5,38.5,6.9],[76,38.5,6.9],[76.5,38.5,62.5],[77,38.5,100.9],[77.5,38.5,15.9],[78,38.5,10.2],[78.5,38.5,5.5],[79,38.5,5.4],[79.5,38.5,14.5],[80,38.5,17.2],[80.5,38.5,17.2],[81,38.5,6.9],[81.5,38.5,5.3],[82,38.5,5.6],[96,38.5,2.2],[96.5,38.5,3.3],[97,38.5,3.5],[97.5,38.5,2],[98.5,38.5,1],[99,38.5,3.2],[99.5,38.5,3.8],[100,38.5,3.4],[100.5,38.5,38.2],[101,38.5,35.3],[101.5,38.5,26.5],[102,38.5,70.1],[102.5,38.5,99],[103,38.5,63.4],[103.5,38.5,2.1],[104,38.5,1.9],[104.5,38.5,1.9],[105,38.5,1.9],[105.5,38.5,64.6],[106,38.5,170.3],[106.5,38.5,35.3],[107,38.5,11.7],[107.5,38.5,5.5],[108,38.5,6.2],[108.5,38.5,13.3],[109,38.5,65.6],[109.5,38.5,67.2],[110,38.5,109.2],[110.5,38.5,133.2],[111,38.5,117.4],[111.5,38.5,90.8],[112,38.5,268.7],[112.5,38.5,271.1],[113,38.5,155.1],[113.5,38.5,267.7],[114,38.5,754.7],[114.5,38.5,1285.8],[115,38.5,765.4],[115.5,38.5,544.7],[116,38.5,522],[116.5,38.5,557.2],[117,38.5,367.9],[117.5,38.5,253.5],[118,38.5,291.6],[118.5,38.5,331.6],[120.5,38.5,1288],[124.5,38.5,223.3],[125,38.5,230.1],[125.5,38.5,348],[126,38.5,230.3],[126.5,38.5,214.7],[127,38.5,120.8],[127.5,38.5,86.4],[128,38.5,73.2],[128.5,38.5,169.9],[138,38.5,84.1],[138.5,38.5,74.8],[139,38.5,198.4],[139.5,38.5,34.6],[140,38.5,242.9],[140.5,38.5,611.4],[141,38.5,583],[141.5,38.5,82.9],[-123.5,38,6.4],[-123,38,368.1],[-122.5,38,1681.3],[-122,38,242],[-121.5,38,195.3],[-121,38,116.8],[-120.5,38,13.3],[-120,38,3.9],[-119.5,38,3.4],[-119,38,2.7],[-113.5,38,8.4],[-113,38,3.5],[-109,38,1.5],[-108.5,38,1.7],[-108,38,3.3],[-106.5,38,4.3],[-106,38,1.5],[-105.5,38,1.1],[-105,38,3],[-104,38,4.3],[-102,38,1.2],[-101.5,38,4.3],[-101,38,11.6],[-100.5,38,8.9],[-100,38,6.3],[-99.5,38,2.1],[-99,38,4.7],[-98.5,38,4],[-98,38,20.3],[-97.5,38,176.3],[-97,38,15.4],[-96.5,38,2.9],[-96,38,5.2],[-95.5,38,11],[-95,38,10.2],[-94.5,38,10.9],[-94,38,8.8],[-93.5,38,13.2],[-93,38,16.3],[-92.5,38,19.2],[-92,38,18.7],[-91.5,38,5.5],[-91,38,20.6],[-90.5,38,21.2],[-90,38,13.7],[-89.5,38,41.6],[-89,38,31.9],[-88.5,38,11.2],[-88,38,64.9],[-87.5,38,63.6],[-87,38,20],[-86.5,38,23.3],[-86,38,49.7],[-85.5,38,22.8],[-85,38,62.6],[-84.5,38,66.5],[-84,38,19.2],[-83.5,38,14.5],[-83,38,29.3],[-82.5,38,28.2],[-82,38,21.8],[-81.5,38,41.2],[-81,38,14.8],[-80.5,38,11.4],[-80,38,14.3],[-79.5,38,21.5],[-79,38,14.5],[-78.5,38,18.3],[-78,38,116.7],[-77.5,38,133.3],[-77,38,17.4],[-76.5,38,31.8],[-76,38,31.2],[-75.5,38,53.2],[-26,38,275.4],[-25.5,38,85],[-9,38,26],[-8.5,38,13.7],[-8,38,11.2],[-7.5,38,10.7],[-7,38,23.9],[-6.5,38,17],[-6,38,38],[-5.5,38,37.8],[-5,38,146.3],[-4.5,38,65.3],[-4,38,88.8],[-3.5,38,32.2],[-3,38,18.8],[-2.5,38,11],[-2,38,47.5],[-1.5,38,197.2],[-1,38,292.8],[12,38,244.3],[12.5,38,167.4],[13,38,83.6],[13.5,38,80.3],[14,38,67.4],[14.5,38,95.2],[15,38,431.1],[15.5,38,125.5],[16,38,79],[20.5,38,93],[21,38,112],[21.5,38,32.1],[22,38,19.8],[22.5,38,76.6],[23,38,60.3],[23.5,38,2723.6],[24,38,83.9],[24.5,38,25.6],[25,38,40.9],[25.5,38,20.7],[26,38,32.3],[26.5,38,65.3],[27,38,138.9],[27.5,38,122.1],[28,38,114.7],[28.5,38,97.9],[29,38,75.5],[29.5,38,55.3],[30,38,47.4],[30.5,38,57],[31,38,61.3],[31.5,38,54.5],[32,38,54.5],[32.5,38,54.5],[33,38,54.7],[33.5,38,55.1],[34,38,53.6],[34.5,38,59.9],[35,38,99.8],[35.5,38,115.8],[36,38,101.2],[36.5,38,68.1],[37,38,68.9],[37.5,38,84.6],[38,38,85.8],[38.5,38,82.5],[39,38,72.8],[39.5,38,80.8],[40,38,85.3],[40.5,38,76.7],[41,38,96.4],[41.5,38,68.3],[42,38,45.4],[42.5,38,47.2],[43,38,45.2],[43.5,38,41.7],[44,38,44.6],[44.5,38,148.6],[45,38,152.7],[45.5,38,348.2],[46,38,339.2],[46.5,38,36.4],[47,38,48.9],[47.5,38,48.8],[48,38,51.9],[48.5,38,43.4],[49,38,129.7],[53.5,38,2.7],[54,38,2.7],[54.5,38,15.5],[55,38,56.3],[55.5,38,48.3],[56,38,33.7],[56.5,38,26.4],[57,38,26.3],[57.5,38,41],[58,38,20.8],[58.5,38,14.1],[59,38,7.9],[59.5,38,5.5],[60,38,6.8],[60.5,38,5.2],[61,38,11.5],[61.5,38,76.4],[62,38,42.4],[62.5,38,9.5],[63,38,9.6],[63.5,38,9.3],[64,38,12],[64.5,38,12.3],[65,38,13.4],[65.5,38,16.1],[66,38,15.6],[66.5,38,37.2],[67,38,76.4],[67.5,38,76.9],[68,38,57.3],[68.5,38,181.2],[69,38,97.5],[69.5,38,133.1],[70,38,28.9],[70.5,38,10.9],[71,38,5.6],[71.5,38,6.2],[72,38,7.3],[72.5,38,4.1],[75,38,1.3],[75.5,38,1.8],[76,38,17.9],[76.5,38,44.3],[77,38,13.5],[77.5,38,10],[78,38,5.4],[78.5,38,5.4],[79,38,5.6],[79.5,38,16],[80,38,17.2],[80.5,38,13.5],[81,38,4.5],[81.5,38,5.6],[82,38,5.6],[93,38,1],[96,38,1.4],[96.5,38,3.5],[97,38,3.5],[97.5,38,3.2],[98,38,1],[99.5,38,3.5],[100,38,4],[100.5,38,6.4],[101,38,19.7],[101.5,38,12.2],[102,38,89.9],[102.5,38,121.7],[103,38,92.3],[103.5,38,42.8],[104,38,8.6],[104.5,38,16.1],[105,38,35.5],[105.5,38,97.2],[106,38,160.9],[106.5,38,40.2],[107,38,26.4],[107.5,38,36],[108,38,25.4],[108.5,38,43.3],[109,38,63.3],[109.5,38,106.2],[110,38,160.7],[110.5,38,180.5],[111,38,148.2],[111.5,38,197],[112,38,610.2],[112.5,38,631],[113,38,173.7],[113.5,38,216.1],[114,38,326.3],[114.5,38,729],[115,38,550.1],[115.5,38,483.1],[116,38,545.9],[116.5,38,479.7],[117,38,518.9],[117.5,38,399.5],[118,38,267.9],[118.5,38,192.1],[119,38,132.2],[120,38,764.8],[120.5,38,717.7],[121,38,763.4],[121.5,38,921.6],[122,38,4654.4],[124.5,38,212.1],[125,38,204.8],[125.5,38,235.6],[126,38,281],[126.5,38,2355.2],[127,38,2191.5],[127.5,38,125],[128,38,35.6],[128.5,38,131],[129,38,390.2],[130.5,38,135.1],[137,38,80.4],[138,38,87.7],[138.5,38,601.3],[139,38,363.3],[139.5,38,75.1],[140,38,218],[140.5,38,160.9],[141,38,184.7],[-122.5,37.5,365.4],[-122,37.5,533.7],[-121.5,37.5,11.6],[-121,37.5,64.6],[-120.5,37.5,40.1],[-120,37.5,11.7],[-119.5,37.5,1.7],[-119,37.5,1.1],[-118.5,37.5,4.8],[-114,37.5,25.9],[-113.5,37.5,8.6],[-113,37.5,2],[-109.5,37.5,1.6],[-109,37.5,5.2],[-108.5,37.5,4.8],[-108,37.5,13.4],[-107.5,37.5,2.9],[-107,37.5,1.7],[-106.5,37.5,2.5],[-106,37.5,7.6],[-105.5,37.5,1.2],[-105,37.5,3.1],[-104.5,37.5,2.7],[-102,37.5,1.7],[-101.5,37.5,2.6],[-101,37.5,9.7],[-100.5,37.5,1.9],[-100,37.5,1],[-99.5,37.5,1.2],[-99,37.5,1.8],[-98.5,37.5,2.3],[-98,37.5,4.5],[-97.5,37.5,17.8],[-97,37.5,7.6],[-96.5,37.5,2.4],[-96,37.5,17],[-95.5,37.5,10.6],[-95,37.5,40.2],[-94.5,37.5,32.8],[-94,37.5,15.3],[-93.5,37.5,112],[-93,37.5,15.1],[-92.5,37.5,9.6],[-92,37.5,6.4],[-91.5,37.5,2.9],[-91,37.5,5.7],[-90.5,37.5,5.6],[-90,37.5,34.8],[-89.5,37.5,15.7],[-89,37.5,34.9],[-88.5,37.5,12.7],[-88,37.5,20],[-87.5,37.5,23.5],[-87,37.5,15],[-86.5,37.5,21.4],[-86,37.5,19.2],[-85.5,37.5,23.2],[-85,37.5,28.3],[-84.5,37.5,27.2],[-84,37.5,18],[-83.5,37.5,20.7],[-83,37.5,33.1],[-82.5,37.5,24.1],[-82,37.5,24.1],[-81.5,37.5,37.2],[-81,37.5,33.8],[-80.5,37.5,67.8],[-80,37.5,85.9],[-79.5,37.5,66.1],[-79,37.5,15.5],[-78.5,37.5,16.1],[-78,37.5,67.5],[-77.5,37.5,106.2],[-77,37.5,99.4],[-76.5,37.5,346],[-76,37.5,24.4],[-25.5,37.5,46],[-9,37.5,59.7],[-8.5,37.5,62.1],[-8,37.5,62],[-7.5,37.5,76.3],[-7,37.5,120.2],[-6.5,37.5,177.1],[-6,37.5,354.3],[-5.5,37.5,45.6],[-5,37.5,70.3],[-4.5,37.5,56.6],[-4,37.5,203.6],[-3.5,37.5,24.5],[-3,37.5,17.9],[-2.5,37.5,21.2],[-2,37.5,59.7],[-1.5,37.5,84.4],[6,37.5,167.4],[6.5,37.5,167.4],[7,37.5,167.4],[7.5,37.5,167.4],[8.5,37.5,95.7],[9,37.5,139.2],[9.5,37.5,150.5],[10,37.5,264.8],[10.5,37.5,216.3],[11,37.5,216.3],[13,37.5,155.9],[13.5,37.5,193.8],[14,37.5,117.3],[14.5,37.5,128.2],[15,37.5,467.9],[21,37.5,347.4],[21.5,37.5,41.4],[22,37.5,52.2],[22.5,37.5,14.3],[23,37.5,39.6],[23.5,37.5,93.8],[24,37.5,15.4],[24.5,37.5,154.8],[25,37.5,66.7],[25.5,37.5,17.6],[26,37.5,103.5],[26.5,37.5,84.6],[27,37.5,80.4],[27.5,37.5,56.6],[28,37.5,56.4],[28.5,37.5,62.5],[29,37.5,70.7],[29.5,37.5,42.6],[30,37.5,58.8],[30.5,37.5,61.7],[31,37.5,75],[31.5,37.5,69.5],[32,37.5,56.7],[32.5,37.5,43.6],[33,37.5,35.6],[33.5,37.5,46.5],[34,37.5,76],[34.5,37.5,100.6],[35,37.5,117.3],[35.5,37.5,120.2],[36,37.5,126.3],[36.5,37.5,127.1],[37,37.5,133.4],[37.5,37.5,143.5],[38,37.5,73.9],[38.5,37.5,72.4],[39,37.5,72.4],[39.5,37.5,72.1],[40,37.5,63],[40.5,37.5,78.5],[41,37.5,77.8],[41.5,37.5,80.3],[42,37.5,82],[42.5,37.5,47],[43,37.5,47.8],[43.5,37.5,43.4],[44,37.5,47.4],[44.5,37.5,97.9],[45,37.5,132.6],[45.5,37.5,207.9],[46,37.5,132.8],[46.5,37.5,33.6],[47,37.5,27.6],[47.5,37.5,42.1],[48,37.5,41.5],[48.5,37.5,49.4],[49,37.5,227.5],[49.5,37.5,444.4],[50,37.5,282.2],[50.5,37.5,135.9],[53.5,37.5,40.5],[54,37.5,62.5],[54.5,37.5,81.2],[55,37.5,54.3],[55.5,37.5,28.4],[56,37.5,25.6],[56.5,37.5,26.5],[57,37.5,27.8],[57.5,37.5,49.6],[58,37.5,41.6],[58.5,37.5,33.7],[59,37.5,56],[59.5,37.5,40.4],[60,37.5,19.2],[60.5,37.5,16.5],[61,37.5,12.3],[61.5,37.5,20.2],[62,37.5,14.5],[62.5,37.5,9.5],[63,37.5,8.9],[63.5,37.5,9.6],[64,37.5,12.9],[64.5,37.5,16],[65,37.5,15.2],[65.5,37.5,23.9],[66,37.5,39.8],[66.5,37.5,61.4],[67,37.5,143.2],[67.5,37.5,49.8],[68,37.5,52.6],[68.5,37.5,104.1],[69,37.5,89.5],[69.5,37.5,70.9],[70,37.5,61.1],[70.5,37.5,36],[71,37.5,13.3],[71.5,37.5,19.2],[72,37.5,8],[72.5,37.5,5],[73,37.5,1.3],[73.5,37.5,1.2],[74,37.5,1.2],[74.5,37.5,4.2],[75,37.5,1.7],[75.5,37.5,1.3],[76,37.5,7.6],[76.5,37.5,13.5],[77,37.5,13.5],[77.5,37.5,6.1],[78,37.5,5.4],[78.5,37.5,5.4],[79,37.5,9.8],[79.5,37.5,95.7],[80,37.5,17.3],[80.5,37.5,8.4],[81,37.5,5],[81.5,37.5,5.6],[82,37.5,5.1],[92.5,37.5,1],[93,37.5,1.3],[93.5,37.5,1.4],[94,37.5,1.4],[94.5,37.5,1.2],[95,37.5,1.1],[95.5,37.5,1],[96,37.5,1.5],[96.5,37.5,3.1],[97,37.5,3.5],[97.5,37.5,3.5],[98,37.5,4.2],[98.5,37.5,3.1],[99,37.5,2.7],[99.5,37.5,5.3],[100,37.5,5.4],[100.5,37.5,15],[101,37.5,90.9],[101.5,37.5,92.7],[102,37.5,58.8],[102.5,37.5,40.2],[103,37.5,52.8],[103.5,37.5,53],[104,37.5,54.3],[104.5,37.5,83.5],[105,37.5,67.5],[105.5,37.5,67.3],[106,37.5,47.9],[106.5,37.5,33],[107,37.5,33.9],[107.5,37.5,37.6],[108,37.5,33.8],[108.5,37.5,48.2],[109,37.5,68.5],[109.5,37.5,93.6],[110,37.5,100.9],[110.5,37.5,117.6],[111,37.5,132.6],[111.5,37.5,376.3],[112,37.5,337.6],[112.5,37.5,154.5],[113,37.5,75.1],[113.5,37.5,156.9],[114,37.5,438.2],[114.5,37.5,686.3],[115,37.5,578.7],[115.5,37.5,572.5],[116,37.5,524.3],[116.5,37.5,457],[117,37.5,503.5],[117.5,37.5,512.8],[118,37.5,526.4],[118.5,37.5,467],[119,37.5,648],[119.5,37.5,544.6],[120,37.5,509.2],[120.5,37.5,421.7],[121,37.5,550.1],[121.5,37.5,493.9],[122,37.5,553.3],[122.5,37.5,423.2],[125.5,37.5,1045.7],[126,37.5,327.1],[126.5,37.5,4352.1],[127,37.5,1593.9],[127.5,37.5,218.3],[128,37.5,100.2],[128.5,37.5,65.5],[129,37.5,90],[136.5,37.5,101.5],[137,37.5,102.4],[137.5,37.5,71.2],[138,37.5,220.4],[138.5,37.5,213.4],[139,37.5,24.5],[139.5,37.5,73],[140,37.5,249.7],[140.5,37.5,171.6],[141,37.5,147],[-122.5,37,753.6],[-122,37,270.8],[-121.5,37,23.4],[-121,37,6.6],[-120.5,37,32.7],[-120,37,276.7],[-119.5,37,32.6],[-119,37,1.8],[-116.5,37,2.1],[-116,37,2.1],[-114.5,37,1.9],[-111.5,37,3.6],[-111,37,1.4],[-110.5,37,3.1],[-110,37,1.5],[-109.5,37,2.2],[-109,37,4.6],[-108.5,37,27.6],[-108,37,7.3],[-107,37,1.1],[-106.5,37,1.3],[-106,37,2.4],[-105.5,37,2.1],[-105,37,1.9],[-104.5,37,2],[-102,37,2.1],[-101.5,37,5.8],[-101,37,1.9],[-100,37,1.5],[-99.5,37,1.1],[-99,37,3.6],[-98.5,37,2.6],[-98,37,2.2],[-97.5,37,19.4],[-97,37,3.4],[-96.5,37,4.7],[-96,37,25.5],[-95.5,37,8.1],[-95,37,26.9],[-94.5,37,21.3],[-94,37,20.7],[-93.5,37,27.9],[-93,37,8.4],[-92.5,37,5.2],[-92,37,14],[-91.5,37,3.9],[-91,37,9.7],[-90.5,37,18.5],[-90,37,22.9],[-89.5,37,11.2],[-89,37,21.9],[-88.5,37,26.6],[-88,37,21],[-87.5,37,63.8],[-87,37,29.6],[-86.5,37,43.8],[-86,37,17],[-85.5,37,12.7],[-85,37,15.8],[-84.5,37,28.7],[-84,37,27.5],[-83.5,37,21.4],[-83,37,50.1],[-82.5,37,54.5],[-82,37,29.2],[-81.5,37,18.3],[-81,37,30.5],[-80.5,37,19.5],[-80,37,47.2],[-79.5,37,40.7],[-79,37,17.3],[-78.5,37,15.5],[-78,37,16.1],[-77.5,37,10.2],[-77,37,36.4],[-76.5,37,451.4],[-76,37,273.1],[-25.5,37,57.7],[-9,37,43.3],[-8,37,554.7],[-7,37,20.3],[-6.5,37,207.9],[-6,37,76.3],[-5.5,37,45.2],[-5,37,199.7],[-4.5,37,384.3],[-4,37,80.9],[-3.5,37,64.8],[-3,37,129.1],[-2.5,37,180.6],[-2,37,48.6],[1,37,191],[1.5,37,190.4],[2,37,190],[2.5,37,258.1],[3,37,2307.3],[3.5,37,323.4],[4,37,366.6],[4.5,37,299.7],[5,37,263.6],[5.5,37,205.3],[6,37,198.6],[6.5,37,183],[7,37,187.8],[7.5,37,293.4],[8,37,130.9],[8.5,37,133.5],[9,37,103.1],[9.5,37,237],[10,37,820.6],[10.5,37,216.3],[11,37,216.3],[11.5,37,87.1],[12,37,87.1],[14,37,222.9],[14.5,37,189.5],[15,37,202.2],[21.5,37,35.5],[22,37,24.8],[22.5,37,24.9],[23,37,19.5],[23.5,37,142.4],[24,37,27.5],[24.5,37,23.7],[25,37,18.4],[25.5,37,15.2],[26,37,18.1],[26.5,37,81.5],[27,37,89.8],[27.5,37,52.3],[28,37,54.7],[28.5,37,54.7],[29,37,55.9],[29.5,37,72.9],[30,37,79.8],[30.5,37,79.8],[31,37,79.8],[31.5,37,79.8],[32,37,75.6],[32.5,37,35.2],[33,37,84.3],[33.5,37,105.8],[34,37,105.8],[34.5,37,106],[35,37,116.7],[35.5,37,122.6],[36,37,211.3],[36.5,37,124.8],[37,37,124.1],[37.5,37,122.3],[38,37,76.7],[38.5,37,73.3],[39,37,73.9],[39.5,37,110.2],[40,37,142.6],[40.5,37,157.3],[41,37,156.1],[41.5,37,137],[42,37,67.6],[42.5,37,50.9],[43,37,50.9],[43.5,37,52],[44,37,70.7],[44.5,37,75.7],[45,37,57],[45.5,37,61.1],[46,37,122.4],[46.5,37,43.1],[47,37,47.3],[47.5,37,46.3],[48,37,46.3],[48.5,37,52.3],[49,37,39.6],[49.5,37,61.1],[50,37,114.6],[50.5,37,109],[51,37,87],[51.5,37,75.9],[52,37,167.8],[52.5,37,536.6],[53,37,87.3],[53.5,37,78.6],[54,37,159.7],[54.5,37,117.2],[55,37,32.4],[55.5,37,8.1],[56,37,16.4],[56.5,37,24.4],[57,37,28.8],[57.5,37,29.1],[58,37,47.1],[58.5,37,42.7],[59,37,64.8],[59.5,37,121.3],[60,37,101.8],[60.5,37,9.8],[61,37,12.8],[61.5,37,19.4],[62,37,10.8],[62.5,37,9.6],[63,37,10.1],[63.5,37,14.3],[64,37,14],[64.5,37,16.4],[65,37,18.4],[65.5,37,41.2],[66,37,63.5],[66.5,37,110.5],[67,37,206.2],[67.5,37,22.2],[68,37,66.1],[68.5,37,216.9],[69,37,132.8],[69.5,37,82],[70,37,36.2],[70.5,37,30.2],[71,37,15.6],[71.5,37,6.1],[72,37,11.7],[72.5,37,21],[73,37,37.9],[73.5,37,43.7],[74,37,58.1],[74.5,37,66.9],[75,37,62],[75.5,37,20.8],[76,37,3.8],[76.5,37,11.5],[77,37,13.4],[77.5,37,6.5],[78,37,5.4],[78.5,37,5.7],[79,37,15.3],[79.5,37,16.9],[80,37,16],[80.5,37,4.8],[81,37,4.9],[81.5,37,5.6],[82,37,5.6],[82.5,37,1.5],[92,37,1.2],[92.5,37,1.3],[93,37,1.4],[93.5,37,1.4],[94,37,1.4],[94.5,37,1.4],[95,37,1.4],[95.5,37,1.2],[96,37,1.1],[96.5,37,1.1],[97,37,1.3],[97.5,37,1.1],[98,37,2.1],[98.5,37,4.1],[99,37,6.3],[99.5,37,7.7],[100,37,7.7],[100.5,37,12.2],[101,37,102.3],[101.5,37,485.9],[102,37,113],[102.5,37,102.9],[103,37,86.6],[103.5,37,71.3],[104,37,87.8],[104.5,37,105.5],[105,37,86],[105.5,37,63.1],[106,37,71.2],[106.5,37,37.4],[107,37,36.2],[107.5,37,34.6],[108,37,32.6],[108.5,37,35.3],[109,37,70.2],[109.5,37,95.6],[110,37,65.8],[110.5,37,57.6],[111,37,111.1],[111.5,37,267.4],[112,37,70.1],[112.5,37,164.3],[113,37,178.7],[113.5,37,272.9],[114,37,905.1],[114.5,37,742.8],[115,37,604.3],[115.5,37,682.4],[116,37,494.9],[116.5,37,635.4],[117,37,1121.2],[117.5,37,758.9],[118,37,773],[118.5,37,557.3],[119,37,684.2],[119.5,37,449.9],[120,37,476.4],[120.5,37,496.6],[121,37,300.8],[121.5,37,298.2],[122,37,409.8],[122.5,37,423.2],[126,37,191.3],[126.5,37,252.5],[127,37,399.7],[127.5,37,189.7],[128,37,109.4],[128.5,37,111.8],[129,37,48.3],[136,37,1395.1],[136.5,37,495.9],[137,37,464.7],[137.5,37,69.9],[138,37,262.5],[138.5,37,59.8],[139,37,65.5],[139.5,37,315.9],[140,37,143.3],[140.5,37,343.9],[-122,36.5,10.1],[-121.5,36.5,15.1],[-121,36.5,2.9],[-120.5,36.5,11.8],[-120,36.5,49.2],[-119.5,36.5,113.7],[-119,36.5,6.8],[-116.5,36.5,4.5],[-116,36.5,9.4],[-115.5,36.5,486.8],[-115,36.5,27.2],[-114.5,36.5,3],[-111.5,36.5,4.3],[-111,36.5,1],[-110.5,36.5,3],[-110,36.5,4.3],[-109.5,36.5,4],[-109,36.5,2.1],[-108.5,36.5,2.3],[-108,36.5,1.5],[-106.5,36.5,6.6],[-106,36.5,9.6],[-105.5,36.5,3.3],[-103,36.5,1.7],[-102.5,36.5,1.9],[-102,36.5,1.2],[-101.5,36.5,2.1],[-101,36.5,3.7],[-100.5,36.5,1.1],[-100,36.5,1.5],[-99.5,36.5,7.1],[-99,36.5,2.2],[-98.5,36.5,4.7],[-98,36.5,22.9],[-97.5,36.5,22.7],[-97,36.5,11.2],[-96.5,36.5,47],[-96,36.5,224.9],[-95.5,36.5,21],[-95,36.5,18.7],[-94.5,36.5,101.8],[-94,36.5,17],[-93.5,36.5,16.1],[-93,36.5,10.6],[-92.5,36.5,17.7],[-92,36.5,9.2],[-91.5,36.5,9.1],[-91,36.5,18.8],[-90.5,36.5,18.8],[-90,36.5,13.1],[-89.5,36.5,26.8],[-89,36.5,23.2],[-88.5,36.5,21.6],[-88,36.5,15.8],[-87.5,36.5,40.1],[-87,36.5,294.7],[-86.5,36.5,45.9],[-86,36.5,26.8],[-85.5,36.5,24.6],[-85,36.5,15.6],[-84.5,36.5,53.1],[-84,36.5,66.3],[-83.5,36.5,50.3],[-83,36.5,45.2],[-82.5,36.5,77.7],[-82,36.5,31.9],[-81.5,36.5,30.6],[-81,36.5,39.3],[-80.5,36.5,150.5],[-80,36.5,159.7],[-79.5,36.5,65.6],[-79,36.5,72.9],[-78.5,36.5,36.4],[-78,36.5,30.2],[-77.5,36.5,14.1],[-77,36.5,18.4],[-76.5,36.5,29.8],[-76,36.5,56.5],[-6.5,36.5,486.4],[-6,36.5,51.9],[-5.5,36.5,238.7],[-5,36.5,717.4],[0,36.5,229.8],[0.5,36.5,189.9],[1,36.5,190.9],[1.5,36.5,167],[2,36.5,153.9],[2.5,36.5,201.8],[3,36.5,159.6],[3.5,36.5,141.8],[4,36.5,178.3],[4.5,36.5,193.7],[5,36.5,202.4],[5.5,36.5,213.9],[6,36.5,222.6],[6.5,36.5,299.2],[7,36.5,135.9],[7.5,36.5,110.8],[8,36.5,97],[8.5,36.5,67.1],[9,36.5,59.2],[9.5,36.5,58.4],[10,36.5,125.9],[10.5,36.5,215.9],[14,36.5,442.1],[22,36.5,16.3],[22.5,36.5,14.2],[23,36.5,20.2],[25,36.5,147.6],[25.5,36.5,6.5],[26,36.5,11.9],[26.5,36.5,12.1],[27,36.5,8],[27.5,36.5,13.3],[28,36.5,191.6],[29,36.5,68.1],[29.5,36.5,79.5],[30,36.5,79.8],[30.5,36.5,79.8],[32,36.5,79.8],[32.5,36.5,92.6],[33,36.5,104.6],[33.5,36.5,105.8],[34,36.5,105.8],[35.5,36.5,214.9],[36,36.5,209.4],[36.5,36.5,121.6],[37,36.5,76.8],[37.5,36.5,76.8],[38,36.5,75],[38.5,36.5,73.1],[39,36.5,72.7],[39.5,36.5,66],[40,36.5,137.9],[40.5,36.5,157.3],[41,36.5,114.4],[41.5,36.5,50.6],[42,36.5,50.6],[42.5,36.5,50.6],[43,36.5,50.9],[43.5,36.5,69.1],[44,36.5,77.7],[44.5,36.5,85.1],[45,36.5,80.2],[45.5,36.5,67.5],[46,36.5,58.7],[46.5,36.5,41.8],[47,36.5,32.1],[47.5,36.5,27.5],[48,36.5,39.1],[48.5,36.5,50],[49,36.5,55.8],[49.5,36.5,58.4],[50,36.5,97.1],[50.5,36.5,86.8],[51,36.5,313.5],[51.5,36.5,51.4],[52,36.5,114.3],[52.5,36.5,173.8],[53,36.5,86.6],[53.5,36.5,81.2],[54,36.5,17],[54.5,36.5,8.4],[55,36.5,5.3],[55.5,36.5,5.3],[56,36.5,5.3],[56.5,36.5,17.4],[57,36.5,28.5],[57.5,36.5,28.5],[58,36.5,44],[58.5,36.5,53.1],[59,36.5,127.4],[59.5,36.5,181.2],[60,36.5,168.3],[60.5,36.5,36],[61,36.5,14.3],[61.5,36.5,14.9],[62,36.5,7.4],[62.5,36.5,5.8],[63,36.5,8.2],[63.5,36.5,13.4],[64,36.5,17.1],[64.5,36.5,39.5],[65,36.5,36.2],[65.5,36.5,46.8],[66,36.5,55.8],[66.5,36.5,55.8],[67,36.5,38],[67.5,36.5,36.7],[68,36.5,51.3],[68.5,36.5,89.5],[69,36.5,56.6],[69.5,36.5,22.3],[70,36.5,16.3],[70.5,36.5,12.9],[71,36.5,10.5],[71.5,36.5,24.7],[72,36.5,28.1],[72.5,36.5,53.9],[73,36.5,67.4],[73.5,36.5,67.4],[74,36.5,67.4],[74.5,36.5,67.4],[75,36.5,67.4],[75.5,36.5,67.2],[76,36.5,2],[76.5,36.5,1.6],[77,36.5,12.5],[77.5,36.5,10.5],[78,36.5,5.4],[78.5,36.5,10.6],[79,36.5,16.9],[79.5,36.5,16.9],[80,36.5,9.1],[80.5,36.5,4.4],[81,36.5,4.5],[81.5,36.5,5.6],[82,36.5,5.6],[82.5,36.5,1.4],[92,36.5,1.3],[92.5,36.5,1.4],[93,36.5,1.4],[93.5,36.5,1.4],[94,36.5,1.4],[94.5,36.5,1.4],[95,36.5,1.4],[95.5,36.5,1.2],[96,36.5,1.1],[96.5,36.5,1.1],[97,36.5,1.1],[97.5,36.5,1.1],[98,36.5,1.1],[98.5,36.5,1.1],[99,36.5,6],[99.5,36.5,6.8],[100,36.5,7.5],[100.5,36.5,8.2],[101,36.5,24.5],[101.5,36.5,74.3],[102,36.5,85.3],[102.5,36.5,242.6],[103,36.5,322.9],[103.5,36.5,473.3],[104,36.5,122.2],[104.5,36.5,107.8],[105,36.5,106.6],[105.5,36.5,99.8],[106,36.5,125.4],[106.5,36.5,82.2],[107,36.5,80.6],[107.5,36.5,88.9],[108,36.5,47.6],[108.5,36.5,39.3],[109,36.5,34.3],[109.5,36.5,74.6],[110,36.5,47],[110.5,36.5,67.4],[111,36.5,304.5],[111.5,36.5,356.4],[112,36.5,55.2],[112.5,36.5,260.4],[113,36.5,515.8],[113.5,36.5,371.1],[114,36.5,1026.4],[114.5,36.5,784.2],[115,36.5,760.5],[115.5,36.5,690.3],[116,36.5,562.8],[116.5,36.5,658.3],[117,36.5,738.5],[117.5,36.5,602.2],[118,36.5,427.5],[118.5,36.5,476.9],[119,36.5,507.3],[119.5,36.5,514],[120,36.5,1156.7],[120.5,36.5,1203],[125.5,36.5,140.7],[126,36.5,154.1],[126.5,36.5,204.5],[127,36.5,714.4],[127.5,36.5,122.7],[128,36.5,216],[128.5,36.5,97.2],[129,36.5,221.9],[129.5,36.5,460.8],[132.5,36.5,68.6],[133,36.5,73.7],[135.5,36.5,123.1],[136,36.5,382.6],[136.5,36.5,147.6],[137,36.5,57.1],[137.5,36.5,140.3],[138,36.5,270.3],[138.5,36.5,197.8],[139,36.5,941.7],[139.5,36.5,841],[140,36.5,492.3],[140.5,36.5,732.8],[-122,36,1.4],[-121.5,36,6.4],[-121,36,19],[-120.5,36,6.6],[-120,36,4.6],[-119.5,36,42.4],[-119,36,3.6],[-118.5,36,2.4],[-118,36,12.6],[-116,36,2.4],[-115.5,36,14.9],[-115,36,11.6],[-112,36,1.1],[-111.5,36,1.1],[-111,36,1.7],[-110.5,36,2.1],[-110,36,2.3],[-109.5,36,4.6],[-109,36,12.8],[-108.5,36,3],[-108,36,1.2],[-107,36,2.5],[-106.5,36,29.4],[-106,36,30.3],[-105.5,36,8.6],[-103,36,1.4],[-102.5,36,1.5],[-102,36,9.6],[-101.5,36,7.9],[-101,36,7.9],[-100.5,36,1.7],[-100,36,1.2],[-99.5,36,2.8],[-99,36,7.7],[-98.5,36,5.7],[-98,36,111.5],[-97.5,36,52.2],[-97,36,13.8],[-96.5,36,21.1],[-96,36,33.6],[-95.5,36,35],[-95,36,19.5],[-94.5,36,17.7],[-94,36,6.8],[-93.5,36,3.8],[-93,36,4.7],[-92.5,36,9.9],[-92,36,16.2],[-91.5,36,10.4],[-91,36,35.5],[-90.5,36,14.3],[-90,36,29.5],[-89.5,36,19.6],[-89,36,52],[-88.5,36,15.8],[-88,36,8.8],[-87.5,36,33.7],[-87,36,67.8],[-86.5,36,63.7],[-86,36,26.3],[-85.5,36,20.1],[-85,36,29.8],[-84.5,36,103.2],[-84,36,98.9],[-83.5,36,23.6],[-83,36,68.7],[-82.5,36,42],[-82,36,57.8],[-81.5,36,95.9],[-81,36,84.9],[-80.5,36,104.9],[-80,36,76.6],[-79.5,36,60.7],[-79,36,289.8],[-78.5,36,65.7],[-78,36,74.6],[-77.5,36,58.8],[-77,36,14.6],[-76.5,36,4.7],[-76,36,12.5],[-75.5,36,43.8],[-6.5,36,903.6],[-6,36,467.2],[-5.5,36,290.6],[-3.5,36,542.5],[-1.5,36,174.5],[-1,36,555.5],[-0.5,36,391],[0,36,185.6],[0.5,36,136.3],[1,36,116],[1.5,36,94.5],[2,36,100.4],[2.5,36,92.4],[3,36,64.8],[3.5,36,73.8],[4,36,61.2],[4.5,36,84.9],[5,36,147.2],[5.5,36,135.3],[6,36,100.3],[6.5,36,81.5],[7,36,78.1],[7.5,36,83],[8,36,51.6],[8.5,36,53.2],[9,36,57.4],[9.5,36,83.5],[10,36,142.8],[10.5,36,332.4],[11,36,246.2],[12,36,218.5],[12.5,36,218.5],[14,36,1223.2],[14.5,36,2383.6],[23,36,2.5],[23.5,36,68.9],[24,36,465.6],[25.5,36,32.8],[26,36,6.4],[26.5,36,6.5],[27,36,18.2],[27.5,36,8.8],[34,36,27.7],[34.5,36,27.7],[35.5,36,427.4],[36,36,285.7],[36.5,36,154.1],[37,36,94.7],[37.5,36,78.1],[38,36,73.5],[38.5,36,72.7],[39,36,72.5],[39.5,36,35.7],[40,36,34],[40.5,36,112.9],[41,36,116.8],[41.5,36,50.6],[42,36,50.6],[42.5,36,50.6],[43,36,58.3],[43.5,36,79.5],[44,36,106.9],[44.5,36,101.4],[45,36,88.1],[45.5,36,87.5],[46,36,60.2],[46.5,36,55.7],[47,36,40],[47.5,36,28.7],[48,36,38.9],[48.5,36,58.1],[49,36,71.4],[49.5,36,75.5],[50,36,68.4],[50.5,36,362.9],[51,36,3440.3],[51.5,36,278],[52,36,60],[52.5,36,24.2],[53,36,28.5],[53.5,36,17.1],[54,36,8.5],[54.5,36,6.1],[55,36,5.3],[55.5,36,5.3],[56,36,5.3],[56.5,36,8],[57,36,26],[57.5,36,28.7],[58,36,30.2],[58.5,36,29.2],[59,36,55.6],[59.5,36,83],[60,36,106],[60.5,36,87],[61,36,21.3],[61.5,36,6.1],[62,36,5.6],[62.5,36,5.6],[63,36,8.5],[63.5,36,21.3],[64,36,34.5],[64.5,36,90.6],[65,36,28.1],[65.5,36,14.4],[66,36,47.9],[66.5,36,31],[67,36,27.1],[67.5,36,18.9],[68,36,26.3],[68.5,36,61.8],[69,36,25.2],[69.5,36,20.2],[70,36,12.3],[70.5,36,2.2],[71,36,7.7],[71.5,36,40.8],[72,36,159],[72.5,36,118.9],[73,36,70.8],[73.5,36,67.9],[74,36,67.4],[74.5,36,67.4],[75,36,67.4],[75.5,36,67.4],[76,36,54.3],[76.5,36,9.9],[77,36,13.3],[77.5,36,11.1],[78,36,5.2],[78.5,36,3.5],[79,36,2.6],[79.5,36,10.3],[80,36,9.4],[80.5,36,4.4],[81,36,4.4],[81.5,36,5.5],[82,36,4.3],[82.5,36,1.6],[94,36,1],[94.5,36,1.3],[95,36,1.3],[95.5,36,1.2],[96,36,1.1],[96.5,36,1.1],[97,36,1.1],[97.5,36,1.1],[98,36,1.1],[99,36,3],[99.5,36,5.1],[100,36,7.5],[100.5,36,9.8],[101,36,13.3],[101.5,36,26.5],[102,36,43.3],[102.5,36,144.7],[103,36,290.8],[103.5,36,257.9],[104,36,137.7],[104.5,36,119.1],[105,36,116.9],[105.5,36,172.3],[106,36,150],[106.5,36,186.3],[107,36,155.9],[107.5,36,212.8],[108,36,154.5],[108.5,36,68],[109,36,66.6],[109.5,36,61.4],[110,36,126.5],[110.5,36,359.3],[111,36,469],[111.5,36,279.9],[112,36,140.1],[112.5,36,385.8],[113,36,239],[113.5,36,486.9],[114,36,569.4],[114.5,36,673],[115,36,865.1],[115.5,36,683.8],[116,36,792.9],[116.5,36,848.3],[117,36,618.6],[117.5,36,531.1],[118,36,434.6],[118.5,36,513.1],[119,36,430.1],[119.5,36,414],[120,36,650.5],[126,36,142.2],[126.5,36,368],[127,36,369.8],[127.5,36,70.4],[128,36,155.9],[128.5,36,1109.5],[129,36,523.1],[129.5,36,437.6],[132.5,36,449.4],[133,36,414.4],[133.5,36,171],[134,36,202.4],[134.5,36,127.9],[135,36,163.9],[135.5,36,106.3],[136,36,135.2],[136.5,36,90.1],[137,36,56.4],[137.5,36,107.8],[138,36,132.3],[138.5,36,231.4],[139,36,2003.7],[139.5,36,7906.2],[140,36,1343.6],[140.5,36,509.9],[-121.5,35.5,2.6],[-121,35.5,103.2],[-120.5,35.5,10.1],[-120,35.5,2.8],[-119.5,35.5,116.3],[-119,35.5,68.1],[-118.5,35.5,9.8],[-118,35.5,4.1],[-117.5,35.5,1.4],[-115,35.5,15.3],[-114.5,35.5,12.4],[-114,35.5,7.7],[-113,35.5,1.1],[-112.5,35.5,1.6],[-112,35.5,22.9],[-111.5,35.5,3.5],[-111,35.5,4.2],[-110.5,35.5,1.9],[-110,35.5,1.9],[-109.5,35.5,3.6],[-109,35.5,7.7],[-108.5,35.5,2.7],[-108,35.5,6.3],[-107.5,35.5,1.9],[-107,35.5,219.5],[-106.5,35.5,23.6],[-106,35.5,3.6],[-105.5,35.5,1.4],[-104,35.5,2.9],[-102.5,35.5,3.2],[-102,35.5,78.3],[-101.5,35.5,1.9],[-101,35.5,1.6],[-100.5,35.5,1.7],[-100,35.5,4.4],[-99.5,35.5,8.2],[-99,35.5,5.5],[-98.5,35.5,10.5],[-98,35.5,132.5],[-97.5,35.5,126.3],[-97,35.5,27.8],[-96.5,35.5,11.2],[-96,35.5,10],[-95.5,35.5,8.8],[-95,35.5,20.6],[-94.5,35.5,63],[-94,35.5,15.1],[-93.5,35.5,27],[-93,35.5,17.5],[-92.5,35.5,34.6],[-92,35.5,26.8],[-91.5,35.5,6.3],[-91,35.5,14.6],[-90.5,35.5,110],[-90,35.5,280.5],[-89.5,35.5,15.2],[-89,35.5,17],[-88.5,35.5,15.4],[-88,35.5,9.2],[-87.5,35.5,24.1],[-87,35.5,23.5],[-86.5,35.5,36.1],[-86,35.5,17.8],[-85.5,35.5,119],[-85,35.5,57.2],[-84.5,35.5,16.4],[-84,35.5,14.1],[-83.5,35.5,26.7],[-83,35.5,42.1],[-82.5,35.5,60.2],[-82,35.5,73.2],[-81.5,35.5,127.6],[-81,35.5,348.9],[-80.5,35.5,38.7],[-80,35.5,21.3],[-79.5,35.5,75.6],[-79,35.5,110.6],[-78.5,35.5,38.3],[-78,35.5,57.6],[-77.5,35.5,33],[-77,35.5,13.6],[-76.5,35.5,4.1],[-76,35.5,28.4],[-75.5,35.5,43.8],[-6.5,35.5,322.1],[-6,35.5,226.2],[-5.5,35.5,144.1],[-5,35.5,102.4],[-4.5,35.5,110.7],[-4,35.5,112.2],[-3.5,35.5,112.9],[-3,35.5,185.7],[-2.5,35.5,118.7],[-2,35.5,93.7],[-1.5,35.5,113.3],[-1,35.5,137.3],[-0.5,35.5,97.5],[0,35.5,119],[0.5,35.5,80.4],[1,35.5,38.2],[1.5,35.5,38.2],[2,35.5,38.6],[2.5,35.5,31.5],[3,35.5,26],[3.5,35.5,44],[4,35.5,52],[4.5,35.5,56.3],[5,35.5,80.6],[5.5,35.5,65.4],[6,35.5,82.5],[6.5,35.5,49.3],[7,35.5,36.7],[7.5,35.5,46.4],[8,35.5,46.6],[8.5,35.5,51],[9,35.5,53.2],[9.5,35.5,71.2],[10,35.5,108.1],[10.5,35.5,122.8],[11,35.5,123.1],[12.5,35.5,218.5],[23.5,35.5,29.7],[24,35.5,56.3],[24.5,35.5,45.1],[25,35.5,139.3],[25.5,35.5,49.3],[26,35.5,25.8],[26.5,35.5,14.1],[27,35.5,25.9],[32,35.5,22.8],[32.5,35.5,18.8],[33,35.5,160.2],[33.5,35.5,41.6],[34,35.5,44.8],[35.5,35.5,447.4],[36,35.5,387.5],[36.5,35.5,304.5],[37,35.5,326.4],[37.5,35.5,276.8],[38,35.5,164.8],[38.5,35.5,30],[39,35.5,35.3],[39.5,35.5,25.9],[40,35.5,25.9],[40.5,35.5,25.9],[41,35.5,30.9],[41.5,35.5,46],[42,35.5,50.5],[42.5,35.5,50.6],[43,35.5,53.7],[43.5,35.5,109.1],[44,35.5,103.6],[44.5,35.5,64.9],[45,35.5,76.3],[45.5,35.5,85.2],[46,35.5,55],[46.5,35.5,112.6],[47,35.5,96.8],[47.5,35.5,55.4],[48,35.5,62.8],[48.5,35.5,74.7],[49,35.5,64.3],[49.5,35.5,26.7],[50,35.5,26.8],[50.5,35.5,83],[51,35.5,216.2],[51.5,35.5,235.4],[52,35.5,15.8],[52.5,35.5,12.4],[53,35.5,10.5],[53.5,35.5,10.4],[54,35.5,7.9],[54.5,35.5,5.3],[55,35.5,5.3],[55.5,35.5,5.3],[56,35.5,5.6],[56.5,35.5,15.7],[57,35.5,20.2],[57.5,35.5,28.5],[58,35.5,23.9],[58.5,35.5,22],[59,35.5,24.5],[59.5,35.5,24.6],[60,35.5,30.3],[60.5,35.5,32.8],[61,35.5,16.5],[61.5,35.5,9.2],[62,35.5,16.3],[62.5,35.5,18.5],[63,35.5,17.4],[63.5,35.5,11.8],[64,35.5,11.9],[64.5,35.5,18.8],[65,35.5,13.8],[65.5,35.5,10.5],[66,35.5,10.9],[66.5,35.5,13.9],[67,35.5,15.7],[67.5,35.5,14.2],[68,35.5,11.2],[68.5,35.5,34.3],[69,35.5,173.1],[69.5,35.5,68],[70,35.5,18.5],[70.5,35.5,18.7],[71,35.5,31.2],[71.5,35.5,166.2],[72,35.5,229.3],[72.5,35.5,140.3],[73,35.5,78.1],[73.5,35.5,124.6],[74,35.5,76.4],[74.5,35.5,67.4],[75,35.5,67.4],[75.5,35.5,67.4],[76,35.5,67.4],[76.5,35.5,66],[77,35.5,23.2],[77.5,35.5,1.9],[78,35.5,1.6],[78.5,35.5,1.6],[79,35.5,1.6],[79.5,35.5,1.6],[80,35.5,1.7],[81.5,35.5,1.4],[99,35.5,2.6],[99.5,35.5,5],[100,35.5,7.6],[100.5,35.5,9.8],[101,35.5,8.7],[101.5,35.5,10.1],[102,35.5,16.6],[102.5,35.5,20.7],[103,35.5,111.2],[103.5,35.5,168.3],[104,35.5,176],[104.5,35.5,183.7],[105,35.5,187.5],[105.5,35.5,263.1],[106,35.5,221.5],[106.5,35.5,136.6],[107,35.5,139.7],[107.5,35.5,190.2],[108,35.5,193.3],[108.5,35.5,187.6],[109,35.5,348.1],[109.5,35.5,377.4],[110,35.5,352.4],[110.5,35.5,422.1],[111,35.5,298.8],[111.5,35.5,200.5],[112,35.5,294.5],[112.5,35.5,473.4],[113,35.5,890.5],[113.5,35.5,936.7],[114,35.5,509.7],[114.5,35.5,668.3],[115,35.5,696.5],[115.5,35.5,715.5],[116,35.5,683.4],[116.5,35.5,697],[117,35.5,709.4],[117.5,35.5,608.8],[118,35.5,835.9],[118.5,35.5,651],[119,35.5,584.3],[119.5,35.5,555.8],[125.5,35.5,1453.7],[126,35.5,357.1],[126.5,35.5,639.5],[127,35.5,141.5],[127.5,35.5,131.2],[128,35.5,280],[128.5,35.5,946.3],[129,35.5,2815.3],[132,35.5,101.6],[132.5,35.5,140.2],[133,35.5,157.7],[133.5,35.5,94.6],[134,35.5,130],[134.5,35.5,89.4],[135,35.5,155.4],[135.5,35.5,502.3],[136,35.5,355.1],[136.5,35.5,2057.8],[137,35.5,733.3],[137.5,35.5,58.3],[138,35.5,229.7],[138.5,35.5,530.9],[139,35.5,1874.3],[139.5,35.5,2764.5],[140,35.5,424.1],[-121,35,26.4],[-120.5,35,70.6],[-120,35,2.3],[-119.5,35,2.4],[-119,35,10.2],[-118.5,35,112],[-118,35,21.3],[-117.5,35,38.6],[-117,35,6.1],[-116.5,35,2.4],[-115,35,6.4],[-114.5,35,8],[-113,35,6.8],[-112.5,35,35.6],[-112,35,14.3],[-111,35,1.7],[-110.5,35,2.9],[-110,35,1.7],[-108,35,1.2],[-107.5,35,1.3],[-107,35,32.9],[-106.5,35,8],[-106,35,1.7],[-103.5,35,1.9],[-103,35,2.5],[-102.5,35,9.2],[-102,35,8.4],[-101,35,2.1],[-100.5,35,2.2],[-100,35,2.8],[-99.5,35,12.5],[-99,35,8.4],[-98.5,35,43.1],[-98,35,16],[-97.5,35,13.4],[-97,35,16],[-96.5,35,4.6],[-96,35,13.4],[-95.5,35,4.5],[-95,35,5.6],[-94.5,35,9.5],[-94,35,3.5],[-93.5,35,15.3],[-93,35,31],[-92.5,35,157.9],[-92,35,14.4],[-91.5,35,6.8],[-91,35,17.1],[-90.5,35,29.8],[-90,35,41.2],[-89.5,35,14.1],[-89,35,24.7],[-88.5,35,17.4],[-88,35,50.5],[-87.5,35,36.5],[-87,35,132.7],[-86.5,35,24.1],[-86,35,24.6],[-85.5,35,73.4],[-85,35,54.9],[-84.5,35,20.4],[-84,35,29.3],[-83.5,35,30.8],[-83,35,89.3],[-82.5,35,184],[-82,35,60.8],[-81.5,35,42.5],[-81,35,55.4],[-80.5,35,22.9],[-80,35,37.6],[-79.5,35,50.4],[-79,35,39.7],[-78.5,35,16.6],[-78,35,25.5],[-77.5,35,66.7],[-77,35,57.9],[-76.5,35,12.4],[-7,35,229.3],[-6.5,35,219.8],[-6,35,168.8],[-5.5,35,126.4],[-5,35,116.5],[-4.5,35,102],[-4,35,80.2],[-3.5,35,90.4],[-3,35,81.5],[-2.5,35,166],[-2,35,139],[-1.5,35,91.1],[-1,35,75.5],[-0.5,35,58.8],[0,35,38.4],[0.5,35,38.2],[1,35,38.2],[1.5,35,38.2],[2,35,32.4],[2.5,35,26.4],[3,35,26],[3.5,35,34.3],[4,35,48.1],[4.5,35,38.7],[5,35,31],[5.5,35,29.6],[6,35,30.8],[6.5,35,39.3],[7,35,37.8],[7.5,35,45],[8,35,46],[8.5,35,48.1],[9,35,51.6],[9.5,35,60.9],[10,35,109.8],[10.5,35,111.4],[11,35,111.4],[23.5,35,2.3],[24,35,2.3],[24.5,35,47.7],[25,35,30.4],[25.5,35,42.6],[26,35,12.6],[32,35,137.6],[32.5,35,41.6],[33,35,111.8],[33.5,35,235.4],[34,35,107.5],[35.5,35,445.8],[36,35,251.6],[36.5,35,57.9],[37,35,50.6],[37.5,35,22],[38,35,17.1],[38.5,35,13],[39,35,13.3],[39.5,35,22.9],[40,35,25.9],[40.5,35,25.9],[41,35,15.3],[41.5,35,11.7],[42,35,13.2],[42.5,35,17.7],[43,35,36.5],[43.5,35,40.2],[44,35,43.6],[44.5,35,43.3],[45,35,71.9],[45.5,35,71.5],[46,35,54.6],[46.5,35,86.3],[47,35,112.5],[47.5,35,90.6],[48,35,94.7],[48.5,35,154.5],[49,35,130.6],[49.5,35,30.6],[50,35,58.5],[50.5,35,86.3],[51,35,90.9],[51.5,35,95.9],[52,35,9.2],[52.5,35,9.5],[53,35,10.4],[53.5,35,10.4],[54,35,8.1],[54.5,35,5.3],[55,35,5.3],[55.5,35,5.3],[56,35,4.2],[56.5,35,2.3],[57,35,1.6],[57.5,35,9.4],[58,35,15.4],[58.5,35,19.7],[59,35,23.5],[59.5,35,17.7],[60,35,18.3],[60.5,35,27.3],[61,35,11.8],[61.5,35,13],[62,35,45.8],[62.5,35,25],[63,35,25],[63.5,35,12.9],[64,35,6.8],[64.5,35,9.1],[65,35,11.7],[65.5,35,12],[66,35,23.9],[66.5,35,18.4],[67,35,21.9],[67.5,35,35.7],[68,35,34.9],[68.5,35,96.3],[69,35,635.3],[69.5,35,101.2],[70,35,93.3],[70.5,35,94.2],[71,35,111.2],[71.5,35,259.8],[72,35,278.4],[72.5,35,228.6],[73,35,221.6],[73.5,35,160.7],[74,35,143.1],[74.5,35,67.4],[75,35,21.8],[75.5,35,25.1],[76,35,15.4],[76.5,35,4.2],[77,35,1.6],[77.5,35,1.6],[78,35,1.6],[78.5,35,1.6],[79,35,1.6],[79.5,35,1.4],[90,35,1.3],[90.5,35,1.3],[91,35,1.1],[96.5,35,1.2],[97,35,1.1],[99,35,2.3],[99.5,35,2.9],[100,35,3.4],[100.5,35,6.1],[101,35,5.6],[101.5,35,6.7],[102,35,9.3],[102.5,35,14.2],[103,35,27.9],[103.5,35,68.9],[104,35,100],[104.5,35,157.7],[105,35,272.7],[105.5,35,224.1],[106,35,179.9],[106.5,35,168],[107,35,227.2],[107.5,35,266.7],[108,35,388.6],[108.5,35,582.3],[109,35,1226],[109.5,35,478.7],[110,35,357],[110.5,35,300.7],[111,35,317.7],[111.5,35,299.3],[112,35,881.9],[112.5,35,845.4],[113,35,769.3],[113.5,35,1237.4],[114,35,780],[114.5,35,751.4],[115,35,732.1],[115.5,35,688.2],[116,35,673.6],[116.5,35,814.4],[117,35,634.8],[117.5,35,771.1],[118,35,706.8],[118.5,35,536.9],[119,35,832.2],[119.5,35,760.3],[125,35,121.3],[125.5,35,121.3],[126,35,208.5],[126.5,35,118.6],[127,35,149.7],[127.5,35,428.5],[128,35,362.2],[128.5,35,396.8],[129,35,36.8],[131,35,175],[131.5,35,76.3],[132,35,78.4],[132.5,35,89.1],[133,35,176.8],[133.5,35,474.7],[134,35,270.5],[134.5,35,1110],[135,35,2930.3],[135.5,35,3233.5],[136,35,302.4],[136.5,35,1157.2],[137,35,993.6],[137.5,35,678.5],[138,35,585.7],[138.5,35,148.5],[139,35,267.9],[139.5,35,422.8],[-120.5,34.5,2.9],[-120,34.5,322],[-119.5,34.5,296.8],[-119,34.5,437.9],[-118.5,34.5,1632.6],[-118,34.5,532.5],[-117.5,34.5,373.1],[-117,34.5,15.6],[-116.5,34.5,19.1],[-116,34.5,2],[-114.5,34.5,14.2],[-113.5,34.5,1.1],[-113,34.5,2.6],[-112.5,34.5,3],[-112,34.5,4.2],[-111.5,34.5,7.1],[-111,34.5,2.5],[-110.5,34.5,6.8],[-110,34.5,6.8],[-109.5,34.5,3.8],[-107,34.5,3.5],[-103.5,34.5,22.5],[-103,34.5,4],[-102.5,34.5,3.6],[-102,34.5,12.9],[-101.5,34.5,2.3],[-100.5,34.5,3],[-100,34.5,2.2],[-99.5,34.5,7.6],[-99,34.5,11.6],[-98.5,34.5,6.5],[-98,34.5,7.9],[-97.5,34.5,18.7],[-97,34.5,8.6],[-96.5,34.5,10.3],[-96,34.5,6.5],[-95.5,34.5,3.7],[-95,34.5,5.1],[-94.5,34.5,7.7],[-94,34.5,5.5],[-93.5,34.5,27.3],[-93,34.5,15.5],[-92.5,34.5,33.4],[-92,34.5,12],[-91.5,34.5,4.5],[-91,34.5,13.8],[-90.5,34.5,11.4],[-90,34.5,23.1],[-89.5,34.5,15.1],[-89,34.5,41.4],[-88.5,34.5,15],[-88,34.5,17.1],[-87.5,34.5,15.4],[-87,34.5,45],[-86.5,34.5,50.6],[-86,34.5,28.8],[-85.5,34.5,50.8],[-85,34.5,117.2],[-84.5,34.5,203.3],[-84,34.5,101.1],[-83.5,34.5,34.7],[-83,34.5,35.6],[-82.5,34.5,42],[-82,34.5,24.5],[-81.5,34.5,87.4],[-81,34.5,68.9],[-80.5,34.5,27.9],[-80,34.5,54.2],[-79.5,34.5,29.9],[-79,34.5,25.3],[-78.5,34.5,16.1],[-78,34.5,136.4],[-77.5,34.5,27.1],[-7,34.5,624.3],[-6.5,34.5,184.4],[-6,34.5,237],[-5.5,34.5,344.7],[-5,34.5,239.6],[-4.5,34.5,67],[-4,34.5,56.2],[-3.5,34.5,49.8],[-3,34.5,26.8],[-2.5,34.5,44.8],[-2,34.5,41.2],[-1.5,34.5,54.5],[-1,34.5,39.1],[-0.5,34.5,42.4],[0,34.5,14.1],[0.5,34.5,8.2],[1,34.5,23.1],[1.5,34.5,21.3],[2,34.5,13.5],[2.5,34.5,23.1],[3,34.5,23.3],[3.5,34.5,26],[4,34.5,31.9],[4.5,34.5,29.6],[5,34.5,24.2],[5.5,34.5,15.4],[6,34.5,16.3],[6.5,34.5,23.8],[7,34.5,34.6],[7.5,34.5,36.2],[8,34.5,35.6],[8.5,34.5,38.4],[9,34.5,36.3],[9.5,34.5,61.3],[10,34.5,105.5],[35.5,34.5,398],[36,34.5,109.4],[36.5,34.5,38.9],[37,34.5,13.6],[37.5,34.5,13],[38,34.5,13],[38.5,34.5,13],[39,34.5,13],[39.5,34.5,14.1],[40,34.5,22.6],[40.5,34.5,16.4],[41,34.5,10.4],[41.5,34.5,10.3],[42,34.5,10.3],[42.5,34.5,10.3],[43,34.5,29.6],[43.5,34.5,33.4],[44,34.5,36.6],[44.5,34.5,53.5],[45,34.5,52.6],[45.5,34.5,43.7],[46,34.5,49.3],[46.5,34.5,125.9],[47,34.5,153.5],[47.5,34.5,78.7],[48,34.5,96.7],[48.5,34.5,128.5],[49,34.5,87],[49.5,34.5,91.2],[50,34.5,64],[50.5,34.5,63.2],[51,34.5,45.7],[51.5,34.5,42.5],[52,34.5,33.8],[52.5,34.5,5.2],[53,34.5,3.9],[53.5,34.5,3.9],[54,34.5,2.6],[54.5,34.5,2.4],[55,34.5,2.5],[55.5,34.5,2.4],[56,34.5,1.2],[56.5,34.5,1.2],[57,34.5,4],[57.5,34.5,5.8],[58,34.5,8.1],[58.5,34.5,12.4],[59,34.5,12.5],[59.5,34.5,12.1],[60,34.5,12.4],[60.5,34.5,10.5],[61,34.5,8.9],[61.5,34.5,25.6],[62,34.5,177.3],[62.5,34.5,35.7],[63,34.5,18.5],[63.5,34.5,10.5],[64,34.5,7.3],[64.5,34.5,7.4],[65,34.5,10.6],[65.5,34.5,18.7],[66,34.5,21.7],[66.5,34.5,31.7],[67,34.5,32.4],[67.5,34.5,31.8],[68,34.5,33],[68.5,34.5,100.7],[69,34.5,543.7],[69.5,34.5,48.7],[70,34.5,197.4],[70.5,34.5,155.3],[71,34.5,273.6],[71.5,34.5,941.4],[72,34.5,789.4],[72.5,34.5,478.3],[73,34.5,437.9],[73.5,34.5,71],[74,34.5,288.7],[74.5,34.5,542.3],[75,34.5,159.9],[75.5,34.5,13.7],[76,34.5,9.1],[76.5,34.5,4],[77,34.5,1.6],[77.5,34.5,1.6],[78,34.5,1.6],[78.5,34.5,1.6],[79,34.5,1.6],[90,34.5,1.4],[90.5,34.5,1.4],[91,34.5,1.4],[91.5,34.5,1.4],[92,34.5,1.3],[96.5,34.5,2.8],[97,34.5,2.8],[97.5,34.5,1.1],[98.5,34.5,1],[99,34.5,2.5],[99.5,34.5,3.4],[100,34.5,3.4],[100.5,34.5,3.6],[101,34.5,4.4],[101.5,34.5,4.6],[102,34.5,6.1],[102.5,34.5,8.1],[103,34.5,12.3],[103.5,34.5,28.8],[104,34.5,86.9],[104.5,34.5,104.5],[105,34.5,137.2],[105.5,34.5,158.6],[106,34.5,135.2],[106.5,34.5,95.9],[107,34.5,310.5],[107.5,34.5,315.1],[108,34.5,472.2],[108.5,34.5,1024.2],[109,34.5,852.5],[109.5,34.5,289.3],[110,34.5,172.7],[110.5,34.5,166.3],[111,34.5,141.9],[111.5,34.5,188.9],[112,34.5,316],[112.5,34.5,558.8],[113,34.5,719.6],[113.5,34.5,931.8],[114,34.5,569.2],[114.5,34.5,729.1],[115,34.5,813.3],[115.5,34.5,748.6],[116,34.5,675.5],[116.5,34.5,805.2],[117,34.5,1125.1],[117.5,34.5,665.4],[118,34.5,683.1],[118.5,34.5,727],[119,34.5,658.1],[119.5,34.5,582.4],[120,34.5,575.5],[125,34.5,106.2],[125.5,34.5,100.6],[126,34.5,100.5],[126.5,34.5,170],[127,34.5,122.8],[127.5,34.5,450.4],[129,34.5,70.9],[130.5,34.5,441.5],[131,34.5,234.7],[131.5,34.5,166.4],[132,34.5,640.9],[132.5,34.5,592.8],[133,34.5,605.9],[133.5,34.5,514.3],[134,34.5,460.6],[134.5,34.5,516.5],[135,34.5,929.2],[135.5,34.5,305.1],[136,34.5,51.2],[136.5,34.5,256.9],[139,34.5,91.8],[-120.5,34,3.6],[-120,34,3.6],[-118.5,34,3155.8],[-118,34,1217.8],[-117.5,34,290.7],[-117,34,84.9],[-116.5,34,94.3],[-116,34,2],[-115.5,34,1.1],[-115,34,6.5],[-114.5,34,2.1],[-113.5,34,2.9],[-113,34,5.8],[-112.5,34,420.8],[-112,34,125.8],[-111.5,34,1.2],[-111,34,2.3],[-110.5,34,1.2],[-110,34,1.1],[-107,34,1.6],[-105,34,1.1],[-103,34,1.7],[-102.5,34,13.8],[-102,34,85.5],[-101.5,34,2.8],[-100,34,1.3],[-99.5,34,1.9],[-99,34,34.7],[-98.5,34,12.6],[-98,34,7.1],[-97.5,34,14.2],[-97,34,44.2],[-96.5,34,18],[-96,34,15.1],[-95.5,34,10.8],[-95,34,8.6],[-94.5,34,10.4],[-94,34,13.9],[-93.5,34,6.7],[-93,34,10.6],[-92.5,34,8.7],[-92,34,10.9],[-91.5,34,8],[-91,34,18.6],[-90.5,34,15],[-90,34,13.5],[-89.5,34,11.3],[-89,34,18.9],[-88.5,34,24.6],[-88,34,14],[-87.5,34,31.6],[-87,34,150.1],[-86.5,34,39.8],[-86,34,55.5],[-85.5,34,40.9],[-85,34,232],[-84.5,34,796.5],[-84,34,99.1],[-83.5,34,54.2],[-83,34,8.3],[-82.5,34,40.8],[-82,34,49.1],[-81.5,34,66.5],[-81,34,45.3],[-80.5,34,45.9],[-80,34,22.1],[-79.5,34,35.7],[-79,34,101],[-78.5,34,66.6],[-78,34,92.9],[-8,34,3482.1],[-7.5,34,834.1],[-7,34,550.9],[-6.5,34,72.4],[-6,34,139.3],[-5.5,34,127],[-5,34,107.1],[-4.5,34,60.9],[-4,34,39.8],[-3.5,34,29],[-3,34,20.9],[-2.5,34,12.5],[-2,34,9.5],[-1.5,34,4.3],[-1,34,4.3],[-0.5,34,5.1],[0,34,2.9],[0.5,34,2.5],[1,34,2.6],[1.5,34,6.5],[2,34,11.8],[2.5,34,12.7],[3,34,13.8],[3.5,34,24.1],[4,34,26.2],[4.5,34,27.9],[5,34,19.6],[5.5,34,10.4],[6,34,11.1],[6.5,34,12.2],[7,34,12.2],[7.5,34,21.2],[8,34,18.2],[8.5,34,7.7],[9,34,18],[9.5,34,44.4],[10,34,46],[10.5,34,50.3],[11,34,50.3],[35,34,952.9],[35.5,34,637.9],[36,34,75.8],[36.5,34,66.8],[37,34,55.5],[37.5,34,17.1],[38,34,13],[38.5,34,13],[39,34,12.5],[39.5,34,11.2],[40,34,10.3],[40.5,34,10.3],[41,34,10.3],[41.5,34,10.3],[42,34,10.3],[42.5,34,10.3],[43,34,10.5],[43.5,34,22.8],[44,34,476],[44.5,34,53.5],[45,34,52.9],[45.5,34,59.7],[46,34,67.2],[46.5,34,53.7],[47,34,66.5],[47.5,34,59.1],[48,34,68.5],[48.5,34,145.1],[49,34,80.5],[49.5,34,57.8],[50,34,54.6],[50.5,34,35],[51,34,39.5],[51.5,34,25.2],[52,34,10.6],[52.5,34,4.5],[53,34,1.7],[53.5,34,1.7],[54,34,1.7],[54.5,34,1.7],[55,34,1.6],[55.5,34,1.2],[56,34,1.2],[56.5,34,1.2],[57,34,3.3],[57.5,34,4.6],[58,34,5.3],[58.5,34,7.6],[59,34,10.1],[59.5,34,10.2],[60,34,10.1],[60.5,34,6.8],[61,34,5],[61.5,34,3.5],[62,34,8.2],[62.5,34,3.5],[63,34,10.2],[63.5,34,11.2],[64,34,12.6],[64.5,34,14.2],[65,34,14.7],[65.5,34,19.5],[66,34,20.4],[66.5,34,27.9],[67,34,23.2],[67.5,34,16.1],[68,34,288.5],[68.5,34,125.2],[69,34,82.3],[69.5,34,81.1],[70,34,112.4],[70.5,34,127],[71,34,221.9],[71.5,34,581.5],[72,34,260.7],[72.5,34,401.6],[73,34,732.3],[73.5,34,177],[74,34,222.5],[74.5,34,470.7],[75,34,291],[75.5,34,27.3],[76,34,13.1],[76.5,34,3.2],[77,34,1.9],[77.5,34,1.6],[78,34,1.6],[78.5,34,1.5],[90,34,1.2],[90.5,34,1.4],[91,34,1.4],[91.5,34,1.4],[92,34,1.4],[92.5,34,1.1],[96,34,2.6],[96.5,34,3.2],[97,34,3],[97.5,34,3],[98,34,2.9],[98.5,34,2.2],[99,34,2],[99.5,34,2.3],[100,34,2.7],[100.5,34,2.6],[101,34,3.2],[101.5,34,4.2],[102,34,4.9],[102.5,34,6.6],[103,34,7.3],[103.5,34,12.7],[104,34,44.7],[104.5,34,95.7],[105,34,137.4],[105.5,34,118.1],[106,34,67.1],[106.5,34,52.4],[107,34,83.2],[107.5,34,92.9],[108,34,92.6],[108.5,34,124.6],[109,34,94.8],[109.5,34,150.7],[110,34,133.4],[110.5,34,105.2],[111,34,115.2],[111.5,34,158.5],[112,34,226.7],[112.5,34,329.3],[113,34,852.4],[113.5,34,729.7],[114,34,819.1],[114.5,34,924.7],[115,34,849.5],[115.5,34,660],[116,34,624.5],[116.5,34,565.2],[117,34,536.2],[117.5,34,510.1],[118,34,578.1],[118.5,34,768],[119,34,790.7],[119.5,34,688.2],[120,34,522.1],[120.5,34,387.8],[126,34,535.1],[126.5,34,351.2],[127,34,122.8],[129.5,34,281.2],[130,34,2709.5],[130.5,34,975.7],[131,34,427.4],[131.5,34,201.9],[132,34,242.5],[132.5,34,374.8],[133,34,174.4],[133.5,34,186.4],[134,34,33.6],[134.5,34,347.6],[135,34,178.7],[135.5,34,47.4],[136,34,108.2],[139.5,34,15],[-120,33.5,69],[-119.5,33.5,69],[-119,33.5,2],[-118.5,33.5,20.6],[-118,33.5,526.5],[-117.5,33.5,376.1],[-117,33.5,26],[-116.5,33.5,2.8],[-116,33.5,9.1],[-115.5,33.5,2],[-113.5,33.5,2.1],[-113,33.5,4.6],[-112.5,33.5,220],[-112,33.5,432.2],[-111.5,33.5,12.6],[-111,33.5,8.5],[-110.5,33.5,1.4],[-110,33.5,1.4],[-109.5,33.5,1.2],[-107.5,33.5,3.5],[-106.5,33.5,1.7],[-106,33.5,6.8],[-105.5,33.5,1.2],[-105,33.5,16.1],[-104.5,33.5,4.3],[-103,33.5,2.5],[-102.5,33.5,7.2],[-102,33.5,9.1],[-101.5,33.5,2.2],[-100,33.5,2.6],[-99,33.5,7],[-98.5,33.5,3.7],[-98,33.5,16.2],[-97.5,33.5,104.5],[-97,33.5,218.8],[-96.5,33.5,30.3],[-96,33.5,17.4],[-95.5,33.5,9.3],[-95,33.5,17.9],[-94.5,33.5,47.1],[-94,33.5,8.4],[-93.5,33.5,13],[-93,33.5,17.4],[-92.5,33.5,5.3],[-92,33.5,9.1],[-91.5,33.5,21.4],[-91,33.5,15.8],[-90.5,33.5,12.9],[-90,33.5,11.7],[-89.5,33.5,11.2],[-89,33.5,19.1],[-88.5,33.5,16],[-88,33.5,47.7],[-87.5,33.5,32.6],[-87,33.5,162.4],[-86.5,33.5,30.9],[-86,33.5,10.5],[-85.5,33.5,23.2],[-85,33.5,63.2],[-84.5,33.5,85.9],[-84,33.5,20.2],[-83.5,33.5,27.1],[-83,33.5,10.9],[-82.5,33.5,79.5],[-82,33.5,33.1],[-81.5,33.5,16.7],[-81,33.5,22],[-80.5,33.5,59.7],[-80,33.5,14.1],[-79.5,33.5,28.9],[-16.5,33.5,102.2],[-9,33.5,149.9],[-8.5,33.5,145.6],[-8,33.5,488.5],[-7.5,33.5,188.4],[-7,33.5,86.4],[-6.5,33.5,64],[-6,33.5,50.3],[-5.5,33.5,40.5],[-5,33.5,20.6],[-4.5,33.5,13.3],[-4,33.5,12.9],[-3.5,33.5,13],[-3,33.5,4.6],[-2.5,33.5,3.8],[-2,33.5,3.9],[-1.5,33.5,4.3],[-1,33.5,4.3],[-0.5,33.5,4.3],[0,33.5,2.6],[0.5,33.5,2.5],[1,33.5,2.5],[1.5,33.5,2.5],[2,33.5,11.2],[2.5,33.5,11.8],[3,33.5,11.8],[3.5,33.5,13],[4,33.5,22.8],[4.5,33.5,25.6],[5,33.5,2.7],[5.5,33.5,2.3],[6,33.5,2.5],[6.5,33.5,11.1],[7,33.5,12.2],[7.5,33.5,11.3],[8,33.5,8],[8.5,33.5,7.7],[9,33.5,7.7],[9.5,33.5,24.2],[10,33.5,32.7],[10.5,33.5,33.8],[11,33.5,50.2],[11.5,33.5,45.5],[12,33.5,45],[35,33.5,329.4],[35.5,33.5,233.2],[36,33.5,120.1],[36.5,33.5,49.8],[37,33.5,65.5],[37.5,33.5,62.1],[38,33.5,24.6],[38.5,33.5,8.2],[39,33.5,10.3],[39.5,33.5,10.3],[40,33.5,10.3],[40.5,33.5,10.3],[41,33.5,10.3],[41.5,33.5,10.1],[42,33.5,10],[42.5,33.5,10.2],[43,33.5,9.9],[43.5,33.5,122.2],[44,33.5,1194.1],[44.5,33.5,835],[45,33.5,47.9],[45.5,33.5,46.2],[46,33.5,19.8],[46.5,33.5,17.3],[47,33.5,37.9],[47.5,33.5,38.5],[48,33.5,47.7],[48.5,33.5,55.4],[49,33.5,37.9],[49.5,33.5,25.7],[50,33.5,45.9],[50.5,33.5,67.2],[51,33.5,41.8],[51.5,33.5,24.3],[52,33.5,13],[52.5,33.5,4.2],[53,33.5,1.7],[53.5,33.5,1.7],[54,33.5,1.7],[54.5,33.5,1.7],[55,33.5,3],[55.5,33.5,1.4],[56,33.5,1.2],[56.5,33.5,1.2],[57,33.5,1.2],[57.5,33.5,2.7],[58,33.5,5.9],[58.5,33.5,9.9],[59,33.5,11.4],[59.5,33.5,11.7],[60,33.5,11.1],[60.5,33.5,5.2],[61,33.5,2.2],[61.5,33.5,8.8],[62,33.5,15.2],[62.5,33.5,13.8],[63,33.5,8.1],[63.5,33.5,6.6],[64,33.5,15.2],[64.5,33.5,16.2],[65,33.5,19.8],[65.5,33.5,22.3],[66,33.5,13.2],[66.5,33.5,19.4],[67,33.5,50],[67.5,33.5,54.8],[68,33.5,195.9],[68.5,33.5,61.7],[69,33.5,60.1],[69.5,33.5,87.9],[70,33.5,116.2],[70.5,33.5,173.1],[71,33.5,163.9],[71.5,33.5,175.2],[72,33.5,183.8],[72.5,33.5,360.5],[73,33.5,564.3],[73.5,33.5,187.4],[74,33.5,117.6],[74.5,33.5,140.7],[75,33.5,171.5],[75.5,33.5,71],[76,33.5,24.7],[76.5,33.5,10.4],[77,33.5,2.5],[77.5,33.5,1.6],[78,33.5,1.6],[78.5,33.5,1.5],[90.5,33.5,1.4],[91,33.5,1.4],[91.5,33.5,1.4],[92,33.5,1.4],[92.5,33.5,1.2],[93,33.5,1.1],[93.5,33.5,1.1],[94,33.5,1.1],[94.5,33.5,1.1],[95,33.5,1.1],[95.5,33.5,1.3],[96,33.5,5.7],[96.5,33.5,5.5],[97,33.5,3.7],[97.5,33.5,3.1],[98,33.5,3.1],[98.5,33.5,2.9],[99,33.5,2.1],[99.5,33.5,2.2],[100,33.5,2.4],[100.5,33.5,2.5],[101,33.5,4.2],[101.5,33.5,5.2],[102,33.5,5.9],[102.5,33.5,5.2],[103,33.5,5.8],[103.5,33.5,11.6],[104,33.5,23.7],[104.5,33.5,53.5],[105,33.5,105.8],[105.5,33.5,76.5],[106,33.5,88.1],[106.5,33.5,200.1],[107,33.5,300.1],[107.5,33.5,113.4],[108,33.5,86.3],[108.5,33.5,151.3],[109,33.5,103.7],[109.5,33.5,128.2],[110,33.5,132],[110.5,33.5,129.3],[111,33.5,192.4],[111.5,33.5,248.4],[112,33.5,520.3],[112.5,33.5,518.8],[113,33.5,395.1],[113.5,33.5,474.1],[114,33.5,689],[114.5,33.5,844.7],[115,33.5,935],[115.5,33.5,849.8],[116,33.5,624.3],[116.5,33.5,527.3],[117,33.5,610.7],[117.5,33.5,408.5],[118,33.5,362.6],[118.5,33.5,401.1],[119,33.5,509.4],[119.5,33.5,653.7],[120,33.5,606.6],[120.5,33.5,398.2],[126,33.5,256.3],[126.5,33.5,308.7],[129,33.5,176.3],[129.5,33.5,344.1],[130,33.5,574.3],[130.5,33.5,320.3],[131,33.5,109.6],[131.5,33.5,466.6],[132,33.5,214.6],[132.5,33.5,79.1],[133,33.5,89.7],[133.5,33.5,301.9],[134,33.5,74.4],[135.5,33.5,176.5],[139.5,33.5,130.7],[-119,33,2],[-118.5,33,2],[-117.5,33,1473.3],[-117,33,196.4],[-116.5,33,6.3],[-116,33,45.1],[-115.5,33,31.1],[-115,33,59],[-114.5,33,10.2],[-113,33,1.1],[-112.5,33,2.6],[-112,33,23.1],[-111.5,33,6.9],[-111,33,6.6],[-110.5,33,1.5],[-110,33,7.9],[-109.5,33,3.1],[-108.5,33,8.9],[-108,33,1.7],[-107.5,33,2.1],[-107,33,7.6],[-106.5,33,2.5],[-106,33,15.8],[-105.5,33,1],[-105,33,1.7],[-104.5,33,5.4],[-103.5,33,18.4],[-103,33,4.7],[-102.5,33,2.4],[-102,33,5.2],[-101,33,6.5],[-100.5,33,3.7],[-100,33,7.2],[-99.5,33,1.5],[-99,33,4.5],[-98.5,33,12.2],[-98,33,46.4],[-97.5,33,601.6],[-97,33,864.3],[-96.5,33,47.1],[-96,33,21],[-95.5,33,20.2],[-95,33,44.8],[-94.5,33,18.6],[-94,33,45.2],[-93.5,33,20.9],[-93,33,18.3],[-92.5,33,39.8],[-92,33,17.8],[-91.5,33,7.9],[-91,33,4.3],[-90.5,33,21.8],[-90,33,12.2],[-89.5,33,16.3],[-89,33,10.1],[-88.5,33,6.2],[-88,33,9.5],[-87.5,33,8.1],[-87,33,18],[-86.5,33,23.8],[-86,33,23.1],[-85.5,33,56.1],[-85,33,42.6],[-84.5,33,18],[-84,33,115.1],[-83.5,33,13.5],[-83,33,17.7],[-82.5,33,11.5],[-82,33,12.8],[-81.5,33,11.9],[-81,33,16.6],[-80.5,33,93.1],[-80,33,206.2],[-79.5,33,6.9],[-17.5,33,122],[-17,33,491.2],[-16.5,33,102.2],[-9.5,33,120.7],[-9,33,149],[-8.5,33,142.6],[-8,33,92.9],[-7.5,33,97.1],[-7,33,119.8],[-6.5,33,119.7],[-6,33,77.7],[-5.5,33,42.9],[-5,33,38.2],[-4.5,33,19.7],[-4,33,6],[-3.5,33,3.8],[-3,33,3.8],[-2.5,33,3.8],[-2,33,3.8],[-1.5,33,4.2],[-1,33,4.3],[-0.5,33,4.2],[0,33,2.5],[0.5,33,2.5],[1,33,2.5],[1.5,33,2.5],[2,33,5.5],[2.5,33,8.2],[3,33,7.9],[3.5,33,5.8],[4,33,4.4],[4.5,33,7.5],[5,33,2.4],[5.5,33,2.3],[6,33,2.3],[6.5,33,6.9],[7,33,12.2],[7.5,33,12.2],[8,33,10.3],[8.5,33,6.7],[9,33,6.2],[9.5,33,5.4],[10,33,3.7],[10.5,33,3.7],[11,33,37.6],[11.5,33,45.2],[12,33,48.6],[12.5,33,92.9],[13,33,445.3],[13.5,33,340.8],[14,33,107],[14.5,33,59.9],[20,33,73.9],[20.5,33,12],[21,33,11.8],[21.5,33,19.9],[22,33,7.3],[22.5,33,7],[23,33,7],[34.5,33,719.7],[35,33,393.2],[35.5,33,413.3],[36,33,154.4],[36.5,33,9.9],[37,33,22],[37.5,33,27.4],[38,33,5.1],[38.5,33,4.5],[39,33,9.3],[39.5,33,10.3],[40,33,10.3],[40.5,33,10.2],[41,33,9.5],[41.5,33,9],[42,33,8.9],[42.5,33,9],[43,33,8.9],[43.5,33,10],[44,33,227],[44.5,33,119.5],[45,33,47.1],[45.5,33,40],[46,33,37.6],[46.5,33,21.7],[47,33,12.6],[47.5,33,25.7],[48,33,63.5],[48.5,33,83.9],[49,33,65.7],[49.5,33,25.6],[50,33,27.7],[50.5,33,85],[51,33,141],[51.5,33,207.2],[52,33,130.8],[52.5,33,75.4],[53,33,2.2],[53.5,33,2.3],[54,33,2.6],[54.5,33,3.1],[55,33,3.3],[55.5,33,3.1],[56,33,1.9],[56.5,33,1.2],[57,33,1.2],[57.5,33,1.2],[58,33,6.8],[58.5,33,11.8],[59,33,11.8],[59.5,33,11.8],[60,33,11.8],[60.5,33,6.9],[61,33,2.6],[61.5,33,6.5],[62,33,15.6],[62.5,33,9.7],[63,33,4.8],[63.5,33,3.6],[64,33,8],[64.5,33,21.4],[65,33,25.9],[65.5,33,31.9],[66,33,16.7],[66.5,33,19.4],[67,33,21.1],[67.5,33,39.9],[68,33,22.5],[68.5,33,19.4],[69,33,51.2],[69.5,33,124.4],[70,33,167.2],[70.5,33,307.7],[71,33,180.5],[71.5,33,182.4],[72,33,155.7],[72.5,33,198.8],[73,33,320.5],[73.5,33,549.6],[74,33,555.7],[74.5,33,605.5],[75,33,300.9],[75.5,33,139.1],[76,33,76.3],[76.5,33,7.4],[77,33,2.7],[77.5,33,1.8],[78,33,1.5],[78.5,33,1.4],[79,33,1.5],[90.5,33,1.4],[91,33,1.4],[91.5,33,1.4],[92,33,2],[92.5,33,2.1],[93,33,1.8],[93.5,33,1.7],[94,33,1.5],[94.5,33,1.8],[95,33,1.4],[95.5,33,2.8],[96,33,4.4],[96.5,33,5.5],[97,33,5.5],[97.5,33,3.7],[98,33,3.1],[98.5,33,3.4],[99,33,5.8],[99.5,33,5.2],[100,33,4.5],[100.5,33,3.5],[101,33,5.3],[101.5,33,6.1],[102,33,5.2],[102.5,33,5.4],[103,33,8.4],[103.5,33,10.7],[104,33,28.6],[104.5,33,50.8],[105,33,74.6],[105.5,33,149.6],[106,33,141.1],[106.5,33,168.7],[107,33,161.6],[107.5,33,89],[108,33,124.9],[108.5,33,197.7],[109,33,146.1],[109.5,33,125.4],[110,33,145.3],[110.5,33,303],[111,33,167.2],[111.5,33,412.8],[112,33,603],[112.5,33,501],[113,33,301.9],[113.5,33,258.8],[114,33,356],[114.5,33,509.7],[115,33,702.6],[115.5,33,641.7],[116,33,643.3],[116.5,33,751.9],[117,33,556.6],[117.5,33,304.6],[118,33,285.2],[118.5,33,379.9],[119,33,536.6],[119.5,33,885.9],[120,33,690.1],[120.5,33,695.4],[121,33,848.8],[128.5,33,114.3],[129,33,127],[129.5,33,677.4],[130,33,408.9],[130.5,33,544.5],[131,33,43.7],[131.5,33,126.3],[132,33,158.7],[132.5,33,79.8],[133,33,71.4],[-117.5,32.5,724.8],[-117,32.5,430.1],[-116.5,32.5,16.3],[-116,32.5,39.7],[-115.5,32.5,52.8],[-115,32.5,20.5],[-114.5,32.5,11.4],[-114,32.5,5],[-113,32.5,1.6],[-112,32.5,1.8],[-111.5,32.5,73.7],[-111,32.5,223.5],[-110.5,32.5,5.7],[-110,32.5,3.1],[-109,32.5,1.8],[-108,32.5,8.1],[-107.5,32.5,3.4],[-107,32.5,46.9],[-106.5,32.5,3.5],[-105,32.5,1],[-104.5,32.5,11.9],[-103.5,32.5,1.6],[-103,32.5,4.4],[-102.5,32.5,26.1],[-102,32.5,5.8],[-101.5,32.5,9.3],[-101,32.5,3.8],[-100.5,32.5,7.4],[-100,32.5,48.7],[-99.5,32.5,4.2],[-99,32.5,7.1],[-98.5,32.5,12.5],[-98,32.5,18.5],[-97.5,32.5,45.4],[-97,32.5,37.2],[-96.5,32.5,26.8],[-96,32.5,21.2],[-95.5,32.5,66.4],[-95,32.5,38.1],[-94.5,32.5,16.4],[-94,32.5,86.7],[-93.5,32.5,9.8],[-93,32.5,10.2],[-92.5,32.5,23.9],[-92,32.5,13.8],[-91.5,32.5,8.2],[-91,32.5,22.4],[-90.5,32.5,140.6],[-90,32.5,21.7],[-89.5,32.5,13.3],[-89,32.5,29.6],[-88.5,32.5,8.2],[-88,32.5,8.4],[-87.5,32.5,13.8],[-87,32.5,10.7],[-86.5,32.5,101.2],[-86,32.5,13],[-85.5,32.5,21.8],[-85,32.5,55.1],[-84.5,32.5,16.8],[-84,32.5,17.7],[-83.5,32.5,15.2],[-83,32.5,13.1],[-82.5,32.5,19.2],[-82,32.5,26.1],[-81.5,32.5,71.9],[-81,32.5,78.8],[-80.5,32.5,20.4],[-65,32.5,995.6],[-9.5,32.5,116.2],[-9,32.5,118.6],[-8.5,32.5,114.6],[-8,32.5,78.3],[-7.5,32.5,85.7],[-7,32.5,100.4],[-6.5,32.5,86.8],[-6,32.5,84.3],[-5.5,32.5,31.5],[-5,32.5,18.6],[-4.5,32.5,15.8],[-4,32.5,10.5],[-3.5,32.5,5.8],[-3,32.5,3.4],[-2.5,32.5,3.1],[-2,32.5,3.2],[-1.5,32.5,3.2],[-1,32.5,3.4],[-0.5,32.5,2.8],[0,32.5,2.5],[0.5,32.5,2.5],[1,32.5,2.5],[1.5,32.5,2.5],[2,32.5,3],[2.5,32.5,4.1],[3,32.5,4.1],[3.5,32.5,4.1],[4,32.5,3.9],[4.5,32.5,2.5],[5,32.5,2.3],[5.5,32.5,2.3],[6,32.5,2.3],[6.5,32.5,2.9],[7,32.5,11.6],[7.5,32.5,12.2],[8,32.5,12.1],[8.5,32.5,8.6],[9,32.5,4.1],[9.5,32.5,3.7],[10,32.5,3.7],[10.5,32.5,3.5],[11,32.5,10.2],[11.5,32.5,18.5],[12,32.5,38.9],[12.5,32.5,47.4],[13,32.5,94.5],[13.5,32.5,29.1],[14,32.5,59],[14.5,32.5,87.5],[15,32.5,100],[19.5,32.5,73.9],[20,32.5,52.8],[20.5,32.5,11.6],[21,32.5,11.6],[21.5,32.5,19.6],[22,32.5,7.1],[22.5,32.5,7],[23,32.5,4.9],[23.5,32.5,1.7],[24,32.5,1.7],[24.5,32.5,1.7],[34.5,32.5,1971.6],[35,32.5,350.1],[35.5,32.5,347.3],[36,32.5,333.7],[36.5,32.5,13.9],[37,32.5,4.6],[37.5,32.5,4.5],[38,32.5,4.5],[38.5,32.5,4.5],[39,32.5,4.9],[39.5,32.5,8.2],[40,32.5,9.8],[40.5,32.5,9.3],[41,32.5,8.9],[41.5,32.5,8.9],[42,32.5,8.9],[42.5,32.5,8.9],[43,32.5,8.9],[43.5,32.5,11.7],[44,32.5,68.7],[44.5,32.5,131.9],[45,32.5,79.5],[45.5,32.5,43.6],[46,32.5,39.5],[46.5,32.5,34],[47,32.5,31.8],[47.5,32.5,39.7],[48,32.5,94],[48.5,32.5,72.5],[49,32.5,45.3],[49.5,32.5,45.6],[50,32.5,36.6],[50.5,32.5,107.5],[51,32.5,125.5],[51.5,32.5,109.8],[52,32.5,135.9],[52.5,32.5,123],[53,32.5,27.2],[53.5,32.5,37.4],[54,32.5,27.4],[54.5,32.5,3.3],[55,32.5,3],[55.5,32.5,2.9],[56,32.5,2.7],[56.5,32.5,2],[57,32.5,1.2],[57.5,32.5,1.2],[58,32.5,3.3],[58.5,32.5,9.2],[59,32.5,7],[59.5,32.5,2.9],[60,32.5,4.8],[60.5,32.5,6.5],[61,32.5,8.1],[61.5,32.5,10.4],[62,32.5,28.2],[62.5,32.5,11.6],[63,32.5,4.7],[63.5,32.5,2.9],[64,32.5,7.2],[64.5,32.5,28.3],[65,32.5,23],[65.5,32.5,10.4],[66,32.5,11],[66.5,32.5,13.3],[67,32.5,19.7],[67.5,32.5,11.2],[68,32.5,8.7],[68.5,32.5,2.1],[69,32.5,57.7],[69.5,32.5,120.8],[70,32.5,138.6],[70.5,32.5,141.8],[71,32.5,150.8],[71.5,32.5,157.9],[72,32.5,217.5],[72.5,32.5,457.6],[73,32.5,455.1],[73.5,32.5,650.5],[74,32.5,978.5],[74.5,32.5,746.8],[75,32.5,493.6],[75.5,32.5,373.3],[76,32.5,208.4],[76.5,32.5,73.8],[77,32.5,41.9],[77.5,32.5,9.8],[78,32.5,1.7],[90.5,32.5,1.2],[91,32.5,1.4],[91.5,32.5,1.5],[92,32.5,2.5],[92.5,32.5,3],[93,32.5,3.4],[93.5,32.5,3.7],[94,32.5,3.5],[94.5,32.5,4.4],[95,32.5,4.2],[95.5,32.5,4.1],[96,32.5,4.1],[96.5,32.5,4.7],[97,32.5,5.3],[97.5,32.5,5.1],[98,32.5,5.2],[98.5,32.5,5.6],[99,32.5,5.7],[99.5,32.5,6.9],[100,32.5,5.8],[100.5,32.5,5.3],[101,32.5,5.8],[101.5,32.5,8],[102,32.5,7.1],[102.5,32.5,10.7],[103,32.5,14.7],[103.5,32.5,24],[104,32.5,39],[104.5,32.5,87.1],[105,32.5,231.9],[105.5,32.5,204.1],[106,32.5,231],[106.5,32.5,203],[107,32.5,177.7],[107.5,32.5,128.2],[108,32.5,115.6],[108.5,32.5,84.7],[109,32.5,72.1],[109.5,32.5,99.1],[110,32.5,108],[110.5,32.5,99.8],[111,32.5,167.1],[111.5,32.5,304.9],[112,32.5,695.5],[112.5,32.5,337.2],[113,32.5,231.3],[113.5,32.5,277.6],[114,32.5,301],[114.5,32.5,368],[115,32.5,401.2],[115.5,32.5,402.9],[116,32.5,412.2],[116.5,32.5,397.1],[117,32.5,495.4],[117.5,32.5,370.3],[118,32.5,330.9],[118.5,32.5,1032.8],[119,32.5,993.3],[119.5,32.5,852.3],[120,32.5,912.6],[120.5,32.5,1045.8],[121,32.5,946.7],[121.5,32.5,907.2],[128,32.5,150.1],[129.5,32.5,107.9],[130,32.5,158.6],[130.5,32.5,99.9],[131,32.5,66.7],[131.5,32.5,245.6],[139.5,32.5,34.3],[-117,32,7.4],[-116.5,32,7.4],[-116,32,34.1],[-115.5,32,53],[-115,32,32.8],[-114.5,32,17.7],[-114,32,6.7],[-113.5,32,4.2],[-113,32,3.3],[-112.5,32,2.7],[-112,32,1.9],[-111.5,32,8.4],[-111,32,10.9],[-110.5,32,20.6],[-110,32,2.1],[-109.5,32,1.2],[-108,32,1.5],[-107.5,32,3.3],[-107,32,146.5],[-106.5,32,294.5],[-103.5,32,3.1],[-103,32,7.4],[-102.5,32,58.1],[-102,32,4],[-101,32,3.4],[-100.5,32,5],[-100,32,3.9],[-99.5,32,7.2],[-99,32,12.6],[-98.5,32,3.8],[-98,32,6.6],[-97.5,32,67.9],[-97,32,9.5],[-96.5,32,11],[-96,32,19.3],[-95.5,32,16],[-95,32,21.9],[-94.5,32,12.3],[-94,32,9.3],[-93.5,32,16.3],[-93,32,8.6],[-92.5,32,8.2],[-92,32,9.2],[-91.5,32,18.5],[-91,32,8.7],[-90.5,32,20.5],[-90,32,17.8],[-89.5,32,28.9],[-89,32,11.4],[-88.5,32,7.3],[-88,32,9.3],[-87.5,32,5.4],[-87,32,8.8],[-86.5,32,9.5],[-86,32,13.7],[-85.5,32,13],[-85,32,7.1],[-84.5,32,48.6],[-84,32,18],[-83.5,32,13.9],[-83,32,15.9],[-82.5,32,12.2],[-82,32,31],[-81.5,32,47],[-81,32,137.2],[-10,32,71.1],[-9.5,32,82.5],[-9,32,94.1],[-8.5,32,321.4],[-8,32,120.1],[-7.5,32,72.1],[-7,32,50.4],[-6.5,32,44],[-6,32,28],[-5.5,32,16],[-5,32,15.8],[-4.5,32,15.8],[-4,32,14.6],[-3.5,32,7.6],[-3,32,1.9],[-2.5,32,1.6],[-2,32,1.6],[-1.5,32,1.6],[-1,32,1.6],[-0.5,32,2.2],[0,32,2.5],[0.5,32,2.5],[1,32,2.5],[1.5,32,2.2],[2,32,3.7],[2.5,32,4.1],[3,32,4.1],[3.5,32,4.1],[4,32,3],[4.5,32,2.3],[5,32,2.3],[5.5,32,2.3],[6,32,2.3],[6.5,32,2.3],[7,32,4.3],[7.5,32,5.6],[8,32,6.2],[8.5,32,6.8],[9,32,4.6],[9.5,32,3.7],[10,32,3.1],[10.5,32,1.4],[11,32,1.1],[11.5,32,4.1],[12,32,10.4],[12.5,32,5],[13,32,2.2],[13.5,32,1.4],[14,32,2.7],[14.5,32,6],[15,32,1.4],[15.5,32,1.4],[19.5,32,73.9],[20,32,65.9],[20.5,32,20.4],[21,32,14.3],[21.5,32,16.8],[22,32,7],[22.5,32,7],[23,32,2.9],[23.5,32,1.7],[24,32,1.7],[24.5,32,1.7],[25,32,1.1],[25.5,32,2.9],[26,32,4],[26.5,32,3.9],[30,32,730.2],[30.5,32,699.6],[31,32,631],[31.5,32,2119.9],[34,32,5119.7],[34.5,32,767.4],[35,32,500.1],[35.5,32,495.4],[36,32,192.9],[36.5,32,60.6],[37,32,58.8],[37.5,32,13.1],[38,32,2.6],[38.5,32,1.8],[39,32,1.4],[39.5,32,1.4],[40,32,2.4],[40.5,32,5.5],[41,32,8.5],[41.5,32,8.9],[42,32,8.9],[42.5,32,8.9],[43,32,13.4],[43.5,32,24.2],[44,32,27.2],[44.5,32,84.1],[45,32,58.4],[45.5,32,65.6],[46,32,68.8],[46.5,32,35.5],[47,32,34],[47.5,32,33.9],[48,32,87.7],[48.5,32,103.1],[49,32,61.7],[49.5,32,50.3],[50,32,39.3],[50.5,32,35.4],[51,32,36.2],[51.5,32,33.8],[52,32,93.7],[52.5,32,101.8],[53,32,67],[53.5,32,31.4],[54,32,32.7],[54.5,32,4.1],[55,32,2.8],[55.5,32,4.6],[56,32,10],[56.5,32,13.4],[57,32,10.4],[57.5,32,6.1],[58,32,2],[58.5,32,1.2],[59,32,1.2],[59.5,32,1.2],[60,32,1.2],[60.5,32,2.5],[61,32,5],[61.5,32,5.6],[62,32,3],[62.5,32,2.5],[63,32,6.4],[63.5,32,13.2],[64,32,26.1],[64.5,32,46.1],[65,32,17.1],[65.5,32,168.1],[66,32,8],[66.5,32,9],[67,32,9.1],[67.5,32,12.9],[68,32,13.5],[68.5,32,8.1],[69,32,19.1],[69.5,32,40.6],[70,32,125],[70.5,32,126.4],[71,32,136.2],[71.5,32,140.7],[72,32,329.4],[72.5,32,403.8],[73,32,608.7],[73.5,32,608],[74,32,1289.9],[74.5,32,772.2],[75,32,791.7],[75.5,32,498.5],[76,32,265.7],[76.5,32,304.7],[77,32,103.3],[77.5,32,142.4],[78,32,14.2],[78.5,32,4.2],[91,32,2.4],[91.5,32,3.4],[92,32,4.1],[92.5,32,4.7],[93,32,4.2],[93.5,32,5],[94,32,5.5],[94.5,32,5.6],[95,32,5.6],[95.5,32,5.2],[96,32,6.2],[96.5,32,6.6],[97,32,7.6],[97.5,32,6.5],[98,32,5.1],[98.5,32,5.5],[99,32,5.5],[99.5,32,7],[100,32,7.5],[100.5,32,7.9],[101,32,7.4],[101.5,32,12.3],[102,32,10.9],[102.5,32,10.5],[103,32,15.3],[103.5,32,90.2],[104,32,252.3],[104.5,32,456.9],[105,32,290.1],[105.5,32,349.6],[106,32,443.4],[106.5,32,475.8],[107,32,330.8],[107.5,32,202.4],[108,32,219.6],[108.5,32,162.1],[109,32,93.3],[109.5,32,108],[110,32,59.3],[110.5,32,54.1],[111,32,96.8],[111.5,32,154.7],[112,32,256.7],[112.5,32,260.3],[113,32,233.7],[113.5,32,341.2],[114,32,320.4],[114.5,32,257.1],[115,32,248.1],[115.5,32,208.2],[116,32,349.3],[116.5,32,433.4],[117,32,960.8],[117.5,32,510.3],[118,32,545.7],[118.5,32,1106.3],[119,32,505.7],[119.5,32,1072.5],[120,32,1256.9],[120.5,32,1274.4],[121,32,851.5],[121.5,32,751.5],[128,32,178.5],[129.5,32,61.3],[130,32,284.4],[130.5,32,316.1],[131,32,269.1],[-117,31.5,7.4],[-116.5,31.5,7.4],[-116,31.5,11],[-115.5,31.5,52.5],[-115,31.5,52.5],[-114.5,31.5,17.8],[-114,31.5,4.3],[-113.5,31.5,4.3],[-113,31.5,5.3],[-112.5,31.5,5],[-112,31.5,1.5],[-111.5,31.5,35.2],[-111,31.5,40.1],[-110.5,31.5,12.5],[-110,31.5,12.4],[-109.5,31.5,11.4],[-109,31.5,6.6],[-108.5,31.5,1.3],[-108,31.5,1.8],[-107.5,31.5,1.9],[-107,31.5,172.4],[-106.5,31.5,153],[-106,31.5,3.2],[-104,31.5,2.5],[-103.5,31.5,2.4],[-103,31.5,1.2],[-102.5,31.5,1.5],[-101,31.5,4.3],[-100.5,31.5,29.7],[-100,31.5,1.2],[-99.5,31.5,3.5],[-99,31.5,2.5],[-98.5,31.5,7.3],[-98,31.5,80.1],[-97.5,31.5,51],[-97,31.5,7.9],[-96.5,31.5,5.1],[-96,31.5,5.6],[-95.5,31.5,8.1],[-95,31.5,32.2],[-94.5,31.5,6.7],[-94,31.5,7],[-93.5,31.5,15.4],[-93,31.5,15.4],[-92.5,31.5,45.3],[-92,31.5,4.2],[-91.5,31.5,6.7],[-91,31.5,9.6],[-90.5,31.5,21.3],[-90,31.5,15.4],[-89.5,31.5,42.4],[-89,31.5,7.4],[-88.5,31.5,8.8],[-88,31.5,7.5],[-87.5,31.5,16.3],[-87,31.5,7.9],[-86.5,31.5,15.8],[-86,31.5,35.2],[-85.5,31.5,38.8],[-85,31.5,9.2],[-84.5,31.5,14.8],[-84,31.5,28.3],[-83.5,31.5,21.8],[-83,31.5,12.8],[-82.5,31.5,20.4],[-82,31.5,15.7],[-81.5,31.5,50.2],[-10,31.5,71.1],[-9.5,31.5,61.3],[-9,31.5,50.7],[-8.5,31.5,89.8],[-8,31.5,66.7],[-7.5,31.5,43.5],[-7,31.5,29.8],[-6.5,31.5,25],[-6,31.5,23.8],[-5.5,31.5,19.6],[-5,31.5,15.8],[-4.5,31.5,15.8],[-4,31.5,9.9],[-3.5,31.5,1.6],[-3,31.5,1.6],[-2.5,31.5,1.6],[-2,31.5,1.6],[-1.5,31.5,1.6],[-1,31.5,1.6],[-0.5,31.5,2.2],[0,31.5,2.5],[0.5,31.5,2.1],[1,31.5,1.2],[2,31.5,3.9],[2.5,31.5,4.1],[3,31.5,4.1],[3.5,31.5,4.1],[4,31.5,2.4],[4.5,31.5,2.3],[5,31.5,2.3],[5.5,31.5,2.3],[6,31.5,2.3],[6.5,31.5,2.3],[7,31.5,2.3],[7.5,31.5,2.3],[8,31.5,2.3],[8.5,31.5,2.3],[9,31.5,2.8],[9.5,31.5,3.7],[10,31.5,2.2],[10.5,31.5,1.1],[11,31.5,1.1],[11.5,31.5,3.2],[12,31.5,8.4],[12.5,31.5,2.2],[13,31.5,2.2],[13.5,31.5,2],[14,31.5,1.4],[14.5,31.5,1.4],[15,31.5,1.4],[15.5,31.5,1.4],[16,31.5,2.9],[16.5,31.5,3.5],[17,31.5,3.5],[17.5,31.5,3.5],[19.5,31.5,73.9],[20,31.5,51.8],[20.5,31.5,70.3],[21,31.5,41.4],[21.5,31.5,13.1],[22,31.5,6.2],[22.5,31.5,6.7],[23,31.5,1.7],[23.5,31.5,1.7],[24,31.5,1.7],[24.5,31.5,1.3],[25.5,31.5,1.7],[26,31.5,4],[26.5,31.5,3.7],[27,31.5,10.7],[27.5,31.5,10.9],[28,31.5,6.3],[28.5,31.5,6.3],[29.5,31.5,3653.6],[30,31.5,1801.8],[30.5,31.5,981.3],[31,31.5,1054.8],[31.5,31.5,1154],[32,31.5,813.1],[32.5,31.5,39.8],[33,31.5,15.8],[33.5,31.5,139.5],[34,31.5,460.4],[34.5,31.5,79.8],[35,31.5,121.1],[35.5,31.5,50.2],[36,31.5,11],[36.5,31.5,4.1],[37,31.5,2.2],[37.5,31.5,1.4],[38,31.5,1.4],[38.5,31.5,1.4],[39,31.5,1.4],[39.5,31.5,1.4],[40,31.5,1.4],[40.5,31.5,1.4],[41,31.5,1.8],[41.5,31.5,4.7],[42,31.5,8.2],[42.5,31.5,9.1],[43,31.5,22],[43.5,31.5,25.4],[44,31.5,25.5],[44.5,31.5,31.6],[45,31.5,8.1],[45.5,31.5,42.3],[46,31.5,75.3],[46.5,31.5,57.4],[47,31.5,68.2],[47.5,31.5,50.9],[48,31.5,104.4],[48.5,31.5,125.2],[49,31.5,86.3],[49.5,31.5,49.7],[50,31.5,43.3],[50.5,31.5,47.1],[51,31.5,35.6],[51.5,31.5,17.4],[52,31.5,22.2],[52.5,31.5,15.7],[53,31.5,9.4],[53.5,31.5,10.2],[54,31.5,9.6],[54.5,31.5,6.3],[55,31.5,7.5],[55.5,31.5,9.7],[56,31.5,14.2],[56.5,31.5,13.1],[57,31.5,13],[57.5,31.5,13],[58,31.5,12.5],[58.5,31.5,8.5],[59,31.5,2.7],[59.5,31.5,1.2],[60,31.5,1.2],[60.5,31.5,1.5],[61,31.5,45],[61.5,31.5,42.3],[62,31.5,4.6],[62.5,31.5,2.8],[63,31.5,5.7],[63.5,31.5,10.1],[64,31.5,39.5],[64.5,31.5,21.8],[65,31.5,16.4],[65.5,31.5,44.2],[66,31.5,7.7],[66.5,31.5,39.1],[67,31.5,42.7],[67.5,31.5,25.4],[68,31.5,19.7],[68.5,31.5,19.5],[69,31.5,18.9],[69.5,31.5,21.1],[70,31.5,78],[70.5,31.5,139.9],[71,31.5,164.6],[71.5,31.5,200.3],[72,31.5,353.7],[72.5,31.5,676.5],[73,31.5,960.4],[73.5,31.5,649],[74,31.5,1730.8],[74.5,31.5,612.7],[75,31.5,436.5],[75.5,31.5,700.9],[76,31.5,417.5],[76.5,31.5,255.9],[77,31.5,173],[77.5,31.5,237],[78,31.5,29.5],[78.5,31.5,12.5],[79,31.5,10.3],[91,31.5,3.6],[91.5,31.5,5],[92,31.5,4.9],[92.5,31.5,3.6],[93,31.5,3.3],[93.5,31.5,4.1],[94,31.5,4.2],[94.5,31.5,4.5],[95,31.5,4.9],[95.5,31.5,5.5],[96,31.5,6.1],[96.5,31.5,7],[97,31.5,8.1],[97.5,31.5,8],[98,31.5,6],[98.5,31.5,5],[99,31.5,4.4],[99.5,31.5,4.5],[100,31.5,4.8],[100.5,31.5,7.4],[101,31.5,7.8],[101.5,31.5,12.2],[102,31.5,13.4],[102.5,31.5,14.7],[103,31.5,26.7],[103.5,31.5,471.2],[104,31.5,703.6],[104.5,31.5,619.5],[105,31.5,514.7],[105.5,31.5,474.3],[106,31.5,539],[106.5,31.5,527.3],[107,31.5,498.8],[107.5,31.5,441],[108,31.5,357.9],[108.5,31.5,344.1],[109,31.5,229.8],[109.5,31.5,195.8],[110,31.5,146.6],[110.5,31.5,120.9],[111,31.5,144.8],[111.5,31.5,181.3],[112,31.5,267.4],[112.5,31.5,221.2],[113,31.5,272.2],[113.5,31.5,602.1],[114,31.5,761.1],[114.5,31.5,450.9],[115,31.5,307.1],[115.5,31.5,204.1],[116,31.5,162.7],[116.5,31.5,392.8],[117,31.5,432.6],[117.5,31.5,545.6],[118,31.5,690.3],[118.5,31.5,441.1],[119,31.5,342.9],[119.5,31.5,483.7],[120,31.5,601.2],[120.5,31.5,927.3],[121,31.5,4366],[121.5,31.5,2550.6],[129,31.5,101],[130,31.5,230.4],[130.5,31.5,188],[131,31.5,89.1],[-116.5,31,7.4],[-116,31,7.7],[-115.5,31,16.4],[-115,31,15.7],[-113.5,31,6],[-113,31,6.6],[-112.5,31,5.5],[-112,31,1.1],[-111.5,31,7],[-111,31,7.1],[-110.5,31,6.8],[-110,31,2.4],[-109.5,31,6.3],[-109,31,2.7],[-108.5,31,1.5],[-108,31,8.7],[-107.5,31,7.6],[-106,31,1.4],[-105.5,31,1.2],[-103,31,3.6],[-101,31,2.4],[-100,31,1.2],[-99.5,31,1.4],[-99,31,3.4],[-98.5,31,16.9],[-98,31,60.7],[-97.5,31,17.2],[-97,31,10.9],[-96.5,31,56.1],[-96,31,22.6],[-95.5,31,20],[-95,31,12.5],[-94.5,31,11],[-94,31,8.9],[-93.5,31,13],[-93,31,11.4],[-92.5,31,32.5],[-92,31,11.8],[-91.5,31,55.3],[-91,31,33.6],[-90.5,31,28],[-90,31,28.3],[-89.5,31,17.2],[-89,31,17.1],[-88.5,31,148.8],[-88,31,33.8],[-87.5,31,60.5],[-87,31,20.6],[-86.5,31,16.6],[-86,31,14.4],[-85.5,31,16.9],[-85,31,24.3],[-84.5,31,42.3],[-84,31,18.8],[-83.5,31,39.8],[-83,31,3.3],[-82.5,31,4.2],[-82,31,27.1],[-81.5,31,85.4],[-10,31,161.3],[-9.5,31,97.1],[-9,31,47.2],[-8.5,31,51.5],[-8,31,41.7],[-7.5,31,25.1],[-7,31,21.7],[-6.5,31,19],[-6,31,17.7],[-5.5,31,16.6],[-5,31,11.6],[-4.5,31,8.5],[-4,31,4.3],[-3.5,31,1.6],[-3,31,1.6],[-2.5,31,1.6],[-2,31,1.6],[-1.5,31,1.6],[-1,31,1.6],[-0.5,31,1.6],[0,31,1.7],[2,31,4],[2.5,31,4.1],[3,31,4.1],[3.5,31,3.9],[4,31,2.3],[4.5,31,2.3],[5,31,2.3],[5.5,31,2.3],[6,31,2.3],[6.5,31,2.3],[7,31,2.3],[7.5,31,2.3],[8,31,2.3],[8.5,31,2.3],[9,31,2.5],[9.5,31,3.7],[10,31,2.2],[10.5,31,1.1],[11,31,1.1],[11.5,31,1.7],[12,31,2.2],[12.5,31,2.2],[13,31,2.2],[13.5,31,2.2],[14,31,1.8],[14.5,31,1.4],[15,31,1.4],[15.5,31,1.4],[16,31,2.6],[16.5,31,3.5],[17,31,3.5],[17.5,31,3.5],[18,31,3.5],[18.5,31,3.5],[22.5,31,2.9],[23,31,1.6],[23.5,31,1.7],[24,31,1.7],[24.5,31,1.6],[26,31,1.3],[26.5,31,1.7],[27,31,10.8],[27.5,31,9.5],[28,31,6.3],[28.5,31,4.3],[29,31,10.1],[29.5,31,207],[30,31,311.7],[30.5,31,1284.6],[31,31,2024.2],[31.5,31,1024.8],[32,31,280.8],[32.5,31,11.2],[33,31,7.6],[33.5,31,14.3],[34,31,14.8],[34.5,31,37.1],[35,31,32.7],[35.5,31,29.8],[36,31,4.9],[36.5,31,1.8],[37,31,1.8],[37.5,31,1.6],[38,31,1.4],[38.5,31,3.1],[39,31,4.8],[39.5,31,4.3],[40,31,3.2],[40.5,31,3.1],[41,31,1.9],[41.5,31,1.4],[42,31,1.5],[42.5,31,5.3],[43,31,25.2],[43.5,31,25.4],[44,31,20.7],[44.5,31,7.2],[45,31,6.8],[45.5,31,25.3],[46,31,42.5],[46.5,31,81.2],[47,31,108.4],[47.5,31,114.3],[48,31,106.7],[48.5,31,53.4],[49,31,53.3],[49.5,31,53.5],[50,31,48.2],[50.5,31,43.8],[51,31,53.7],[51.5,31,29.9],[52,31,17.2],[52.5,31,14.6],[53,31,8.6],[53.5,31,7.6],[54,31,7.9],[54.5,31,7],[55,31,19.5],[55.5,31,30.9],[56,31,19.4],[56.5,31,17.3],[57,31,13],[57.5,31,13],[58,31,13],[58.5,31,13],[59,31,10.4],[59.5,31,6.7],[60,31,9],[60.5,31,6.3],[61,31,58.4],[61.5,31,31.2],[62,31,8.3],[62.5,31,2.3],[63,31,2.6],[63.5,31,2.8],[64,31,4.8],[64.5,31,7.4],[65,31,9.4],[65.5,31,5.2],[66,31,36.1],[66.5,31,82],[67,31,57.3],[67.5,31,28],[68,31,23.5],[68.5,31,23.1],[69,31,22.6],[69.5,31,23.3],[70,31,80.1],[70.5,31,160.3],[71,31,249.2],[71.5,31,311.6],[72,31,472.7],[72.5,31,649.5],[73,31,604.4],[73.5,31,563],[74,31,469.4],[74.5,31,358.9],[75,31,372.1],[75.5,31,730.5],[76,31,611.5],[76.5,31,826.4],[77,31,204],[77.5,31,116.7],[78,31,100.8],[78.5,31,70.8],[79,31,52.4],[79.5,31,13.7],[80,31,5.5],[86,31,1.5],[90.5,31,3.1],[91,31,4.9],[91.5,31,5.2],[92,31,3.2],[92.5,31,2],[93,31,2],[93.5,31,2.5],[94,31,3.3],[94.5,31,2.9],[95,31,3.3],[95.5,31,4.7],[96,31,4.9],[96.5,31,3.8],[97,31,6],[97.5,31,7.6],[98,31,7.2],[98.5,31,6.5],[99,31,4.6],[99.5,31,4.2],[100,31,4.3],[100.5,31,5.1],[101,31,6.3],[101.5,31,10],[102,31,12.2],[102.5,31,22.2],[103,31,317.2],[103.5,31,776.9],[104,31,2047.9],[104.5,31,649.4],[105,31,655.1],[105.5,31,631.9],[106,31,702.1],[106.5,31,673.2],[107,31,489.7],[107.5,31,458.1],[108,31,454.7],[108.5,31,358],[109,31,216],[109.5,31,194.3],[110,31,154],[110.5,31,143.7],[111,31,423.2],[111.5,31,315.1],[112,31,373.6],[112.5,31,440.6],[113,31,581.6],[113.5,31,773],[114,31,1006.8],[114.5,31,876.5],[115,31,469.4],[115.5,31,293.5],[116,31,215.3],[116.5,31,395.7],[117,31,494.1],[117.5,31,365.4],[118,31,239.3],[118.5,31,242.8],[119,31,209.9],[119.5,31,375.2],[120,31,780.4],[120.5,31,771.8],[121,31,760.1],[121.5,31,810.6],[122,31,641.6],[122.5,31,641.6],[129.5,31,18.6],[130,31,13.7],[130.5,31,78.7],[131,31,90],[-116.5,30.5,6.9],[-116,30.5,7.4],[-115.5,30.5,7.4],[-115,30.5,7.4],[-113,30.5,4.8],[-112.5,30.5,2.1],[-111.5,30.5,3.1],[-111,30.5,4],[-110.5,30.5,1.6],[-110,30.5,3.6],[-109.5,30.5,2.4],[-108.5,30.5,1.7],[-108,30.5,6.4],[-107.5,30.5,5.2],[-107,30.5,1.6],[-105,30.5,1.5],[-104,30.5,2.5],[-100,30.5,2.5],[-99.5,30.5,12.7],[-99,30.5,8.2],[-98.5,30.5,17.5],[-98,30.5,334.1],[-97.5,30.5,21.6],[-97,30.5,9.3],[-96.5,30.5,21.5],[-96,30.5,88.9],[-95.5,30.5,153.1],[-95,30.5,15.6],[-94.5,30.5,69.8],[-94,30.5,35],[-93.5,30.5,66.8],[-93,30.5,16.7],[-92.5,30.5,95.1],[-92,30.5,47.6],[-91.5,30.5,126.9],[-91,30.5,73.9],[-90.5,30.5,255],[-90,30.5,99.3],[-89.5,30.5,123.9],[-89,30.5,235.5],[-88.5,30.5,47.8],[-88,30.5,57.1],[-87.5,30.5,376.5],[-87,30.5,233.9],[-86.5,30.5,73.1],[-86,30.5,83.4],[-85.5,30.5,9.7],[-85,30.5,5.6],[-84.5,30.5,84.2],[-84,30.5,7.6],[-83.5,30.5,12.3],[-83,30.5,25.1],[-82.5,30.5,18.7],[-82,30.5,316],[-81.5,30.5,255],[-10,30.5,270],[-9.5,30.5,180.3],[-9,30.5,47.6],[-8.5,30.5,45.8],[-8,30.5,38.9],[-7.5,30.5,17.2],[-7,30.5,9.1],[-6.5,30.5,15.4],[-6,30.5,17.7],[-5.5,30.5,16.4],[-5,30.5,2.6],[-4.5,30.5,1.6],[-4,30.5,1.6],[-3.5,30.5,1.6],[-3,30.5,1.6],[-2.5,30.5,1.6],[-2,30.5,1.6],[-1.5,30.5,1.6],[-1,30.5,1.6],[-0.5,30.5,1.6],[1.5,30.5,1.2],[2,30.5,4.1],[2.5,30.5,4.1],[3,30.5,4.1],[3.5,30.5,3.6],[4,30.5,2.3],[4.5,30.5,2.3],[5,30.5,2.3],[5.5,30.5,2.3],[6,30.5,2.3],[6.5,30.5,2.3],[7,30.5,2.3],[7.5,30.5,2.3],[8,30.5,2.3],[8.5,30.5,2.3],[9,30.5,2],[9.5,30.5,2],[10,30.5,1.1],[10.5,30.5,1.1],[11,30.5,1.1],[11.5,30.5,2],[12,30.5,2.2],[12.5,30.5,2.2],[13,30.5,2.2],[13.5,30.5,2.2],[14,30.5,2.2],[14.5,30.5,2.1],[15,30.5,1.4],[15.5,30.5,1.4],[16,30.5,2.1],[16.5,30.5,3.5],[17,30.5,3.5],[17.5,30.5,3.5],[18,30.5,3.5],[18.5,30.5,2.6],[23,30.5,1.5],[23.5,30.5,1.7],[24,30.5,1.7],[24.5,30.5,1.1],[27,30.5,3.7],[27.5,30.5,6],[28,30.5,2],[28.5,30.5,1.1],[29,30.5,5.3],[29.5,30.5,12.9],[30,30.5,6.7],[30.5,30.5,552],[31,30.5,4066.2],[31.5,30.5,619.4],[32,30.5,84.4],[32.5,30.5,21.5],[33,30.5,2],[33.5,30.5,1.9],[34,30.5,1.6],[34.5,30.5,26.7],[35,30.5,28],[35.5,30.5,4.7],[36,30.5,1.8],[36.5,30.5,1.8],[37,30.5,1.8],[37.5,30.5,2.3],[38,30.5,4.3],[38.5,30.5,4.9],[39,30.5,5.3],[39.5,30.5,5.3],[40,30.5,5.3],[40.5,30.5,5.3],[41,30.5,5.3],[41.5,30.5,3.2],[42,30.5,1.4],[42.5,30.5,1.4],[43,30.5,5.7],[43.5,30.5,20.1],[44,30.5,9.5],[44.5,30.5,6.8],[45,30.5,6.8],[45.5,30.5,6.8],[46,30.5,6.8],[46.5,30.5,78.3],[47,30.5,106.4],[47.5,30.5,102.4],[48,30.5,116.8],[48.5,30.5,100.5],[49,30.5,54.6],[49.5,30.5,54.6],[50,30.5,35.4],[50.5,30.5,33.4],[51,30.5,26.7],[51.5,30.5,24.2],[52,30.5,38.3],[52.5,30.5,42.8],[53,30.5,36.2],[53.5,30.5,6.8],[54,30.5,7.7],[54.5,30.5,7.2],[55,30.5,10.7],[55.5,30.5,20.6],[56,30.5,27.3],[56.5,30.5,17],[57,30.5,13],[57.5,30.5,13],[58,30.5,13],[58.5,30.5,13],[59,30.5,13.6],[59.5,30.5,16.3],[60,30.5,16.3],[60.5,30.5,14.7],[61,30.5,21.9],[61.5,30.5,1.9],[62,30.5,1.9],[62.5,30.5,2],[63,30.5,2.1],[63.5,30.5,4.5],[64,30.5,5.2],[65.5,30.5,1],[66,30.5,60.5],[66.5,30.5,168.2],[67,30.5,95],[67.5,30.5,25.7],[68,30.5,30.4],[68.5,30.5,32.4],[69,30.5,30.8],[69.5,30.5,34.2],[70,30.5,103.4],[70.5,30.5,193.2],[71,30.5,462.2],[71.5,30.5,659.7],[72,30.5,527.8],[72.5,30.5,470.1],[73,30.5,579.7],[73.5,30.5,396],[74,30.5,305],[74.5,30.5,371.4],[75,30.5,333.1],[75.5,30.5,350.4],[76,30.5,434.3],[76.5,30.5,631.4],[77,30.5,508.6],[77.5,30.5,516.2],[78,30.5,444.4],[78.5,30.5,180.2],[79,30.5,116.5],[79.5,30.5,66.2],[80,30.5,27.5],[80.5,30.5,25.2],[81,30.5,7.2],[81.5,30.5,6.3],[82,30.5,1.9],[86,30.5,1.7],[86.5,30.5,1.7],[87,30.5,2.3],[87.5,30.5,2.6],[88,30.5,2.3],[88.5,30.5,2],[89,30.5,5.9],[89.5,30.5,4.1],[90,30.5,2.4],[90.5,30.5,9],[91,30.5,10.8],[91.5,30.5,9.3],[92,30.5,4.8],[92.5,30.5,2.3],[93,30.5,2.1],[93.5,30.5,2.1],[94,30.5,2.5],[94.5,30.5,2.9],[95,30.5,1.8],[95.5,30.5,1.8],[96,30.5,2.5],[96.5,30.5,3.2],[97,30.5,3.4],[97.5,30.5,4.7],[98,30.5,6.8],[98.5,30.5,6.3],[99,30.5,5.2],[99.5,30.5,3.8],[100,30.5,3.5],[100.5,30.5,4.7],[101,30.5,6.5],[101.5,30.5,9.5],[102,30.5,26],[102.5,30.5,69.2],[103,30.5,375.1],[103.5,30.5,571.4],[104,30.5,596.5],[104.5,30.5,649.1],[105,30.5,596.7],[105.5,30.5,570.4],[106,30.5,650.3],[106.5,30.5,715.2],[107,30.5,543.2],[107.5,30.5,376.5],[108,30.5,218.9],[108.5,30.5,170.7],[109,30.5,171.8],[109.5,30.5,153.3],[110,30.5,109.6],[110.5,30.5,122],[111,30.5,229.3],[111.5,30.5,399.7],[112,30.5,537],[112.5,30.5,406.2],[113,30.5,466],[113.5,30.5,546.8],[114,30.5,793],[114.5,30.5,814.3],[115,30.5,594.8],[115.5,30.5,533.7],[116,30.5,340.3],[116.5,30.5,305.3],[117,30.5,135.7],[117.5,30.5,127.8],[118,30.5,185.9],[118.5,30.5,164.7],[119,30.5,165.1],[119.5,30.5,351.5],[120,30.5,1707],[120.5,30.5,1115.2],[121,30.5,1459.1],[121.5,30.5,1531.8],[122,30.5,1062.6],[122.5,30.5,1226.6],[129.5,30.5,7.8],[130,30.5,25.2],[130.5,30.5,39.5],[-116,30,7.4],[-115.5,30,7.4],[-115,30,7.4],[-114.5,30,7.4],[-114,30,3.3],[-112,30,4.5],[-111.5,30,7.2],[-111,30,2.2],[-110.5,30,4],[-110,30,2.2],[-109.5,30,1.5],[-108.5,30,4],[-108,30,3],[-107.5,30,3],[-107,30,12.1],[-106.5,30,42.9],[-106,30,2.5],[-105,30,2.4],[-104.5,30,1.3],[-103,30,2.2],[-102.5,30,5.9],[-102,30,5.3],[-101.5,30,1.8],[-100,30,2.2],[-99.5,30,7.7],[-99,30,115.6],[-98.5,30,146.8],[-98,30,41.9],[-97.5,30,9.1],[-97,30,10.5],[-96.5,30,12.8],[-96,30,493.9],[-95.5,30,816.1],[-95,30,49],[-94.5,30,17.7],[-94,30,80.4],[-93.5,30,2.6],[-93,30,2.6],[-92.5,30,15.9],[-92,30,29],[-91.5,30,23.5],[-91,30,58.9],[-90.5,30,304.2],[-90,30,44.8],[-89.5,30,1.1],[-89,30,1.1],[-86,30,24.4],[-85.5,30,11.2],[-85,30,5.7],[-84.5,30,8.2],[-84,30,4],[-83.5,30,6.2],[-83,30,19.8],[-82.5,30,83],[-82,30,34.5],[-81.5,30,62.1],[-10.5,30,45.5],[-10,30,50.2],[-9.5,30,61.1],[-9,30,37.7],[-8.5,30,13],[-8,30,7.3],[-7.5,30,4.9],[-7,30,4.5],[-6.5,30,9.1],[-6,30,6.2],[-5.5,30,2.1],[-5,30,1.6],[-4.5,30,1.6],[-4,30,1.6],[-3.5,30,1.6],[-3,30,1.6],[-2.5,30,1.6],[-2,30,1.6],[-1.5,30,1.6],[-1,30,1.6],[-0.5,30,1.1],[1.5,30,1.3],[2,30,4.1],[2.5,30,4.1],[3,30,4.1],[3.5,30,2.7],[4,30,2.3],[4.5,30,2.3],[5,30,2.3],[5.5,30,2.3],[6,30,2.3],[6.5,30,2.3],[7,30,2.3],[7.5,30,2.3],[8,30,2.2],[8.5,30,1.1],[10,30,1.1],[10.5,30,1.1],[11,30,1.1],[11.5,30,1.8],[12,30,2.2],[12.5,30,2.2],[13,30,2.2],[13.5,30,2.1],[14,30,2.2],[14.5,30,1.6],[15,30,1],[15.5,30,1.3],[16,30,1.4],[16.5,30,3.5],[17,30,3.5],[17.5,30,3.5],[18,30,3.5],[18.5,30,1.9],[23,30,1.5],[23.5,30,1.7],[24,30,1.7],[24.5,30,1.4],[30.5,30,29.8],[31,30,1603.3],[31.5,30,395],[32,30,23.4],[32.5,30,148.7],[33,30,1.4],[33.5,30,1.4],[34,30,1.3],[34.5,30,12.4],[35,30,13.8],[35.5,30,3.1],[36,30,1.8],[36.5,30,1.6],[37,30,1.4],[37.5,30,1.5],[38,30,3.1],[38.5,30,5.2],[39,30,5.3],[39.5,30,5.3],[40,30,5.3],[40.5,30,5.2],[41,30,3.8],[41.5,30,1.8],[42,30,1.4],[42.5,30,1.4],[43,30,1.4],[43.5,30,9.9],[44,30,6.8],[44.5,30,6.8],[45,30,6.8],[45.5,30,6.8],[46,30,6.8],[46.5,30,72.2],[47,30,29.8],[47.5,30,21.3],[48,30,236.6],[48.5,30,118.5],[49.5,30,54.6],[50,30,22.1],[50.5,30,34.5],[51,30,40.1],[51.5,30,55.3],[52,30,116.1],[52.5,30,125.5],[53,30,90.4],[53.5,30,14.6],[54,30,10.4],[54.5,30,13.4],[55,30,14.7],[55.5,30,15.2],[56,30,13.5],[56.5,30,11.6],[57,30,12.5],[57.5,30,13.3],[58,30,13],[58.5,30,13.3],[59,30,14.5],[59.5,30,16.3],[60,30,16.3],[60.5,30,15.4],[61,30,4.2],[61.5,30,2.5],[62,30,1.9],[62.5,30,1.9],[63,30,1.9],[63.5,30,4.1],[64,30,4.9],[65.5,30,2.5],[66,30,43.2],[66.5,30,38.5],[67,30,26.8],[67.5,30,27.4],[68,30,22.1],[68.5,30,14.9],[69,30,19.7],[69.5,30,69.6],[70,30,125.7],[70.5,30,216.4],[71,30,663.9],[71.5,30,503.1],[72,30,356.6],[72.5,30,270.7],[73,30,228.8],[73.5,30,251.7],[74,30,228.2],[74.5,30,242.1],[75,30,287.2],[75.5,30,324.7],[76,30,402],[76.5,30,472.4],[77,30,682.3],[77.5,30,959.3],[78,30,492.1],[78.5,30,147.4],[79,30,158.4],[79.5,30,182.5],[80,30,139.2],[80.5,30,78.9],[81,30,50.7],[81.5,30,27.1],[82,30,12.1],[82.5,30,7.6],[85.5,30,1.3],[86,30,1.7],[86.5,30,1.7],[87,30,2.2],[87.5,30,3.4],[88,30,3.1],[88.5,30,7.7],[89,30,8.5],[89.5,30,8.5],[90,30,7.7],[90.5,30,16],[91,30,94.5],[91.5,30,14],[92,30,6.6],[92.5,30,3.1],[93,30,2.2],[93.5,30,4],[94,30,4.6],[94.5,30,3.6],[95,30,1.8],[95.5,30,1.4],[96,30,1.5],[96.5,30,2.7],[97,30,3],[97.5,30,2.9],[98,30,5.6],[98.5,30,6.1],[99,30,5.2],[99.5,30,4],[100,30,3.4],[100.5,30,4.4],[101,30,7.1],[101.5,30,14.1],[102,30,67.5],[102.5,30,119.6],[103,30,255.5],[103.5,30,462.1],[104,30,489.5],[104.5,30,710],[105,30,780.2],[105.5,30,623],[106,30,828.8],[106.5,30,1089.6],[107,30,411.6],[107.5,30,255.3],[108,30,171.5],[108.5,30,166.1],[109,30,173.6],[109.5,30,119.4],[110,30,99.5],[110.5,30,158.4],[111,30,221.6],[111.5,30,378.6],[112,30,472.8],[112.5,30,354.8],[113,30,520.6],[113.5,30,284.5],[114,30,275.5],[114.5,30,246.9],[115,30,310.1],[115.5,30,506.8],[116,30,508.5],[116.5,30,223],[117,30,106.6],[117.5,30,97.2],[118,30,138.5],[118.5,30,108.8],[119,30,148.9],[119.5,30,287.2],[120,30,472.3],[120.5,30,476.6],[121,30,491.7],[121.5,30,719.4],[122,30,1489.6],[129.5,30,7.7],[-115.5,29.5,7.4],[-115,29.5,7.4],[-114.5,29.5,7.4],[-114,29.5,6.8],[-112.5,29.5,13.2],[-112,29.5,36],[-111.5,29.5,38.9],[-111,29.5,24.6],[-110.5,29.5,3.7],[-110,29.5,1.1],[-109.5,29.5,1.2],[-109,29.5,1.2],[-108.5,29.5,4.6],[-108,29.5,3],[-107.5,29.5,11.2],[-107,29.5,25.8],[-106.5,29.5,63.2],[-106,29.5,2.3],[-105.5,29.5,1.2],[-105,29.5,1.7],[-104.5,29.5,1.9],[-104,29.5,1.2],[-103,29.5,5.2],[-102.5,29.5,9.3],[-102,29.5,6.7],[-101.5,29.5,6.5],[-101,29.5,17.7],[-100.5,29.5,1.3],[-100,29.5,8.3],[-99.5,29.5,4.7],[-99,29.5,220.8],[-98.5,29.5,129],[-98,29.5,6.4],[-97.5,29.5,10.1],[-97,29.5,5.1],[-96.5,29.5,14.5],[-96,29.5,23.5],[-95.5,29.5,92.2],[-95,29.5,304.8],[-94.5,29.5,20.1],[-92,29.5,13.5],[-91.5,29.5,4.6],[-91,29.5,11.5],[-90.5,29.5,12.6],[-90,29.5,10.7],[-89.5,29.5,4.6],[-89,29.5,1.9],[-83.5,29.5,5],[-83,29.5,11.3],[-82.5,29.5,76.7],[-82,29.5,22.9],[-81.5,29.5,106.3],[-81,29.5,418.9],[-14,29.5,52.1],[-13.5,29.5,39.5],[-11,29.5,14.4],[-10.5,29.5,34.8],[-10,29.5,30.3],[-9.5,29.5,21.4],[-9,29.5,6.8],[-8.5,29.5,5.1],[-8,29.5,2.3],[-4.5,29.5,1.5],[-4,29.5,1.6],[-3.5,29.5,1.6],[-3,29.5,1.6],[-2.5,29.5,1.6],[-2,29.5,1.6],[-1.5,29.5,1.6],[-1,29.5,1.1],[2,29.5,3.9],[2.5,29.5,3.2],[3,29.5,3],[3.5,29.5,2.3],[4,29.5,2.3],[4.5,29.5,2.3],[5,29.5,2.3],[5.5,29.5,2.3],[6,29.5,2.3],[6.5,29.5,2.3],[7,29.5,2.3],[7.5,29.5,1.7],[10,29.5,1.1],[10.5,29.5,1.1],[11,29.5,1.1],[11.5,29.5,1.7],[12,29.5,2.2],[12.5,29.5,2.2],[13,29.5,2.1],[17,29.5,1.4],[17.5,29.5,2.4],[18,29.5,3.5],[18.5,29.5,1],[23,29.5,1.5],[23.5,29.5,1.7],[24,29.5,1.7],[24.5,29.5,1.6],[30,29.5,30.9],[30.5,29.5,887.7],[31,29.5,501.9],[31.5,29.5,74.3],[32,29.5,16.4],[32.5,29.5,7.1],[33,29.5,1.6],[34.5,29.5,2.2],[35,29.5,7.7],[35.5,29.5,2.8],[36,29.5,1.5],[36.5,29.5,1.4],[37,29.5,1.4],[37.5,29.5,1.4],[38,29.5,1.4],[38.5,29.5,3.3],[39,29.5,5.3],[39.5,29.5,5.3],[40,29.5,5.3],[40.5,29.5,3.4],[41,29.5,1.4],[41.5,29.5,1.4],[42,29.5,1.4],[42.5,29.5,1.4],[43,29.5,1.4],[43.5,29.5,1.4],[44,29.5,2.7],[44.5,29.5,4.4],[45,29.5,4.9],[45.5,29.5,5.2],[46,29.5,6.4],[46.5,29.5,40.7],[47,29.5,20.5],[47.5,29.5,232.9],[48,29.5,1186.1],[50,29.5,16.8],[50.5,29.5,104.2],[51,29.5,54.2],[51.5,29.5,50.8],[52,29.5,122.3],[52.5,29.5,130.3],[53,29.5,139.8],[53.5,29.5,51.9],[54,29.5,20.6],[54.5,29.5,11.8],[55,29.5,14.6],[55.5,29.5,15.2],[56,29.5,13.2],[56.5,29.5,11.8],[57,29.5,15.2],[57.5,29.5,15],[58,29.5,13.7],[58.5,29.5,13.7],[59,29.5,14.3],[59.5,29.5,16.3],[60,29.5,16.3],[60.5,29.5,16.3],[61,29.5,13.5],[61.5,29.5,4.6],[62,29.5,4.3],[62.5,29.5,4.1],[63,29.5,4.4],[63.5,29.5,4.6],[64,29.5,4.6],[64.5,29.5,4.5],[65,29.5,4.5],[65.5,29.5,4.5],[66,29.5,16.4],[66.5,29.5,21.7],[67,29.5,23.5],[67.5,29.5,39.5],[68,29.5,30.8],[68.5,29.5,16.7],[69,29.5,17.9],[69.5,29.5,82],[70,29.5,163],[70.5,29.5,281.3],[71,29.5,250.4],[71.5,29.5,139.5],[72,29.5,129.6],[72.5,29.5,225.8],[73,29.5,149.7],[73.5,29.5,123],[74,29.5,135],[74.5,29.5,156.8],[75,29.5,241.8],[75.5,29.5,367.4],[76,29.5,399.4],[76.5,29.5,582.5],[77,29.5,813.6],[77.5,29.5,903.4],[78,29.5,693.9],[78.5,29.5,707.4],[79,29.5,354.2],[79.5,29.5,173.2],[80,29.5,130.1],[80.5,29.5,106.6],[81,29.5,100.4],[81.5,29.5,61.1],[82,29.5,36.4],[82.5,29.5,6.3],[83,29.5,3.7],[83.5,29.5,2.6],[84,29.5,1.5],[84.5,29.5,1],[85,29.5,1.2],[85.5,29.5,1.2],[86,29.5,1.4],[86.5,29.5,2.3],[87,29.5,2.2],[87.5,29.5,9],[88,29.5,8.2],[88.5,29.5,21.4],[89,29.5,19.3],[89.5,29.5,15.2],[90,29.5,10.1],[90.5,29.5,14.8],[91,29.5,16.5],[91.5,29.5,20.2],[92,29.5,7],[92.5,29.5,3.8],[93,29.5,2.5],[93.5,29.5,2.1],[94,29.5,2],[94.5,29.5,1.5],[95,29.5,1.2],[96,29.5,1.7],[96.5,29.5,1.5],[97,29.5,1.6],[97.5,29.5,2.2],[98,29.5,3.6],[98.5,29.5,6.2],[99,29.5,5.8],[99.5,29.5,5.3],[100,29.5,4.3],[100.5,29.5,5],[101,29.5,8.3],[101.5,29.5,8.5],[102,29.5,40.1],[102.5,29.5,119.5],[103,29.5,187],[103.5,29.5,279.6],[104,29.5,348.7],[104.5,29.5,738.3],[105,29.5,625],[105.5,29.5,532.1],[106,29.5,527],[106.5,29.5,734.6],[107,29.5,229.2],[107.5,29.5,134.6],[108,29.5,149.2],[108.5,29.5,148.8],[109,29.5,157.4],[109.5,29.5,126.5],[110,29.5,159.6],[110.5,29.5,178.7],[111,29.5,204.8],[111.5,29.5,436.3],[112,29.5,461.3],[112.5,29.5,385.7],[113,29.5,321.8],[113.5,29.5,289.4],[114,29.5,175.6],[114.5,29.5,120.7],[115,29.5,115.6],[115.5,29.5,259.1],[116,29.5,384.9],[116.5,29.5,263.1],[117,29.5,378.1],[117.5,29.5,121.8],[118,29.5,131.6],[118.5,29.5,226.1],[119,29.5,303.1],[119.5,29.5,362.2],[120,29.5,493.4],[120.5,29.5,301.6],[121,29.5,325.3],[121.5,29.5,336.3],[122,29.5,380.9],[129,29.5,7.5],[129.5,29.5,7.8],[-178.5,29,4.9],[-115,29,7.4],[-114.5,29,7.4],[-114,29,7.4],[-113.5,29,7.4],[-112.5,29,40.2],[-112,29,40.2],[-111.5,29,40.2],[-111,29,17.4],[-110.5,29,2.7],[-109.5,29,1.4],[-109,29,2.1],[-108.5,29,3.1],[-108,29,4.7],[-107.5,29,21.2],[-107,29,21.4],[-106.5,29,66.5],[-106,29,4.2],[-105.5,29,1.5],[-105,29,1.6],[-104.5,29,2.3],[-103,29,2.9],[-102.5,29,8.2],[-102,29,2.2],[-101.5,29,1.9],[-101,29,52.8],[-100.5,29,17],[-100,29,3.8],[-99.5,29,4.7],[-99,29,4.2],[-98.5,29,5.8],[-98,29,6.6],[-97.5,29,12.8],[-97,29,30.7],[-96.5,29,7.6],[-96,29,15.3],[-95.5,29,55.9],[-89.5,29,3],[-83,29,75.1],[-82.5,29,63.1],[-82,29,111.9],[-81.5,29,387.5],[-81,29,79.5],[-18.5,29,52.2],[-18,29,110.7],[-16.5,29,1095.4],[-14.5,29,52.4],[-14,29,112],[-13.5,29,45.4],[-11.5,29,10.5],[-11,29,14],[-10.5,29,14],[-10,29,11.5],[-9.5,29,5.5],[-9,29,4],[-4,29,1.3],[-3.5,29,1.6],[-3,29,1.6],[-2.5,29,1.2],[3.5,29,1.7],[4,29,2.2],[4.5,29,2.3],[5,29,2.3],[5.5,29,2.2],[6,29,1.8],[11,29,1],[11.5,29,1.2],[12,29,2],[12.5,29,2],[13,29,1.1],[18,29,3.1],[23,29,1.5],[23.5,29,1.7],[24,29,1.7],[24.5,29,1.7],[30.5,29,573.5],[31,29,15.9],[32,29,1.2],[32.5,29,5.1],[33,29,3.1],[33.5,29,1.7],[34,29,2.2],[34.5,29,5.8],[35,29,4.9],[35.5,29,5.6],[36,29,3.7],[36.5,29,2.4],[37,29,2.2],[37.5,29,2.8],[38,29,1.4],[38.5,29,3.2],[39,29,5.3],[39.5,29,5.2],[40,29,4.7],[40.5,29,3.4],[41,29,3.4],[41.5,29,3.2],[42,29,2.9],[42.5,29,1.7],[43,29,1.4],[43.5,29,1.4],[44,29,1.4],[44.5,29,1.4],[45,29,1.4],[45.5,29,3.7],[46,29,5.3],[46.5,29,5.3],[47,29,5.5],[47.5,29,53],[48,29,61.8],[50.5,29,196.4],[51,29,27.7],[51.5,29,22.9],[52,29,23.1],[52.5,29,26.7],[53,29,42],[53.5,29,53.3],[54,29,29.2],[54.5,29,18.5],[55,29,13],[55.5,29,9.4],[56,29,10.8],[56.5,29,11.8],[57,29,15.5],[57.5,29,15.9],[58,29,15.2],[58.5,29,13.9],[59,29,11.9],[59.5,29,12],[60,29,13.7],[60.5,29,10.4],[61,29,12.9],[61.5,29,7.5],[62,29,4.6],[62.5,29,4.5],[63,29,4.5],[63.5,29,4.5],[64,29,4.5],[64.5,29,4.5],[65,29,4.5],[65.5,29,4.5],[66,29,20],[66.5,29,19.7],[67,29,26.3],[67.5,29,43.5],[68,29,73.6],[68.5,29,39.9],[69,29,32],[69.5,29,141.1],[70,29,220.5],[70.5,29,257.2],[71,29,116.7],[71.5,29,110.6],[72,29,92.9],[72.5,29,83.8],[73,29,46.3],[73.5,29,39.4],[74,29,66.1],[74.5,29,99.3],[75,29,133.4],[75.5,29,236.5],[76,29,394.1],[76.5,29,1018.8],[77,29,4991.2],[77.5,29,1343.4],[78,29,691.7],[78.5,29,1026.7],[79,29,791.2],[79.5,29,538.6],[80,29,243.9],[80.5,29,187.1],[81,29,148.4],[81.5,29,123.4],[82,29,70.6],[82.5,29,53.2],[83,29,39],[83.5,29,22],[84,29,6],[84.5,29,20.7],[85,29,11.7],[85.5,29,1.9],[86,29,2.2],[86.5,29,3.7],[87,29,3.8],[87.5,29,6],[88,29,5.2],[88.5,29,5.7],[89,29,12.4],[89.5,29,7.6],[90,29,6.5],[90.5,29,4.5],[91,29,3.8],[91.5,29,7],[92,29,6.9],[92.5,29,4.6],[93,29,2.2],[93.5,29,2.2],[94,29,2.7],[94.5,29,3],[95,29,5.9],[96.5,29,1.4],[97,29,1.5],[97.5,29,1.5],[98,29,2.6],[98.5,29,6.3],[99,29,10.3],[99.5,29,9.8],[100,29,4.7],[100.5,29,9],[101,29,8.8],[101.5,29,19.6],[102,29,76.6],[102.5,29,92.6],[103,29,68.6],[103.5,29,130.6],[104,29,263.7],[104.5,29,516.5],[105,29,627.6],[105.5,29,313.9],[106,29,295.1],[106.5,29,328.9],[107,29,195.2],[107.5,29,137.1],[108,29,168.8],[108.5,29,138.5],[109,29,181.2],[109.5,29,127.4],[110,29,106.2],[110.5,29,108.6],[111,29,214.3],[111.5,29,415.4],[112,29,511.1],[112.5,29,430.8],[113,29,319.9],[113.5,29,211.6],[114,29,137.4],[114.5,29,138.8],[115,29,195.3],[115.5,29,988.1],[116,29,436.3],[116.5,29,370.9],[117,29,273.7],[117.5,29,322.5],[118,29,324.6],[118.5,29,235.7],[119,29,163.1],[119.5,29,223.7],[120,29,264.7],[120.5,29,337.7],[121,29,748.6],[121.5,29,494.6],[122,29,380.9],[128.5,29,2.5],[129,29,2.7],[129.5,29,116.2],[-178.5,28.5,4.9],[-114.5,28.5,7.4],[-114,28.5,7.4],[-113.5,28.5,7.4],[-113,28.5,7.4],[-112.5,28.5,40.2],[-112,28.5,40.2],[-111.5,28.5,31.6],[-111,28.5,20.4],[-110.5,28.5,15.5],[-110,28.5,35.2],[-109.5,28.5,1.7],[-109,28.5,2.6],[-108.5,28.5,3.7],[-108,28.5,7.8],[-107.5,28.5,9],[-107,28.5,10.2],[-106.5,28.5,40.4],[-106,28.5,62],[-105.5,28.5,15.5],[-105,28.5,3.2],[-104.5,28.5,3.5],[-104,28.5,1.6],[-102.5,28.5,4.6],[-102,28.5,9.8],[-101.5,28.5,18.4],[-101,28.5,14.9],[-100.5,28.5,4.4],[-100,28.5,1.7],[-99.5,28.5,1.4],[-99,28.5,1.1],[-98.5,28.5,3.4],[-98,28.5,16.4],[-97.5,28.5,11.9],[-97,28.5,5.4],[-96.5,28.5,4.2],[-83,28.5,497.9],[-82.5,28.5,179.6],[-82,28.5,118],[-81.5,28.5,142.5],[-81,28.5,185.9],[-18,28.5,31.5],[-17.5,28.5,48],[-17,28.5,199.7],[-16.5,28.5,387.6],[-16,28.5,358.9],[-15.5,28.5,2492.7],[-15,28.5,31.2],[-14.5,28.5,29.5],[-14,28.5,36.5],[-13,28.5,8.6],[-12.5,28.5,8.6],[-12,28.5,7.7],[-11.5,28.5,7],[-11,28.5,7.1],[-10.5,28.5,3.6],[-10,28.5,1.8],[-9.5,28.5,1.8],[-9,28.5,1.4],[23,28.5,1.3],[23.5,28.5,1.4],[24,28.5,1.4],[24.5,28.5,1.5],[30.5,28.5,577.9],[32.5,28.5,2.3],[33,28.5,5.9],[33.5,28.5,9.7],[34,28.5,2.2],[34.5,28.5,5.8],[35,28.5,5.8],[35.5,28.5,5.8],[36,28.5,5.8],[36.5,28.5,5.8],[37,28.5,5.8],[37.5,28.5,5.2],[38,28.5,3.6],[38.5,28.5,4.9],[39,28.5,4.8],[39.5,28.5,4.2],[40,28.5,4.2],[40.5,28.5,4.2],[41,28.5,4.2],[41.5,28.5,4.2],[42,28.5,4.2],[42.5,28.5,4.2],[43,28.5,3.5],[43.5,28.5,3.1],[44,28.5,1.4],[44.5,28.5,1.4],[45,28.5,2.5],[45.5,28.5,5.3],[46,28.5,5.3],[46.5,28.5,5.3],[47,28.5,5.3],[47.5,28.5,5.3],[48,28.5,5.3],[48.5,28.5,5.3],[51,28.5,16],[51.5,28.5,16.1],[52,28.5,22.6],[52.5,28.5,20.2],[53,28.5,19.4],[53.5,28.5,19.2],[54,28.5,17.8],[54.5,28.5,19.4],[55,28.5,18.8],[55.5,28.5,7.8],[56,28.5,9.2],[56.5,28.5,9.5],[57,28.5,11],[57.5,28.5,12.7],[58,28.5,12.5],[58.5,28.5,9.9],[59,28.5,6.3],[59.5,28.5,6.3],[60,28.5,7],[60.5,28.5,7.5],[61,28.5,7.5],[61.5,28.5,7.5],[62,28.5,7.3],[62.5,28.5,6],[63,28.5,4.5],[63.5,28.5,4.5],[64,28.5,4.5],[64.5,28.5,4.5],[65,28.5,4.5],[65.5,28.5,6.7],[66,28.5,23.5],[66.5,28.5,16.3],[67,28.5,19.4],[67.5,28.5,99],[68,28.5,226.9],[68.5,28.5,267],[69,28.5,237.2],[69.5,28.5,210.2],[70,28.5,261.3],[70.5,28.5,256.2],[71,28.5,117.5],[71.5,28.5,106],[72,28.5,42.9],[72.5,28.5,23.6],[73,28.5,75.3],[73.5,28.5,132],[74,28.5,73.6],[74.5,28.5,160.4],[75,28.5,244.5],[75.5,28.5,330.3],[76,28.5,387.4],[76.5,28.5,518.8],[77,28.5,1180.3],[77.5,28.5,729],[78,28.5,704.5],[78.5,28.5,656],[79,28.5,865.7],[79.5,28.5,622.3],[80,28.5,373.6],[80.5,28.5,349.5],[81,28.5,296.8],[81.5,28.5,169],[82,28.5,132.6],[82.5,28.5,132.9],[83,28.5,171.4],[83.5,28.5,213.2],[84,28.5,164.2],[84.5,28.5,99.3],[85,28.5,66.9],[85.5,28.5,47.2],[86,28.5,11.4],[86.5,28.5,4.2],[87,28.5,3.8],[87.5,28.5,3.5],[88,28.5,2.8],[88.5,28.5,3.3],[89,28.5,4.6],[89.5,28.5,5.9],[90,28.5,7.1],[90.5,28.5,5],[91,28.5,6.1],[91.5,28.5,2.5],[92,28.5,3.4],[92.5,28.5,3.7],[93,28.5,1.9],[93.5,28.5,2.8],[94,28.5,10.6],[94.5,28.5,23.7],[95,28.5,19],[95.5,28.5,15.7],[96,28.5,9.3],[96.5,28.5,2.9],[97,28.5,1.5],[97.5,28.5,1.3],[98,28.5,4.6],[98.5,28.5,6.4],[99,28.5,9.3],[99.5,28.5,13.2],[100,28.5,7.5],[100.5,28.5,9.4],[101,28.5,9.6],[101.5,28.5,70.2],[102,28.5,99],[102.5,28.5,77.6],[103,28.5,77],[103.5,28.5,119],[104,28.5,204],[104.5,28.5,349.3],[105,28.5,269.2],[105.5,28.5,194.1],[106,28.5,205.1],[106.5,28.5,196.5],[107,28.5,187.8],[107.5,28.5,189.1],[108,28.5,200.7],[108.5,28.5,192.2],[109,28.5,201],[109.5,28.5,222.8],[110,28.5,170.8],[110.5,28.5,193.6],[111,28.5,253.9],[111.5,28.5,289.9],[112,28.5,469.4],[112.5,28.5,1017.1],[113,28.5,635.6],[113.5,28.5,312.5],[114,28.5,265.1],[114.5,28.5,233.4],[115,28.5,343.5],[115.5,28.5,433.8],[116,28.5,415.2],[116.5,28.5,294.8],[117,28.5,258.4],[117.5,28.5,231.2],[118,28.5,271.3],[118.5,28.5,105],[119,28.5,100],[119.5,28.5,146.9],[120,28.5,479.9],[120.5,28.5,714.3],[121,28.5,945.5],[121.5,28.5,1100.8],[129,28.5,64.7],[129.5,28.5,166.6],[130,28.5,158.9],[-115.5,28,1.2],[-115,28,1.4],[-114.5,28,1.9],[-114,28,2.1],[-113.5,28,2],[-113,28,1.9],[-112.5,28,1.4],[-111.5,28,13.3],[-111,28,37.9],[-110.5,28,19.2],[-110,28,62.3],[-109.5,28,1.7],[-109,28,3.5],[-108.5,28,3.3],[-108,28,7.1],[-107.5,28,6.3],[-107,28,2.2],[-106.5,28,1.9],[-106,28,4.9],[-105.5,28,4],[-105,28,3.5],[-104.5,28,3.4],[-102.5,28,1.7],[-102,28,5.7],[-101.5,28,16],[-101,28,1.4],[-100.5,28,1.7],[-100,28,61.8],[-99.5,28,31.9],[-99,28,3.6],[-98.5,28,13.3],[-98,28,31.4],[-97.5,28,216.4],[-97,28,10.1],[-83,28,1138.2],[-82.5,28,179.2],[-82,28,63.4],[-81.5,28,16.1],[-81,28,21.8],[-80.5,28,256.1],[-18.5,28,26.3],[-18,28,35.7],[-17,28,484.2],[-16,28,114.3],[-15.5,28,508.6],[-13.5,28,8.6],[-13,28,8.6],[-12.5,28,8.6],[-12,28,5.7],[-11.5,28,4],[-11,28,4],[-10.5,28,2.9],[-10,28,1.8],[-9.5,28,1.8],[-9,28,1.3],[15,28,2.3],[15.5,28,2.3],[30.5,28,660.3],[33,28,11.2],[33.5,28,10.4],[34,28,9],[34.5,28,5.8],[35,28,5.8],[35.5,28,5.8],[36,28,5.8],[36.5,28,5.8],[37,28,5.8],[37.5,28,5.8],[38,28,5.8],[38.5,28,5.8],[39,28,5.8],[39.5,28,5],[40,28,4.2],[40.5,28,4.2],[41,28,4.2],[41.5,28,4.2],[42,28,4.2],[42.5,28,4.2],[43,28,4.2],[43.5,28,4.2],[44,28,3.1],[44.5,28,2.1],[45,28,5],[45.5,28,5.3],[46,28,5.3],[46.5,28,5.3],[47,28,5.3],[47.5,28,5.3],[48,28,5.3],[48.5,28,5.3],[49,28,5.3],[49.5,28,5.3],[51,28,16.8],[51.5,28,16.8],[52,28,28.6],[52.5,28,20.5],[53,28,17.1],[53.5,28,15.4],[54,28,14.9],[54.5,28,14.8],[55,28,12.8],[55.5,28,32.1],[56,28,38.6],[56.5,28,35.7],[57,28,25.5],[57.5,28,8],[58,28,8],[58.5,28,7.8],[59,28,6.3],[59.5,28,6.3],[60,28,6.3],[60.5,28,6.9],[61,28,8.3],[61.5,28,10],[62,28,9.8],[62.5,28,7.6],[63,28,4.5],[63.5,28,4.5],[64,28,4.5],[64.5,28,4.5],[65,28,4.5],[65.5,28,8],[66,28,15.8],[66.5,28,15.6],[67,28,101.9],[67.5,28,259.6],[68,28,265.1],[68.5,28,226.8],[69,28,169.2],[69.5,28,170.2],[70,28,59.6],[70.5,28,100.8],[71,28,60.4],[71.5,28,38.2],[72,28,28.7],[72.5,28,30.2],[73,28,129.1],[73.5,28,102.3],[74,28,121],[74.5,28,205.1],[75,28,326.2],[75.5,28,308.2],[76,28,384.6],[76.5,28,417.9],[77,28,505.5],[77.5,28,605],[78,28,891.4],[78.5,28,666],[79,28,566],[79.5,28,601.2],[80,28,497.9],[80.5,28,678.7],[81,28,482.4],[81.5,28,472.5],[82,28,322.6],[82.5,28,245.7],[83,28,323.9],[83.5,28,269.6],[84,28,232.9],[84.5,28,171],[85,28,660.4],[85.5,28,194.1],[86,28,101.9],[86.5,28,45.7],[87,28,43.6],[87.5,28,45.2],[88,28,41.8],[88.5,28,7.9],[89,28,27.5],[89.5,28,45.3],[90,28,22],[90.5,28,19.1],[91,28,38.4],[91.5,28,27.5],[92,28,6],[92.5,28,4],[93,28,7.1],[93.5,28,19.7],[94,28,28.8],[94.5,28,97.1],[95,28,168.2],[95.5,28,183.6],[96,28,27.4],[96.5,28,5.5],[97,28,9.4],[97.5,28,1.2],[98,28,4.2],[98.5,28,14.5],[99,28,19.5],[99.5,28,14.7],[100,28,23.6],[100.5,28,35],[101,28,30.6],[101.5,28,54.9],[102,28,167.1],[102.5,28,79.7],[103,28,143.8],[103.5,28,198.4],[104,28,192.7],[104.5,28,285.1],[105,28,290.9],[105.5,28,234.5],[106,28,236.4],[106.5,28,475.9],[107,28,239.6],[107.5,28,201.4],[108,28,210.1],[108.5,28,133.4],[109,28,198.7],[109.5,28,264.7],[110,28,219.1],[110.5,28,294.9],[111,28,413],[111.5,28,539.8],[112,28,475.9],[112.5,28,585.2],[113,28,585],[113.5,28,535.7],[114,28,295.6],[114.5,28,264.8],[115,28,246.9],[115.5,28,237.2],[116,28,275.3],[116.5,28,181.9],[117,28,88],[117.5,28,84],[118,28,87.8],[118.5,28,113.9],[119,28,100.2],[119.5,28,151.6],[120,28,637.6],[120.5,28,986.2],[121,28,1015.6],[128.5,28,112.2],[129,28,126.3],[142,28,28.1],[-115,27.5,1.4],[-114.5,27.5,1.4],[-114,27.5,1.4],[-113.5,27.5,1.4],[-113,27.5,1.4],[-112.5,27.5,1.4],[-111,27.5,13.3],[-110.5,27.5,25.2],[-110,27.5,54.2],[-109.5,27.5,19.5],[-109,27.5,3.8],[-108.5,27.5,4.1],[-108,27.5,7.2],[-107.5,27.5,6.4],[-107,27.5,2.4],[-106.5,27.5,8.7],[-106,27.5,28.2],[-105.5,27.5,3.5],[-105,27.5,3.3],[-104.5,27.5,3.3],[-104,27.5,1],[-102.5,27.5,1.2],[-102,27.5,9.9],[-101.5,27.5,22],[-101,27.5,1.5],[-100.5,27.5,3.1],[-100,27.5,71.2],[-99.5,27.5,20.1],[-99,27.5,3.6],[-98.5,27.5,4.6],[-98,27.5,4.2],[-97.5,27.5,1.6],[-83,27.5,936.3],[-82.5,27.5,107.3],[-82,27.5,18.9],[-81.5,27.5,16.7],[-81,27.5,18.1],[-80.5,27.5,187],[-78.5,27.5,34.6],[-78,27.5,9.1],[-13.5,27.5,8.6],[-13,27.5,8.6],[-12.5,27.5,7.2],[-10,27.5,1],[-9.5,27.5,1.3],[-9,27.5,1.2],[14,27.5,2.4],[14.5,27.5,4.9],[15,27.5,5.9],[15.5,27.5,5.8],[16,27.5,1.5],[30.5,27.5,288.7],[31,27.5,760],[33,27.5,4.9],[33.5,27.5,15.6],[34,27.5,6.5],[35.5,27.5,5.8],[36,27.5,5.8],[36.5,27.5,6.1],[37,27.5,8.2],[37.5,27.5,7.8],[38,27.5,6],[38.5,27.5,5.8],[39,27.5,5.8],[39.5,27.5,5.7],[40,27.5,4.4],[40.5,27.5,4.2],[41,27.5,4.2],[41.5,27.5,4.2],[42,27.5,4.2],[42.5,27.5,4.2],[43,27.5,5.6],[43.5,27.5,11.4],[44,27.5,7.5],[44.5,27.5,11.7],[45,27.5,9.2],[45.5,27.5,5.8],[46,27.5,5.3],[46.5,27.5,5.3],[47,27.5,5.3],[47.5,27.5,5.3],[48,27.5,5.3],[48.5,27.5,5.3],[49,27.5,5.3],[49.5,27.5,5.3],[52.5,27.5,18.7],[53,27.5,15],[53.5,27.5,15.7],[54,27.5,9.8],[54.5,27.5,9.6],[55,27.5,9.6],[55.5,27.5,38.9],[56,27.5,44.3],[56.5,27.5,36.4],[57,27.5,24.1],[57.5,27.5,8.3],[58,27.5,8],[58.5,27.5,7.4],[59,27.5,6.3],[59.5,27.5,6.3],[60,27.5,6.3],[60.5,27.5,6.3],[61,27.5,6.9],[61.5,27.5,10.2],[62,27.5,10.3],[62.5,27.5,9.1],[63,27.5,8.2],[63.5,27.5,9.4],[64,27.5,8.3],[64.5,27.5,6.2],[65,27.5,5.4],[65.5,27.5,6.9],[66,27.5,15.6],[66.5,27.5,15.6],[67,27.5,88.7],[67.5,27.5,169],[68,27.5,247.9],[68.5,27.5,112.9],[69,27.5,146.1],[69.5,27.5,69.8],[70,27.5,8],[70.5,27.5,8],[71,27.5,8.6],[71.5,27.5,31.9],[72,27.5,58.3],[72.5,27.5,59.4],[73,27.5,82.4],[73.5,27.5,128.9],[74,27.5,140.3],[74.5,27.5,208.1],[75,27.5,251.5],[75.5,27.5,395.7],[76,27.5,270.1],[76.5,27.5,395.9],[77,27.5,418.2],[77.5,27.5,907],[78,27.5,1092.7],[78.5,27.5,612.1],[79,27.5,680.4],[79.5,27.5,638.1],[80,27.5,602.8],[80.5,27.5,613.6],[81,27.5,527.4],[81.5,27.5,637.3],[82,27.5,659],[82.5,27.5,702.9],[83,27.5,698.8],[83.5,27.5,601.2],[84,27.5,371.1],[84.5,27.5,371.6],[85,27.5,357.3],[85.5,27.5,253.4],[86,27.5,132.1],[86.5,27.5,119.3],[87,27.5,105],[87.5,27.5,117.1],[88,27.5,165.6],[88.5,27.5,166.9],[89,27.5,50],[89.5,27.5,41.8],[90,27.5,58.8],[90.5,27.5,33.1],[91,27.5,70.6],[91.5,27.5,59.6],[92,27.5,25.8],[92.5,27.5,15.9],[93,27.5,14.3],[93.5,27.5,110.1],[94,27.5,214.5],[94.5,27.5,299.6],[95,27.5,368.8],[95.5,27.5,133.5],[96,27.5,12.3],[96.5,27.5,5.4],[97,27.5,12.3],[97.5,27.5,7.1],[98,27.5,3.7],[98.5,27.5,20.6],[99,27.5,37.9],[99.5,27.5,36.4],[100,27.5,38.3],[100.5,27.5,41.4],[101,27.5,51],[101.5,27.5,66.4],[102,27.5,92.8],[102.5,27.5,105.6],[103,27.5,199.3],[103.5,27.5,221.6],[104,27.5,178],[104.5,27.5,227.4],[105,27.5,299.8],[105.5,27.5,255],[106,27.5,255.2],[106.5,27.5,226.8],[107,27.5,208.5],[107.5,27.5,171.2],[108,27.5,117.7],[108.5,27.5,155.6],[109,27.5,165.6],[109.5,27.5,177.4],[110,27.5,237.9],[110.5,27.5,357.5],[111,27.5,579.3],[111.5,27.5,590.1],[112,27.5,458],[112.5,27.5,404.8],[113,27.5,283.7],[113.5,27.5,246.7],[114,27.5,170.4],[114.5,27.5,240.2],[115,27.5,225.4],[115.5,27.5,141.2],[116,27.5,134.6],[116.5,27.5,130.1],[117,27.5,94.6],[117.5,27.5,104.2],[118,27.5,110.4],[118.5,27.5,119.9],[119,27.5,168.7],[119.5,27.5,238.2],[120,27.5,362.6],[120.5,27.5,742.7],[121,27.5,744.9],[127.5,27.5,71.2],[128,27.5,279.6],[128.5,27.5,162.5],[142,27.5,28.1],[-114.5,27,1.4],[-114,27,1.4],[-113.5,27,1.4],[-113,27,1.4],[-112.5,27,1.4],[-112,27,1.4],[-111.5,27,1.3],[-110,27,48],[-109.5,27,39.9],[-109,27,7.4],[-108.5,27,8.7],[-108,27,6.1],[-107.5,27,6.1],[-107,27,3],[-106.5,27,5],[-106,27,10.5],[-105.5,27,1.8],[-105,27,3.1],[-104.5,27,3.3],[-104,27,3.4],[-103.5,27,7.3],[-103,27,6.2],[-102.5,27,2.4],[-102,27,18.3],[-101.5,27,54.9],[-101,27,6.2],[-100.5,27,9.1],[-100,27,1.8],[-99.5,27,6.4],[-99,27,5.7],[-98.5,27,1.9],[-98,27,2.2],[-82.5,27,170],[-82,27,122.8],[-81.5,27,7.7],[-81,27,25.3],[-80.5,27,311.1],[-79,27,39],[-78.5,27,39],[-78,27,27],[-77.5,27,9.1],[-77,27,9.1],[-14,27,4.8],[-13.5,27,8.6],[-13,27,8.5],[-12.5,27,2.8],[14,27,5.1],[14.5,27,4],[15,27,1.7],[31,27,410.9],[31.5,27,690.7],[33.5,27,7.8],[34,27,13.9],[35.5,27,5.8],[36,27,5.8],[36.5,27,5.9],[37,27,8.8],[37.5,27,9.4],[38,27,8.8],[38.5,27,8.3],[39,27,7.1],[39.5,27,6.4],[40,27,4.2],[40.5,27,4.2],[41,27,4.2],[41.5,27,4.2],[42,27,4.2],[42.5,27,8.5],[43,27,15.7],[43.5,27,17.6],[44,27,17.1],[44.5,27,13.3],[45,27,12.3],[45.5,27,11.5],[46,27,9.3],[46.5,27,6.7],[47,27,5.3],[47.5,27,5.3],[48,27,5.3],[48.5,27,5.3],[49,27,5.3],[49.5,27,5.3],[50,27,5.3],[53,27,9.6],[53.5,27,9.6],[54,27,9.6],[54.5,27,9.6],[55,27,18.5],[55.5,27,51.8],[56,27,53.5],[56.5,27,22],[57,27,22],[57.5,27,20.9],[58,27,12.6],[58.5,27,7.8],[59,27,6.3],[59.5,27,6.3],[60,27,8.1],[60.5,27,6.3],[61,27,6.3],[61.5,27,7.1],[62,27,9.5],[62.5,27,12.6],[63,27,14.7],[63.5,27,16.3],[64,27,16.2],[64.5,27,16.3],[65,27,10.1],[65.5,27,5.1],[66,27,12.6],[66.5,27,15.8],[67,27,67.7],[67.5,27,155.7],[68,27,284.5],[68.5,27,116.4],[69,27,102.4],[69.5,27,35.4],[70,27,13.8],[70.5,27,9.5],[71,27,12],[71.5,27,23.5],[72,27,66.3],[72.5,27,81.4],[73,27,104.2],[73.5,27,145.3],[74,27,133.8],[74.5,27,287.1],[75,27,188.8],[75.5,27,957.3],[76,27,315.7],[76.5,27,346.3],[77,27,325.9],[77.5,27,391.9],[78,27,417.3],[78.5,27,488],[79,27,571],[79.5,27,504.9],[80,27,661.1],[80.5,27,1275.2],[81,27,699.8],[81.5,27,667.2],[82,27,744],[82.5,27,810.9],[83,27,1088.6],[83.5,27,1054],[84,27,905],[84.5,27,894.7],[85,27,823],[85.5,27,745.4],[86,27,496.8],[86.5,27,292.8],[87,27,372.8],[87.5,27,316.8],[88,27,476.2],[88.5,27,509.9],[89,27,444.8],[89.5,27,201],[90,27,264.5],[90.5,27,161.7],[91,27,281.1],[91.5,27,390],[92,27,315.6],[92.5,27,329.7],[93,27,217.5],[93.5,27,246],[94,27,363.2],[94.5,27,261.6],[95,27,62.9],[95.5,27,8.8],[96,27,2.6],[96.5,27,2],[97,27,2],[97.5,27,2.4],[98,27,1.6],[98.5,27,19],[99,27,46.4],[99.5,27,57.7],[100,27,73.7],[100.5,27,70.3],[101,27,80.8],[101.5,27,188.3],[102,27,97.6],[102.5,27,109.6],[103,27,163.7],[103.5,27,159.5],[104,27,188.4],[104.5,27,325.9],[105,27,261.3],[105.5,27,303.7],[106,27,323.4],[106.5,27,734.6],[107,27,169.9],[107.5,27,229.5],[108,27,153.9],[108.5,27,108.5],[109,27,134.4],[109.5,27,134],[110,27,125.9],[110.5,27,323.7],[111,27,288.8],[111.5,27,389],[112,27,415.2],[112.5,27,632.5],[113,27,287.6],[113.5,27,156],[114,27,155.8],[114.5,27,162.7],[115,27,176.8],[115.5,27,167.5],[116,27,153.7],[116.5,27,95.4],[117,27,73.7],[117.5,27,123.1],[118,27,166.4],[118.5,27,166.8],[119,27,250.8],[119.5,27,249.9],[120,27,218.7],[120.5,27,218.7],[127,27,126.8],[127.5,27,238],[128,27,102.2],[142,27,28.1],[-113,26.5,1.4],[-112.5,26.5,2.7],[-112,26.5,3.2],[-111.5,26.5,3.6],[-109.5,26.5,73.4],[-109,26.5,34.3],[-108.5,26.5,17.4],[-108,26.5,9.8],[-107.5,26.5,5.5],[-107,26.5,4.8],[-106.5,26.5,2.3],[-106,26.5,2.4],[-105.5,26.5,1.9],[-105,26.5,1.7],[-104.5,26.5,3.1],[-104,26.5,4.7],[-103.5,26.5,10.2],[-103,26.5,10.1],[-102.5,26.5,5],[-102,26.5,4.5],[-101.5,26.5,5.5],[-101,26.5,2.2],[-100.5,26.5,14.8],[-100,26.5,6],[-99.5,26.5,15.7],[-99,26.5,29.5],[-98.5,26.5,207.7],[-98,26.5,92],[-97.5,26.5,32.3],[-82.5,26.5,130.4],[-82,26.5,161.3],[-81.5,26.5,9.6],[-81,26.5,1.2],[-80.5,26.5,766.1],[-79,26.5,39],[-78,26.5,9.1],[-77.5,26.5,9.1],[-77,26.5,9.1],[-13.5,26.5,2.6],[-13,26.5,6.3],[-12.5,26.5,1.2],[14,26.5,2.3],[31.5,26.5,489.9],[32,26.5,626.6],[32.5,26.5,317.6],[33.5,26.5,10],[34,26.5,34.2],[36,26.5,5.8],[36.5,26.5,5.8],[37,26.5,7.5],[37.5,26.5,9.3],[38,26.5,9.4],[38.5,26.5,9.4],[39,26.5,9.4],[39.5,26.5,8.3],[40,26.5,4.2],[40.5,26.5,4.2],[41,26.5,4.2],[41.5,26.5,4.2],[42,26.5,10.1],[42.5,26.5,17.6],[43,26.5,17.6],[43.5,26.5,17.6],[44,26.5,17.1],[44.5,26.5,12.7],[45,26.5,12.3],[45.5,26.5,12.3],[46,26.5,12.3],[46.5,26.5,12.3],[47,26.5,9.9],[47.5,26.5,5.3],[48,26.5,5.3],[48.5,26.5,5.3],[49,26.5,5.3],[49.5,26.5,5.3],[50,26.5,83.6],[50.5,26.5,1588.2],[51,26.5,4.1],[53.5,26.5,9.6],[54,26.5,9.6],[54.5,26.5,9.6],[55,26.5,53.5],[56,26.5,26],[56.5,26.5,20.5],[57,26.5,20.4],[57.5,26.5,11.7],[58,26.5,8.8],[58.5,26.5,7.7],[59,26.5,7.1],[59.5,26.5,12],[60,26.5,40.9],[60.5,26.5,8.8],[61,26.5,6.6],[61.5,26.5,8.7],[62,26.5,17.1],[62.5,26.5,19.4],[63,26.5,19.4],[63.5,26.5,18.7],[64,26.5,17.1],[64.5,26.5,7.2],[65,26.5,5.2],[65.5,26.5,5.1],[66,26.5,13.5],[66.5,26.5,19.9],[67,26.5,42.5],[67.5,26.5,104.7],[68,26.5,228],[68.5,26.5,180.9],[69,26.5,123.2],[69.5,26.5,119.7],[70,26.5,43.4],[70.5,26.5,16.8],[71,26.5,23.8],[71.5,26.5,44.9],[72,26.5,82.8],[72.5,26.5,209.1],[73,26.5,285.3],[73.5,26.5,138.7],[74,26.5,194],[74.5,26.5,251.8],[75,26.5,147.4],[75.5,26.5,192.1],[76,26.5,186.4],[76.5,26.5,165],[77,26.5,161.2],[77.5,26.5,274.1],[78,26.5,357.2],[78.5,26.5,270.5],[79,26.5,349.7],[79.5,26.5,398.5],[80,26.5,1274.4],[80.5,26.5,542.2],[81,26.5,634.8],[81.5,26.5,666.1],[82,26.5,674.5],[82.5,26.5,772.6],[83,26.5,928],[83.5,26.5,906],[84,26.5,1166.6],[84.5,26.5,1025.6],[85,26.5,1223.9],[85.5,26.5,1267.6],[86,26.5,1059.6],[86.5,26.5,696.9],[87,26.5,692.4],[87.5,26.5,675.6],[88,26.5,614.5],[88.5,26.5,706.9],[89,26.5,796.3],[89.5,26.5,586.8],[90,26.5,446.8],[90.5,26.5,492],[91,26.5,546.8],[91.5,26.5,618.8],[92,26.5,409.1],[92.5,26.5,552.5],[93,26.5,92.2],[93.5,26.5,140.8],[94,26.5,145.9],[94.5,26.5,139.7],[95,26.5,19.7],[95.5,26.5,5.2],[96,26.5,2.8],[96.5,26.5,2.2],[97,26.5,4.3],[98,26.5,1.1],[98.5,26.5,38.2],[99,26.5,45.8],[99.5,26.5,93.4],[100,26.5,116],[100.5,26.5,96.6],[101,26.5,67.2],[101.5,26.5,135.9],[102,26.5,98.6],[102.5,26.5,253],[103,26.5,418.5],[103.5,26.5,190.8],[104,26.5,216.1],[104.5,26.5,226.4],[105,26.5,246.6],[105.5,26.5,310.9],[106,26.5,297],[106.5,26.5,312.2],[107,26.5,170.2],[107.5,26.5,164.5],[108,26.5,107.3],[108.5,26.5,99.6],[109,26.5,105.3],[109.5,26.5,86.9],[110,26.5,90.3],[110.5,26.5,141.3],[111,26.5,235.8],[111.5,26.5,267.3],[112,26.5,343.6],[112.5,26.5,361.8],[113,26.5,253.7],[113.5,26.5,115.7],[114,26.5,159.6],[114.5,26.5,231.4],[115,26.5,192.5],[115.5,26.5,222.6],[116,26.5,175.4],[116.5,26.5,105.9],[117,26.5,124.9],[117.5,26.5,174.8],[118,26.5,118.4],[118.5,26.5,189.3],[119,26.5,966.3],[119.5,26.5,643.9],[120,26.5,319.6],[120.5,26.5,218.7],[126.5,26.5,156.2],[127,26.5,60.7],[127.5,26.5,1944.8],[128,26.5,492.3],[-112.5,26,3.8],[-112,26,4],[-111.5,26,3.7],[-109.5,26,79.2],[-109,26,71.1],[-108.5,26,51.9],[-108,26,15],[-107.5,26,6.3],[-107,26,4.4],[-106.5,26,2],[-106,26,2.3],[-105.5,26,2.5],[-105,26,1.3],[-104.5,26,3.7],[-104,26,101.9],[-103.5,26,98.4],[-103,26,7.4],[-102.5,26,3.9],[-102,26,4.2],[-101.5,26,7.9],[-101,26,56.4],[-100.5,26,1132.4],[-100,26,21],[-99.5,26,3.5],[-99,26,18.4],[-98.5,26,120.5],[-98,26,115.6],[-97.5,26,165.3],[-82,26,70],[-81,26,2.5],[-80.5,26,1471.3],[-79.5,26,76],[-78,26,14.6],[-77.5,26,9.1],[-77,26,23.3],[32,26,45],[32.5,26,454.1],[33.5,26,2.2],[34,26,19.1],[34.5,26,1.9],[36,26,5.8],[36.5,26,5.8],[37,26,5.8],[37.5,26,7.6],[38,26,9.4],[38.5,26,9.4],[39,26,9.4],[39.5,26,8.7],[40,26,4.2],[40.5,26,4.6],[41,26,5.1],[41.5,26,9.6],[42,26,17.1],[42.5,26,17.6],[43,26,17.6],[43.5,26,17.5],[44,26,16.8],[44.5,26,14.2],[45,26,12.3],[45.5,26,12.3],[46,26,12.3],[46.5,26,12.3],[47,26,12],[47.5,26,5.3],[48,26,5.3],[48.5,26,5.3],[49,26,5.3],[49.5,26,5.3],[50,26,8.9],[50.5,26,77.2],[51,26,10],[51.5,26,18.1],[52,26,18.1],[54,26,9.6],[54.5,26,9.6],[55,26,49.9],[55.5,26,52.1],[56,26,35.3],[57,26,6.6],[57.5,26,6.4],[58,26,6.4],[58.5,26,6.5],[59,26,7.8],[59.5,26,9.1],[60,26,20.1],[60.5,26,9],[61,26,8],[61.5,26,12.1],[62,26,17.4],[62.5,26,17.5],[63,26,18.5],[63.5,26,18.3],[64,26,13.4],[64.5,26,6.2],[65,26,9.3],[65.5,26,7.8],[66,26,15],[66.5,26,21.4],[67,26,58],[67.5,26,91.3],[68,26,238.2],[68.5,26,307.6],[69,26,170.4],[69.5,26,147.5],[70,26,75.5],[70.5,26,45.4],[71,26,112.9],[71.5,26,69.9],[72,26,93],[72.5,26,99.5],[73,26,120.3],[73.5,26,144.4],[74,26,189.8],[74.5,26,159.5],[75,26,159.8],[75.5,26,146.8],[76,26,186.2],[76.5,26,119.7],[77,26,70.5],[77.5,26,191.8],[78,26,217.5],[78.5,26,268.5],[79,26,245.1],[79.5,26,256.9],[80,26,334.6],[80.5,26,382],[81,26,614.4],[81.5,26,716.3],[82,26,803.8],[82.5,26,871.8],[83,26,882.4],[83.5,26,912.9],[84,26,838.8],[84.5,26,1100.6],[85,26,1579.2],[85.5,26,1238.1],[86,26,1117.6],[86.5,26,820.4],[87,26,725.2],[87.5,26,791.7],[88,26,707.4],[88.5,26,975.7],[89,26,1191.2],[89.5,26,798.9],[90,26,166.9],[90.5,26,108.9],[91,26,122.5],[91.5,26,189.2],[92,26,101.3],[92.5,26,125.5],[93,26,147],[93.5,26,170],[94,26,129.8],[94.5,26,54.2],[95,26,5.5],[95.5,26,4],[96,26,6.9],[96.5,26,7.1],[97,26,30.8],[97.5,26,9],[98,26,23.1],[98.5,26,88.1],[99,26,63.8],[99.5,26,59.7],[100,26,266.6],[100.5,26,162.6],[101,26,94.3],[101.5,26,106],[102,26,87.2],[102.5,26,125.8],[103,26,129.8],[103.5,26,196],[104,26,207],[104.5,26,251.3],[105,26,211.6],[105.5,26,191.3],[106,26,133.7],[106.5,26,113.9],[107,26,104.2],[107.5,26,115.8],[108,26,92.1],[108.5,26,94.6],[109,26,108],[109.5,26,114.3],[110,26,129.8],[110.5,26,153.2],[111,26,180.5],[111.5,26,232.4],[112,26,313.6],[112.5,26,273.1],[113,26,208.3],[113.5,26,135.8],[114,26,114.1],[114.5,26,371.8],[115,26,213.9],[115.5,26,183.4],[116,26,138.1],[116.5,26,117.8],[117,26,119.1],[117.5,26,171.7],[118,26,179.7],[118.5,26,416.5],[119,26,635.6],[119.5,26,943],[123.5,26,143.6],[131,26,49.7],[-112.5,25.5,3.4],[-112,25.5,4],[-111.5,25.5,4],[-111,25.5,5.4],[-109.5,25.5,79.2],[-109,25.5,98.4],[-108.5,25.5,79.9],[-108,25.5,33],[-107.5,25.5,26.1],[-107,25.5,4.2],[-106.5,25.5,2.3],[-106,25.5,4],[-105.5,25.5,4.8],[-105,25.5,6.1],[-104.5,25.5,5.6],[-104,25.5,33.6],[-103.5,25.5,82.8],[-103,25.5,3.7],[-102.5,25.5,3.1],[-102,25.5,5.9],[-101.5,25.5,80],[-101,25.5,31.3],[-100.5,25.5,36.4],[-100,25.5,32.1],[-99.5,25.5,10],[-99,25.5,2.9],[-98.5,25.5,15.9],[-98,25.5,46.5],[-97.5,25.5,73.1],[-81,25.5,8.2],[-80.5,25.5,113.5],[-78.5,25.5,1.4],[-78,25.5,251.3],[-77.5,25.5,884],[-77,25.5,23.3],[-76.5,25.5,23.3],[32,25.5,25.3],[32.5,25.5,174.1],[33,25.5,1.5],[36.5,25.5,5.8],[37,25.5,5.8],[37.5,25.5,5.9],[38,25.5,9.3],[38.5,25.5,9.4],[39,25.5,9.4],[39.5,25.5,9.2],[40,25.5,7.9],[40.5,25.5,9],[41,25.5,9.4],[41.5,25.5,14.9],[42,25.5,17.6],[42.5,25.5,17.6],[43,25.5,16.4],[43.5,25.5,14.1],[44,25.5,12.3],[44.5,25.5,12.3],[45,25.5,12.3],[45.5,25.5,12.3],[46,25.5,12.3],[46.5,25.5,12.3],[47,25.5,11.9],[47.5,25.5,5.3],[48,25.5,5.3],[48.5,25.5,5.3],[49,25.5,5.3],[49.5,25.5,5.3],[50,25.5,5.3],[50.5,25.5,4],[51,25.5,98.6],[51.5,25.5,544.3],[52.5,25.5,15.7],[54,25.5,15.7],[55,25.5,226.4],[55.5,25.5,178.2],[56,25.5,57.7],[58.5,25.5,6.4],[59,25.5,7],[59.5,25.5,8],[60,25.5,8],[60.5,25.5,8],[61,25.5,8],[61.5,25.5,12],[62,25.5,13.4],[62.5,25.5,13.4],[63,25.5,13.5],[63.5,25.5,13.4],[64,25.5,13.3],[64.5,25.5,13.4],[65,25.5,16.5],[65.5,25.5,21.5],[66,25.5,21.5],[66.5,25.5,68.4],[67,25.5,544.3],[67.5,25.5,84.4],[68,25.5,239.4],[68.5,25.5,459.6],[69,25.5,264.7],[69.5,25.5,118.1],[70,25.5,82],[70.5,25.5,58.8],[71,25.5,67.1],[71.5,25.5,80.7],[72,25.5,125.3],[72.5,25.5,129.1],[73,25.5,160.4],[73.5,25.5,181.4],[74,25.5,201],[74.5,25.5,225.3],[75,25.5,145.1],[75.5,25.5,285.3],[76,25.5,198.7],[76.5,25.5,121.5],[77,25.5,96.4],[77.5,25.5,129.2],[78,25.5,264.2],[78.5,25.5,311.8],[79,25.5,246.4],[79.5,25.5,233.7],[80,25.5,248.7],[80.5,25.5,308.6],[81,25.5,362.2],[81.5,25.5,935.5],[82,25.5,863.1],[82.5,25.5,1341.2],[83,25.5,892.7],[83.5,25.5,627],[84,25.5,865.2],[84.5,25.5,870.1],[85,25.5,1065.6],[85.5,25.5,955.8],[86,25.5,838.2],[86.5,25.5,808.2],[87,25.5,862.4],[87.5,25.5,636.7],[88,25.5,691],[88.5,25.5,683.4],[89,25.5,966],[89.5,25.5,876.6],[90,25.5,364.5],[90.5,25.5,244.7],[91,25.5,205.4],[91.5,25.5,300],[92,25.5,136.1],[92.5,25.5,103.5],[93,25.5,38.3],[93.5,25.5,62.8],[94,25.5,93.6],[94.5,25.5,16],[95,25.5,13.2],[95.5,25.5,12.6],[96,25.5,22.1],[96.5,25.5,45.9],[97,25.5,33.2],[97.5,25.5,29.7],[98,25.5,91.3],[98.5,25.5,147],[99,25.5,158.7],[99.5,25.5,67.1],[100,25.5,143.8],[100.5,25.5,158.8],[101,25.5,111.5],[101.5,25.5,120.3],[102,25.5,185.8],[102.5,25.5,513.1],[103,25.5,209.9],[103.5,25.5,289.5],[104,25.5,210.3],[104.5,25.5,227.6],[105,25.5,194.5],[105.5,25.5,132.3],[106,25.5,83.8],[106.5,25.5,70.8],[107,25.5,70.3],[107.5,25.5,83],[108,25.5,76.9],[108.5,25.5,102.6],[109,25.5,100.3],[109.5,25.5,108.6],[110,25.5,414.9],[110.5,25.5,135.5],[111,25.5,151.2],[111.5,25.5,192.1],[112,25.5,182.6],[112.5,25.5,222.7],[113,25.5,148.6],[113.5,25.5,106.3],[114,25.5,156.2],[114.5,25.5,171.4],[115,25.5,156],[115.5,25.5,131.7],[116,25.5,133.6],[116.5,25.5,164.8],[117,25.5,148.8],[117.5,25.5,286.5],[118,25.5,525.4],[118.5,25.5,937.8],[119,25.5,675.2],[119.5,25.5,870.7],[121,25.5,3464.8],[121.5,25.5,3490.4],[122,25.5,168.1],[141,25.5,28.1],[-112.5,25,2.3],[-112,25,3.9],[-111.5,25,9.6],[-111,25,16],[-108.5,25,140.5],[-108,25,140],[-107.5,25,96.5],[-107,25,6.1],[-106.5,25,6],[-106,25,6.3],[-105.5,25,9.9],[-105,25,8.1],[-104.5,25,9.4],[-104,25,6.3],[-103.5,25,64.9],[-103,25,2.4],[-102.5,25,1.4],[-102,25,10.4],[-101.5,25,63.4],[-101,25,35.6],[-100.5,25,5.5],[-100,25,19.1],[-99.5,25,10.5],[-99,25,2.1],[-98.5,25,6.7],[-98,25,8.6],[-83,25,137.8],[-82.5,25,137.8],[-82,25,333.5],[-81.5,25,176.6],[-81,25,237.6],[-79,25,1.4],[-78.5,25,1.4],[-78,25,3.5],[-77.5,25,884],[-77,25,9.2],[-76.5,25,23.3],[-76,25,4.3],[-15.5,25,1.1],[32.5,25,146.8],[33,25,15.2],[37,25,6.4],[37.5,25,7.6],[38,25,9.4],[38.5,25,9.4],[39,25,9.4],[39.5,25,9.4],[40,25,9.4],[40.5,25,9.4],[41,25,9.4],[41.5,25,10],[42,25,15.1],[42.5,25,15.5],[43,25,13],[43.5,25,12.3],[44,25,12.3],[44.5,25,12.3],[45,25,12.3],[45.5,25,12.3],[46,25,12.3],[46.5,25,12.3],[47,25,12.1],[47.5,25,6.8],[48,25,5.3],[48.5,25,5.3],[49,25,5.3],[49.5,25,5.3],[50,25,5.3],[50.5,25,4.3],[51,25,8.3],[51.5,25,35.7],[52,25,15.7],[52.5,25,15.7],[53,25,15.7],[54,25,15.7],[54.5,25,15.7],[55,25,140.3],[55.5,25,86.2],[56,25,33.2],[56.5,25,61],[66.5,25,2286.2],[67,25,3964],[67.5,25,69.1],[68,25,149.5],[68.5,25,221.7],[69,25,168.6],[69.5,25,56],[70,25,52.4],[70.5,25,52.9],[71,25,96.8],[71.5,25,150.2],[72,25,152.8],[72.5,25,161.7],[73,25,148.5],[73.5,25,267.1],[74,25,259.5],[74.5,25,197.8],[75,25,124.1],[75.5,25,239.4],[76,25,194.2],[76.5,25,143.2],[77,25,133.8],[77.5,25,126.4],[78,25,187.5],[78.5,25,205.6],[79,25,204.7],[79.5,25,147.5],[80,25,148.9],[80.5,25,250],[81,25,301.5],[81.5,25,283.8],[82,25,214.5],[82.5,25,245.6],[83,25,264.6],[83.5,25,242.3],[84,25,551.2],[84.5,25,732.2],[85,25,724.3],[85.5,25,554.7],[86,25,419.8],[86.5,25,439.6],[87,25,401.2],[87.5,25,752.6],[88,25,905.2],[88.5,25,901.1],[89,25,1063.6],[89.5,25,1137.3],[90,25,1186],[90.5,25,1060.4],[91,25,479.6],[91.5,25,932.6],[92,25,763.4],[92.5,25,491.8],[93,25,103.7],[93.5,25,398.6],[94,25,88.2],[94.5,25,15.7],[95,25,14.7],[95.5,25,23.9],[96,25,33.2],[96.5,25,30.5],[97,25,30.6],[97.5,25,55.7],[98,25,103.4],[98.5,25,106.1],[99,25,133.5],[99.5,25,104],[100,25,126],[100.5,25,91.4],[101,25,96],[101.5,25,54.8],[102,25,177.2],[102.5,25,348.2],[103,25,166.1],[103.5,25,194],[104,25,137.7],[104.5,25,134.7],[105,25,97.3],[105.5,25,70.3],[106,25,55.7],[106.5,25,69.5],[107,25,92],[107.5,25,122.7],[108,25,133.2],[108.5,25,144.7],[109,25,352],[109.5,25,119],[110,25,171.2],[110.5,25,189.5],[111,25,211.6],[111.5,25,154.5],[112,25,127.4],[112.5,25,122.9],[113,25,172.8],[113.5,25,226.6],[114,25,115.7],[114.5,25,156.6],[115,25,163.9],[115.5,25,191.9],[116,25,201.5],[116.5,25,173],[117,25,196.3],[117.5,25,620.7],[118,25,1040.9],[118.5,25,1570.4],[119,25,698.3],[120.5,25,369.2],[121,25,950.6],[121.5,25,521.3],[124,25,193.1],[124.5,25,61.2],[125,25,267.1],[141,25,28.1],[-112,24.5,4.1],[-111.5,24.5,17.5],[-111,24.5,17.5],[-110.5,24.5,16.7],[-110,24.5,7.2],[-108,24.5,144.2],[-107.5,24.5,97],[-107,24.5,13.9],[-106.5,24.5,4.8],[-106,24.5,4.1],[-105.5,24.5,34.1],[-105,24.5,37.7],[-104.5,24.5,31.8],[-104,24.5,10.4],[-103.5,24.5,12.1],[-103,24.5,3.5],[-102.5,24.5,1.7],[-102,24.5,1.4],[-101.5,24.5,3.7],[-101,24.5,5.1],[-100.5,24.5,5.7],[-100,24.5,6.3],[-99.5,24.5,8.9],[-99,24.5,5.1],[-98.5,24.5,6.5],[-98,24.5,4.2],[-78.5,24.5,1.4],[-78,24.5,1.4],[-77.5,24.5,1.4],[-77,24.5,9.2],[-76.5,24.5,9.2],[-76,24.5,4.3],[-75.5,24.5,4.3],[-75,24.5,6.1],[-74.5,24.5,6.1],[-16,24.5,1.1],[-15.5,24.5,1.1],[-15,24.5,1.1],[-14.5,24.5,1.1],[-14,24.5,1.1],[-13.5,24.5,1.1],[-13,24.5,1.1],[-12.5,24.5,1.1],[32.5,24.5,161.2],[33,24.5,14.2],[37,24.5,9.4],[37.5,24.5,9.4],[38,24.5,9.4],[38.5,24.5,9.4],[39,24.5,9.4],[39.5,24.5,9.4],[40,24.5,9.4],[40.5,24.5,9.4],[41,24.5,9.4],[41.5,24.5,9.4],[42,24.5,12.2],[42.5,24.5,12.3],[43,24.5,12.3],[43.5,24.5,12.3],[44,24.5,12.3],[44.5,24.5,12.3],[45,24.5,12.3],[45.5,24.5,12.3],[46,24.5,12.3],[46.5,24.5,12.3],[47,24.5,12.3],[47.5,24.5,12.1],[48,24.5,7.3],[48.5,24.5,5.3],[49,24.5,5.3],[49.5,24.5,5.3],[50,24.5,5.3],[50.5,24.5,5.3],[51,24.5,10.3],[51.5,24.5,15.7],[52,24.5,15.7],[52.5,24.5,15.7],[53,24.5,15.7],[53.5,24.5,15.7],[54,24.5,15.7],[54.5,24.5,15.7],[55,24.5,15.7],[55.5,24.5,13.3],[56,24.5,27.8],[56.5,24.5,58],[57,24.5,43.7],[67,24.5,53.6],[67.5,24.5,53.6],[68,24.5,54.6],[68.5,24.5,128.1],[69,24.5,62.9],[69.5,24.5,47.4],[70,24.5,52.4],[70.5,24.5,52.3],[71,24.5,91.5],[71.5,24.5,214.9],[72,24.5,315.6],[72.5,24.5,216.7],[73,24.5,136.3],[73.5,24.5,260.8],[74,24.5,192.9],[74.5,24.5,190.7],[75,24.5,209.3],[75.5,24.5,190.5],[76,24.5,171.2],[76.5,24.5,122.9],[77,24.5,147.2],[77.5,24.5,169.1],[78,24.5,206.2],[78.5,24.5,161.2],[79,24.5,133.4],[79.5,24.5,105.6],[80,24.5,120.5],[80.5,24.5,213.4],[81,24.5,233.1],[81.5,24.5,197.2],[82,24.5,174.4],[82.5,24.5,181.8],[83,24.5,210.8],[83.5,24.5,343.6],[84,24.5,316.1],[84.5,24.5,252.5],[85,24.5,301.9],[85.5,24.5,377.6],[86,24.5,409.7],[86.5,24.5,442.9],[87,24.5,294.6],[87.5,24.5,631.2],[88,24.5,922.8],[88.5,24.5,1095],[89,24.5,1070.1],[89.5,24.5,1309],[90,24.5,993.4],[90.5,24.5,1372.3],[91,24.5,874.5],[91.5,24.5,671],[92,24.5,301.9],[92.5,24.5,103.7],[93,24.5,26.1],[93.5,24.5,132.1],[94,24.5,41.5],[94.5,24.5,28.1],[95,24.5,28.3],[95.5,24.5,41.1],[96,24.5,58.2],[96.5,24.5,28.3],[97,24.5,35.6],[97.5,24.5,70.3],[98,24.5,84.8],[98.5,24.5,78.7],[99,24.5,102.1],[99.5,24.5,119.6],[100,24.5,113.4],[100.5,24.5,67.4],[101,24.5,59.8],[101.5,24.5,57.1],[102,24.5,118.5],[102.5,24.5,277.4],[103,24.5,134],[103.5,24.5,115.5],[104,24.5,87.5],[104.5,24.5,96],[105,24.5,73],[105.5,24.5,52.2],[106,24.5,67.2],[106.5,24.5,95],[107,24.5,98.1],[107.5,24.5,146.3],[108,24.5,129.8],[108.5,24.5,141.2],[109,24.5,395.2],[109.5,24.5,141.8],[110,24.5,116.5],[110.5,24.5,129.8],[111,24.5,151.8],[111.5,24.5,170.7],[112,24.5,172.6],[112.5,24.5,158.2],[113,24.5,145.6],[113.5,24.5,137.6],[114,24.5,113.4],[114.5,24.5,109.6],[115,24.5,178.4],[115.5,24.5,346.3],[116,24.5,257.4],[116.5,24.5,295.4],[117,24.5,291.5],[117.5,24.5,365.6],[118,24.5,353.8],[120,24.5,1589.1],[120.5,24.5,975],[121,24.5,285],[121.5,24.5,97],[122.5,24.5,64.5],[123,24.5,64.5],[123.5,24.5,11],[124,24.5,180.8],[141,24.5,28.1],[153.5,24.5,28.1],[-111,24,17.5],[-110.5,24,17.5],[-110,24,17.5],[-109.5,24,17.5],[-107.5,24,61.9],[-107,24,22.4],[-106.5,24,67.1],[-106,24,12.2],[-105.5,24,31.5],[-105,24,55.3],[-104.5,24,20.2],[-104,24,22.7],[-103.5,24,19.7],[-103,24,15.3],[-102.5,24,4.5],[-102,24,3.3],[-101.5,24,3.5],[-101,24,20.3],[-100.5,24,6.4],[-100,24,5.1],[-99.5,24,86.1],[-99,24,5.6],[-98.5,24,3.7],[-98,24,3.6],[-80,24,10.5],[-78,24,1.4],[-77.5,24,1.4],[-76.5,24,9.2],[-76,24,9.2],[-75.5,24,5],[-75,24,5.2],[-74.5,24,6.1],[-16.5,24,1.1],[-16,24,1.1],[-15.5,24,1.1],[-15,24,1.1],[-14.5,24,1.1],[-14,24,1.1],[-13.5,24,1.1],[-13,24,1.1],[-12.5,24,1.1],[35,24,1.1],[37.5,24,9.4],[38,24,9.4],[38.5,24,9.4],[39,24,9.4],[39.5,24,9.4],[40,24,9.4],[40.5,24,9.4],[41,24,9.5],[41.5,24,24.9],[42,24,15.2],[42.5,24,12.3],[43,24,12.3],[43.5,24,12.3],[44,24,12.3],[44.5,24,12.3],[45,24,12.3],[45.5,24,12.3],[46,24,12.3],[46.5,24,12.3],[47,24,12.3],[47.5,24,12.3],[48,24,9.5],[48.5,24,5.3],[49,24,5.3],[49.5,24,5.3],[50,24,5.3],[50.5,24,5.3],[51,24,5.3],[51.5,24,10.2],[52,24,15.7],[52.5,24,15.7],[53,24,15.7],[53.5,24,15.7],[54,24,15.7],[54.5,24,15.7],[55,24,15.7],[55.5,24,16.1],[56,24,13.4],[56.5,24,34.4],[57,24,69.2],[57.5,24,88.7],[58,24,368.6],[58.5,24,735.3],[67,24,50.6],[67.5,24,53.6],[68,24,32.4],[68.5,24,22.8],[69,24,36],[69.5,24,24],[70,24,35.1],[70.5,24,55.6],[71,24,93],[71.5,24,181.6],[72,24,411.6],[72.5,24,335.6],[73,24,276.1],[73.5,24,251.7],[74,24,268.3],[74.5,24,204.5],[75,24,222.7],[75.5,24,182.7],[76,24,191.2],[76.5,24,194.8],[77,24,200.1],[77.5,24,172.1],[78,24,164.7],[78.5,24,270.5],[79,24,188.8],[79.5,24,152.5],[80,24,190.8],[80.5,24,170.2],[81,24,129.3],[81.5,24,67.4],[82,24,84.4],[82.5,24,140.5],[83,24,103.4],[83.5,24,114.8],[84,24,183.5],[84.5,24,181.7],[85,24,425.3],[85.5,24,453.3],[86,24,1036],[86.5,24,679.3],[87,24,570.9],[87.5,24,654.3],[88,24,969.7],[88.5,24,885.1],[89,24,1165.5],[89.5,24,1131.4],[90,24,4483.1],[90.5,24,2084.7],[91,24,1029.5],[91.5,24,189.9],[92,24,58.5],[92.5,24,108.5],[93,24,24.2],[93.5,24,11.5],[94,24,23.7],[94.5,24,16.3],[95,24,36.8],[95.5,24,63.6],[96,24,42.9],[96.5,24,13.2],[97,24,25.8],[97.5,24,49],[98,24,27],[98.5,24,55.8],[99,24,81.9],[99.5,24,82.5],[100,24,81.3],[100.5,24,41.6],[101,24,59.8],[101.5,24,67.3],[102,24,81.6],[102.5,24,121.8],[103,24,164.8],[103.5,24,133.3],[104,24,116.3],[104.5,24,111.9],[105,24,91.8],[105.5,24,68.8],[106,24,93.6],[106.5,24,112.1],[107,24,135.6],[107.5,24,161.5],[108,24,155.8],[108.5,24,209.4],[109,24,192.9],[109.5,24,203.2],[110,24,315.1],[110.5,24,210.9],[111,24,268.3],[111.5,24,155.3],[112,24,181.5],[112.5,24,304.3],[113,24,794.4],[113.5,24,264.7],[114,24,151.2],[114.5,24,186.1],[115,24,150.7],[115.5,24,338.2],[116,24,905.8],[116.5,24,1019.4],[117,24,386.7],[117.5,24,299.7],[119,24,601.9],[119.5,24,601.9],[120,24,636.2],[120.5,24,314.5],[121,24,82.8],[121.5,24,64.7],[-110.5,23.5,17.5],[-110,23.5,17.5],[-109.5,23.5,17.5],[-107,23.5,131.6],[-106.5,23.5,72.3],[-106,23.5,12.7],[-105.5,23.5,6.4],[-105,23.5,5.9],[-104.5,23.5,4.1],[-104,23.5,13],[-103.5,23.5,28.5],[-103,23.5,32.8],[-102.5,23.5,6.1],[-102,23.5,4.2],[-101.5,23.5,7.3],[-101,23.5,20],[-100.5,23.5,8.1],[-100,23.5,7],[-99.5,23.5,19.9],[-99,23.5,8.4],[-98.5,23.5,6.3],[-98,23.5,5.9],[-83.5,23.5,56.7],[-83,23.5,143],[-82.5,23.5,2124.3],[-82,23.5,173.5],[-81.5,23.5,136.3],[-81,23.5,24.8],[-80.5,23.5,33.5],[-80,23.5,66.3],[-76.5,23.5,9.2],[-76,23.5,9.1],[-75.5,23.5,5],[-75,23.5,5],[-16.5,23.5,1.1],[-16,23.5,1.1],[-14,23.5,1.1],[-13.5,23.5,1.1],[35,23.5,1.8],[35.5,23.5,1.5],[38.5,23.5,33],[39,23.5,20.8],[39.5,23.5,15.7],[40,23.5,9.4],[40.5,23.5,9.4],[41,23.5,20],[41.5,23.5,38.5],[42,23.5,25.3],[42.5,23.5,12.3],[43,23.5,12.3],[43.5,23.5,12.3],[44,23.5,12.3],[44.5,23.5,12.3],[45,23.5,12.3],[45.5,23.5,12.3],[46,23.5,12.3],[46.5,23.5,12.3],[47,23.5,12.3],[47.5,23.5,12.3],[48,23.5,8.7],[48.5,23.5,5.3],[49,23.5,5.3],[49.5,23.5,5.3],[50,23.5,5.3],[50.5,23.5,5.3],[51,23.5,5.3],[51.5,23.5,6.2],[52,23.5,15.7],[52.5,23.5,15.7],[53,23.5,15.7],[53.5,23.5,15.7],[54,23.5,15.7],[54.5,23.5,15.7],[55,23.5,12.3],[55.5,23.5,5.9],[56,23.5,4.4],[56.5,23.5,4.2],[57,23.5,28.9],[57.5,23.5,29.7],[58,23.5,60.8],[58.5,23.5,35.9],[59,23.5,27.8],[68,23.5,39.1],[68.5,23.5,38.1],[69,23.5,62.4],[69.5,23.5,32.1],[70,23.5,53.9],[70.5,23.5,58],[71,23.5,97.6],[71.5,23.5,116.4],[72,23.5,327.8],[72.5,23.5,1281.2],[73,23.5,305.9],[73.5,23.5,307.9],[74,23.5,375.9],[74.5,23.5,213.3],[75,23.5,280.7],[75.5,23.5,335.9],[76,23.5,226],[76.5,23.5,199.2],[77,23.5,550.9],[77.5,23.5,241.6],[78,23.5,128.8],[78.5,23.5,145],[79,23.5,145.9],[79.5,23.5,362.9],[80,23.5,283.5],[80.5,23.5,227.1],[81,23.5,123.6],[81.5,23.5,202.2],[82,23.5,143.7],[82.5,23.5,148.6],[83,23.5,137.3],[83.5,23.5,94.7],[84,23.5,127.9],[84.5,23.5,253.3],[85,23.5,508.5],[85.5,23.5,294],[86,23.5,431.1],[86.5,23.5,419.2],[87,23.5,513],[87.5,23.5,675.5],[88,23.5,1045.5],[88.5,23.5,1005.6],[89,23.5,992.1],[89.5,23.5,886],[90,23.5,1357.7],[90.5,23.5,1646.8],[91,23.5,1356.9],[91.5,23.5,229.9],[92,23.5,83.7],[92.5,23.5,30],[93,23.5,31.2],[93.5,23.5,28],[94,23.5,61.4],[94.5,23.5,32.2],[95,23.5,67],[95.5,23.5,74.7],[96,23.5,22.7],[96.5,23.5,22.2],[97,23.5,34.2],[97.5,23.5,39],[98,23.5,41.3],[98.5,23.5,28.8],[99,23.5,52.3],[99.5,23.5,61.6],[100,23.5,45.2],[100.5,23.5,44],[101,23.5,55.8],[101.5,23.5,75.4],[102,23.5,100.5],[102.5,23.5,149.9],[103,23.5,191.4],[103.5,23.5,104],[104,23.5,129.9],[104.5,23.5,111.7],[105,23.5,91.8],[105.5,23.5,68.8],[106,23.5,118],[106.5,23.5,120.7],[107,23.5,137.2],[107.5,23.5,211.5],[108,23.5,298.4],[108.5,23.5,289.7],[109,23.5,344.5],[109.5,23.5,368.7],[110,23.5,322.5],[110.5,23.5,250.2],[111,23.5,196],[111.5,23.5,171],[112,23.5,338.2],[112.5,23.5,731.6],[113,23.5,2595.1],[113.5,23.5,1230.7],[114,23.5,665.2],[114.5,23.5,237.2],[115,23.5,238.2],[115.5,23.5,584.9],[116,23.5,1051],[116.5,23.5,2314.3],[117,23.5,448.2],[119,23.5,601.9],[119.5,23.5,601.9],[120,23.5,808.5],[120.5,23.5,339],[121,23.5,52.5],[121.5,23.5,46.1],[-110.5,23,17.5],[-110,23,17.5],[-106.5,23,16.1],[-106,23,29.2],[-105.5,23,9],[-105,23,3.3],[-104.5,23,4.2],[-104,23,7],[-103.5,23,17.7],[-103,23,90.3],[-102.5,23,57.2],[-102,23,15.5],[-101.5,23,38.1],[-101,23,21],[-100.5,23,8.6],[-100,23,11.1],[-99.5,23,18.4],[-99,23,28.7],[-98.5,23,25.9],[-98,23,21.8],[-84.5,23,31.4],[-84,23,46.9],[-83.5,23,64.6],[-83,23,131],[-82.5,23,249.5],[-82,23,74.1],[-81.5,23,83.7],[-81,23,55.5],[-80.5,23,60.8],[-80,23,65.6],[-79.5,23,56.7],[-79,23,53.3],[-78.5,23,57.7],[-76,23,2.3],[-75,23,5],[-74.5,23,1.1],[-16.5,23,1.1],[-16,23,1.1],[-12.5,23,16.4],[35,23,1.2],[38.5,23,38.5],[39,23,38.5],[39.5,23,36.2],[40,23,14],[40.5,23,20.7],[41,23,37.7],[41.5,23,38.5],[42,23,37.7],[42.5,23,33.7],[43,23,14.3],[43.5,23,12.3],[44,23,12.3],[44.5,23,12.3],[45,23,12.3],[45.5,23,12.3],[46,23,12.3],[46.5,23,12.3],[47,23,12.3],[47.5,23,12.3],[48,23,7.8],[48.5,23,5.3],[49,23,5.3],[49.5,23,5.3],[50,23,5.3],[50.5,23,5.3],[51,23,5.3],[51.5,23,5.3],[52,23,6.2],[52.5,23,7.9],[53,23,9.7],[53.5,23,11.4],[54,23,13.1],[54.5,23,14.9],[55,23,8.2],[55.5,23,3.8],[56,23,3.8],[56.5,23,7.3],[57,23,16.4],[57.5,23,26.2],[58,23,10.1],[58.5,23,11.8],[59,23,28.6],[59.5,23,39.1],[68.5,23,39.7],[69,23,102.7],[69.5,23,118.4],[70,23,152.6],[70.5,23,192.8],[71,23,143.6],[71.5,23,172.2],[72,23,273.3],[72.5,23,1235.4],[73,23,501.1],[73.5,23,417.4],[74,23,390.7],[74.5,23,209],[75,23,195.2],[75.5,23,541.2],[76,23,470.4],[76.5,23,144.3],[77,23,125.8],[77.5,23,177.7],[78,23,143.6],[78.5,23,178.8],[79,23,143.7],[79.5,23,227.1],[80,23,98.5],[80.5,23,106.6],[81,23,47.4],[81.5,23,123.3],[82,23,74.9],[82.5,23,137.9],[83,23,152.8],[83.5,23,125.2],[84,23,136.6],[84.5,23,142.4],[85,23,136.8],[85.5,23,257.8],[86,23,685.4],[86.5,23,341.9],[87,23,464.1],[87.5,23,953.3],[88,23,4937.3],[88.5,23,1184.9],[89,23,885.4],[89.5,23,1111.8],[90,23,1244.4],[90.5,23,1275.6],[91,23,1519.3],[91.5,23,748.4],[92,23,203.3],[92.5,23,37.2],[93,23,18.5],[93.5,23,19.5],[94,23,62],[94.5,23,56.4],[95,23,113.1],[95.5,23,169.4],[96,23,70.3],[96.5,23,52],[97,23,38],[97.5,23,40.1],[98,23,37.1],[98.5,23,11.3],[99,23,21.1],[99.5,23,59.5],[100,23,52.8],[100.5,23,56.7],[101,23,53.3],[101.5,23,30.6],[102,23,43.4],[102.5,23,55.9],[103,23,69.9],[103.5,23,65.4],[104,23,87.7],[104.5,23,79.4],[105,23,50.3],[105.5,23,54.3],[106,23,103],[106.5,23,101.1],[107,23,108.2],[107.5,23,172.1],[108,23,455.9],[108.5,23,219],[109,23,278.5],[109.5,23,393.5],[110,23,481.6],[110.5,23,284.6],[111,23,326.7],[111.5,23,261.9],[112,23,282],[112.5,23,494.4],[113,23,1724.4],[113.5,23,2573.6],[114,23,2139],[114.5,23,477.6],[115,23,458.1],[115.5,23,561.1],[116,23,553.3],[116.5,23,552.3],[120,23,1300.1],[120.5,23,180.9],[121,23,50.6],[121.5,23,260.8],[-160,22.5,18.2],[-159.5,22.5,56.3],[-106,22.5,45.8],[-105.5,22.5,26.2],[-105,22.5,5.8],[-104.5,22.5,5.2],[-104,22.5,6.2],[-103.5,22.5,15.5],[-103,22.5,13.1],[-102.5,22.5,86.1],[-102,22.5,34.1],[-101.5,22.5,124.8],[-101,22.5,182.7],[-100.5,22.5,28],[-100,22.5,17.2],[-99.5,22.5,37.2],[-99,22.5,44.3],[-98.5,22.5,41.6],[-98,22.5,570.9],[-85,22.5,23.2],[-84.5,22.5,31.2],[-84,22.5,140.3],[-83.5,22.5,93.2],[-83,22.5,67.2],[-82.5,22.5,5.7],[-82,22.5,2.4],[-81.5,22.5,12.1],[-81,22.5,59.8],[-80.5,22.5,133.4],[-80,22.5,144.8],[-79.5,22.5,63.7],[-79,22.5,51],[-78.5,22.5,19.6],[-78,22.5,16.4],[-76,22.5,2.3],[38.5,22.5,38.5],[39,22.5,38.5],[39.5,22.5,38.5],[40,22.5,38.4],[40.5,22.5,38.5],[41,22.5,38.5],[41.5,22.5,38.5],[42,22.5,38.5],[42.5,22.5,38.5],[43,22.5,37.3],[43.5,22.5,12.3],[44,22.5,12.3],[44.5,22.5,12.3],[45,22.5,12.3],[45.5,22.5,12.3],[46,22.5,12.3],[46.5,22.5,12.3],[47,22.5,12.3],[47.5,22.5,12.3],[48,22.5,6.9],[48.5,22.5,5.3],[49,22.5,5.3],[49.5,22.5,5.3],[50,22.5,5.3],[50.5,22.5,5.3],[51,22.5,5.3],[51.5,22.5,5.3],[52,22.5,5.3],[52.5,22.5,5.3],[53,22.5,5.3],[53.5,22.5,5.3],[54,22.5,5.3],[54.5,22.5,5.3],[55,22.5,5.2],[55.5,22.5,3.9],[56,22.5,3.8],[56.5,22.5,3.6],[57,22.5,2.8],[57.5,22.5,1.2],[58,22.5,4.3],[58.5,22.5,7.8],[59,22.5,14.3],[59.5,22.5,16.2],[68.5,22.5,230.8],[69,22.5,170.3],[69.5,22.5,194.8],[70,22.5,219.6],[70.5,22.5,393.9],[71,22.5,228.2],[71.5,22.5,189.8],[72,22.5,184.6],[72.5,22.5,469.2],[73,22.5,857.9],[73.5,22.5,263.6],[74,22.5,203.4],[74.5,22.5,188.4],[75,22.5,230.4],[75.5,22.5,205.2],[76,22.5,171.3],[76.5,22.5,107.6],[77,22.5,126.1],[77.5,22.5,154.5],[78,22.5,142],[78.5,22.5,172.5],[79,22.5,127],[79.5,22.5,146.8],[80,22.5,113],[80.5,22.5,96.7],[81,22.5,133.6],[81.5,22.5,188.9],[82,22.5,339.5],[82.5,22.5,207.9],[83,22.5,129.1],[83.5,22.5,131.9],[84,22.5,177.4],[84.5,22.5,290.3],[85,22.5,180.3],[85.5,22.5,202.6],[86,22.5,233.9],[86.5,22.5,266.6],[87,22.5,571.8],[87.5,22.5,1145.4],[88,22.5,2449.2],[88.5,22.5,887.1],[89,22.5,279.5],[89.5,22.5,370.8],[90,22.5,815.6],[90.5,22.5,935.2],[91,22.5,833.3],[91.5,22.5,2878.2],[92,22.5,543.4],[92.5,22.5,30.6],[93,22.5,17.7],[93.5,22.5,12.4],[94,22.5,51.4],[94.5,22.5,94.2],[95,22.5,248.8],[95.5,22.5,197.1],[96,22.5,309.5],[96.5,22.5,44.8],[97,22.5,31.5],[97.5,22.5,27.6],[98,22.5,28.7],[98.5,22.5,11.5],[99,22.5,38.8],[99.5,22.5,59.4],[100,22.5,53],[100.5,22.5,57.7],[101,22.5,46.9],[101.5,22.5,15.8],[102,22.5,8.7],[102.5,22.5,12.1],[103,22.5,37.7],[103.5,22.5,58.2],[104,22.5,94.6],[104.5,22.5,99.4],[105,22.5,78.9],[105.5,22.5,66],[106,22.5,46.2],[106.5,22.5,107.5],[107,22.5,94.1],[107.5,22.5,94.7],[108,22.5,161],[108.5,22.5,237.7],[109,22.5,303.8],[109.5,22.5,338.1],[110,22.5,447],[110.5,22.5,372.9],[111,22.5,300.6],[111.5,22.5,210.7],[112,22.5,266.6],[112.5,22.5,340.1],[113,22.5,732.4],[113.5,22.5,2576.9],[114,22.5,7975.5],[114.5,22.5,3513.1],[120,22.5,261.4],[120.5,22.5,224.9],[121,22.5,260.8],[121.5,22.5,260.8],[-160,22,35.9],[-159.5,22,83.7],[-158.5,22,109.6],[-158,22,96.6],[-107,22,48.1],[-106.5,22,48.1],[-106,22,48.1],[-105.5,22,65.3],[-105,22,73.7],[-104.5,22,3.9],[-104,22,6.9],[-103.5,22,21.5],[-103,22,55.2],[-102.5,22,233.2],[-102,22,40.6],[-101.5,22,29.1],[-101,22,28.3],[-100.5,22,31.6],[-100,22,21.7],[-99.5,22,39.3],[-99,22,59.4],[-98.5,22,34.6],[-98,22,13.8],[-97.5,22,12],[-89,22,6.2],[-88.5,22,11.9],[-88,22,15.8],[-87.5,22,6],[-87,22,10.7],[-85,22,23.2],[-84.5,22,23.2],[-84,22,86.5],[-83.5,22,34.4],[-83,22,32.8],[-82.5,22,32.8],[-82,22,32.8],[-81.5,22,32.8],[-80.5,22,66.9],[-80,22,87.4],[-79.5,22,54.9],[-79,22,92.3],[-78.5,22,42],[-78,22,59],[-77.5,22,63.8],[-77,22,24.3],[-72.5,22,30.5],[-72,22,30.5],[-71.5,22,30.5],[32,22,2.1],[32.5,22,4],[33,22,3.3],[38.5,22,38.5],[39,22,38.5],[39.5,22,38.5],[40,22,38.5],[40.5,22,38.5],[41,22,38.5],[41.5,22,38.5],[42,22,38.5],[42.5,22,38.5],[43,22,35.8],[43.5,22,12.3],[44,22,12.3],[44.5,22,12.3],[45,22,12.3],[45.5,22,12.3],[46,22,12.3],[46.5,22,12.3],[47,22,12.3],[47.5,22,12.3],[48,22,6],[48.5,22,5.3],[49,22,5.3],[49.5,22,5.3],[50,22,5.3],[50.5,22,5.3],[51,22,5.3],[51.5,22,5.3],[52,22,5.3],[52.5,22,5.3],[53,22,5.3],[53.5,22,5.3],[54,22,5.3],[54.5,22,5.3],[55,22,5.3],[55.5,22,4.2],[56,22,3.8],[56.5,22,1.6],[58,22,4.3],[58.5,22,3.8],[59,22,10.4],[59.5,22,19.1],[69,22,201.7],[69.5,22,195.4],[70,22,221.3],[70.5,22,242.2],[71,22,189.8],[71.5,22,243.5],[72,22,481.4],[72.5,22,262],[73,22,312.6],[73.5,22,199.7],[74,22,179],[74.5,22,218.5],[75,22,177],[75.5,22,220.3],[76,22,174.9],[76.5,22,107.1],[77,22,81.3],[77.5,22,122.2],[78,22,155.6],[78.5,22,223.4],[79,22,139.8],[79.5,22,161],[80,22,237.3],[80.5,22,116.1],[81,22,150.7],[81.5,22,216.3],[82,22,229.5],[82.5,22,305.3],[83,22,253.3],[83.5,22,204.9],[84,22,207.6],[84.5,22,91.3],[85,22,111.7],[85.5,22,222.8],[86,22,159.9],[86.5,22,327.6],[87,22,617.2],[87.5,22,963.4],[88,22,971.7],[88.5,22,306.5],[89,22,172.4],[89.5,22,167],[90,22,378.3],[90.5,22,727.2],[91.5,22,1059.8],[92,22,339.8],[92.5,22,13],[93,22,10.4],[93.5,22,10.8],[94,22,53.9],[94.5,22,128.8],[95,22,264.5],[95.5,22,214.9],[96,22,294.3],[96.5,22,68.2],[97,22,20.1],[97.5,22,20.1],[98,22,27.5],[98.5,22,9.6],[99,22,8.9],[99.5,22,18.4],[100,22,51.1],[100.5,22,50.7],[101,22,33.8],[101.5,22,22.2],[102,22,10.7],[102.5,22,12],[103,22,50.5],[103.5,22,53.3],[104,22,42.8],[104.5,22,161.1],[105,22,237.4],[105.5,22,271.1],[106,22,96.5],[106.5,22,125.5],[107,22,64.8],[107.5,22,109.7],[108,22,148.6],[108.5,22,219.2],[109,22,346.3],[109.5,22,317.4],[110,22,368.2],[110.5,22,625.3],[111,22,499.1],[111.5,22,382.9],[112,22,193.1],[112.5,22,277.6],[113,22,343.2],[113.5,22,1437.7],[114,22,1437.7],[120.5,22,260.8],[121.5,22,260.8],[-158.5,21.5,497],[-158,21.5,1059.2],[-157.5,21.5,8.6],[-157,21.5,17.3],[-107,21.5,48.1],[-106.5,21.5,48.1],[-105.5,21.5,60.2],[-105,21.5,56.8],[-104.5,21.5,15.1],[-104,21.5,13],[-103.5,21.5,19.1],[-103,21.5,36.9],[-102.5,21.5,45.9],[-102,21.5,362.3],[-101.5,21.5,90.7],[-101,21.5,61.1],[-100.5,21.5,35.4],[-100,21.5,24.7],[-99.5,21.5,37.5],[-99,21.5,118.3],[-98.5,21.5,99.2],[-98,21.5,69.8],[-97.5,21.5,56.3],[-90.5,21.5,22],[-90,21.5,255.8],[-89.5,21.5,45.5],[-89,21.5,11.6],[-88.5,21.5,14.2],[-88,21.5,14.6],[-87.5,21.5,26.2],[-87,21.5,130.5],[-83.5,21.5,32.8],[-83,21.5,32.8],[-80,21.5,17.6],[-79.5,21.5,29.7],[-79,21.5,47.3],[-78.5,21.5,64.9],[-78,21.5,63.5],[-77.5,21.5,46.6],[-77,21.5,66.5],[-76.5,21.5,114.6],[-76,21.5,109.8],[-72,21.5,30.5],[-71.5,21.5,30.5],[-17,21.5,2.8],[-16.5,21.5,3.3],[-16,21.5,2.6],[-15.5,21.5,2],[-15,21.5,2],[-14.5,21.5,1.5],[-14,21.5,1.1],[-13.5,21.5,1.1],[-13,21.5,1.4],[32,21.5,2.1],[32.5,21.5,4],[33,21.5,3.1],[39,21.5,38.5],[39.5,21.5,38.5],[40,21.5,38.5],[40.5,21.5,38.5],[41,21.5,38.5],[41.5,21.5,38.5],[42,21.5,38.5],[42.5,21.5,38.5],[43,21.5,36.2],[43.5,21.5,14.1],[44,21.5,12.3],[44.5,21.5,12.3],[45,21.5,12.3],[45.5,21.5,12.3],[46,21.5,12.3],[46.5,21.5,12.3],[47,21.5,12.3],[47.5,21.5,12],[48,21.5,5.4],[48.5,21.5,5.3],[49,21.5,5.3],[49.5,21.5,5.3],[50,21.5,5.3],[50.5,21.5,5.3],[51,21.5,5.3],[51.5,21.5,5.3],[52,21.5,5.3],[52.5,21.5,5.3],[53,21.5,5.3],[53.5,21.5,5.3],[54,21.5,5.3],[54.5,21.5,5.3],[55,21.5,4.5],[55.5,21.5,1],[58,21.5,4.2],[58.5,21.5,4.9],[59,21.5,9.5],[69.5,21.5,285.6],[70,21.5,274.9],[70.5,21.5,195.9],[71,21.5,178.8],[71.5,21.5,263.6],[72,21.5,365.2],[72.5,21.5,1852.7],[73,21.5,363.6],[73.5,21.5,189.9],[74,21.5,228.5],[74.5,21.5,246.3],[75,21.5,276.9],[75.5,21.5,336.3],[76,21.5,224.9],[76.5,21.5,178.3],[77,21.5,180.3],[77.5,21.5,288.4],[78,21.5,170.6],[78.5,21.5,458.5],[79,21.5,664],[79.5,21.5,265.2],[80,21.5,261.6],[80.5,21.5,193.8],[81,21.5,554.3],[81.5,21.5,520.5],[82,21.5,199.1],[82.5,21.5,152.4],[83,21.5,209.1],[83.5,21.5,325.5],[84,21.5,149.3],[84.5,21.5,105.9],[85,21.5,150.7],[85.5,21.5,156.8],[86,21.5,364.8],[86.5,21.5,493.3],[87,21.5,604.9],[91.5,21.5,1268.8],[92,21.5,347.9],[92.5,21.5,51.7],[93,21.5,12.9],[93.5,21.5,9.5],[94,21.5,48.1],[94.5,21.5,160.3],[95,21.5,245.7],[95.5,21.5,200.2],[96,21.5,102.7],[96.5,21.5,29.8],[97,21.5,36],[97.5,21.5,26.4],[98,21.5,23],[98.5,21.5,16.3],[99,21.5,23.6],[99.5,21.5,37.9],[100,21.5,14],[100.5,21.5,11.2],[101,21.5,19.1],[101.5,21.5,20.7],[102,21.5,15.7],[102.5,21.5,23.7],[103,21.5,62.1],[103.5,21.5,88.2],[104,21.5,65.6],[104.5,21.5,77.4],[105,21.5,536.5],[105.5,21.5,1459],[106,21.5,746.5],[106.5,21.5,198.6],[107,21.5,99.7],[107.5,21.5,125.3],[108,21.5,640.4],[109,21.5,1048.8],[109.5,21.5,375],[110,21.5,661.6],[110.5,21.5,790.5],[111,21.5,603.7],[121.5,21.5,39.2],[-157.5,21,8.8],[-157,21,45.2],[-156.5,21,55],[-156,21,3.8],[-106,21,49.4],[-105.5,21,112.7],[-105,21,10.9],[-104.5,21,33.3],[-104,21,259.4],[-103.5,21,1044.4],[-103,21,67.9],[-102.5,21,53.3],[-102,21,154.7],[-101.5,21,313.7],[-101,21,243.6],[-100.5,21,239.8],[-100,21,50.7],[-99.5,21,49.3],[-99,21,39.1],[-98.5,21,69.1],[-98,21,80.4],[-97.5,21,222],[-90.5,21,16.3],[-90,21,189.2],[-89.5,21,34.8],[-89,21,13.6],[-88.5,21,28.9],[-88,21,11.7],[-87.5,21,46.9],[-87,21,243.4],[-79.5,21,29.7],[-79,21,29.7],[-78.5,21,41.4],[-78,21,45.2],[-77.5,21,67.6],[-77,21,89.7],[-76.5,21,152],[-76,21,83.8],[-75.5,21,72.9],[-75,21,113.8],[-17.5,21,3.1],[-17,21,4.8],[-16.5,21,4.8],[-16,21,3.4],[-14,21,1.5],[-13.5,21,1.5],[-13,21,1.3],[32,21,2.2],[32.5,21,4],[33,21,2.8],[35,21,1],[35.5,21,1],[36,21,1],[39,21,38.5],[39.5,21,38.5],[40,21,38.5],[40.5,21,38.5],[41,21,39.9],[41.5,21,40.1],[42,21,38.1],[42.5,21,31.9],[43,21,26],[43.5,21,19.2],[44,21,12.5],[44.5,21,12.3],[45,21,12.3],[45.5,21,12.3],[46,21,12.3],[46.5,21,12.3],[47,21,12.3],[47.5,21,11],[48,21,5.3],[48.5,21,5.3],[49,21,5.3],[49.5,21,5.3],[50,21,5.3],[50.5,21,5.3],[51,21,5.3],[51.5,21,5.3],[52,21,5.3],[52.5,21,5.3],[53,21,5.3],[53.5,21,5.3],[54,21,5.3],[54.5,21,5.3],[55,21,2.7],[57.5,21,1.5],[58,21,3.1],[58.5,21,5.5],[70,21,732.7],[70.5,21,338.2],[71,21,203.6],[71.5,21,247.4],[72.5,21,781.9],[73,21,460.5],[73.5,21,137],[74,21,239],[74.5,21,345],[75,21,243.8],[75.5,21,299],[76,21,253.6],[76.5,21,263.7],[77,21,316],[77.5,21,268.7],[78,21,177.7],[78.5,21,243.1],[79,21,135],[79.5,21,190.6],[80,21,118.8],[80.5,21,159.4],[81,21,223.7],[81.5,21,224.7],[82,21,110],[82.5,21,140.3],[83,21,219.7],[83.5,21,215.3],[84,21,115],[84.5,21,154.6],[85,21,260.4],[85.5,21,359.2],[86,21,651.1],[86.5,21,496.3],[87,21,266.1],[92,21,304.2],[92.5,21,135.5],[93,21,90.1],[93.5,21,27.5],[94,21,56],[94.5,21,176.4],[95,21,157.2],[95.5,21,241.8],[96,21,136.5],[96.5,21,87.7],[97,21,100.3],[97.5,21,25.8],[98,21,15.4],[98.5,21,11.1],[99,21,12.6],[99.5,21,19.6],[100,21,18.3],[100.5,21,14.5],[101,21,13.1],[101.5,21,18.1],[102,21,20.2],[102.5,21,19.9],[103,21,11.4],[103.5,21,26.9],[104,21,33.9],[104.5,21,58.8],[105,21,145],[105.5,21,1024.5],[106,21,1127.9],[106.5,21,1225],[107,21,458.3],[107.5,21,63],[109,21,1640.3],[109.5,21,354.3],[110,21,370.8],[110.5,21,1255.4],[121.5,21,39.2],[-156,20.5,15.4],[-155.5,20.5,4.2],[-106,20.5,7.2],[-105.5,20.5,8.5],[-105,20.5,8.5],[-104.5,20.5,23],[-104,20.5,64.7],[-103.5,20.5,151.9],[-103,20.5,150.3],[-102.5,20.5,141.4],[-102,20.5,93.3],[-101.5,20.5,163.3],[-101,20.5,185.1],[-100.5,20.5,115.7],[-100,20.5,94.1],[-99.5,20.5,133.6],[-99,20.5,168],[-98.5,20.5,142.8],[-98,20.5,147.6],[-97.5,20.5,145.1],[-97,20.5,91.7],[-90.5,20.5,23.1],[-90,20.5,32.1],[-89.5,20.5,26.6],[-89,20.5,12.8],[-88.5,20.5,8.8],[-88,20.5,2.4],[-87.5,20.5,4.9],[-87,20.5,123.7],[-78,20.5,76.9],[-77.5,20.5,143.1],[-77,20.5,110.2],[-76.5,20.5,119.5],[-76,20.5,174.5],[-75.5,20.5,123.7],[-75,20.5,52.1],[-74.5,20.5,56.4],[-73,20.5,155.9],[-16.5,20.5,4.8],[-16,20.5,1.6],[-14,20.5,1.5],[-13.5,20.5,1.2],[32,20.5,2.2],[32.5,20.5,4],[33,20.5,4],[33.5,20.5,1.4],[34,20.5,1.3],[34.5,20.5,1.3],[35,20.5,1.3],[35.5,20.5,1.3],[36,20.5,1.3],[36.5,20.5,1.1],[37,20.5,1.1],[39,20.5,38.5],[39.5,20.5,38.5],[40,20.5,38.5],[40.5,20.5,39.4],[41,20.5,43.6],[41.5,20.5,40.7],[42,20.5,23.8],[42.5,20.5,20.6],[43,20.5,20.6],[43.5,20.5,20.1],[44,20.5,12.4],[44.5,20.5,12.3],[45,20.5,12.3],[45.5,20.5,12.3],[46,20.5,12.3],[46.5,20.5,12.3],[47,20.5,12.3],[47.5,20.5,10],[48,20.5,5.3],[48.5,20.5,5.3],[49,20.5,5.3],[49.5,20.5,5.3],[50,20.5,5.3],[50.5,20.5,5.3],[51,20.5,5.3],[51.5,20.5,5.3],[52,20.5,5.3],[52.5,20.5,5.3],[53,20.5,5.3],[53.5,20.5,5.3],[54,20.5,5.3],[54.5,20.5,5.3],[57.5,20.5,1.5],[58,20.5,3.1],[58.5,20.5,14.8],[72.5,20.5,552.2],[73,20.5,307.4],[73.5,20.5,331.1],[74,20.5,279.2],[74.5,20.5,239.7],[75,20.5,204.6],[75.5,20.5,213.2],[76,20.5,208.9],[76.5,20.5,192.7],[77,20.5,182.4],[77.5,20.5,216],[78,20.5,179],[78.5,20.5,174.6],[79,20.5,159.5],[79.5,20.5,187.3],[80,20.5,77.3],[80.5,20.5,77.3],[81,20.5,116.7],[81.5,20.5,105.7],[82,20.5,85.7],[82.5,20.5,177.5],[83,20.5,188],[83.5,20.5,107.4],[84,20.5,97.8],[84.5,20.5,147.2],[85,20.5,316.5],[85.5,20.5,832.4],[86,20.5,674.2],[86.5,20.5,483.4],[92.5,20.5,355.3],[93,20.5,98.1],[93.5,20.5,33.2],[94,20.5,36.7],[94.5,20.5,135.8],[95,20.5,137.7],[95.5,20.5,103.1],[96,20.5,97],[96.5,20.5,56.3],[97,20.5,67.2],[97.5,20.5,13.2],[98,20.5,8.1],[98.5,20.5,5.9],[99,20.5,25.2],[99.5,20.5,109.1],[100,20.5,64.4],[100.5,20.5,24],[101,20.5,18.2],[101.5,20.5,20.5],[102,20.5,19],[102.5,20.5,17.5],[103,20.5,9.3],[103.5,20.5,15.6],[104,20.5,20.5],[104.5,20.5,27.8],[105,20.5,143],[105.5,20.5,458],[106,20.5,1235.9],[106.5,20.5,843.1],[107.5,20.5,308.1],[109.5,20.5,286.5],[110,20.5,632.6],[110.5,20.5,230.3],[121.5,20.5,96.9],[122,20.5,233.8],[-156.5,20,36.4],[-156,20,15],[-155.5,20,24.9],[-155,20,38.6],[-106,20,11.2],[-105.5,20,11.2],[-105,20,9.6],[-104.5,20,40.8],[-104,20,52.8],[-103.5,20,48.2],[-103,20,44.1],[-102.5,20,140.2],[-102,20,97.6],[-101.5,20,270.6],[-101,20,83.9],[-100.5,20,134.9],[-100,20,177],[-99.5,20,1095.1],[-99,20,445.7],[-98.5,20,78.6],[-98,20,92.5],[-97.5,20,149.1],[-97,20,249.6],[-96.5,20,58.5],[-91,20,40.9],[-90.5,20,54.9],[-90,20,8.7],[-89.5,20,9.4],[-89,20,5.9],[-88.5,20,4.4],[-88,20,4.3],[-87.5,20,1.9],[-80.5,20,4.3],[-80,20,39.8],[-78,20,76.2],[-77.5,20,68.1],[-77,20,44.2],[-76.5,20,163.5],[-76,20,425.7],[-75.5,20,92.6],[-75,20,26.2],[-73.5,20,154.9],[-73,20,261.2],[-72.5,20,433.6],[-72,20,105.4],[-71.5,20,100.9],[-71,20,195.6],[-70.5,20,197.2],[-70,20,101.4],[-17,20,4.8],[-16.5,20,2.9],[-14,20,1.1],[24,20,2.2],[24.5,20,2.2],[25,20,2.2],[25.5,20,2.2],[26,20,2.2],[26.5,20,1.7],[27,20,1.6],[27.5,20,1],[32,20,2.5],[32.5,20,4],[33,20,4],[33.5,20,1.7],[34,20,1.3],[34.5,20,1.3],[35,20,1.3],[35.5,20,1.3],[36,20,1.3],[36.5,20,1.3],[37,20,9],[40,20,38.5],[40.5,20,39.4],[41,20,44.4],[41.5,20,33.2],[42,20,20.6],[42.5,20,20.6],[43,20,20.6],[43.5,20,20.6],[44,20,16.3],[44.5,20,12.3],[45,20,12.3],[45.5,20,12.3],[46,20,12.3],[46.5,20,12.3],[47,20,12.3],[47.5,20,9],[48,20,5.3],[48.5,20,5.3],[49,20,5.3],[49.5,20,5.3],[50,20,5.3],[50.5,20,5.3],[51,20,5.3],[51.5,20,5.3],[52,20,5.3],[52.5,20,5.3],[53,20,5.3],[53.5,20,4.4],[54,20,2.6],[72.5,20,413],[73,20,185.4],[73.5,20,429.8],[74,20,303],[74.5,20,274],[75,20,377.4],[75.5,20,326.3],[76,20,215.3],[76.5,20,179.7],[77,20,206.4],[77.5,20,184.4],[78,20,146.1],[78.5,20,169.4],[79,20,198.7],[79.5,20,141.6],[80,20,61.1],[80.5,20,47.3],[81,20,41.6],[81.5,20,97.7],[82,20,154],[82.5,20,210.5],[83,20,138.4],[83.5,20,81.7],[84,20,105.1],[84.5,20,257.9],[85,20,324.6],[85.5,20,264.1],[86,20,332.8],[92.5,20,159.1],[93,20,96.3],[93.5,20,34.5],[94,20,23.1],[94.5,20,57.3],[95,20,100.4],[95.5,20,112.4],[96,20,127.2],[96.5,20,56.7],[97,20,58.5],[97.5,20,8],[98,20,8.9],[98.5,20,17.9],[99,20,75],[99.5,20,111.8],[100,20,94.6],[100.5,20,24.7],[101,20,18.1],[101.5,20,20.2],[102,20,41],[102.5,20,14.4],[103,20,13.1],[103.5,20,17.1],[104,20,18.1],[104.5,20,24.2],[105,20,118.4],[105.5,20,906.6],[106,20,361.8],[108.5,20,195.8],[109,20,225.6],[109.5,20,231.2],[110,20,318.5],[110.5,20,247.3],[111,20,219.9],[121.5,20,32.2],[122,20,32.2],[-156,19.5,3.6],[-155.5,19.5,7.4],[-155,19.5,12.4],[-105.5,19.5,11.8],[-105,19.5,36.7],[-104.5,19.5,54.4],[-104,19.5,101.7],[-103.5,19.5,22.3],[-103,19.5,25.5],[-102.5,19.5,92.9],[-102,19.5,75.3],[-101.5,19.5,52.8],[-101,19.5,24.5],[-100.5,19.5,104],[-100,19.5,498.8],[-99.5,19.5,3588.2],[-99,19.5,1506.1],[-98.5,19.5,652.1],[-98,19.5,232.9],[-97.5,19.5,93.5],[-97,19.5,122.7],[-96.5,19.5,435.9],[-96,19.5,95.8],[-91.5,19.5,9.9],[-91,19.5,9.9],[-90.5,19.5,17.3],[-90,19.5,4.9],[-89.5,19.5,3.3],[-89,19.5,10.9],[-88.5,19.5,6.6],[-88,19.5,5.5],[-87.5,19.5,4.4],[-81.5,19.5,172.1],[-73,19.5,284.4],[-72.5,19.5,194.3],[-72,19.5,112.1],[-71.5,19.5,132.2],[-71,19.5,237.4],[-70.5,19.5,170.3],[-70,19.5,120.7],[-69.5,19.5,90.1],[-69,19.5,48.3],[-11.5,19.5,1.4],[5.5,19.5,1],[13,19.5,1.1],[24,19.5,2.2],[24.5,19.5,2.2],[25,19.5,2.2],[25.5,19.5,2.2],[26,19.5,2.1],[26.5,19.5,1.7],[27,19.5,1.7],[27.5,19.5,3.1],[28,19.5,3.2],[28.5,19.5,3.2],[29,19.5,3.2],[29.5,19.5,3.2],[30,19.5,3.2],[30.5,19.5,3.2],[31,19.5,3.2],[31.5,19.5,3.2],[32,19.5,3.7],[32.5,19.5,4],[33,19.5,4],[33.5,19.5,2.5],[34,19.5,1.3],[34.5,19.5,1.3],[35,19.5,1.3],[35.5,19.5,1.3],[36,19.5,4.2],[36.5,19.5,7.9],[37,19.5,160.2],[40.5,19.5,38.5],[41,19.5,37.9],[41.5,19.5,28],[42,19.5,20.6],[42.5,19.5,20.6],[43,19.5,20.6],[43.5,19.5,20.6],[44,19.5,18.1],[44.5,19.5,5.7],[45,19.5,7.6],[45.5,19.5,7.1],[46,19.5,6.4],[46.5,19.5,5.6],[47,19.5,4.6],[47.5,19.5,4.6],[48,19.5,5.3],[48.5,19.5,5.3],[49,19.5,5.3],[49.5,19.5,5.3],[50,19.5,5.3],[50.5,19.5,5.3],[51,19.5,5.3],[51.5,19.5,5.3],[52,19.5,4.4],[52.5,19.5,2.6],[73,19.5,1170.9],[73.5,19.5,220.8],[74,19.5,204.9],[74.5,19.5,298],[75,19.5,200.7],[75.5,19.5,172.9],[76,19.5,197.9],[76.5,19.5,273],[77,19.5,442.1],[77.5,19.5,215.4],[78,19.5,154.7],[78.5,19.5,95.6],[79,19.5,113.4],[79.5,19.5,100.4],[80,19.5,40.6],[80.5,19.5,26.2],[81,19.5,44.5],[81.5,19.5,117],[82,19.5,178.1],[82.5,19.5,173.7],[83,19.5,126.6],[83.5,19.5,108.4],[84,19.5,136.9],[84.5,19.5,617],[85,19.5,423.4],[93,19.5,141.9],[93.5,19.5,124.2],[94,19.5,27.3],[94.5,19.5,44],[95,19.5,105.7],[95.5,19.5,79.7],[96,19.5,79.8],[96.5,19.5,29.1],[97,19.5,20.3],[97.5,19.5,10.3],[98,19.5,14.4],[98.5,19.5,43],[99,19.5,51.8],[99.5,19.5,97],[100,19.5,69.2],[100.5,19.5,49.8],[101,19.5,26.4],[101.5,19.5,18.2],[102,19.5,18.4],[102.5,19.5,20.6],[103,19.5,12.3],[103.5,19.5,13],[104,19.5,22.3],[104.5,19.5,36],[105,19.5,183.3],[105.5,19.5,501.4],[108.5,19.5,137.1],[109,19.5,113.7],[109.5,19.5,131.7],[110,19.5,239.6],[110.5,19.5,254.9],[121,19.5,79.9],[121.5,19.5,32.2],[-156,19,2.4],[-104.5,19,62.1],[-104,19,63.9],[-103.5,19,8.1],[-103,19,19.4],[-102.5,19,37.3],[-102,19,16.2],[-101.5,19,21.5],[-101,19,34],[-100.5,19,72.2],[-100,19,129],[-99.5,19,392.7],[-99,19,185.8],[-98.5,19,285.4],[-98,19,107.6],[-97.5,19,230.7],[-97,19,220.6],[-96.5,19,54.4],[-96,19,60.1],[-95.5,19,112.8],[-95,19,64.6],[-93,19,30.2],[-92.5,19,10],[-92,19,4.6],[-91.5,19,9.9],[-91,19,9.9],[-90.5,19,9.8],[-90,19,9.9],[-89.5,19,6.8],[-89,19,15.8],[-88.5,19,14.9],[-88,19,15.8],[-78,19,250.7],[-74.5,19,230.5],[-74,19,137.6],[-73.5,19,95.5],[-73,19,224.8],[-72.5,19,739.6],[-72,19,100.1],[-71.5,19,73.1],[-71,19,118.7],[-70.5,19,373.3],[-70,19,591.2],[-69.5,19,99.5],[-69,19,76.2],[-68.5,19,55.5],[-67.5,19,441.8],[-67,19,293],[-65,19,231.2],[-64.5,19,24.1],[-63.5,19,137.8],[-16.5,19,1],[-16,19,1],[-15.5,19,1],[-15,19,1.1],[-14.5,19,1.4],[-14,19,1.5],[-13.5,19,1.4],[-13,19,1.1],[-12.5,19,1.9],[-12,19,1.6],[-11.5,19,1.6],[-4.5,19,1.6],[4.5,19,1.3],[5,19,1.3],[5.5,19,1.3],[13,19,1.2],[24,19,2.2],[24.5,19,2.2],[25,19,2.2],[25.5,19,2.2],[26,19,2],[26.5,19,1.7],[27,19,1.7],[27.5,19,3.1],[28,19,3.2],[28.5,19,3.2],[29,19,3.2],[29.5,19,3.2],[30,19,3.2],[30.5,19,3.2],[31,19,3.2],[31.5,19,3.2],[32,19,3.6],[32.5,19,4],[33,19,4],[33.5,19,3.1],[34,19,1.9],[34.5,19,2],[35,19,2.1],[35.5,19,2.2],[36,19,21.4],[36.5,19,26],[37,19,52.5],[37.5,19,13.1],[38,19,13.1],[41,19,35.5],[41.5,19,25.9],[42,19,20.6],[42.5,19,20.6],[43,19,20.6],[43.5,19,20.4],[44,19,10.2],[44.5,19,3.4],[45,19,3.4],[45.5,19,3.4],[46,19,3.4],[46.5,19,3.4],[47,19,3.4],[47.5,19,4.8],[48,19,5.3],[48.5,19,5.3],[49,19,5.3],[49.5,19,5.2],[50,19,4.2],[50.5,19,3.1],[51,19,2],[72.5,19,3784.2],[73,19,346.4],[73.5,19,990.7],[74,19,272.1],[74.5,19,191.7],[75,19,137.9],[75.5,19,188.3],[76,19,236.3],[76.5,19,239.4],[77,19,216.6],[77.5,19,265.7],[78,19,379],[78.5,19,291.4],[79,19,384.4],[79.5,19,138.4],[80,19,37.9],[80.5,19,24.6],[81,19,62.4],[81.5,19,92.8],[82,19,142.7],[82.5,19,130.9],[83,19,253.1],[83.5,19,253.5],[84,19,292.9],[84.5,19,388.8],[93,19,183.1],[93.5,19,156.6],[94,19,30.3],[94.5,19,56],[95,19,174.9],[95.5,19,139.3],[96,19,116.6],[96.5,19,65.1],[97,19,5],[97.5,19,11.4],[98,19,18.2],[98.5,19,179.7],[99,19,165.5],[99.5,19,50.1],[100,19,41.1],[100.5,19,53.7],[101,19,21.6],[101.5,19,20.2],[102,19,26],[102.5,19,16.4],[103,19,11.9],[103.5,19,9.8],[104,19,5.3],[104.5,19,15.5],[105,19,246.2],[105.5,19,768.6],[108.5,19,172.5],[109,19,140.4],[109.5,19,143.3],[110,19,313.5],[110.5,19,355.2],[120.5,19,83.1],[121,19,131.5],[121.5,19,32.2],[122,19,50.3],[-104,18.5,8.8],[-103.5,18.5,8.5],[-103,18.5,24.9],[-102.5,18.5,43],[-102,18.5,8.6],[-101.5,18.5,11.1],[-101,18.5,30.6],[-100.5,18.5,34.4],[-100,18.5,74],[-99.5,18.5,52.5],[-99,18.5,28.2],[-98.5,18.5,30.8],[-98,18.5,29.6],[-97.5,18.5,89.3],[-97,18.5,108.1],[-96.5,18.5,92],[-96,18.5,53.4],[-95.5,18.5,77.2],[-95,18.5,107.9],[-94.5,18.5,252.3],[-94,18.5,106.3],[-93.5,18.5,155.2],[-93,18.5,141],[-92.5,18.5,20],[-92,18.5,7.4],[-91.5,18.5,10.3],[-91,18.5,9.9],[-90.5,18.5,9.9],[-90,18.5,9.9],[-89.5,18.5,6.7],[-89,18.5,14.2],[-88.5,18.5,15.5],[-88,18.5,16.2],[-78.5,18.5,167.2],[-78,18.5,160.6],[-77.5,18.5,192.8],[-77,18.5,443.4],[-76.5,18.5,98],[-74.5,18.5,195],[-74,18.5,262.7],[-73.5,18.5,229.4],[-73,18.5,281.3],[-72.5,18.5,589.4],[-72,18.5,68.2],[-71.5,18.5,78.2],[-71,18.5,89.3],[-70.5,18.5,300.3],[-70,18.5,1695.3],[-69.5,18.5,250.8],[-69,18.5,108.5],[-68.5,18.5,55.5],[-68,18.5,485],[-67.5,18.5,346.4],[-67,18.5,267.7],[-66.5,18.5,670.6],[-66,18.5,481.3],[-65.5,18.5,75.9],[-65,18.5,333.9],[-64.5,18.5,126.1],[-63.5,18.5,455],[-63,18.5,175.7],[-16.5,18.5,492.4],[-16,18.5,156.4],[-15.5,18.5,1.1],[-15,18.5,1.4],[-14.5,18.5,1.5],[-14,18.5,1.5],[-13.5,18.5,2],[-13,18.5,3],[-12.5,18.5,2.7],[-12,18.5,1.6],[-11.5,18.5,1.6],[-4.5,18.5,2.1],[0,18.5,1],[4.5,18.5,1.3],[5,18.5,1.3],[5.5,18.5,1.3],[24,18.5,2.2],[24.5,18.5,2.2],[25,18.5,2.2],[25.5,18.5,2.2],[26,18.5,1.9],[26.5,18.5,1.7],[27,18.5,1.7],[27.5,18.5,3.1],[28,18.5,3.2],[28.5,18.5,3.2],[29,18.5,3.2],[29.5,18.5,3.2],[30,18.5,3.2],[30.5,18.5,3.2],[31,18.5,3.2],[31.5,18.5,3.2],[32,18.5,3.7],[32.5,18.5,5.5],[33,18.5,4.3],[33.5,18.5,4],[34,18.5,2.5],[34.5,18.5,2.2],[35,18.5,2.2],[35.5,18.5,2.2],[36,18.5,2.2],[36.5,18.5,6.4],[37,18.5,13.3],[37.5,18.5,14.8],[38,18.5,16.2],[38.5,18.5,16.3],[41,18.5,38.5],[41.5,18.5,45.2],[42,18.5,21.7],[42.5,18.5,20.7],[43,18.5,20.6],[43.5,18.5,10.8],[44,18.5,3.4],[44.5,18.5,3.4],[45,18.5,3.4],[45.5,18.5,3.4],[46,18.5,3.4],[46.5,18.5,3.4],[47,18.5,3.4],[47.5,18.5,5],[48,18.5,5.3],[48.5,18.5,3.3],[49,18.5,1.6],[56.5,18.5,1],[72.5,18.5,302.1],[73,18.5,206.7],[73.5,18.5,537.5],[74,18.5,279.4],[74.5,18.5,236.7],[75,18.5,174.1],[75.5,18.5,186.3],[76,18.5,286.7],[76.5,18.5,261.5],[77,18.5,245.6],[77.5,18.5,238.4],[78,18.5,255.3],[78.5,18.5,281.3],[79,18.5,366.4],[79.5,18.5,247.4],[80,18.5,62.8],[80.5,18.5,49.4],[81,18.5,41.9],[81.5,18.5,78.3],[82,18.5,85.5],[82.5,18.5,113.8],[83,18.5,360],[83.5,18.5,488.5],[84,18.5,413.6],[93.5,18.5,183.1],[94,18.5,34.6],[94.5,18.5,63.7],[95,18.5,181.6],[95.5,18.5,158],[96,18.5,90.3],[96.5,18.5,79.1],[97,18.5,11.9],[97.5,18.5,15.6],[98,18.5,23.2],[98.5,18.5,80.4],[99,18.5,94.8],[99.5,18.5,83.8],[100,18.5,97.9],[100.5,18.5,25.6],[101,18.5,23],[101.5,18.5,15.7],[102,18.5,45.5],[102.5,18.5,120.7],[103,18.5,100.3],[103.5,18.5,77.1],[104,18.5,22.7],[104.5,18.5,11.6],[105,18.5,22.9],[105.5,18.5,230.1],[106,18.5,220.2],[108.5,18.5,184.4],[109,18.5,425.5],[109.5,18.5,296.7],[110,18.5,404.3],[120,18.5,243.9],[120.5,18.5,151.8],[121,18.5,42.5],[121.5,18.5,121.5],[122,18.5,60.6],[-102.5,18,104.5],[-102,18,32.9],[-101.5,18,33.8],[-101,18,17.7],[-100.5,18,14.1],[-100,18,34.4],[-99.5,18,41.8],[-99,18,41.9],[-98.5,18,35.8],[-98,18,38.1],[-97.5,18,13.5],[-97,18,21.9],[-96.5,18,33.4],[-96,18,31],[-95.5,18,34.1],[-95,18,81.1],[-94.5,18,35.5],[-94,18,42.1],[-93.5,18,73.2],[-93,18,128.2],[-92.5,18,40.7],[-92,18,27.9],[-91.5,18,20.5],[-91,18,5.6],[-90.5,18,5.2],[-90,18,6.4],[-89.5,18,9.2],[-89,18,8.7],[-88.5,18,20.6],[-88,18,20.1],[-78,18,155.4],[-77.5,18,241.3],[-77,18,472.3],[-76.5,18,123.4],[-72,18,10.8],[-71.5,18,36.3],[-67.5,18,231.1],[-67,18,347.2],[-66.5,18,241.9],[-66,18,201.1],[-65,18,268.2],[-63.5,18,113.7],[-63,18,295.6],[-62,18,7.8],[-16.5,18,53.9],[-16,18,29.9],[-15.5,18,2.3],[-15,18,1.5],[-14.5,18,1.5],[-14,18,2.9],[-13.5,18,3.1],[-13,18,3.1],[-12.5,18,2.8],[-12,18,2.1],[-11.5,18,1.7],[-5,18,1],[-4.5,18,1.8],[-4,18,2],[-1.5,18,1.9],[0,18,1.2],[0.5,18,1.1],[4,18,1.1],[4.5,18,1.4],[5,18,1.3],[5.5,18,1.3],[6,18,1.1],[6.5,18,1.1],[7,18,1.2],[7.5,18,1.2],[8,18,1.2],[8.5,18,1.2],[9,18,1.2],[9.5,18,1.2],[10,18,1.3],[10.5,18,1.2],[24,18,2.2],[24.5,18,2.2],[25,18,2.2],[25.5,18,2.1],[26,18,1.7],[26.5,18,1.7],[27,18,1.7],[27.5,18,3.1],[28,18,3.2],[28.5,18,3.2],[29,18,3.2],[29.5,18,3.2],[30,18,3.2],[30.5,18,3.2],[31,18,3.2],[31.5,18,3.2],[32,18,4.5],[32.5,18,11.5],[33,18,7.8],[33.5,18,6.8],[34,18,7.8],[34.5,18,5.7],[35,18,4.1],[35.5,18,4.4],[36,18,4],[36.5,18,4.1],[37,18,12.9],[37.5,18,15.9],[38,18,18.2],[38.5,18,22.7],[41,18,67],[41.5,18,67],[42,18,58.6],[42.5,18,51.2],[43,18,31],[43.5,18,8.9],[44,18,3.4],[44.5,18,3.4],[45,18,3.4],[45.5,18,3.4],[46,18,3.4],[46.5,18,3.4],[47,18,3.4],[47.5,18,5.3],[48,18,3.1],[73,18,194.8],[73.5,18,223],[74,18,279.9],[74.5,18,210.6],[75,18,249.5],[75.5,18,449.8],[76,18,182.2],[76.5,18,245.1],[77,18,310],[77.5,18,270.6],[78,18,397.1],[78.5,18,322.5],[79,18,239.6],[79.5,18,314.4],[80,18,109.9],[80.5,18,137.2],[81,18,63.7],[81.5,18,33.2],[82,18,80.1],[82.5,18,342.8],[83,18,1055.1],[83.5,18,369.1],[94,18,27.8],[94.5,18,67.1],[95,18,260.7],[95.5,18,201.6],[96,18,151.3],[96.5,18,168.2],[97,18,34.5],[97.5,18,18.7],[98,18,20],[98.5,18,27.5],[99,18,43],[99.5,18,54.2],[100,18,107],[100.5,18,23.8],[101,18,26],[101.5,18,60.5],[102,18,91.5],[102.5,18,225.2],[103,18,120.4],[103.5,18,100.4],[104,18,78.1],[104.5,18,28.6],[105,18,9.9],[105.5,18,18],[106,18,134.5],[106.5,18,538],[120,18,492.3],[120.5,18,73.4],[121,18,31.4],[121.5,18,152.5],[122,18,47],[-101.5,17.5,19.2],[-101,17.5,22.7],[-100.5,17.5,38.3],[-100,17.5,149.9],[-99.5,17.5,48.8],[-99,17.5,57.3],[-98.5,17.5,43.5],[-98,17.5,41.2],[-97.5,17.5,20.2],[-97,17.5,200.5],[-96.5,17.5,26.2],[-96,17.5,18.4],[-95.5,17.5,18.9],[-95,17.5,21.1],[-94.5,17.5,21.3],[-94,17.5,32.5],[-93.5,17.5,48.5],[-93,17.5,74.4],[-92.5,17.5,66.5],[-92,17.5,31.5],[-91.5,17.5,18.6],[-91,17.5,6.4],[-90.5,17.5,4.2],[-90,17.5,4.2],[-89.5,17.5,9.4],[-89,17.5,9.6],[-88.5,17.5,19.4],[-88,17.5,23.1],[-87.5,17.5,23.1],[-63,17.5,138.2],[-62,17.5,219.9],[-25.5,17.5,60.5],[-25,17.5,60.5],[-16.5,17.5,3.8],[-16,17.5,4.4],[-15.5,17.5,6.7],[-15,17.5,4.4],[-14.5,17.5,2.8],[-14,17.5,4.5],[-13.5,17.5,4],[-13,17.5,3.6],[-12.5,17.5,5.5],[-12,17.5,4.7],[-11.5,17.5,7.9],[-11,17.5,2.3],[-10.5,17.5,2.2],[-10,17.5,2.4],[-9.5,17.5,1.7],[-9,17.5,1.6],[-4.5,17.5,1.7],[-4,17.5,2.4],[-2,17.5,1.6],[-1.5,17.5,3.3],[-1,17.5,1.3],[-0.5,17.5,5.1],[0,17.5,3],[0.5,17.5,1.2],[1,17.5,1.2],[4,17.5,1.1],[4.5,17.5,1.4],[5,17.5,1.4],[5.5,17.5,1.3],[6,17.5,1.3],[6.5,17.5,1.3],[7,17.5,1.3],[7.5,17.5,1.3],[8,17.5,1.3],[8.5,17.5,1.3],[9,17.5,1.3],[9.5,17.5,1.3],[10,17.5,1.3],[10.5,17.5,1.2],[24,17.5,2.2],[24.5,17.5,2.2],[25,17.5,2.2],[25.5,17.5,1.8],[26,17.5,1.7],[26.5,17.5,1.7],[27,17.5,1.7],[27.5,17.5,3.1],[28,17.5,3.2],[28.5,17.5,3.2],[29,17.5,3.2],[29.5,17.5,3.2],[30,17.5,3.2],[30.5,17.5,3.2],[31,17.5,3.2],[31.5,17.5,3.2],[32,17.5,8.6],[32.5,17.5,11.9],[33,17.5,11.6],[33.5,17.5,11.8],[34,17.5,11.7],[34.5,17.5,11.5],[35,17.5,9.7],[35.5,17.5,13],[36,17.5,11.7],[36.5,17.5,7.5],[37,17.5,12],[37.5,17.5,9.9],[38,17.5,22.8],[38.5,17.5,22.8],[39,17.5,22.8],[41.5,17.5,67],[42,17.5,67],[42.5,17.5,67],[43,17.5,65.9],[43.5,17.5,31.4],[44,17.5,9],[44.5,17.5,7.6],[45,17.5,3.5],[45.5,17.5,3.4],[46,17.5,3.4],[46.5,17.5,3.4],[47,17.5,3.6],[47.5,17.5,3.4],[53.5,17.5,27.5],[54,17.5,26.2],[54.5,17.5,7.6],[55,17.5,1.8],[73,17.5,264.2],[73.5,17.5,182.7],[74,17.5,378.6],[74.5,17.5,232.7],[75,17.5,145.7],[75.5,17.5,165],[76,17.5,166.6],[76.5,17.5,277.1],[77,17.5,212.5],[77.5,17.5,233.2],[78,17.5,1428.6],[78.5,17.5,675.8],[79,17.5,248.4],[79.5,17.5,275.1],[80,17.5,321],[80.5,17.5,201.2],[81,17.5,155.8],[81.5,17.5,297.4],[82,17.5,449.2],[82.5,17.5,459.9],[83,17.5,488.4],[94,17.5,190.5],[94.5,17.5,149.8],[95,17.5,238.3],[95.5,17.5,236.5],[96,17.5,140.8],[96.5,17.5,211.5],[97,17.5,155.7],[97.5,17.5,58.2],[98,17.5,28.8],[98.5,17.5,21.6],[99,17.5,39.2],[99.5,17.5,116.4],[100,17.5,77.5],[100.5,17.5,30.9],[101,17.5,35.2],[101.5,17.5,86.3],[102,17.5,122.4],[102.5,17.5,193.9],[103,17.5,131.5],[103.5,17.5,111.1],[104,17.5,124.1],[104.5,17.5,126.4],[105,17.5,25.3],[105.5,17.5,11.3],[106,17.5,7.5],[106.5,17.5,161.6],[107,17.5,358],[120,17.5,414.8],[120.5,17.5,65.8],[121,17.5,49.9],[121.5,17.5,172.2],[122,17.5,32],[122.5,17.5,21.9],[-100.5,17,25],[-100,17,331.4],[-99.5,17,47.4],[-99,17,36],[-98.5,17,44.5],[-98,17,30.5],[-97.5,17,19.3],[-97,17,73.4],[-96.5,17,24.9],[-96,17,12.2],[-95.5,17,31.1],[-95,17,20.2],[-94.5,17,6.5],[-94,17,28.1],[-93.5,17,195.9],[-93,17,130.8],[-92.5,17,63.6],[-92,17,20.5],[-91.5,17,14.2],[-91,17,11.4],[-90.5,17,12],[-90,17,20.9],[-89.5,17,9.2],[-89,17,7.6],[-88.5,17,9.9],[-88,17,10.2],[-86,17,53.6],[-62.5,17,36.5],[-62,17,219.9],[-61.5,17,101.7],[-25.5,17,117.6],[-25,17,235.5],[-24.5,17,37.9],[-23,17,65.5],[-16.5,17,18],[-16,17,21.4],[-15.5,17,11.3],[-15,17,17.3],[-14.5,17,16.7],[-14,17,7.5],[-13.5,17,5.2],[-13,17,9.1],[-12.5,17,9.3],[-12,17,11],[-11.5,17,10.7],[-11,17,4],[-10.5,17,2.4],[-10,17,2.5],[-9.5,17,2.5],[-9,17,3.2],[-8.5,17,5.2],[-8,17,2.5],[-7.5,17,4.4],[-7,17,2],[-6.5,17,1.4],[-6,17,1.3],[-4.5,17,1.7],[-4,17,9.9],[-3.5,17,9.6],[-3,17,7.7],[-2.5,17,4.5],[-2,17,9.1],[-1.5,17,1.9],[-1,17,2.7],[-0.5,17,14.6],[0,17,18.7],[0.5,17,1.2],[1,17,2.2],[4,17,1.3],[4.5,17,1.4],[5,17,1.4],[5.5,17,1.4],[6,17,1.3],[6.5,17,1.3],[7,17,1.3],[7.5,17,1.3],[8,17,1.3],[8.5,17,1.3],[9,17,1.3],[9.5,17,1.3],[10,17,1.1],[15.5,17,1.4],[24,17,2.2],[24.5,17,2.2],[25,17,2.1],[25.5,17,1.7],[26,17,1.7],[26.5,17,1.7],[27,17,1.7],[27.5,17,3],[28,17,3],[28.5,17,3],[29,17,3.1],[29.5,17,3.1],[30,17,3.1],[30.5,17,3.1],[31,17,3.2],[31.5,17,27.1],[32,17,12.1],[32.5,17,12.1],[33,17,12.1],[33.5,17,12.1],[34,17,12.1],[34.5,17,11.6],[35,17,11.6],[35.5,17,29.6],[36,17,33],[36.5,17,30.7],[37,17,7],[37.5,17,6.8],[38,17,18.4],[38.5,17,22.8],[39,17,22.8],[40,17,36.2],[41.5,17,67],[42,17,67],[42.5,17,67],[43,17,84.5],[43.5,17,73],[44,17,42.1],[44.5,17,35.1],[45,17,7.5],[45.5,17,5],[46,17,3.4],[46.5,17,3.4],[47,17,2.5],[50,17,2.5],[52.5,17,1.7],[53,17,2.8],[53.5,17,31],[54,17,57.9],[54.5,17,13.5],[73,17,210.6],[73.5,17,146.8],[74,17,751.1],[74.5,17,554],[75,17,263],[75.5,17,211.7],[76,17,170.6],[76.5,17,167],[77,17,196.2],[77.5,17,274.8],[78,17,220.7],[78.5,17,147.9],[79,17,201.8],[79.5,17,274.8],[80,17,293.5],[80.5,17,565.6],[81,17,413.6],[81.5,17,909.7],[82,17,777.2],[94,17,112],[94.5,17,152.5],[95,17,244.7],[95.5,17,372],[96,17,1462.1],[96.5,17,249.2],[97,17,265.8],[97.5,17,206],[98,17,52.4],[98.5,17,52.2],[99,17,65.9],[99.5,17,91.8],[100,17,164.9],[100.5,17,57.2],[101,17,82.4],[101.5,17,50.2],[102,17,142.1],[102.5,17,163.1],[103,17,130.6],[103.5,17,116.1],[104,17,86],[104.5,17,109],[105,17,52.4],[105.5,17,21.5],[106,17,17.1],[106.5,17,38.7],[107,17,243.2],[107.5,17,857.8],[120,17,418.8],[120.5,17,102.1],[121,17,123.9],[121.5,17,215.8],[122,17,32.1],[-99,16.5,9],[-98.5,16.5,41.2],[-98,16.5,34.7],[-97.5,16.5,27.1],[-97,16.5,33.8],[-96.5,16.5,30.3],[-96,16.5,9.2],[-95.5,16.5,81.3],[-95,16.5,69.9],[-94.5,16.5,25.2],[-94,16.5,40.6],[-93.5,16.5,31.2],[-93,16.5,35.7],[-92.5,16.5,58.3],[-92,16.5,37.4],[-91.5,16.5,28.8],[-91,16.5,16.9],[-90.5,16.5,15.3],[-90,16.5,16],[-89.5,16.5,12.2],[-89,16.5,4.3],[-88.5,16.5,4.3],[-87,16.5,154.5],[-86.5,16.5,158.6],[-86,16.5,70.3],[-62,16.5,240.4],[-61.5,16.5,257.5],[-24.5,16.5,37.9],[-23,16.5,6.5],[-17,16.5,44.3],[-16.5,16.5,52.4],[-16,16.5,28.1],[-15.5,16.5,12.1],[-15,16.5,14.3],[-14.5,16.5,16.3],[-14,16.5,27.9],[-13.5,16.5,20.3],[-13,16.5,15],[-12.5,16.5,10],[-12,16.5,7.5],[-11.5,16.5,7.3],[-11,16.5,6.1],[-10.5,16.5,5.6],[-10,16.5,6.2],[-9.5,16.5,7.4],[-9,16.5,7.2],[-8.5,16.5,6.5],[-8,16.5,6.2],[-7.5,16.5,6.2],[-7,16.5,4.4],[-6.5,16.5,2.2],[-6,16.5,2.2],[-4.5,16.5,7.8],[-4,16.5,42.5],[-3.5,16.5,40.5],[-3,16.5,2.6],[-2.5,16.5,2.8],[-2,16.5,2.7],[-1.5,16.5,2.8],[-1,16.5,2.5],[-0.5,16.5,9.7],[0,16.5,18.4],[0.5,16.5,4.4],[1,16.5,3.2],[4,16.5,1.4],[4.5,16.5,1.4],[5,16.5,1.4],[5.5,16.5,1.4],[6,16.5,1.4],[6.5,16.5,1.3],[7,16.5,1.3],[7.5,16.5,1.3],[8,16.5,1.3],[8.5,16.5,1.3],[9,16.5,1.2],[15,16.5,2.9],[15.5,16.5,2.9],[16,16.5,2.7],[16.5,16.5,1.4],[24,16.5,2.2],[24.5,16.5,2.2],[25,16.5,2],[25.5,16.5,1.7],[26,16.5,1.7],[26.5,16.5,1.7],[27,16.5,2],[27.5,16.5,2],[28,16.5,2],[28.5,16.5,2],[29,16.5,2],[29.5,16.5,2],[30,16.5,2],[30.5,16.5,2],[31,16.5,2],[31.5,16.5,124],[32,16.5,159.8],[32.5,16.5,42.7],[33,16.5,27.1],[33.5,16.5,19.4],[34,16.5,12.1],[34.5,16.5,11.9],[35,16.5,25.1],[35.5,16.5,33],[36,16.5,33],[36.5,16.5,27.7],[37,16.5,6.2],[37.5,16.5,17.3],[38,16.5,50],[38.5,16.5,26.2],[39,16.5,30.9],[39.5,16.5,29.8],[40,16.5,17.3],[41.5,16.5,67],[42,16.5,67],[42.5,16.5,46.2],[43,16.5,151.3],[43.5,16.5,125.7],[44,16.5,57.2],[44.5,16.5,32.8],[45,16.5,7.3],[45.5,16.5,8.2],[46,16.5,6],[46.5,16.5,2.7],[48,16.5,5.6],[48.5,16.5,8.3],[49,16.5,12.2],[49.5,16.5,14.5],[50,16.5,9.6],[50.5,16.5,1.1],[52.5,16.5,2],[73,16.5,161.2],[73.5,16.5,172.9],[74,16.5,325.7],[74.5,16.5,403.2],[75,16.5,271],[75.5,16.5,223.5],[76,16.5,197],[76.5,16.5,172.6],[77,16.5,216.7],[77.5,16.5,226.1],[78,16.5,189.5],[78.5,16.5,65.7],[79,16.5,84.8],[79.5,16.5,239.5],[80,16.5,616.8],[80.5,16.5,595.2],[81,16.5,481.9],[81.5,16.5,817.6],[82,16.5,495.1],[94,16.5,76.5],[94.5,16.5,142.5],[95,16.5,211.7],[95.5,16.5,259.1],[96,16.5,217],[97,16.5,471.6],[97.5,16.5,333.8],[98,16.5,35.2],[98.5,16.5,14],[99,16.5,54.9],[99.5,16.5,94.7],[100,16.5,137.2],[100.5,16.5,93.6],[101,16.5,80.7],[101.5,16.5,57.8],[102,16.5,137.2],[102.5,16.5,203],[103,16.5,193.8],[103.5,16.5,192.7],[104,16.5,119.2],[104.5,16.5,109.9],[105,16.5,72.6],[105.5,16.5,16.6],[106,16.5,14.6],[106.5,16.5,15.8],[107,16.5,29.5],[107.5,16.5,247.3],[108,16.5,1028.7],[119.5,16.5,268.4],[120,16.5,668.2],[120.5,16.5,323],[121,16.5,81.8],[121.5,16.5,31.4],[122,16.5,35.9],[-98,16,31.9],[-97.5,16,12.8],[-97,16,43.3],[-96.5,16,44],[-96,16,13.9],[-95.5,16,40.1],[-94,16,46.8],[-93.5,16,28.1],[-93,16,25.5],[-92.5,16,55.1],[-92,16,102.5],[-91.5,16,86.6],[-91,16,43.2],[-90.5,16,75.3],[-90,16,49.9],[-89.5,16,22.7],[-89,16,50.6],[-88.5,16,153.5],[-88,16,210],[-87.5,16,64.4],[-87,16,107.1],[-86.5,16,68.6],[-86,16,36.6],[-85.5,16,7.6],[-85,16,5],[-84.5,16,4.3],[-84,16,4.1],[-62,16,318.5],[-61.5,16,69.8],[-23,16,6.5],[-17,16,59],[-16.5,16,93.4],[-16,16,16.8],[-15.5,16,8],[-15,16,10.4],[-14.5,16,11.9],[-14,16,13.8],[-13.5,16,17],[-13,16,18.1],[-12.5,16,15.8],[-12,16,12.5],[-11.5,16,5.5],[-11,16,5.3],[-10.5,16,5.6],[-10,16,10.1],[-9.5,16,11.6],[-9,16,7.7],[-8.5,16,6.6],[-8,16,6.5],[-7.5,16,6.7],[-7,16,6.7],[-6.5,16,4.5],[-6,16,2.2],[-5.5,16,2.3],[-5,16,6.7],[-4.5,16,16.8],[-4,16,26.9],[-3.5,16,13.1],[-3,16,8.1],[-2.5,16,3.2],[-2,16,2.5],[-1.5,16,3.2],[-1,16,2.7],[-0.5,16,1.4],[0,16,4.9],[0.5,16,6.2],[1,16,4.5],[3.5,16,3.7],[4,16,1.4],[4.5,16,1.4],[5,16,1.4],[5.5,16,1.4],[6,16,1.4],[6.5,16,1.3],[7,16,1.3],[7.5,16,1.2],[8,16,1.2],[14.5,16,2.8],[15,16,2.9],[15.5,16,2.9],[16,16,2.9],[16.5,16,2.9],[17,16,2.8],[17.5,16,1.6],[19,16,3.6],[19.5,16,3.8],[20,16,1.8],[20.5,16,2.2],[21,16,3.8],[21.5,16,4.4],[22,16,4.3],[22.5,16,3.2],[23,16,1.3],[23.5,16,1.2],[24,16,2.2],[24.5,16,2.2],[25,16,2.1],[25.5,16,1.7],[26,16,1.7],[26.5,16,1.7],[27,16,1.9],[27.5,16,2],[28,16,2],[28.5,16,2],[29,16,2],[29.5,16,2],[30,16,2],[30.5,16,2],[31,16,2],[31.5,16,24],[32,16,221.5],[32.5,16,150.3],[33,16,41.8],[33.5,16,25.3],[34,16,13.4],[34.5,16,11.9],[35,16,27.3],[35.5,16,37.6],[36,16,33],[36.5,16,18.7],[37,16,5.2],[37.5,16,10.9],[38,16,34.9],[38.5,16,82.4],[39,16,36.5],[39.5,16,17],[40,16,17],[41.5,16,72.5],[42,16,72.5],[42.5,16,78.6],[43,16,155.4],[43.5,16,267.8],[44,16,122.3],[44.5,16,17.2],[45,16,8],[45.5,16,7.2],[46,16,5.9],[46.5,16,1.4],[47,16,1.4],[47.5,16,3.4],[48,16,12.1],[48.5,16,13.6],[49,16,14.2],[49.5,16,14.4],[50,16,8.4],[50.5,16,2.3],[51,16,2.5],[51.5,16,2.1],[52,16,1.7],[73,16,209],[73.5,16,286.7],[74,16,225.4],[74.5,16,394.7],[75,16,205.5],[75.5,16,222.3],[76,16,206.4],[76.5,16,247.2],[77,16,282.8],[77.5,16,247.4],[78,16,224.4],[78.5,16,88.9],[79,16,128.1],[79.5,16,192.2],[80,16,417.3],[80.5,16,247],[81,16,199.2],[94,16,76.5],[94.5,16,141.4],[95,16,163.5],[95.5,16,249.8],[97.5,16,105.3],[98,16,9.4],[98.5,16,5.9],[99,16,48],[99.5,16,97.3],[100,16,154.7],[100.5,16,85.1],[101,16,76.8],[101.5,16,87.8],[102,16,138.9],[102.5,16,163.6],[103,16,157.1],[103.5,16,168.6],[104,16,150.8],[104.5,16,113.6],[105,16,92.5],[105.5,16,41.8],[106,16,33.9],[106.5,16,13.5],[107,16,7.7],[107.5,16,32.2],[108,16,417.8],[108.5,16,564.1],[119.5,16,112.3],[120,16,331.2],[120.5,16,452.2],[121,16,126],[121.5,16,80.8],[-93.5,15.5,27.2],[-93,15.5,61.8],[-92.5,15.5,131.1],[-92,15.5,203.2],[-91.5,15.5,161],[-91,15.5,77.2],[-90.5,15.5,104.6],[-90,15.5,70.7],[-89.5,15.5,49.1],[-89,15.5,79.6],[-88.5,15.5,125.9],[-88,15.5,167.5],[-87.5,15.5,31.6],[-87,15.5,27.4],[-86.5,15.5,14.8],[-86,15.5,11.6],[-85.5,15.5,5.4],[-85,15.5,1.4],[-84.5,15.5,2.3],[-84,15.5,9.8],[-83.5,15.5,14.7],[-61.5,15.5,102.6],[-24.5,15.5,77.5],[-24,15.5,232.8],[-23.5,15.5,45],[-17.5,15.5,136],[-17,15.5,83.8],[-16.5,15.5,70.4],[-16,15.5,31.7],[-15.5,15.5,11],[-15,15.5,7.1],[-14.5,15.5,8.6],[-14,15.5,8.6],[-13.5,15.5,9.7],[-13,15.5,21.1],[-12.5,15.5,19.4],[-12,15.5,13.6],[-11.5,15.5,5.6],[-11,15.5,15],[-10.5,15.5,17.2],[-10,15.5,23.9],[-9.5,15.5,21.9],[-9,15.5,9.3],[-8.5,15.5,10.2],[-8,15.5,8.4],[-7.5,15.5,7.6],[-7,15.5,7],[-6.5,15.5,7.3],[-6,15.5,2.6],[-5.5,15.5,2.1],[-5,15.5,5.7],[-4.5,15.5,18.2],[-4,15.5,20.8],[-3.5,15.5,9.7],[-3,15.5,12.1],[-2.5,15.5,4.8],[-2,15.5,6.8],[-1.5,15.5,4.9],[-1,15.5,3.7],[-0.5,15.5,1.9],[0,15.5,2.3],[0.5,15.5,4.3],[1,15.5,3.7],[1.5,15.5,6.4],[2,15.5,7.2],[2.5,15.5,7.6],[3,15.5,12.1],[3.5,15.5,18.2],[4,15.5,4],[4.5,15.5,7.1],[5,15.5,9.4],[5.5,15.5,8],[6,15.5,1.8],[6.5,15.5,3.9],[7,15.5,3.7],[8,15.5,2.4],[8.5,15.5,5],[9,15.5,4.1],[9.5,15.5,1],[14,15.5,2.6],[14.5,15.5,2.9],[15,15.5,2.9],[15.5,15.5,2.9],[16,15.5,2.9],[16.5,15.5,2.9],[17,15.5,2.9],[17.5,15.5,3.1],[18,15.5,4.6],[18.5,15.5,4.5],[19,15.5,6],[19.5,15.5,6.1],[20,15.5,5],[20.5,15.5,4.9],[21,15.5,4.9],[21.5,15.5,4.9],[22,15.5,4.9],[22.5,15.5,4.6],[23,15.5,2.2],[23.5,15.5,2.2],[24,15.5,2.2],[24.5,15.5,2.2],[25,15.5,2.1],[25.5,15.5,1.7],[26,15.5,1.7],[26.5,15.5,1.7],[27,15.5,1.9],[27.5,15.5,2],[28,15.5,2],[28.5,15.5,2],[29,15.5,2],[29.5,15.5,2],[30,15.5,2],[30.5,15.5,2],[31,15.5,2],[31.5,15.5,2],[32,15.5,161.1],[32.5,15.5,504.5],[33,15.5,54.6],[33.5,15.5,24.7],[34,15.5,12],[34.5,15.5,11.9],[35,15.5,30.7],[35.5,15.5,43.9],[36,15.5,32.2],[36.5,15.5,13.7],[37,15.5,14.4],[37.5,15.5,22.2],[38,15.5,44.3],[38.5,15.5,276.6],[39,15.5,104.9],[39.5,15.5,27.7],[40,15.5,6.2],[40.5,15.5,6.1],[42,15.5,29.5],[42.5,15.5,81.1],[43,15.5,138.3],[43.5,15.5,151.3],[44,15.5,516.8],[44.5,15.5,69.4],[45,15.5,24.6],[45.5,15.5,14.3],[46,15.5,16.8],[46.5,15.5,4.2],[47,15.5,3.1],[47.5,15.5,8.9],[48,15.5,13.2],[48.5,15.5,13],[49,15.5,12.3],[49.5,15.5,12.2],[50,15.5,11],[50.5,15.5,5.7],[51,15.5,2.3],[51.5,15.5,2.5],[73.5,15.5,829.4],[74,15.5,126.9],[74.5,15.5,138.9],[75,15.5,234.6],[75.5,15.5,228],[76,15.5,269.5],[76.5,15.5,332.6],[77,15.5,212.3],[77.5,15.5,171.5],[78,15.5,196.6],[78.5,15.5,129.7],[79,15.5,105],[79.5,15.5,170.1],[80,15.5,396.9],[97.5,15.5,84.2],[98,15.5,34.5],[98.5,15.5,9.1],[99,15.5,20.4],[99.5,15.5,70.7],[100,15.5,167.9],[100.5,15.5,93],[101,15.5,76.3],[101.5,15.5,104.2],[102,15.5,189],[102.5,15.5,144.6],[103,15.5,163.8],[103.5,15.5,171.7],[104,15.5,186.8],[104.5,15.5,192.5],[105,15.5,109.1],[105.5,15.5,76.1],[106,15.5,20.6],[106.5,15.5,16.6],[107,15.5,10.9],[107.5,15.5,14.7],[108,15.5,53.6],[108.5,15.5,423.8],[109,15.5,1972.4],[119.5,15.5,126.6],[120,15.5,192.6],[120.5,15.5,659.2],[121,15.5,130.4],[121.5,15.5,51.3],[122,15.5,114.9],[145.5,15.5,373.4],[-93,15,43.2],[-92.5,15,205.2],[-92,15,295.5],[-91.5,15,293.1],[-91,15,695.4],[-90.5,15,336.5],[-90,15,103.4],[-89.5,15,108],[-89,15,81.6],[-88.5,15,69.2],[-88,15,75],[-87.5,15,32],[-87,15,28.3],[-86.5,15,38.6],[-86,15,24.5],[-85.5,15,3.8],[-85,15,2.8],[-84.5,15,2.9],[-84,15,4.8],[-83.5,15,7.5],[-61.5,15,334.4],[-61,15,334.4],[-25,15,94.1],[-24.5,15,77.5],[-24,15,232.8],[-23.5,15,232.8],[-18,15,9745.6],[-17.5,15,2041.4],[-17,15,190.5],[-16.5,15,183.4],[-16,15,112.3],[-15.5,15,17.7],[-15,15,9.5],[-14.5,15,8.5],[-14,15,8.6],[-13.5,15,8.5],[-13,15,19.7],[-12.5,15,22],[-12,15,23.1],[-11.5,15,23.7],[-11,15,18.4],[-10.5,15,9.4],[-10,15,11.2],[-9.5,15,14.5],[-9,15,6.2],[-8.5,15,8.9],[-8,15,8.4],[-7.5,15,5.3],[-7,15,2.8],[-6.5,15,7.1],[-6,15,9.9],[-5.5,15,3.6],[-5,15,16.6],[-4.5,15,40.9],[-4,15,26.3],[-3.5,15,29.7],[-3,15,14.2],[-2.5,15,7.8],[-2,15,8.1],[-1.5,15,6.7],[-1,15,8.3],[-0.5,15,11.8],[0,15,10.7],[0.5,15,11.4],[1,15,16.6],[1.5,15,10.9],[2,15,11.2],[2.5,15,15.6],[3,15,18.5],[3.5,15,18.5],[4,15,27.4],[4.5,15,29.7],[5,15,38],[5.5,15,91],[6,15,57.7],[6.5,15,19.9],[7,15,23.8],[7.5,15,17.2],[8,15,29.1],[8.5,15,22.1],[9,15,12.9],[9.5,15,7.1],[10,15,4.2],[13.5,15,2],[14,15,2.9],[14.5,15,2.9],[15,15,2.9],[15.5,15,2.9],[16,15,2.9],[16.5,15,2.9],[17,15,2.9],[17.5,15,3.9],[18,15,6.1],[18.5,15,6.1],[19,15,6.1],[19.5,15,6.1],[20,15,5],[20.5,15,4.9],[21,15,4.9],[21.5,15,4.9],[22,15,6.4],[22.5,15,13.9],[23,15,5.2],[23.5,15,9.7],[24,15,2.3],[24.5,15,2.2],[25,15,1.8],[25.5,15,1.7],[26,15,1.7],[26.5,15,1.7],[27,15,1.8],[27.5,15,2],[28,15,2],[28.5,15,2],[29,15,2],[29.5,15,2],[30,15,2],[30.5,15,5],[31,15,3.2],[31.5,15,7.1],[32,15,34.5],[32.5,15,116.5],[33,15,82.6],[33.5,15,44.9],[34,15,24.4],[34.5,15,11.9],[35,15,14.1],[35.5,15,44],[36,15,30.7],[36.5,15,12.2],[37,15,16.3],[37.5,15,28.4],[38,15,55.9],[38.5,15,68.3],[39,15,50.9],[39.5,15,40.6],[40,15,9.2],[40.5,15,6.5],[41,15,7],[42.5,15,746.6],[43,15,179],[43.5,15,157.3],[44,15,146],[44.5,15,90.9],[45,15,30],[45.5,15,27.7],[46,15,18.4],[46.5,15,18.6],[47,15,7.6],[47.5,15,7.5],[48,15,11.4],[48.5,15,30.2],[49,15,39.4],[49.5,15,14],[50,15,12],[73.5,15,114.9],[74,15,159.9],[74.5,15,122.9],[75,15,271.8],[75.5,15,275.6],[76,15,188.6],[76.5,15,178.1],[77,15,156.9],[77.5,15,229.6],[78,15,138.8],[78.5,15,245.5],[79,15,97.6],[79.5,15,188.1],[80,15,340.9],[93.5,15,50.8],[97.5,15,35.6],[98,15,24.2],[98.5,15,10.6],[99,15,27.9],[99.5,15,89.6],[100,15,252.7],[100.5,15,245.2],[101,15,82.9],[101.5,15,108.7],[102,15,168.1],[102.5,15,140.2],[103,15,183.3],[103.5,15,164],[104,15,155.3],[104.5,15,132.3],[105,15,86.8],[105.5,15,53.7],[106,15,9.5],[106.5,15,13],[107,15,10.9],[107.5,15,35.2],[108,15,18.2],[108.5,15,120.9],[109,15,523],[120,15,400],[120.5,15,2899.2],[121,15,2667.1],[121.5,15,93.6],[122,15,104.7],[145.5,15,64],[-92.5,14.5,74.8],[-92,14.5,108.2],[-91.5,14.5,125.2],[-91,14.5,197],[-90.5,14.5,126.4],[-90,14.5,170.7],[-89.5,14.5,104.9],[-89,14.5,70.6],[-88.5,14.5,55.5],[-88,14.5,79.3],[-87.5,14.5,323.8],[-87,14.5,47.1],[-86.5,14.5,33.7],[-86,14.5,14.9],[-85.5,14.5,11.7],[-85,14.5,7.7],[-84.5,14.5,4.6],[-84,14.5,6.7],[-83.5,14.5,9],[-61.5,14.5,331.6],[-61,14.5,293.8],[-17.5,14.5,312.3],[-17,14.5,128.9],[-16.5,14.5,174.6],[-16,14.5,62.3],[-15.5,14.5,34.1],[-15,14.5,23],[-14.5,14.5,13.9],[-14,14.5,18.5],[-13.5,14.5,3.1],[-13,14.5,3.8],[-12.5,14.5,6.8],[-12,14.5,10.5],[-11.5,14.5,15.8],[-11,14.5,12.4],[-10.5,14.5,10.3],[-10,14.5,10.7],[-9.5,14.5,11.2],[-9,14.5,7.5],[-8.5,14.5,8.1],[-8,14.5,10.9],[-7.5,14.5,8.4],[-7,14.5,4.6],[-6.5,14.5,26.3],[-6,14.5,35.5],[-5.5,14.5,16.9],[-5,14.5,21.5],[-4.5,14.5,43.4],[-4,14.5,29.6],[-3.5,14.5,51.9],[-3,14.5,16.6],[-2.5,14.5,25.6],[-2,14.5,22.7],[-1.5,14.5,17.2],[-1,14.5,26.2],[-0.5,14.5,22.3],[0,14.5,23.1],[0.5,14.5,22.1],[1,14.5,51.7],[1.5,14.5,28.1],[2,14.5,22],[2.5,14.5,28.1],[3,14.5,34.9],[3.5,14.5,22],[4,14.5,30.6],[4.5,14.5,46.5],[5,14.5,57.6],[5.5,14.5,93.3],[6,14.5,84.1],[6.5,14.5,47.8],[7,14.5,78.4],[7.5,14.5,65.1],[8,14.5,38.9],[8.5,14.5,36],[9,14.5,32.6],[9.5,14.5,23.4],[10,14.5,10.4],[10.5,14.5,7.7],[11,14.5,3.1],[11.5,14.5,4.4],[13,14.5,4.1],[13.5,14.5,19.2],[14,14.5,10.7],[14.5,14.5,3.1],[15,14.5,2.9],[15.5,14.5,2.9],[16,14.5,2.9],[16.5,14.5,2.9],[17,14.5,2.9],[17.5,14.5,4.7],[18,14.5,6.1],[18.5,14.5,6.1],[19,14.5,6.1],[19.5,14.5,6.1],[20,14.5,6.3],[20.5,14.5,6.6],[21,14.5,5.4],[21.5,14.5,5.2],[22,14.5,8.1],[22.5,14.5,38.3],[23,14.5,20.1],[23.5,14.5,16.6],[24,14.5,8.5],[24.5,14.5,4.2],[25,14.5,5.2],[25.5,14.5,1.7],[26,14.5,1.7],[26.5,14.5,1.7],[27,14.5,2],[27.5,14.5,4.1],[28,14.5,2],[28.5,14.5,2],[29,14.5,2.5],[29.5,14.5,8],[30,14.5,11.3],[30.5,14.5,11.7],[31,14.5,9.1],[31.5,14.5,36.9],[32,14.5,57.6],[32.5,14.5,117.7],[33,14.5,111.4],[33.5,14.5,155.3],[34,14.5,21.1],[34.5,14.5,12.1],[35,14.5,11.9],[35.5,14.5,11.9],[36,14.5,12.6],[36.5,14.5,10.5],[37,14.5,12.4],[37.5,14.5,34.6],[38,14.5,78.1],[38.5,14.5,127.2],[39,14.5,148.6],[39.5,14.5,95.3],[40,14.5,61.3],[40.5,14.5,12.1],[41,14.5,6.7],[41.5,14.5,6],[42.5,14.5,131.7],[43,14.5,133.9],[43.5,14.5,160],[44,14.5,310.1],[44.5,14.5,144.6],[45,14.5,56.3],[45.5,14.5,56.3],[46,14.5,19.2],[46.5,14.5,19.7],[47,14.5,17.4],[47.5,14.5,7.7],[48,14.5,8.3],[48.5,14.5,21.4],[49,14.5,40.7],[74,14.5,277.2],[74.5,14.5,182.4],[75,14.5,217.7],[75.5,14.5,386.4],[76,14.5,303.3],[76.5,14.5,183.2],[77,14.5,164.4],[77.5,14.5,173.5],[78,14.5,154.2],[78.5,14.5,207.7],[79,14.5,126.2],[79.5,14.5,280.1],[80,14.5,343.2],[93,14.5,50.8],[97.5,14.5,65.3],[98,14.5,48.7],[98.5,14.5,20.5],[99,14.5,44.1],[99.5,14.5,137.9],[100,14.5,223.1],[100.5,14.5,344.9],[101,14.5,126.6],[101.5,14.5,56.4],[102,14.5,57.6],[102.5,14.5,75.6],[103,14.5,61.2],[103.5,14.5,32],[104,14.5,34],[104.5,14.5,29],[105,14.5,30.6],[105.5,14.5,30.9],[106,14.5,12.9],[106.5,14.5,3.3],[107,14.5,2.8],[107.5,14.5,61.1],[108,14.5,56.3],[108.5,14.5,75.2],[109,14.5,344.5],[120,14.5,508.7],[120.5,14.5,1088.9],[121,14.5,1978.6],[121.5,14.5,232.1],[122,14.5,140.5],[122.5,14.5,222.1],[123,14.5,313],[123.5,14.5,103.8],[124,14.5,123.8],[145,14.5,40.3],[-91.5,14,83.5],[-91,14,91.6],[-90.5,14,84.4],[-90,14,343.9],[-89.5,14,916.3],[-89,14,192.2],[-88.5,14,145.9],[-88,14,92.9],[-87.5,14,59.1],[-87,14,50.4],[-86.5,14,59.6],[-86,14,25.7],[-85.5,14,15.5],[-85,14,11.8],[-84.5,14,3],[-84,14,4.2],[-83.5,14,8.8],[-61.5,14,238.5],[-61,14,238.5],[-17,14,65.5],[-16.5,14,75.8],[-16,14,92.3],[-15.5,14,54.8],[-15,14,33.6],[-14.5,14,20.4],[-14,14,18.5],[-13.5,14,6],[-13,14,6.1],[-12.5,14,5.3],[-12,14,3.7],[-11.5,14,6],[-11,14,8.2],[-10.5,14,5.5],[-10,14,8.2],[-9.5,14,6.9],[-9,14,6.2],[-8.5,14,18.6],[-8,14,25.1],[-7.5,14,20.7],[-7,14,13.3],[-6.5,14,29.9],[-6,14,52.8],[-5.5,14,42.9],[-5,14,35.6],[-4.5,14,28.2],[-4,14,29.8],[-3.5,14,29.7],[-3,14,37.9],[-2.5,14,83],[-2,14,42.7],[-1.5,14,33.4],[-1,14,34],[-0.5,14,33.5],[0,14,25.2],[0.5,14,16.2],[1,14,46.9],[1.5,14,43.3],[2,14,38.9],[2.5,14,70.1],[3,14,61.8],[3.5,14,31.4],[4,14,28.4],[4.5,14,38.6],[5,14,75.5],[5.5,14,103.7],[6,14,78.7],[6.5,14,87.7],[7,14,84],[7.5,14,86.6],[8,14,67.7],[8.5,14,54.5],[9,14,87.2],[9.5,14,21.1],[10,14,9.5],[10.5,14,10.4],[11,14,10.3],[11.5,14,8.3],[12,14,11.1],[12.5,14,14.6],[13,14,24.2],[13.5,14,20],[14,14,20.2],[14.5,14,12.4],[15,14,9.5],[15.5,14,2.9],[16,14,2.9],[16.5,14,2.9],[17,14,3.5],[17.5,14,5.7],[18,14,6.1],[18.5,14,6.1],[19,14,6.1],[19.5,14,6.1],[20,14,6.7],[20.5,14,7.3],[21,14,7.3],[21.5,14,7.3],[22,14,28.3],[22.5,14,39.3],[23,14,22.5],[23.5,14,16.7],[24,14,16.1],[24.5,14,23.3],[25,14,26.1],[25.5,14,9.6],[26,14,3.6],[26.5,14,6.2],[27,14,7.5],[27.5,14,14],[28,14,10.6],[28.5,14,7.6],[29,14,10.4],[29.5,14,11.9],[30,14,16.7],[30.5,14,23.3],[31,14,12.8],[31.5,14,38.6],[32,14,50.8],[32.5,14,107.1],[33,14,92.1],[33.5,14,81.4],[34,14,13.7],[34.5,14,12.7],[35,14,11.9],[35.5,14,11.9],[36,14,12.2],[36.5,14,16.7],[37,14,22.6],[37.5,14,37.7],[38,14,59.1],[38.5,14,98.1],[39,14,121.7],[39.5,14,79.7],[40,14,27.8],[40.5,14,28],[41,14,12.6],[41.5,14,6],[42,14,6],[42.5,14,151],[43,14,85.3],[43.5,14,373.7],[44,14,387.3],[44.5,14,100.5],[45,14,108.4],[45.5,14,47.9],[46,14,23.4],[46.5,14,19.4],[47,14,12.6],[47.5,14,7.7],[48,14,7.7],[74.5,14,244.4],[75,14,133.2],[75.5,14,297.8],[76,14,182.9],[76.5,14,195.7],[77,14,283.8],[77.5,14,265.1],[78,14,189.1],[78.5,14,189.7],[79,14,240.2],[79.5,14,208.6],[80,14,179.5],[92.5,14,87.2],[93,14,85.4],[97.5,14,202.4],[98,14,101.7],[98.5,14,33.2],[99,14,49.9],[99.5,14,292.7],[100,14,1126.9],[100.5,14,2134.8],[101,14,166.2],[101.5,14,74.7],[102,14,74.5],[102.5,14,104.1],[103,14,99.3],[103.5,14,65.2],[104,14,6.8],[104.5,14,15],[105,14,12.2],[105.5,14,10.6],[106,14,8],[106.5,14,13.3],[107,14,15.7],[107.5,14,64.5],[108,14,99.6],[108.5,14,70.6],[109,14,498.6],[120,14,112],[120.5,14,677.3],[121,14,552.2],[121.5,14,550],[122,14,207.2],[122.5,14,165.1],[123,14,350.4],[123.5,14,145.4],[124,14,145.7],[144.5,14,390.4],[-90,13.5,138.6],[-89.5,13.5,257.2],[-89,13.5,158.2],[-88.5,13.5,247.5],[-88,13.5,123.3],[-87.5,13.5,114.7],[-87,13.5,58.8],[-86.5,13.5,87.1],[-86,13.5,64.8],[-85.5,13.5,19.7],[-85,13.5,7.8],[-84.5,13.5,1.9],[-84,13.5,2.5],[-81.5,13.5,206],[-61.5,13.5,250.1],[-60,13.5,606.5],[-59.5,13.5,606.5],[-17,13.5,441.3],[-16.5,13.5,49.1],[-16,13.5,40.7],[-15.5,13.5,28.8],[-15,13.5,31],[-14.5,13.5,61.6],[-14,13.5,27.6],[-13.5,13.5,5.1],[-13,13.5,4.9],[-12.5,13.5,4],[-12,13.5,3.6],[-11.5,13.5,9.3],[-11,13.5,7.1],[-10.5,13.5,7.5],[-10,13.5,14.8],[-9.5,13.5,11.8],[-9,13.5,5.7],[-8.5,13.5,57.9],[-8,13.5,35.7],[-7.5,13.5,32.7],[-7,13.5,45.5],[-6.5,13.5,73.6],[-6,13.5,32.5],[-5.5,13.5,39.7],[-5,13.5,46],[-4.5,13.5,34.6],[-4,13.5,25.7],[-3.5,13.5,32.4],[-3,13.5,41.4],[-2.5,13.5,84.2],[-2,13.5,88.3],[-1.5,13.5,76.2],[-1,13.5,54.3],[-0.5,13.5,47.1],[0,13.5,20.8],[0.5,13.5,22.3],[1,13.5,18.7],[1.5,13.5,15.7],[2,13.5,32.7],[2.5,13.5,61.7],[3,13.5,47.1],[3.5,13.5,57.5],[4,13.5,35.5],[4.5,13.5,54.7],[5,13.5,249.2],[5.5,13.5,104.9],[6,13.5,77.1],[6.5,13.5,83.1],[7,13.5,100.6],[7.5,13.5,178.7],[8,13.5,179.6],[8.5,13.5,103.3],[9,13.5,72],[9.5,13.5,27.3],[10,13.5,32.6],[10.5,13.5,38.6],[11,13.5,33.8],[11.5,13.5,18],[12,13.5,16.6],[12.5,13.5,24.5],[13,13.5,26.2],[13.5,13.5,27],[14,13.5,20.2],[14.5,13.5,20.2],[15,13.5,18.5],[15.5,13.5,8.8],[16,13.5,4.1],[16.5,13.5,5.7],[17,13.5,5.8],[17.5,13.5,6.1],[18,13.5,6.1],[18.5,13.5,6.1],[19,13.5,6.1],[19.5,13.5,6.1],[20,13.5,6.4],[20.5,13.5,7.3],[21,13.5,7.3],[21.5,13.5,8],[22,13.5,29.4],[22.5,13.5,38.1],[23,13.5,26.1],[23.5,13.5,23.7],[24,13.5,24.7],[24.5,13.5,31.2],[25,13.5,32.2],[25.5,13.5,32],[26,13.5,26.2],[26.5,13.5,7.9],[27,13.5,9.7],[27.5,13.5,14],[28,13.5,14],[28.5,13.5,14],[29,13.5,14.8],[29.5,13.5,36.7],[30,13.5,42.4],[30.5,13.5,34.6],[31,13.5,32.1],[31.5,13.5,36],[32,13.5,38.7],[32.5,13.5,52.6],[33,13.5,87.5],[33.5,13.5,43.3],[34,13.5,12.1],[34.5,13.5,11.7],[35,13.5,11.9],[35.5,13.5,11.9],[36,13.5,13.6],[36.5,13.5,16.9],[37,13.5,20.6],[37.5,13.5,81.8],[38,13.5,70.1],[38.5,13.5,45.7],[39,13.5,86.6],[39.5,13.5,55.4],[40,13.5,29.4],[40.5,13.5,29],[41,13.5,28.1],[41.5,13.5,14.8],[42,13.5,6.1],[42.5,13.5,6.6],[43,13.5,33.3],[43.5,13.5,173.5],[44,13.5,231.3],[44.5,13.5,38.6],[45,13.5,40.7],[45.5,13.5,21.5],[46,13.5,20.6],[46.5,13.5,20.6],[74.5,13.5,552.2],[75,13.5,155.3],[75.5,13.5,200.7],[76,13.5,287.3],[76.5,13.5,247.9],[77,13.5,463.4],[77.5,13.5,526.7],[78,13.5,328.9],[78.5,13.5,258.6],[79,13.5,346.9],[79.5,13.5,413.7],[80,13.5,3196.8],[92.5,13.5,70.9],[93,13.5,79],[94,13.5,87.2],[98,13.5,63.8],[98.5,13.5,41.4],[99,13.5,18.7],[99.5,13.5,158],[100,13.5,490.7],[100.5,13.5,524],[101,13.5,186.4],[101.5,13.5,44.7],[102,13.5,59.8],[102.5,13.5,60.7],[103,13.5,179],[103.5,13.5,128.1],[104,13.5,86],[104.5,13.5,20.5],[105,13.5,20.1],[105.5,13.5,6.8],[106,13.5,9.4],[106.5,13.5,2.1],[107,13.5,3.3],[107.5,13.5,15],[108,13.5,78.6],[108.5,13.5,35.2],[109,13.5,286.1],[120,13.5,21.7],[120.5,13.5,48.2],[121,13.5,177.8],[121.5,13.5,261],[122,13.5,170.2],[122.5,13.5,141.3],[123,13.5,366.7],[123.5,13.5,503.7],[124,13.5,263],[144.5,13.5,233.6],[-88,13,67.6],[-87.5,13,96.3],[-87,13,64.4],[-86.5,13,54.2],[-86,13,68.4],[-85.5,13,27.6],[-85,13,16.5],[-84.5,13,2.9],[-84,13,5.6],[-82,13,2088.4],[-70.5,13,531.8],[-70,13,531.8],[-61.5,13,250.1],[-17,13,37.8],[-16.5,13,94],[-16,13,63.8],[-15.5,13,51.8],[-15,13,36.7],[-14.5,13,31.8],[-14,13,22.8],[-13.5,13,9.3],[-13,13,5.2],[-12.5,13,4.7],[-12,13,5.7],[-11.5,13,12.8],[-11,13,10.2],[-10.5,13,7.7],[-10,13,11.2],[-9.5,13,12.7],[-9,13,11.5],[-8.5,13,340.3],[-8,13,66.4],[-7.5,13,32.3],[-7,13,31.7],[-6.5,13,23],[-6,13,60.1],[-5.5,13,52.1],[-5,13,35.5],[-4.5,13,29.8],[-4,13,33.8],[-3.5,13,37.9],[-3,13,50.2],[-2.5,13,82],[-2,13,75.6],[-1.5,13,87.8],[-1,13,65.6],[-0.5,13,48.8],[0,13,27.9],[0.5,13,11.6],[1,13,11.2],[1.5,13,15.8],[2,13,16.5],[2.5,13,48.1],[3,13,48.1],[3.5,13,71],[4,13,64.1],[4.5,13,128.7],[5,13,149.1],[5.5,13,62.1],[6,13,72.5],[6.5,13,94.1],[7,13,163],[7.5,13,310.1],[8,13,205.2],[8.5,13,165],[9,13,154.8],[9.5,13,129.9],[10,13,129.9],[10.5,13,57.8],[11,13,27.3],[11.5,13,23.3],[12,13,25.7],[12.5,13,25.5],[13,13,29.4],[13.5,13,33.7],[14,13,34.9],[14.5,13,24],[15,13,16.9],[15.5,13,16.9],[16,13,16.9],[16.5,13,16.8],[17,13,8.3],[17.5,13,6.1],[18,13,5.9],[18.5,13,5.7],[19,13,5.6],[19.5,13,5.3],[20,13,6.7],[20.5,13,7.3],[21,13,7.3],[21.5,13,13.2],[22,13,29.5],[22.5,13,30.7],[23,13,22.7],[23.5,13,24.7],[24,13,29.7],[24.5,13,31.3],[25,13,31.4],[25.5,13,31.6],[26,13,22.8],[26.5,13,7.9],[27,13,11.7],[27.5,13,14],[28,13,14],[28.5,13,14],[29,13,15.4],[29.5,13,31.5],[30,13,37],[30.5,13,30],[31,13,24.3],[31.5,13,31.4],[32,13,37.7],[32.5,13,44.7],[33,13,19.1],[33.5,13,22.3],[34,13,59.9],[34.5,13,10.1],[35,13,11.2],[35.5,13,10],[36,13,15],[36.5,13,37],[37,13,138.9],[37.5,13,107.7],[38,13,66.4],[38.5,13,30.3],[39,13,90.8],[39.5,13,69],[40,13,42.9],[40.5,13,36],[41,13,15.7],[41.5,13,5.5],[42,13,5.8],[42.5,13,6.7],[43,13,7.4],[43.5,13,18.6],[44,13,20.1],[44.5,13,241.7],[45,13,967],[53,13,12.4],[53.5,13,12.4],[54,13,12.4],[54.5,13,12.4],[74.5,13,1185],[75,13,379.8],[75.5,13,193.5],[76,13,333.6],[76.5,13,348.8],[77,13,477.5],[77.5,13,495.5],[78,13,367.9],[78.5,13,480.2],[79,13,499],[79.5,13,466.2],[80,13,1546.9],[92.5,13,40.2],[93,13,51.4],[97.5,13,78.8],[98,13,77.9],[98.5,13,41.8],[99,13,9.7],[99.5,13,70.7],[100,13,217.9],[100.5,13,364.2],[101,13,195.4],[101.5,13,107.5],[102,13,94.7],[102.5,13,33.4],[103,13,59.9],[103.5,13,96.4],[104,13,61.8],[104.5,13,82.6],[105,13,38.8],[105.5,13,10.9],[106,13,21.1],[106.5,13,1.9],[107,13,3.9],[107.5,13,76.2],[108,13,313.8],[108.5,13,52.1],[109,13,191.5],[120,13,39.1],[120.5,13,34.6],[121,13,100],[121.5,13,193.5],[122,13,272],[122.5,13,101.3],[123,13,176.4],[123.5,13,278.9],[124,13,296.5],[124.5,13,98.7],[125,13,178.6],[-87.5,12.5,252.7],[-87,12.5,105.1],[-86.5,12.5,467.5],[-86,12.5,60.8],[-85.5,12.5,28.9],[-85,12.5,20.1],[-84.5,12.5,12.3],[-84,12.5,7.4],[-83.5,12.5,5.3],[-83,12.5,6.1],[-82,12.5,2088.4],[-72.5,12.5,10.3],[-72,12.5,10.3],[-71.5,12.5,10.3],[-70.5,12.5,29.4],[-70,12.5,138.6],[-69.5,12.5,74.1],[-69,12.5,581.1],[-68.5,12.5,45.6],[-62,12.5,287.6],[-61.5,12.5,250.1],[-17,12.5,43.6],[-16.5,12.5,49.1],[-16,12.5,58.6],[-15.5,12.5,30],[-15,12.5,41.3],[-14.5,12.5,23.7],[-14,12.5,14.9],[-13.5,12.5,18.9],[-13,12.5,18.6],[-12.5,12.5,17.3],[-12,12.5,19.1],[-11.5,12.5,10.3],[-11,12.5,4.9],[-10.5,12.5,7.2],[-10,12.5,7.3],[-9.5,12.5,15.8],[-9,12.5,17.2],[-8.5,12.5,27.2],[-8,12.5,29.1],[-7.5,12.5,22.9],[-7,12.5,29.3],[-6.5,12.5,30.8],[-6,12.5,41.2],[-5.5,12.5,68.8],[-5,12.5,44.2],[-4.5,12.5,36.5],[-4,12.5,40.5],[-3.5,12.5,36.8],[-3,12.5,46.2],[-2.5,12.5,114.6],[-2,12.5,263.7],[-1.5,12.5,148.1],[-1,12.5,70],[-0.5,12.5,85.2],[0,12.5,29],[0.5,12.5,14.7],[1,12.5,12.6],[1.5,12.5,12.1],[2,12.5,5.1],[2.5,12.5,11.1],[3,12.5,51.9],[3.5,12.5,59],[4,12.5,139.4],[4.5,12.5,95.8],[5,12.5,61.2],[5.5,12.5,54],[6,12.5,84.5],[6.5,12.5,122.4],[7,12.5,125.3],[7.5,12.5,180.8],[8,12.5,329],[8.5,12.5,319.2],[9,12.5,169.8],[9.5,12.5,228.8],[10,12.5,163.7],[10.5,12.5,69.1],[11,12.5,34.3],[11.5,12.5,20.8],[12,12.5,18.7],[12.5,12.5,18.2],[13,12.5,28.8],[13.5,12.5,38.1],[14,12.5,42.8],[14.5,12.5,33],[15,12.5,17.2],[15.5,12.5,16.9],[16,12.5,16.9],[16.5,12.5,16.9],[17,12.5,14.6],[17.5,12.5,6.1],[18,12.5,5.3],[18.5,12.5,5.2],[19,12.5,5.1],[19.5,12.5,5.2],[20,12.5,7.1],[20.5,12.5,7.3],[21,12.5,7.3],[21.5,12.5,7.3],[22,12.5,10.4],[22.5,12.5,20.1],[23,12.5,15.4],[23.5,12.5,15.4],[24,12.5,28.7],[24.5,12.5,31.2],[25,12.5,31.2],[25.5,12.5,28.1],[26,12.5,8.5],[26.5,12.5,7.9],[27,12.5,13.1],[27.5,12.5,14],[28,12.5,14],[28.5,12.5,11.5],[29,12.5,9.4],[29.5,12.5,13.7],[30,12.5,15.5],[30.5,12.5,10.3],[31,12.5,8.7],[31.5,12.5,28.3],[32,12.5,40.1],[32.5,12.5,31.7],[33,12.5,7.1],[33.5,12.5,7.1],[34,12.5,29.3],[34.5,12.5,10],[35,12.5,8.8],[35.5,12.5,5.5],[36,12.5,9.8],[36.5,12.5,43.3],[37,12.5,155.6],[37.5,12.5,145.2],[38,12.5,89.8],[38.5,12.5,69.4],[39,12.5,101.7],[39.5,12.5,83.2],[40,12.5,56.2],[40.5,12.5,34.7],[41,12.5,5.2],[41.5,12.5,4.6],[42,12.5,5.8],[42.5,12.5,6.6],[43,12.5,5.8],[52,12.5,12.4],[52.5,12.5,12.4],[53,12.5,12.4],[53.5,12.5,12.4],[54,12.5,12.4],[71.5,12.5,1604.2],[74.5,12.5,621.5],[75,12.5,594],[75.5,12.5,221.4],[76,12.5,272.9],[76.5,12.5,722.9],[77,12.5,199.8],[77.5,12.5,177.8],[78,12.5,350.8],[78.5,12.5,268.3],[79,12.5,440.2],[79.5,12.5,434.7],[80,12.5,354.8],[92.5,12.5,25.3],[93,12.5,25.3],[93.5,12.5,25.3],[97.5,12.5,78.8],[98,12.5,78.8],[98.5,12.5,50.9],[99,12.5,11],[99.5,12.5,63.8],[100,12.5,70],[102,12.5,75.8],[102.5,12.5,41.1],[103,12.5,4],[103.5,12.5,26.8],[104,12.5,40.8],[104.5,12.5,115.2],[105,12.5,207.5],[105.5,12.5,124.8],[106,12.5,36.6],[106.5,12.5,7.4],[107,12.5,12.4],[107.5,12.5,46.6],[108,12.5,45.7],[108.5,12.5,23.1],[109,12.5,461.5],[119.5,12.5,57.4],[120,12.5,40.1],[120.5,12.5,157.3],[121,12.5,157.3],[121.5,12.5,230.1],[122,12.5,197.3],[122.5,12.5,113.5],[123,12.5,111.2],[123.5,12.5,206.1],[124,12.5,168],[124.5,12.5,103.6],[125,12.5,103.8],[125.5,12.5,130.9],[-87,12,76.7],[-86.5,12,310.6],[-86,12,132.9],[-85.5,12,23.4],[-85,12,18.9],[-84.5,12,26.4],[-84,12,9.4],[-73.5,12,24.9],[-73,12,18.5],[-72.5,12,17.3],[-72,12,10.9],[-71.5,12,11.1],[-70.5,12,133.8],[-70,12,134.9],[-69.5,12,42],[-67,12,21.9],[-62,12,287.6],[-16.5,12,40.2],[-16,12,269.4],[-15.5,12,20.7],[-15,12,16.2],[-14.5,12,15.2],[-14,12,11.1],[-13.5,12,14.4],[-13,12,29.9],[-12.5,12,49.4],[-12,12,26],[-11.5,12,24.5],[-11,12,12],[-10.5,12,13.2],[-10,12,18.3],[-9.5,12,18.3],[-9,12,18.9],[-8.5,12,27.9],[-8,12,27.5],[-7.5,12,19.7],[-7,12,34.1],[-6.5,12,37.1],[-6,12,31],[-5.5,12,23],[-5,12,31.7],[-4.5,12,51.3],[-4,12,36.8],[-3.5,12,39.9],[-3,12,32.4],[-2.5,12,31.8],[-2,12,34],[-1.5,12,65.4],[-1,12,76.7],[-0.5,12,68.6],[0,12,35.1],[0.5,12,11.3],[1,12,16.4],[1.5,12,31.7],[2,12,12],[2.5,12,10.4],[3,12,32.7],[3.5,12,56.4],[4,12,93.3],[4.5,12,62.9],[5,12,54.9],[5.5,12,47.3],[6,12,50.3],[6.5,12,114.1],[7,12,171.1],[7.5,12,224],[8,12,565.4],[8.5,12,639.9],[9,12,197.5],[9.5,12,150.5],[10,12,156.1],[10.5,12,121.9],[11,12,83.2],[11.5,12,26.8],[12,12,19.7],[12.5,12,20.2],[13,12,288],[13.5,12,37.2],[14,12,48],[14.5,12,37.1],[15,12,20],[15.5,12,16.9],[16,12,16.9],[16.5,12,16.9],[17,12,16.3],[17.5,12,6.8],[18,12,5.2],[18.5,12,5],[19,12,3.9],[19.5,12,2.9],[20,12,2.9],[20.5,12,4.4],[21,12,6.4],[21.5,12,5.9],[22,12,6.8],[22.5,12,13.9],[23,12,15.4],[23.5,12,15.2],[24,12,16.9],[24.5,12,28.6],[25,12,31.2],[25.5,12,24.4],[26,12,11.7],[26.5,12,10.6],[27,12,12.7],[27.5,12,12.8],[28,12,9.4],[28.5,12,8.4],[29,12,8.8],[29.5,12,14.1],[30,12,14],[30.5,12,8.8],[31,12,8.7],[31.5,12,9.2],[32,12,19.1],[32.5,12,9.8],[33,12,12],[33.5,12,12.4],[34,12,14.6],[34.5,12,13.8],[35,12,5.7],[35.5,12,4.5],[36,12,24.9],[36.5,12,71.2],[37,12,209.6],[37.5,12,178.4],[38,12,159.8],[38.5,12,120.1],[39,12,126.8],[39.5,12,138],[40,12,43.8],[40.5,12,19.4],[41,12,7.1],[41.5,12,8.3],[42,12,7.1],[42.5,12,66.6],[43,12,208.6],[49.5,12,2.8],[50,12,7],[50.5,12,9.7],[51,12,9.7],[72,12,1604.2],[72.5,12,1604.2],[75,12,1381.4],[75.5,12,748.7],[76,12,291.3],[76.5,12,229.2],[77,12,179.5],[77.5,12,375.8],[78,12,661.3],[78.5,12,293.9],[79,12,431.1],[79.5,12,1060.7],[92,12,25.3],[92.5,12,25.3],[93,12,25.3],[97,12,78.8],[97.5,12,78.8],[98,12,78.8],[98.5,12,39.5],[99,12,8.7],[99.5,12,67.9],[102,12,46.8],[102.5,12,67.4],[103,12,7.8],[103.5,12,2.4],[104,12,30.5],[104.5,12,571.1],[105,12,289],[105.5,12,186.3],[106,12,86.6],[106.5,12,146.1],[107,12,63.9],[107.5,12,93.8],[108,12,168.3],[108.5,12,128],[109,12,266.9],[119.5,12,32.3],[120,12,34],[121,12,151.2],[121.5,12,211.6],[122,12,275.9],[122.5,12,645.7],[123,12,340.7],[123.5,12,221],[124,12,273.1],[124.5,12,230.6],[125,12,75.5],[125.5,12,52.5],[162,12,112.9],[165,12,1.5],[165.5,12,1.5],[-86.5,11.5,49.1],[-86,11.5,60.7],[-85.5,11.5,24.6],[-85,11.5,21.2],[-84.5,11.5,11],[-84,11.5,7.8],[-75,11.5,1414.7],[-74.5,11.5,135.7],[-74,11.5,110.8],[-73.5,11.5,24.9],[-73,11.5,31.8],[-72.5,11.5,44.1],[-72,11.5,30],[-71.5,11.5,11.7],[-71,11.5,7.2],[-70.5,11.5,28.2],[-70,11.5,50.5],[-69.5,11.5,25.7],[-69,11.5,15.1],[-68.5,11.5,23],[-64.5,11.5,51.6],[-64,11.5,558.7],[-63.5,11.5,25.9],[-61,11.5,173.6],[-60.5,11.5,173.6],[-16.5,11.5,16.9],[-16,11.5,23],[-15.5,11.5,29.3],[-15,11.5,28.4],[-14.5,11.5,34.2],[-14,11.5,27.9],[-13.5,11.5,23.2],[-13,11.5,58.7],[-12.5,11.5,89.8],[-12,11.5,30.4],[-11.5,11.5,20.7],[-11,11.5,12.9],[-10.5,11.5,11.3],[-10,11.5,16.4],[-9.5,11.5,18.3],[-9,11.5,20],[-8.5,11.5,35.7],[-8,11.5,22.6],[-7.5,11.5,27.2],[-7,11.5,29.5],[-6.5,11.5,33.9],[-6,11.5,87.5],[-5.5,11.5,30.4],[-5,11.5,40.8],[-4.5,11.5,129.4],[-4,11.5,27.3],[-3.5,11.5,37.8],[-3,11.5,37.5],[-2.5,11.5,31.7],[-2,11.5,13.9],[-1.5,11.5,23.2],[-1,11.5,70.2],[-0.5,11.5,69.1],[0,11.5,50.7],[0.5,11.5,11],[1,11.5,8.8],[1.5,11.5,12.4],[2,11.5,25.9],[2.5,11.5,25.8],[3,11.5,20.1],[3.5,11.5,30.9],[4,11.5,50.8],[4.5,11.5,70.2],[5,11.5,64],[5.5,11.5,52.6],[6,11.5,41.3],[6.5,11.5,58.5],[7,11.5,157.9],[7.5,11.5,327.4],[8,11.5,140.2],[8.5,11.5,155.7],[9,11.5,111.6],[9.5,11.5,113.3],[10,11.5,124.8],[10.5,11.5,75.2],[11,11.5,56],[11.5,11.5,37.7],[12,11.5,26.8],[12.5,11.5,22.4],[13,11.5,39.6],[13.5,11.5,72.1],[14,11.5,99.6],[14.5,11.5,39.8],[15,11.5,27.8],[15.5,11.5,16.9],[16,11.5,16.9],[16.5,11.5,16.9],[17,11.5,12.8],[17.5,11.5,5.2],[18,11.5,5.2],[18.5,11.5,5],[19,11.5,3.6],[19.5,11.5,2.9],[20,11.5,2.8],[20.5,11.5,2.8],[21,11.5,2.8],[21.5,11.5,2.8],[22,11.5,4.4],[22.5,11.5,8.6],[23,11.5,15.3],[23.5,11.5,15.1],[24,11.5,15],[24.5,11.5,15.1],[25,11.5,18.8],[25.5,11.5,13.9],[26,11.5,13.5],[26.5,11.5,13.5],[27,11.5,12.6],[27.5,11.5,8.8],[28,11.5,7.7],[28.5,11.5,7.7],[29,11.5,9.7],[29.5,11.5,30.2],[30,11.5,31.2],[30.5,11.5,10.9],[31,11.5,8.7],[31.5,11.5,8.7],[32,11.5,6.9],[32.5,11.5,6.1],[33,11.5,13.8],[33.5,11.5,14.6],[34,11.5,14.7],[34.5,11.5,14.3],[35,11.5,3.5],[35.5,11.5,4.4],[36,11.5,22.9],[36.5,11.5,128.6],[37,11.5,183],[37.5,11.5,179],[38,11.5,123.1],[38.5,11.5,102.6],[39,11.5,130.5],[39.5,11.5,231.9],[40,11.5,44.6],[40.5,11.5,8.1],[41,11.5,7.5],[41.5,11.5,14.7],[42,11.5,7.2],[42.5,11.5,43.8],[43,11.5,59.7],[43.5,11.5,19.5],[47,11.5,2.5],[47.5,11.5,2.9],[48,11.5,8.1],[48.5,11.5,8.9],[49,11.5,17.1],[49.5,11.5,8.3],[50,11.5,3.1],[50.5,11.5,3.1],[51,11.5,2.3],[72,11.5,1173.9],[72.5,11.5,1914.3],[73,11.5,3498.5],[75.5,11.5,1404],[76,11.5,662.1],[76.5,11.5,392.9],[77,11.5,461.6],[77.5,11.5,553.4],[78,11.5,392.4],[78.5,11.5,297.4],[79,11.5,361.7],[79.5,11.5,690.1],[92.5,11.5,25.3],[97.5,11.5,51.7],[98,11.5,31.6],[98.5,11.5,9.3],[99,11.5,32.1],[99.5,11.5,88.5],[102.5,11.5,5.9],[103,11.5,9.4],[103.5,11.5,16.7],[104,11.5,56.9],[104.5,11.5,356.5],[105,11.5,281.1],[105.5,11.5,220],[106,11.5,322.7],[106.5,11.5,164.3],[107,11.5,193.5],[107.5,11.5,97.6],[108,11.5,67.3],[108.5,11.5,136.2],[109,11.5,61.9],[119,11.5,61.8],[119.5,11.5,58.1],[120,11.5,67],[120.5,11.5,196.4],[121,11.5,196.4],[121.5,11.5,140.2],[122,11.5,125.4],[122.5,11.5,249.6],[123,11.5,363.1],[123.5,11.5,741.7],[124,11.5,312.8],[124.5,11.5,321.4],[125,11.5,99.6],[125.5,11.5,130.2],[162,11.5,112.9],[165,11.5,1.5],[166.5,11.5,2.1],[169.5,11.5,121.6],[-86,11,27.8],[-85.5,11,25.5],[-85,11,23.5],[-84.5,11,30.2],[-84,11,24],[-83.5,11,46.5],[-76,11,1018.1],[-75.5,11,261.8],[-75,11,568.6],[-74.5,11,62.6],[-74,11,61.6],[-73.5,11,49],[-73,11,46.1],[-72.5,11,37.7],[-72,11,766.5],[-71.5,11,41.2],[-71,11,10.3],[-70.5,11,7.5],[-70,11,16.2],[-69.5,11,32.8],[-69,11,29.8],[-68.5,11,41.7],[-68,11,998.6],[-67.5,11,352.6],[-67,11,2208.3],[-66.5,11,175.1],[-64.5,11,103.5],[-64,11,219.5],[-63.5,11,143.4],[-63,11,53.3],[-62.5,11,64.2],[-62,11,546.6],[-61.5,11,328.5],[-61,11,39.2],[-16,11,16.5],[-15.5,11,28.4],[-15,11,34.1],[-14.5,11,34.7],[-14,11,34.7],[-13.5,11,33.3],[-13,11,56.4],[-12.5,11,42.6],[-12,11,34.1],[-11.5,11,21.7],[-11,11,15],[-10.5,11,10.9],[-10,11,11.7],[-9.5,11,16.9],[-9,11,18.7],[-8.5,11,19.7],[-8,11,12.5],[-7.5,11,15.4],[-7,11,19.3],[-6.5,11,23.7],[-6,11,38.8],[-5.5,11,32.2],[-5,11,43.4],[-4.5,11,19.7],[-4,11,16.1],[-3.5,11,37.8],[-3,11,63.4],[-2.5,11,19.4],[-2,11,13.4],[-1.5,11,63.6],[-1,11,127.5],[-0.5,11,108.6],[0,11,82],[0.5,11,62.1],[1,11,23.4],[1.5,11,17.8],[2,11,14.8],[2.5,11,14.5],[3,11,13.4],[3.5,11,13.2],[4,11,25],[4.5,11,48.5],[5,11,45.7],[5.5,11,41.3],[6,11,33.5],[6.5,11,34.2],[7,11,217.6],[7.5,11,196.1],[8,11,104.2],[8.5,11,87],[9,11,53.6],[9.5,11,41.6],[10,11,43.7],[10.5,11,55.5],[11,11,107.1],[11.5,11,52.1],[12,11,52.4],[12.5,11,44.7],[13,11,100],[13.5,11,127],[14,11,125.6],[14.5,11,106],[15,11,58.1],[15.5,11,38.5],[16,11,21.3],[16.5,11,16.9],[17,11,13.6],[17.5,11,5.2],[18,11,5.2],[18.5,11,5.2],[19,11,5.2],[19.5,11,4.1],[20,11,2.8],[20.5,11,2.8],[21,11,2.8],[21.5,11,2.2],[22,11,1.3],[22.5,11,2.5],[23,11,13.3],[23.5,11,14.9],[24,11,11.9],[24.5,11,11],[25,11,11],[25.5,11,12.5],[26,11,13.5],[26.5,11,13.5],[27,11,12],[27.5,11,7.7],[28,11,7.7],[28.5,11,7.7],[29,11,14.4],[29.5,11,70.4],[30,11,49.2],[30.5,11,10.7],[31,11,8.7],[31.5,11,8.6],[32,11,5.9],[32.5,11,6.4],[33,11,10.1],[33.5,11,15.2],[34,11,14.8],[34.5,11,9],[35,11,6.2],[35.5,11,7.4],[36,11,39.1],[36.5,11,135.8],[37,11,169.8],[37.5,11,160.7],[38,11,144.6],[38.5,11,122.9],[39,11,135.3],[39.5,11,156.8],[40,11,65.2],[40.5,11,14.2],[41,11,14.8],[41.5,11,11.2],[42,11,13.8],[42.5,11,16.5],[43,11,16.2],[43.5,11,10.7],[44,11,9.5],[45,11,3.3],[45.5,11,3.3],[46,11,2.7],[46.5,11,2.6],[47,11,2.5],[47.5,11,2.5],[48,11,4.5],[48.5,11,8],[49,11,16.2],[49.5,11,11.6],[50,11,2.6],[50.5,11,2.1],[51,11,2],[72,11,1173.9],[72.5,11,4421.4],[73.5,11,7321.1],[75.5,11,1731.7],[76,11,1070.2],[76.5,11,769.3],[77,11,460.5],[77.5,11,222.4],[78,11,348.7],[78.5,11,644.5],[79,11,565.2],[79.5,11,638.7],[92,11,25.3],[92.5,11,25.3],[97.5,11,13.3],[98,11,10.7],[98.5,11,26.3],[99,11,59.7],[99.5,11,56],[103,11,30],[103.5,11,93.2],[104,11,119.3],[104.5,11,229.5],[105,11,528.1],[105.5,11,182.2],[106,11,263.3],[106.5,11,2112.5],[107,11,337.4],[107.5,11,128.2],[108,11,697.9],[108.5,11,1313.7],[119,11,29.1],[119.5,11,51],[120,11,64.1],[120.5,11,316.5],[121,11,393.1],[121.5,11,451.4],[122,11,277.5],[122.5,11,726.4],[123,11,362.1],[123.5,11,372.3],[124,11,368.4],[124.5,11,211.1],[125,11,191.4],[125.5,11,228.8],[-86,10.5,35.2],[-85.5,10.5,28.3],[-85,10.5,51.7],[-84.5,10.5,226.5],[-84,10.5,75],[-83.5,10.5,53.5],[-76,10.5,740.9],[-75.5,10.5,158.2],[-75,10.5,54.9],[-74.5,10.5,30.9],[-74,10.5,54.3],[-73.5,10.5,43.5],[-73,10.5,19.2],[-72.5,10.5,21.5],[-72,10.5,34.7],[-71.5,10.5,199],[-71,10.5,39.2],[-70.5,10.5,24.4],[-70,10.5,91.2],[-69.5,10.5,249.5],[-69,10.5,113.5],[-68.5,10.5,250.4],[-68,10.5,540.9],[-67.5,10.5,365.1],[-67,10.5,805.7],[-66.5,10.5,67.7],[-66,10.5,27.7],[-65.5,10.5,37.2],[-65,10.5,321.6],[-64.5,10.5,194.7],[-64,10.5,42.7],[-63.5,10.5,44.1],[-63,10.5,19.3],[-62.5,10.5,13.6],[-62,10.5,164.5],[-61.5,10.5,184.6],[-61,10.5,44.5],[-15,10.5,36.2],[-14.5,10.5,37.1],[-14,10.5,39.4],[-13.5,10.5,39.4],[-13,10.5,39.1],[-12.5,10.5,36.7],[-12,10.5,32.7],[-11.5,10.5,15.3],[-11,10.5,13],[-10.5,10.5,12],[-10,10.5,13],[-9.5,10.5,17],[-9,10.5,17.4],[-8.5,10.5,17.5],[-8,10.5,9.6],[-7.5,10.5,7.6],[-7,10.5,17.2],[-6.5,10.5,22.5],[-6,10.5,23.6],[-5.5,10.5,27.9],[-5,10.5,20],[-4.5,10.5,9],[-4,10.5,12.1],[-3.5,10.5,33.2],[-3,10.5,36.2],[-2.5,10.5,30.3],[-2,10.5,25.2],[-1.5,10.5,26.2],[-1,10.5,29.9],[-0.5,10.5,36.5],[0,10.5,33.5],[0.5,10.5,34.6],[1,10.5,50.4],[1.5,10.5,23.9],[2,10.5,22.7],[2.5,10.5,23.1],[3,10.5,23.5],[3.5,10.5,15.8],[4,10.5,12.7],[4.5,10.5,40.1],[5,10.5,31.5],[5.5,10.5,33.5],[6,10.5,38.3],[6.5,10.5,36.7],[7,10.5,161.5],[7.5,10.5,53.1],[8,10.5,70.2],[8.5,10.5,86],[9,10.5,41.7],[9.5,10.5,95.1],[10,10.5,78],[10.5,10.5,68.3],[11,10.5,157.3],[11.5,10.5,83.5],[12,10.5,65.7],[12.5,10.5,62.7],[13,10.5,156.7],[13.5,10.5,113.2],[14,10.5,97.3],[14.5,10.5,89.6],[15,10.5,82.7],[15.5,10.5,49.7],[16,10.5,31],[16.5,10.5,19.1],[17,10.5,16.9],[17.5,10.5,16.7],[18,10.5,12.5],[18.5,10.5,6],[19,10.5,10.9],[19.5,10.5,7.4],[20,10.5,2.8],[20.5,10.5,2.8],[21,10.5,2.8],[21.5,10.5,1.5],[22,10.5,1],[22.5,10.5,1],[23,10.5,3.1],[23.5,10.5,11.9],[24,10.5,11],[24.5,10.5,9.9],[25,10.5,4],[25.5,10.5,3.2],[26,10.5,13.4],[26.5,10.5,13.5],[27,10.5,13.4],[27.5,10.5,8.3],[28,10.5,7.7],[28.5,10.5,7.7],[29,10.5,7.7],[29.5,10.5,13.4],[30,10.5,12.3],[30.5,10.5,8.7],[31,10.5,8.7],[31.5,10.5,6.5],[32,10.5,5.5],[32.5,10.5,6.5],[33,10.5,6.5],[33.5,10.5,10.4],[34,10.5,20.2],[34.5,10.5,25.4],[35,10.5,11.9],[35.5,10.5,7.3],[36,10.5,19.4],[36.5,10.5,56.6],[37,10.5,95.6],[37.5,10.5,142.6],[38,10.5,137.7],[38.5,10.5,108.2],[39,10.5,106.8],[39.5,10.5,136.2],[40,10.5,49.5],[40.5,10.5,14.5],[41,10.5,16.6],[41.5,10.5,7.3],[42,10.5,8.2],[42.5,10.5,19.7],[43,10.5,35.7],[43.5,10.5,13.5],[44,10.5,12.3],[44.5,10.5,3.9],[45,10.5,4.8],[45.5,10.5,4.5],[46,10.5,2.8],[46.5,10.5,2.6],[47,10.5,2.6],[47.5,10.5,2.5],[48,10.5,2.5],[48.5,10.5,7],[49,10.5,6],[49.5,10.5,2.9],[50,10.5,2],[50.5,10.5,2],[51,10.5,2],[72,10.5,4421.4],[73.5,10.5,577.4],[76,10.5,1189.9],[76.5,10.5,377.8],[77,10.5,215],[77.5,10.5,390.7],[78,10.5,357],[78.5,10.5,321.5],[79,10.5,396.8],[79.5,10.5,345.1],[97.5,10.5,24.6],[98,10.5,24.6],[98.5,10.5,47.2],[99,10.5,121.4],[99.5,10.5,74],[102.5,10.5,7.1],[103,10.5,7.1],[103.5,10.5,121],[104,10.5,203],[104.5,10.5,119.3],[105,10.5,466.1],[105.5,10.5,800],[106,10.5,751],[106.5,10.5,476],[107,10.5,990.6],[107.5,10.5,93.3],[118.5,10.5,95.4],[119,10.5,32.8],[119.5,10.5,48.1],[121.5,10.5,351.3],[122,10.5,246.2],[122.5,10.5,381],[123,10.5,275.8],[123.5,10.5,1231.6],[124,10.5,494.3],[124.5,10.5,252.8],[125,10.5,172.8],[125.5,10.5,101.5],[126,10.5,293.5],[139.5,10.5,125.2],[165.5,10.5,27.2],[166,10.5,27.2],[168.5,10.5,82],[169,10.5,82],[169.5,10.5,90.8],[170.5,10.5,137.3],[-86,10,31.5],[-85.5,10,42.5],[-85,10,51.5],[-84.5,10,422.8],[-84,10,168.7],[-83.5,10,41.1],[-83,10,22.2],[-82.5,10,17.8],[-80,10,17.4],[-79.5,10,14.3],[-79,10,13.6],[-76,10,58.4],[-75.5,10,71.1],[-75,10,31.7],[-74.5,10,21.5],[-74,10,34.9],[-73.5,10,25.6],[-73,10,11.5],[-72.5,10,11.4],[-72,10,8.4],[-71.5,10,44.5],[-71,10,46.2],[-70.5,10,36.1],[-70,10,60.1],[-69.5,10,150.9],[-69,10,49.9],[-68.5,10,72.9],[-68,10,107.7],[-67.5,10,44.9],[-67,10,19.4],[-66.5,10,16.2],[-66,10,15.7],[-65.5,10,17.5],[-65,10,61.5],[-64.5,10,23.2],[-64,10,31.1],[-63.5,10,30.9],[-63,10,27.5],[-62.5,10,6],[-62,10,4.6],[-61.5,10,6.2],[-61,10,6.2],[-14.5,10,37.1],[-14,10,214.1],[-13.5,10,318.7],[-13,10,42.1],[-12.5,10,22.7],[-12,10,21.2],[-11.5,10,15.5],[-11,10,13.3],[-10.5,10,15.5],[-10,10,16.2],[-9.5,10,18.7],[-9,10,22.1],[-8.5,10,16],[-8,10,17.9],[-7.5,10,11.5],[-7,10,15.3],[-6.5,10,19.1],[-6,10,58.4],[-5.5,10,42.4],[-5,10,20.1],[-4.5,10,9.5],[-4,10,11.2],[-3.5,10,18.2],[-3,10,24.1],[-2.5,10,24.7],[-2,10,15.3],[-1.5,10,29.5],[-1,10,44],[-0.5,10,23.5],[0,10,30.6],[0.5,10,35.2],[1,10,95.7],[1.5,10,55.8],[2,10,15.3],[2.5,10,16.9],[3,10,20.3],[3.5,10,13.4],[4,10,11.1],[4.5,10,23.7],[5,10,28.9],[5.5,10,28.8],[6,10,48.3],[6.5,10,42.1],[7,10,44.2],[7.5,10,43.1],[8,10,101.3],[8.5,10,219.8],[9,10,188.1],[9.5,10,83.6],[10,10,43.3],[10.5,10,49.7],[11,10,113.1],[11.5,10,94.7],[12,10,50],[12.5,10,45.4],[13,10,53.9],[13.5,10,68],[14,10,53],[14.5,10,50.7],[15,10,50.7],[15.5,10,44.7],[16,10,33.2],[16.5,10,30.4],[17,10,25.3],[17.5,10,18.1],[18,10,17.7],[18.5,10,16.6],[19,10,17.6],[19.5,10,10.4],[20,10,2.8],[20.5,10,2.8],[21,10,1.3],[21.5,10,1],[22,10,1],[22.5,10,1],[23,10,1],[23.5,10,7.7],[24,10,11],[24.5,10,4],[26,10,8.6],[26.5,10,11.3],[27,10,10.9],[27.5,10,8.6],[28,10,7.7],[28.5,10,8.7],[29,10,10.7],[29.5,10,15.9],[30,10,15.4],[30.5,10,7.7],[31,10,6.1],[31.5,10,6.7],[32,10,13.4],[32.5,10,6.5],[33,10,6.5],[33.5,10,7.3],[34,10,20.9],[34.5,10,39.5],[35,10,56.8],[35.5,10,19.4],[36,10,28.8],[36.5,10,46.2],[37,10,70.4],[37.5,10,73.5],[38,10,107],[38.5,10,150.9],[39,10,120],[39.5,10,121.6],[40,10,43.5],[40.5,10,17.7],[41,10,13.1],[41.5,10,55.9],[42,10,94.7],[42.5,10,27.7],[43,10,23.7],[43.5,10,19.7],[44,10,19.1],[44.5,10,13.2],[45,10,7.4],[45.5,10,9.6],[46,10,6],[46.5,10,2.9],[47,10,2.6],[47.5,10,2.5],[48,10,2.5],[48.5,10,6.8],[49,10,5.5],[49.5,10,4.9],[50,10,2],[50.5,10,1.6],[76,10,1514.3],[76.5,10,598.1],[77,10,353.6],[77.5,10,322.4],[78,10,666.7],[78.5,10,257.8],[79,10,224.8],[79.5,10,547.6],[80,10,437.9],[80.5,10,547.6],[97.5,10,24.6],[98,10,40.2],[98.5,10,54.2],[99,10,86.2],[99.5,10,116.4],[100,10,95.5],[102.5,10,7.1],[104,10,547.4],[104.5,10,210.2],[105,10,328.4],[105.5,10,469.2],[106,10,434.8],[106.5,10,266.7],[118,10,30.6],[118.5,10,76.9],[119,10,97.2],[121,10,312.4],[122,10,178.7],[122.5,10,181.8],[123,10,241.6],[123.5,10,398.5],[124,10,209.5],[124.5,10,306.1],[125,10,245.4],[125.5,10,202.4],[126,10,161.6],[138,10,125.2],[139.5,10,125.2],[140.5,10,125.2],[169,10,82],[169.5,10,86.4],[170,10,86.4],[-84.5,9.5,35.7],[-84,9.5,53.7],[-83.5,9.5,17.9],[-83,9.5,18.1],[-82.5,9.5,15.1],[-82,9.5,12.4],[-81,9.5,5.5],[-80.5,9.5,28.6],[-80,9.5,237.5],[-79.5,9.5,208.7],[-79,9.5,8.6],[-78.5,9.5,9.3],[-78,9.5,12],[-76.5,9.5,81.7],[-76,9.5,108.3],[-75.5,9.5,155.4],[-75,9.5,66.4],[-74.5,9.5,41.2],[-74,9.5,38.8],[-73.5,9.5,20],[-73,9.5,8.7],[-72.5,9.5,8.8],[-72,9.5,22.3],[-71.5,9.5,58.8],[-71,9.5,114.3],[-70.5,9.5,62],[-70,9.5,59.8],[-69.5,9.5,29],[-69,9.5,31.7],[-68.5,9.5,12.4],[-68,9.5,4.9],[-67.5,9.5,8.5],[-67,9.5,9.5],[-66.5,9.5,6.2],[-66,9.5,12.5],[-65.5,9.5,13.3],[-65,9.5,16.8],[-64.5,9.5,30.2],[-64,9.5,19.6],[-63.5,9.5,27.2],[-63,9.5,24.1],[-62.5,9.5,8.3],[-62,9.5,6.2],[-61.5,9.5,4.9],[-14,9.5,426.9],[-13.5,9.5,59.6],[-13,9.5,62.2],[-12.5,9.5,43.9],[-12,9.5,25.8],[-11.5,9.5,16],[-11,9.5,17.5],[-10.5,9.5,26.8],[-10,9.5,26.7],[-9.5,9.5,29.2],[-9,9.5,28.4],[-8.5,9.5,16.1],[-8,9.5,13],[-7.5,9.5,7.8],[-7,9.5,13.6],[-6.5,9.5,16.4],[-6,9.5,39.4],[-5.5,9.5,22.6],[-5,9.5,4.6],[-4.5,9.5,3.4],[-4,9.5,5.8],[-3.5,9.5,6.2],[-3,9.5,9.1],[-2.5,9.5,10.8],[-2,9.5,8.4],[-1.5,9.5,15.6],[-1,9.5,108.6],[-0.5,9.5,29.6],[0,9.5,35],[0.5,9.5,31.2],[1,9.5,62.7],[1.5,9.5,13.3],[2,9.5,13.5],[2.5,9.5,52.3],[3,9.5,15.3],[3.5,9.5,24.2],[4,9.5,9.3],[4.5,9.5,26.3],[5,9.5,39.6],[5.5,9.5,60.2],[6,9.5,85.5],[6.5,9.5,52.8],[7,9.5,111.8],[7.5,9.5,68.3],[8,9.5,93.4],[8.5,9.5,102.8],[9,9.5,96.6],[9.5,9.5,83.9],[10,9.5,31.2],[10.5,9.5,31.8],[11,9.5,44.4],[11.5,9.5,69.4],[12,9.5,118.6],[12.5,9.5,60.7],[13,9.5,27.4],[13.5,9.5,24.9],[14,9.5,21],[14.5,9.5,47.6],[15,9.5,47],[15.5,9.5,34.3],[16,9.5,37.6],[16.5,9.5,29.1],[17,9.5,21.9],[17.5,9.5,17.7],[18,9.5,17.7],[18.5,9.5,17.7],[19,9.5,17.2],[19.5,9.5,14],[20,9.5,2.3],[20.5,9.5,1.2],[23,9.5,1.1],[23.5,9.5,9.3],[24,9.5,9.7],[24.5,9.5,1.3],[26,9.5,5.6],[26.5,9.5,6.2],[27,9.5,6.2],[27.5,9.5,14.6],[28,9.5,39.8],[28.5,9.5,30.1],[29,9.5,15.9],[29.5,9.5,15.9],[30,9.5,14],[30.5,9.5,9.3],[31,9.5,7.9],[31.5,9.5,17],[32,9.5,19.7],[32.5,9.5,17.3],[33,9.5,16.3],[33.5,9.5,16.5],[34,9.5,24.2],[34.5,9.5,58.6],[35,9.5,85.6],[35.5,9.5,93.6],[36,9.5,45.5],[36.5,9.5,94.8],[37,9.5,108],[37.5,9.5,111.9],[38,9.5,127.8],[38.5,9.5,656.9],[39,9.5,102.6],[39.5,9.5,61],[40,9.5,32.2],[40.5,9.5,77.7],[41,9.5,215],[41.5,9.5,228.5],[42,9.5,163],[42.5,9.5,60.8],[43,9.5,17.9],[43.5,9.5,14.8],[44,9.5,19.1],[44.5,9.5,10.7],[45,9.5,7.2],[45.5,9.5,9.9],[46,9.5,7.5],[46.5,9.5,5.5],[47,9.5,3.3],[47.5,9.5,3.4],[48,9.5,3.7],[48.5,9.5,3.7],[49,9.5,5.1],[49.5,9.5,5],[50,9.5,1.8],[50.5,9.5,1.5],[76,9.5,1380.4],[76.5,9.5,868.4],[77,9.5,311.8],[77.5,9.5,390.7],[78,9.5,203],[78.5,9.5,304.5],[79,9.5,595.3],[79.5,9.5,127.6],[80,9.5,74.4],[80.5,9.5,57.8],[92.5,9.5,445.8],[97.5,9.5,27.5],[98,9.5,27.2],[98.5,9.5,26.1],[99,9.5,116.9],[99.5,9.5,94.8],[100,9.5,128.4],[103,9.5,101.8],[104.5,9.5,197.2],[105,9.5,265.2],[105.5,9.5,358.7],[106,9.5,296],[117.5,9.5,24.6],[118,9.5,45.7],[118.5,9.5,32.9],[120.5,9.5,312.4],[122.5,9.5,142.8],[123,9.5,270.2],[123.5,9.5,238.5],[124.5,9.5,289.4],[125,9.5,137.7],[125.5,9.5,115],[126,9.5,117.5],[138,9.5,125.2],[165.5,9.5,332.2],[166.5,9.5,535.6],[167,9.5,535.6],[167.5,9.5,535.6],[170,9.5,63.6],[-84,9,14.1],[-83.5,9,18.8],[-83,9,53.3],[-82.5,9,24.8],[-82,9,13.4],[-81.5,9,11.3],[-81,9,11.6],[-80.5,9,36],[-80,9,188.4],[-79.5,9,14.3],[-79,9,5.4],[-78.5,9,4.5],[-78,9,4.5],[-77.5,9,14.2],[-77,9,36.8],[-76.5,9,67.2],[-76,9,107.4],[-75.5,9,61.6],[-75,9,34.3],[-74.5,9,30.4],[-74,9,34],[-73.5,9,19.1],[-73,9,11.7],[-72.5,9,18.2],[-72,9,66.4],[-71.5,9,66.3],[-71,9,30.4],[-70.5,9,43.2],[-70,9,22.9],[-69.5,9,7.1],[-69,9,7.4],[-68.5,9,3.2],[-68,9,8],[-67.5,9,8.2],[-67,9,6.7],[-66.5,9,6.8],[-66,9,8.2],[-65.5,9,6.1],[-65,9,7],[-64.5,9,56.4],[-64,9,25.5],[-63.5,9,13],[-63,9,12.8],[-62.5,9,8.1],[-62,9,5.4],[-13.5,9,116],[-13,9,67.5],[-12.5,9,81.3],[-12,9,47.8],[-11.5,9,49.4],[-11,9,65.7],[-10.5,9,83.8],[-10,9,48.6],[-9.5,9,37.6],[-9,9,18.8],[-8.5,9,15.8],[-8,9,14.8],[-7.5,9,9.7],[-7,9,10.6],[-6.5,9,16.7],[-6,9,23.7],[-5.5,9,7.7],[-5,9,4.4],[-4.5,9,6],[-4,9,6.6],[-3.5,9,9.6],[-3,9,20.1],[-2.5,9,13.5],[-2,9,11.6],[-1.5,9,14.5],[-1,9,16.4],[-0.5,9,31.1],[0,9,35.6],[0.5,9,40.4],[1,9,40.6],[1.5,9,15.2],[2,9,14.6],[2.5,9,20.4],[3,9,34.8],[3.5,9,81],[4,9,60.4],[4.5,9,178.9],[5,9,32.8],[5.5,9,43],[6,9,57.9],[6.5,9,44.1],[7,9,62.5],[7.5,9,57.8],[8,9,68.3],[8.5,9,105.5],[9,9,78.3],[9.5,9,71.3],[10,9,28],[10.5,9,34.1],[11,9,56.5],[11.5,9,68.3],[12,9,66.8],[12.5,9,31.8],[13,9,20.9],[13.5,9,13.8],[14,9,5.2],[14.5,9,17.1],[15,9,45.3],[15.5,9,56.9],[16,9,46.8],[16.5,9,24.2],[17,9,18.8],[17.5,9,17.7],[18,9,17.7],[18.5,9,16.7],[19,9,1.9],[23.5,9,5.5],[24,9,3.6],[26,9,5.7],[26.5,9,6.2],[27,9,6.2],[27.5,9,28.1],[28,9,52.2],[28.5,9,40],[29,9,15.9],[29.5,9,15.9],[30,9,12.4],[30.5,9,10.3],[31,9,10.9],[31.5,9,16.4],[32,9,16.3],[32.5,9,16.6],[33,9,16.6],[33.5,9,16.6],[34,9,26.9],[34.5,9,57.7],[35,9,89.7],[35.5,9,91.1],[36,9,63.6],[36.5,9,85],[37,9,88.6],[37.5,9,136.9],[38,9,152.5],[38.5,9,383.3],[39,9,146.5],[39.5,9,79.1],[40,9,90.8],[40.5,9,106.2],[41,9,100.8],[41.5,9,57.8],[42,9,38.5],[42.5,9,11.2],[43,9,12.4],[43.5,9,14.4],[44,9,16.5],[44.5,9,12.7],[45,9,8.9],[45.5,9,9.9],[46,9,7.5],[46.5,9,5.8],[47,9,6.3],[47.5,9,6.2],[48,9,6.2],[48.5,9,6.6],[49,9,6.1],[49.5,9,4.3],[50,9,1.5],[50.5,9,1.5],[76,9,1809],[76.5,9,1493.5],[77,9,519.2],[77.5,9,441.2],[78,9,520.8],[79.5,9,67.4],[80,9,68.7],[80.5,9,73.5],[81,9,129.9],[92.5,9,445.8],[93.5,9,36.7],[97.5,9,70],[98,9,56.9],[98.5,9,40],[99,9,96.8],[99.5,9,113.8],[100,9,374.7],[104.5,9,190.7],[105,9,175.4],[106.5,9,39.2],[117,9,30.2],[117.5,9,51],[118,9,46.8],[123,9,343],[123.5,9,246.6],[124,9,316.4],[124.5,9,229.9],[125,9,113.5],[125.5,9,143.2],[126,9,99.2],[165.5,9,332.2],[166,9,199.4],[167.5,9,535.6],[170.5,9,83.8],[171,9,83.8],[-84,8.5,18.7],[-83.5,8.5,25.6],[-83,8.5,73.7],[-82.5,8.5,69],[-82,8.5,24.8],[-81.5,8.5,23.4],[-81,8.5,40.5],[-80.5,8.5,55.6],[-80,8.5,49.4],[-79.5,8.5,6.5],[-79,8.5,6.5],[-78.5,8.5,3.6],[-78,8.5,2.8],[-77.5,8.5,9.5],[-77,8.5,27.1],[-76.5,8.5,38.4],[-76,8.5,54],[-75.5,8.5,29.9],[-75,8.5,21.5],[-74.5,8.5,11.3],[-74,8.5,40.5],[-73.5,8.5,62.3],[-73,8.5,77.7],[-72.5,8.5,138.3],[-72,8.5,49.8],[-71.5,8.5,50],[-71,8.5,33.1],[-70.5,8.5,28.9],[-70,8.5,45.8],[-69.5,8.5,6.2],[-69,8.5,5.6],[-68.5,8.5,2.9],[-68,8.5,6],[-67.5,8.5,8.2],[-67,8.5,6],[-66.5,8.5,6.1],[-66,8.5,9],[-65.5,8.5,2.2],[-65,8.5,1.6],[-64.5,8.5,5.1],[-64,8.5,10.9],[-63.5,8.5,23.1],[-63,8.5,219.8],[-62.5,8.5,9.2],[-62,8.5,4.5],[-59.5,8.5,1],[-13.5,8.5,960.1],[-13,8.5,84.2],[-12.5,8.5,46.5],[-12,8.5,51.4],[-11.5,8.5,66.3],[-11,8.5,75.6],[-10.5,8.5,38.8],[-10,8.5,7.9],[-9.5,8.5,39.1],[-9,8.5,61.6],[-8.5,8.5,24.9],[-8,8.5,19.8],[-7.5,8.5,11.9],[-7,8.5,18.3],[-6.5,8.5,19.1],[-6,8.5,21],[-5.5,8.5,24.6],[-5,8.5,22.3],[-4.5,8.5,12.6],[-4,8.5,15.4],[-3.5,8.5,33.6],[-3,8.5,40.9],[-2.5,8.5,24.7],[-2,8.5,20.7],[-1.5,8.5,25.7],[-1,8.5,23.3],[-0.5,8.5,41.7],[0,8.5,38.9],[0.5,8.5,37.6],[1,8.5,38.6],[1.5,8.5,28.3],[2,8.5,32.1],[2.5,8.5,41.2],[3,8.5,59.7],[3.5,8.5,100.7],[4,8.5,143.4],[4.5,8.5,212.7],[5,8.5,90],[5.5,8.5,52.7],[6,8.5,32.8],[6.5,8.5,43.7],[7,8.5,33],[7.5,8.5,32.3],[8,8.5,44.8],[8.5,8.5,84.6],[9,8.5,51.9],[9.5,8.5,57],[10,8.5,29.6],[10.5,8.5,28.1],[11,8.5,27.9],[11.5,8.5,32.3],[12,8.5,20.9],[12.5,8.5,5.3],[13,8.5,6.5],[13.5,8.5,5.7],[14,8.5,5.2],[14.5,8.5,5.2],[15,8.5,15.1],[15.5,8.5,31.8],[16,8.5,22.4],[16.5,8.5,22.4],[17,8.5,19.6],[17.5,8.5,17.7],[18,8.5,17.1],[18.5,8.5,14.9],[19,8.5,4.4],[26,8.5,4.1],[26.5,8.5,6.2],[27,8.5,6.2],[27.5,8.5,20.9],[28,8.5,29.6],[28.5,8.5,20.7],[29,8.5,15.9],[29.5,8.5,15.9],[30,8.5,12.2],[30.5,8.5,10.3],[31,8.5,12.4],[31.5,8.5,14.6],[32,8.5,14.6],[32.5,8.5,15.9],[33,8.5,8.4],[33.5,8.5,10.9],[34,8.5,12.8],[34.5,8.5,43.6],[35,8.5,51.3],[35.5,8.5,75.5],[36,8.5,87.6],[36.5,8.5,77.3],[37,8.5,86.2],[37.5,8.5,184.1],[38,8.5,205.6],[38.5,8.5,139.5],[39,8.5,171.4],[39.5,8.5,113.7],[40,8.5,72.6],[40.5,8.5,29.2],[41,8.5,21.1],[41.5,8.5,4],[42,8.5,11],[42.5,8.5,12.6],[43,8.5,14.2],[43.5,8.5,14.1],[44,8.5,15.7],[44.5,8.5,16],[45,8.5,15.9],[45.5,8.5,8.9],[46,8.5,7.4],[46.5,8.5,6],[47,8.5,7.9],[47.5,8.5,8.1],[48,8.5,6.7],[48.5,8.5,7.1],[49,8.5,5.4],[49.5,8.5,4],[50,8.5,3],[76.5,8.5,2933.5],[77,8.5,1049.3],[77.5,8.5,344.4],[78,8.5,535.3],[79.5,8.5,112.1],[80,8.5,142],[80.5,8.5,101],[81,8.5,129.2],[81.5,8.5,194.9],[93,8.5,36.7],[93.5,8.5,36.7],[97.5,8.5,69.2],[98,8.5,106],[98.5,8.5,81.3],[99,8.5,76.9],[99.5,8.5,187],[100,8.5,216.5],[116.5,8.5,62.4],[117,8.5,46.4],[122,8.5,36.9],[122.5,8.5,145],[123,8.5,165.8],[123.5,8.5,252.3],[124,8.5,315.4],[124.5,8.5,273.6],[125,8.5,72.6],[125.5,8.5,54.7],[126,8.5,119],[134.5,8.5,95.5],[167,8.5,138.3],[167.5,8.5,147.6],[168,8.5,147.6],[171,8.5,72.5],[-82.5,8,15.8],[-82,8,15.5],[-81.5,8,19.8],[-81,8,26.5],[-80.5,8,49.3],[-80,8,9.6],[-78.5,8,2.4],[-78,8,3.4],[-77.5,8,6.8],[-77,8,61.5],[-76.5,8,16.7],[-76,8,18],[-75.5,8,19.5],[-75,8,26.8],[-74.5,8,10.3],[-74,8,20],[-73.5,8,24.2],[-73,8,103.2],[-72.5,8,249],[-72,8,26.2],[-71.5,8,10],[-71,8,11.2],[-70.5,8,9.6],[-70,8,7.2],[-69.5,8,3.1],[-69,8,3.7],[-68.5,8,3.3],[-68,8,17.9],[-67.5,8,15.6],[-67,8,13.2],[-66.5,8,5.8],[-66,8,5.3],[-65.5,8,1.3],[-65,8,1.2],[-64.5,8,12.3],[-64,8,44.5],[-63.5,8,12.4],[-63,8,4.4],[-62.5,8,5.2],[-62,8,4.5],[-60.5,8,1],[-60,8,1],[-59.5,8,1.1],[-59,8,4.5],[-13.5,8,60.6],[-13,8,30.6],[-12.5,8,38.7],[-12,8,82.3],[-11.5,8,81.6],[-11,8,38],[-10.5,8,12.8],[-10,8,10.6],[-9.5,8,36.2],[-9,8,67.7],[-8.5,8,51.5],[-8,8,41.4],[-7.5,8,30.7],[-7,8,44.3],[-6.5,8,35.2],[-6,8,46.9],[-5.5,8,105.8],[-5,8,119.9],[-4.5,8,20.2],[-4,8,20.3],[-3.5,8,35.9],[-3,8,69],[-2.5,8,49.4],[-2,8,70.3],[-1.5,8,35.8],[-1,8,19.5],[-0.5,8,20.8],[0,8,47.3],[0.5,8,65.2],[1,8,50.5],[1.5,8,37],[2,8,41.9],[2.5,8,58],[3,8,79.6],[3.5,8,140.4],[4,8,321.5],[4.5,8,477.8],[5,8,383.3],[5.5,8,178.2],[6,8,184.4],[6.5,8,97.4],[7,8,91.1],[7.5,8,94.3],[8,8,99.3],[8.5,8,136.2],[9,8,74],[9.5,8,81.6],[10,8,34.2],[10.5,8,26.2],[11,8,8.5],[11.5,8,20.5],[12,8,11.1],[12.5,8,5.9],[13,8,7.5],[13.5,8,7.7],[14,8,5.6],[14.5,8,5.2],[15,8,5.8],[15.5,8,20.9],[16,8,20.7],[16.5,8,19.7],[17,8,12.5],[17.5,8,5.6],[18,8,4.2],[18.5,8,8.5],[19,8,6.2],[21,8,1.6],[26,8,1.1],[26.5,8,5.1],[27,8,6.1],[27.5,8,6.1],[28,8,9.8],[28.5,8,15.9],[29,8,15.9],[29.5,8,15.9],[30,8,14.4],[30.5,8,13],[31,8,15.7],[31.5,8,16],[32,8,14.7],[32.5,8,13.3],[33,8,7.5],[33.5,8,3.9],[34.5,8,3],[35,8,19.4],[35.5,8,58.4],[36,8,106.2],[36.5,8,198.4],[37,8,147.4],[37.5,8,271],[38,8,251.5],[38.5,8,133.9],[39,8,147.8],[39.5,8,103.2],[40,8,44.8],[40.5,8,26.3],[41,8,7.2],[41.5,8,4.8],[42,8,11.7],[42.5,8,14.1],[43,8,14.3],[43.5,8,12.6],[44,8,11.7],[44.5,8,13.9],[45,8,10.1],[45.5,8,7.4],[46,8,7.4],[46.5,8,7.6],[47,8,7.7],[47.5,8,6.3],[48,8,4.1],[48.5,8,4.5],[49,8,5],[49.5,8,4.1],[79.5,8,272.9],[80,8,219.7],[80.5,8,171.5],[81,8,145.4],[81.5,8,193.7],[93,8,36.7],[93.5,8,36.7],[98,8,607.9],[98.5,8,105.6],[99,8,72],[99.5,8,171.3],[100,8,193.5],[116.5,8,62.4],[117,8,62.4],[118,8,62.4],[122,8,76.4],[122.5,8,139.2],[123,8,193.7],[123.5,8,208.6],[124,8,203.7],[124.5,8,122.4],[125,8,141.6],[125.5,8,122.5],[126,8,92.9],[126.5,8,37.3],[134.5,8,13],[168,8,147.6],[168.5,8,111.8],[-82,7.5,5.7],[-81.5,7.5,5.7],[-81,7.5,6.6],[-80.5,7.5,9],[-80,7.5,9.6],[-78.5,7.5,3.6],[-78,7.5,4],[-77.5,7.5,4.1],[-77,7.5,7],[-76.5,7.5,13.7],[-76,7.5,20.1],[-75.5,7.5,20.1],[-75,7.5,20.5],[-74.5,7.5,11.3],[-74,7.5,57],[-73.5,7.5,293.9],[-73,7.5,43.8],[-72.5,7.5,19.6],[-72,7.5,12.6],[-71.5,7.5,9],[-71,7.5,8.5],[-70.5,7.5,6.6],[-70,7.5,4.2],[-69.5,7.5,2.7],[-69,7.5,3.4],[-68.5,7.5,3.5],[-68,7.5,1.3],[-67.5,7.5,8.8],[-67,7.5,11.4],[-66.5,7.5,1.3],[-66,7.5,1.2],[-65.5,7.5,1.1],[-64,7.5,3.1],[-63,7.5,1.4],[-62.5,7.5,4.7],[-62,7.5,4.2],[-61.5,7.5,2.2],[-61,7.5,1.5],[-60.5,7.5,1],[-59.5,7.5,2.7],[-59,7.5,7.5],[-58.5,7.5,10.9],[-13,7.5,82.6],[-12.5,7.5,31.4],[-12,7.5,51.4],[-11.5,7.5,24.3],[-11,7.5,7.5],[-10.5,7.5,3.9],[-10,7.5,12.7],[-9.5,7.5,19.6],[-9,7.5,31],[-8.5,7.5,52.9],[-8,7.5,79],[-7.5,7.5,62],[-7,7.5,64.1],[-6.5,7.5,62.7],[-6,7.5,64.4],[-5.5,7.5,46.4],[-5,7.5,25.9],[-4.5,7.5,29.1],[-4,7.5,33.6],[-3.5,7.5,45.9],[-3,7.5,75.7],[-2.5,7.5,105.3],[-2,7.5,97.2],[-1.5,7.5,59.6],[-1,7.5,35.9],[-0.5,7.5,24.9],[0,7.5,82.5],[0.5,7.5,89.3],[1,7.5,51.1],[1.5,7.5,101.2],[2,7.5,135],[2.5,7.5,84.5],[3,7.5,228.7],[3.5,7.5,661.2],[4,7.5,257.7],[4.5,7.5,229.7],[5,7.5,276.2],[5.5,7.5,173.8],[6,7.5,191.4],[6.5,7.5,94.5],[7,7.5,133.2],[7.5,7.5,140.5],[8,7.5,86.4],[8.5,7.5,129.4],[9,7.5,117],[9.5,7.5,72.3],[10,7.5,45.5],[10.5,7.5,32.2],[11,7.5,14.3],[11.5,7.5,9.9],[12,7.5,7.8],[12.5,7.5,7.9],[13,7.5,14.6],[13.5,7.5,15.1],[14,7.5,12.6],[14.5,7.5,6.8],[15,7.5,10.6],[15.5,7.5,15.7],[16,7.5,16.5],[16.5,7.5,11.4],[17,7.5,5.6],[17.5,7.5,4.3],[18,7.5,4.2],[18.5,7.5,5.6],[19,7.5,7.3],[19.5,7.5,4.6],[21,7.5,2.6],[21.5,7.5,3.2],[22,7.5,2.3],[26,7.5,1.2],[26.5,7.5,5.9],[27,7.5,6.1],[27.5,7.5,6.1],[28,7.5,6.2],[28.5,7.5,15.7],[29,7.5,15.8],[29.5,7.5,15.8],[30,7.5,16.1],[30.5,7.5,16.4],[31,7.5,16.4],[31.5,7.5,16.4],[32,7.5,13.4],[32.5,7.5,4.3],[33,7.5,6.7],[33.5,7.5,6.1],[34,7.5,1.5],[34.5,7.5,2.4],[35,7.5,40.8],[35.5,7.5,86.1],[36,7.5,74.9],[36.5,7.5,102.2],[37,7.5,144.4],[37.5,7.5,406.9],[38,7.5,255],[38.5,7.5,226.5],[39,7.5,121.3],[39.5,7.5,71],[40,7.5,57.1],[40.5,7.5,32.9],[41,7.5,5.1],[41.5,7.5,5.7],[42,7.5,9.8],[42.5,7.5,13.9],[43,7.5,9.9],[43.5,7.5,5.8],[44,7.5,5.7],[44.5,7.5,6.6],[45,7.5,7.2],[45.5,7.5,7.2],[46,7.5,7.4],[46.5,7.5,7.7],[47,7.5,15.6],[47.5,7.5,12],[48,7.5,11.1],[48.5,7.5,7],[49,7.5,6.9],[49.5,7.5,6.3],[72.5,7.5,3406.3],[79.5,7.5,1332.2],[80,7.5,616.8],[80.5,7.5,548.6],[81,7.5,112.9],[81.5,7.5,128.1],[93.5,7.5,36.7],[98,7.5,811.6],[99,7.5,348],[99.5,7.5,92.1],[100,7.5,168.3],[100.5,7.5,593.1],[116.5,7.5,51.2],[117,7.5,51.2],[118,7.5,324.1],[118.5,7.5,324.1],[121.5,7.5,331.7],[122,7.5,258.2],[122.5,7.5,289.4],[123,7.5,234.4],[123.5,7.5,65.9],[124,7.5,263.3],[124.5,7.5,156.1],[125,7.5,305.8],[125.5,7.5,379],[126,7.5,99.1],[126.5,7.5,57.6],[134,7.5,100.9],[134.5,7.5,48.2],[147,7.5,667.1],[151.5,7.5,667.1],[152,7.5,667.1],[157.5,7.5,106.5],[158,7.5,106.5],[168.5,7.5,112.4],[171,7.5,1012.8],[171.5,7.5,103.8],[-78,7,4.4],[-77.5,7,4.6],[-77,7,4.7],[-76.5,7,23.2],[-76,7,40.1],[-75.5,7,37.2],[-75,7,20.1],[-74.5,7,10.9],[-74,7,33.4],[-73.5,7,66.2],[-73,7,42.8],[-72.5,7,9.7],[-72,7,20.9],[-71.5,7,7.6],[-71,7,9],[-70.5,7,8.1],[-70,7,3.3],[-69.5,7,1.5],[-69,7,2.6],[-68.5,7,3.5],[-68,7,1.4],[-67.5,7,1.2],[-67,7,1.2],[-66.5,7,1.2],[-66,7,1.2],[-65.5,7,1.2],[-63,7,1.9],[-62.5,7,5.1],[-62,7,4.6],[-61.5,7,2],[-59,7,12.5],[-58.5,7,74.6],[-58,7,145.9],[-12,7,40.3],[-11.5,7,126.8],[-11,7,40.8],[-10.5,7,31.6],[-10,7,20.9],[-9.5,7,34.1],[-9,7,18],[-8.5,7,55.6],[-8,7,45.6],[-7.5,7,69.4],[-7,7,66.3],[-6.5,7,114.5],[-6,7,87.8],[-5.5,7,96.1],[-5,7,41.6],[-4.5,7,47.9],[-4,7,55.8],[-3.5,7,58.6],[-3,7,70.1],[-2.5,7,90.7],[-2,7,546.6],[-1.5,7,113.2],[-1,7,93.2],[-0.5,7,50.1],[0,7,114],[0.5,7,88.8],[1,7,88],[1.5,7,222.5],[2,7,179.8],[2.5,7,287.3],[3,7,1916.6],[3.5,7,435.9],[4,7,82.2],[4.5,7,160.9],[5,7,65.1],[5.5,7,85.3],[6,7,168.3],[6.5,7,113.1],[7,7,317],[7.5,7,275.5],[8,7,158.4],[8.5,7,139.9],[9,7,123.1],[9.5,7,65],[10,7,56.2],[10.5,7,62.4],[11,7,34],[11.5,7,17.7],[12,7,7],[12.5,7,6.8],[13,7,10.6],[13.5,7,13.5],[14,7,12],[14.5,7,11.8],[15,7,16.3],[15.5,7,15.4],[16,7,14.5],[16.5,7,11.6],[17,7,12.6],[17.5,7,9],[18,7,4],[18.5,7,5.7],[19,7,7.3],[19.5,7,4.6],[20,7,1.1],[20.5,7,1.7],[21,7,2.5],[21.5,7,3.2],[22,7,2.8],[26,7,1.6],[26.5,7,5.3],[27,7,5.1],[27.5,7,5],[28,7,5.5],[28.5,7,14.6],[29,7,15.8],[29.5,7,15.9],[30,7,16.6],[30.5,7,16.6],[31,7,16.4],[31.5,7,16.4],[32,7,12.9],[32.5,7,3.7],[33,7,3.7],[33.5,7,3.7],[34,7,3.9],[34.5,7,5.8],[35,7,18.8],[35.5,7,60.8],[36,7,33.7],[36.5,7,47.7],[37,7,107.6],[37.5,7,255.2],[38,7,367.1],[38.5,7,272.1],[39,7,63.4],[39.5,7,36],[40,7,27.9],[40.5,7,23.8],[41,7,7.8],[41.5,7,5.1],[42,7,7.2],[42.5,7,7.3],[43,7,7],[43.5,7,5.8],[44,7,5.6],[44.5,7,5.7],[45,7,7.1],[45.5,7,7.2],[46,7,7.4],[46.5,7,10.2],[47,7,15.6],[47.5,7,8.9],[48,7,6],[48.5,7,5.3],[49,7,6.2],[72.5,7,1281.3],[73,7,604.2],[79.5,7,2850.3],[80,7,743.6],[80.5,7,346.6],[81,7,138.3],[81.5,7,96.1],[93.5,7,36.7],[99,7,111.8],[99.5,7,179.4],[100,7,135.7],[100.5,7,115.5],[101,7,281.4],[101.5,7,240.1],[116,7,52.7],[116.5,7,43.2],[117,7,18.6],[117.5,7,29.1],[118,7,324.1],[118.5,7,324.1],[121,7,160.5],[121.5,7,303.6],[122,7,285.9],[123.5,7,65.9],[124,7,152.1],[124.5,7,207.7],[125,7,246.8],[125.5,7,248.9],[126,7,127.1],[134,7,24.5],[149,7,667.1],[157.5,7,106.5],[158,7,106.5],[159.5,7,106.5],[171.5,7,103.8],[-77.5,6.5,10.5],[-77,6.5,15.2],[-76.5,6.5,19.1],[-76,6.5,989.4],[-75.5,6.5,150.2],[-75,6.5,32.4],[-74.5,6.5,13.7],[-74,6.5,29.5],[-73.5,6.5,43.6],[-73,6.5,43.6],[-72.5,6.5,14],[-72,6.5,6],[-71.5,6.5,3.5],[-71,6.5,1.5],[-70.5,6.5,1.3],[-70,6.5,1.1],[-69.5,6.5,1.1],[-69,6.5,1.1],[-68.5,6.5,1.3],[-68,6.5,1.2],[-67.5,6.5,3.2],[-67,6.5,1.2],[-66.5,6.5,1.2],[-66,6.5,1.1],[-65.5,6.5,1.2],[-63,6.5,1.1],[-62.5,6.5,4.1],[-62,6.5,1.7],[-61.5,6.5,1.1],[-58.5,6.5,48],[-58,6.5,15.3],[-57.5,6.5,4.2],[-57,6.5,6.2],[-55.5,6.5,8.6],[-11,6.5,259.1],[-10.5,6.5,70.6],[-10,6.5,27.7],[-9.5,6.5,24.2],[-9,6.5,80],[-8.5,6.5,77.9],[-8,6.5,24.8],[-7.5,6.5,32.9],[-7,6.5,66.9],[-6.5,6.5,73.5],[-6,6.5,81.8],[-5.5,6.5,80],[-5,6.5,42.6],[-4.5,6.5,49.7],[-4,6.5,51.1],[-3.5,6.5,50.3],[-3,6.5,60.9],[-2.5,6.5,88.1],[-2,6.5,145.3],[-1.5,6.5,116.5],[-1,6.5,130.2],[-0.5,6.5,177.5],[0,6.5,108.5],[0.5,6.5,139],[1,6.5,539],[1.5,6.5,249.8],[2,6.5,993.9],[2.5,6.5,689],[3,6.5,2731.8],[3.5,6.5,472.9],[4,6.5,98.5],[4.5,6.5,181],[5,6.5,82.8],[5.5,6.5,345.5],[6,6.5,189.8],[6.5,6.5,615.6],[7,6.5,398.6],[7.5,6.5,342.9],[8,6.5,239.2],[8.5,6.5,92.5],[9,6.5,61.3],[9.5,6.5,82.5],[10,6.5,111.7],[10.5,6.5,112.6],[11,6.5,38.3],[11.5,6.5,14.3],[12,6.5,7.4],[12.5,6.5,5.6],[13,6.5,7.5],[13.5,6.5,10.7],[14,6.5,10.4],[14.5,6.5,8.6],[15,6.5,18.5],[15.5,6.5,13.5],[16,6.5,6.3],[16.5,6.5,6.9],[17,6.5,12.6],[17.5,6.5,7.2],[18,6.5,3.9],[18.5,6.5,5.5],[19,6.5,8.5],[19.5,6.5,6.5],[20,6.5,1.5],[20.5,6.5,3.8],[21,6.5,2.5],[21.5,6.5,2.9],[22,6.5,3.3],[26.5,6.5,3.6],[27,6.5,3.8],[27.5,6.5,3.8],[28,6.5,4.1],[28.5,6.5,13.7],[29,6.5,15.8],[29.5,6.5,8.1],[30,6.5,12],[30.5,6.5,15.9],[31,6.5,16.7],[31.5,6.5,16.4],[32,6.5,12.6],[32.5,6.5,3.7],[33,6.5,3.7],[33.5,6.5,3.7],[34,6.5,3.7],[34.5,6.5,3.8],[35,6.5,5.2],[35.5,6.5,7.2],[36,6.5,19],[36.5,6.5,80.6],[37,6.5,118.3],[37.5,6.5,126.2],[38,6.5,276.3],[38.5,6.5,146.1],[39,6.5,47.2],[39.5,6.5,12.3],[40,6.5,10.3],[40.5,6.5,6.3],[41,6.5,6.4],[41.5,6.5,6.2],[42,6.5,9.2],[42.5,6.5,9.2],[43,6.5,7.2],[43.5,6.5,6.8],[44,6.5,6],[44.5,6.5,5.6],[45,6.5,6.9],[45.5,6.5,7.6],[46,6.5,9.6],[46.5,6.5,7.6],[47,6.5,7.9],[47.5,6.5,2.5],[48,6.5,1.1],[48.5,6.5,1.1],[49,6.5,1.1],[72.5,6.5,806.7],[73,6.5,851.5],[79.5,6.5,1886.5],[80,6.5,515.5],[80.5,6.5,334.6],[81,6.5,91.1],[81.5,6.5,76.5],[99,6.5,111.8],[99.5,6.5,148],[100,6.5,387.8],[100.5,6.5,58],[101,6.5,85.3],[101.5,6.5,167],[102,6.5,637.1],[115.5,6.5,983.5],[116,6.5,148.5],[116.5,6.5,32.3],[117,6.5,10.7],[117.5,6.5,10.6],[118,6.5,308.9],[120,6.5,143.7],[120.5,6.5,451.2],[121,6.5,421.2],[121.5,6.5,191.7],[122,6.5,208.3],[124,6.5,109.3],[124.5,6.5,143.2],[125,6.5,263.7],[125.5,6.5,118.4],[126,6.5,125.9],[160.5,6.5,106.5],[169,6.5,160.3],[169.5,6.5,160.3],[171.5,6.5,72.4],[172,6.5,72.4],[-78,6,8.8],[-77.5,6,12],[-77,6,20.7],[-76.5,6,29.3],[-76,6,97.6],[-75.5,6,64.2],[-75,6,41.6],[-74.5,6,35.9],[-74,6,78.1],[-73.5,6,111.7],[-73,6,82.4],[-72.5,6,9.2],[-72,6,3.4],[-71.5,6,2.1],[-71,6,2.1],[-70.5,6,1.8],[-68.5,6,1.1],[-68,6,3.5],[-67.5,6,11.8],[-67,6,1.2],[-62.5,6,1.2],[-58.5,6,2.1],[-58,6,6.4],[-57.5,6,4.8],[-57,6,5.5],[-56,6,3.2],[-55.5,6,113],[-55,6,6.3],[-54.5,6,2.5],[-54,6,2.1],[-10.5,6,225.8],[-10,6,19.5],[-9.5,6,17.4],[-9,6,64],[-8.5,6,15.8],[-8,6,5.7],[-7.5,6,22.7],[-7,6,82.1],[-6.5,6,93.7],[-6,6,59.8],[-5.5,6,84.7],[-5,6,66.3],[-4.5,6,80.6],[-4,6,57.4],[-3.5,6,70.5],[-3,6,47.6],[-2.5,6,50.5],[-2,6,81.5],[-1.5,6,99.1],[-1,6,202.4],[-0.5,6,1079.2],[0,6,80.7],[0.5,6,171.2],[1,6,280.7],[4.5,6,159.7],[5,6,78],[5.5,6,280.9],[6,6,191.9],[6.5,6,546.2],[7,6,702.3],[7.5,6,299.9],[8,6,141.3],[8.5,6,57.8],[9,6,37.9],[9.5,6,93],[10,6,313.5],[10.5,6,83],[11,6,32.1],[11.5,6,11],[12,6,11],[12.5,6,10.4],[13,6,6.9],[13.5,6,6.9],[14,6,6.8],[14.5,6,6.8],[15,6,11.4],[15.5,6,12.1],[16,6,5.2],[16.5,6,6.7],[17,6,10.2],[17.5,6,7.3],[18,6,3.4],[18.5,6,4.9],[19,6,6],[19.5,6,8.6],[20,6,10.5],[20.5,6,15],[21,6,13.1],[21.5,6,8.4],[22,6,1.5],[22.5,6,1.2],[23,6,1.8],[23.5,6,1.5],[25,6,1.6],[25.5,6,1.2],[26,6,1.1],[26.5,6,1.3],[27,6,3.1],[27.5,6,4],[28,6,6.4],[28.5,6,6.8],[29,6,10.7],[29.5,6,3.1],[30,6,2.9],[30.5,6,6.6],[31,6,8.1],[31.5,6,10.3],[32,6,9.2],[32.5,6,5.7],[33,6,5],[33.5,6,4.6],[34,6,4.3],[34.5,6,5],[35,6,5.2],[35.5,6,4.6],[36,6,21],[36.5,6,45.5],[37,6,105.9],[37.5,6,73.4],[38,6,97.2],[38.5,6,54],[39,6,31.2],[39.5,6,8.1],[40,6,9.5],[40.5,6,6],[41,6,5.5],[41.5,6,6.5],[42,6,6.1],[42.5,6,8.2],[43,6,8.9],[43.5,6,6.4],[44,6,7.5],[44.5,6,7.6],[45,6,8.2],[45.5,6,9.6],[46,6,8.6],[46.5,6,4.2],[47,6,3.9],[47.5,6,1.1],[48,6,1.1],[48.5,6,1.1],[72.5,6,2357.8],[73,6,1563],[80,6,1127.4],[80.5,6,1281.2],[95,6,491],[95.5,6,62.6],[100,6,354.9],[100.5,6,144],[101,6,25.2],[101.5,6,45.2],[102,6,151.5],[102.5,6,112.6],[103,6,74.9],[115.5,6,61.1],[116,6,156.3],[116.5,6,19.4],[117,6,9.3],[117.5,6,73.2],[118,6,96.3],[118.5,6,10.9],[119.5,6,143.7],[120,6,143.5],[120.5,6,568.6],[121,6,360.1],[121.5,6,144.4],[124.5,6,90.6],[125,6,108.6],[125.5,6,110.2],[153.5,6,106.5],[157,6,106.5],[168,6,161.3],[169,6,531.6],[169.5,6,160.3],[172,6,72.4],[-78,5.5,6.7],[-77.5,5.5,7.6],[-77,5.5,22.9],[-76.5,5.5,28.2],[-76,5.5,211.8],[-75.5,5.5,117.7],[-75,5.5,62.2],[-74.5,5.5,76.8],[-74,5.5,84],[-73.5,5.5,72.1],[-73,5.5,13.1],[-72.5,5.5,19.7],[-72,5.5,2.6],[-71.5,5.5,2.3],[-71,5.5,1.5],[-68,5.5,2.9],[-67.5,5.5,1.6],[-58.5,5.5,3],[-58,5.5,4.9],[-57.5,5.5,3.4],[-57,5.5,2.3],[-56,5.5,2.2],[-55.5,5.5,1.8],[-55,5.5,1.6],[-54.5,5.5,3],[-54,5.5,1.8],[-53.5,5.5,1],[-53,5.5,16.7],[-52.5,5.5,17.1],[-10,5.5,11.3],[-9.5,5.5,63],[-9,5.5,21.3],[-8.5,5.5,7.7],[-8,5.5,13.1],[-7.5,5.5,24.8],[-7,5.5,82.2],[-6.5,5.5,35],[-6,5.5,29.5],[-5.5,5.5,39.2],[-5,5.5,70.4],[-4.5,5.5,1173.1],[-4,5.5,797.1],[-3.5,5.5,118.5],[-3,5.5,75.4],[-2.5,5.5,73],[-2,5.5,141.1],[-1.5,5.5,216.5],[-1,5.5,225.1],[-0.5,5.5,184.1],[5,5.5,107.5],[5.5,5.5,169.8],[6,5.5,222.2],[6.5,5.5,249.8],[7,5.5,643.3],[7.5,5.5,425.6],[8,5.5,110.9],[8.5,5.5,27.5],[9,5.5,37.7],[9.5,5.5,113.6],[10,5.5,299.3],[10.5,5.5,84.8],[11,5.5,17.4],[11.5,5.5,11],[12,5.5,10.6],[12.5,5.5,8.9],[13,5.5,6.8],[13.5,5.5,6.8],[14,5.5,7],[14.5,5.5,7.5],[15,5.5,6.7],[15.5,5.5,5.6],[16,5.5,5.9],[16.5,5.5,8.5],[17,5.5,6.9],[17.5,5.5,6.5],[18,5.5,3.4],[18.5,5.5,2.9],[19,5.5,6.5],[19.5,5.5,7.6],[20,5.5,8.5],[20.5,5.5,10.2],[21,5.5,13.2],[21.5,5.5,7.7],[22,5.5,2],[22.5,5.5,1.8],[23,5.5,7.3],[23.5,5.5,2.5],[24.5,5.5,1.7],[25,5.5,2.1],[25.5,5.5,1.6],[26,5.5,1.3],[26.5,5.5,1.2],[27,5.5,3],[27.5,5.5,3.8],[28,5.5,5.8],[28.5,5.5,2.7],[29,5.5,2.5],[29.5,5.5,2.5],[30,5.5,2.5],[30.5,5.5,4.5],[31,5.5,6.1],[31.5,5.5,6.1],[32,5.5,7],[32.5,5.5,7.1],[33,5.5,5.8],[33.5,5.5,5.8],[34,5.5,5.8],[34.5,5.5,5.7],[35,5.5,2.9],[35.5,5.5,4.9],[36,5.5,8.8],[36.5,5.5,9.4],[37,5.5,48.2],[37.5,5.5,30.2],[38,5.5,42.8],[38.5,5.5,44.7],[39,5.5,12.1],[39.5,5.5,6],[40,5.5,6.5],[40.5,5.5,6],[41,5.5,6.1],[41.5,5.5,6.4],[42,5.5,4.4],[42.5,5.5,4],[43,5.5,3.6],[43.5,5.5,3.6],[44,5.5,3.9],[44.5,5.5,6.4],[45,5.5,9.5],[45.5,5.5,8.9],[46,5.5,3.6],[46.5,5.5,3.4],[47,5.5,3.5],[47.5,5.5,1.7],[48,5.5,1.2],[48.5,5.5,1.1],[72.5,5.5,1288.6],[73,5.5,1392.7],[73.5,5.5,1165.4],[95,5.5,135.3],[95.5,5.5,118.8],[96,5.5,153.9],[96.5,5.5,277],[97,5.5,296.2],[97.5,5.5,183.3],[100,5.5,1265.9],[100.5,5.5,135.9],[101,5.5,16.3],[101.5,5.5,5.9],[102,5.5,18.9],[102.5,5.5,22.6],[103,5.5,319],[114.5,5.5,375.8],[115,5.5,207.5],[115.5,5.5,32.2],[116,5.5,37.6],[116.5,5.5,14.3],[117,5.5,10.9],[117.5,5.5,10.9],[118,5.5,11.9],[118.5,5.5,10.9],[119,5.5,10.9],[119.5,5.5,335],[120,5.5,168.5],[120.5,5.5,894.4],[125,5.5,121.6],[132,5.5,16.5],[153.5,5.5,106.5],[162.5,5.5,80.9],[163,5.5,80.9],[-160.5,5,87.3],[-77.5,5,6],[-77,5,9.3],[-76.5,5,65.2],[-76,5,397.8],[-75.5,5,110.4],[-75,5,53.6],[-74.5,5,969.2],[-74,5,56.1],[-73.5,5,22.4],[-73,5,9.2],[-72.5,5,5.1],[-72,5,1.6],[-71.5,5,1.2],[-58.5,5,3.4],[-58,5,1.4],[-54.5,5,2.6],[-54,5,3],[-53,5,12.3],[-52.5,5,19.1],[-9.5,5,167.9],[-9,5,20.7],[-8.5,5,22],[-8,5,25.1],[-7.5,5,37.4],[-7,5,70.5],[-6.5,5,52.2],[-6,5,19.3],[-3,5,74.2],[-2.5,5,106.9],[-2,5,373.3],[5,5,105.3],[5.5,5,116.5],[6,5,169.4],[6.5,5,417.4],[7,5,475.9],[7.5,5,482.7],[8,5,362],[8.5,5,33.6],[9,5,40.3],[9.5,5,79],[10,5,24.4],[10.5,5,23.8],[11,5,12.9],[11.5,5,10.5],[12,5,8.4],[12.5,5,8.2],[13,5,7.1],[13.5,5,6.9],[14,5,9.4],[14.5,5,8.5],[15,5,9],[15.5,5,12.9],[16,5,9.9],[16.5,5,9.3],[17,5,8.6],[17.5,5,6.3],[18,5,8.9],[18.5,5,7],[19,5,13.4],[19.5,5,13.7],[20,5,11],[20.5,5,17.3],[21,5,17.3],[21.5,5,11.2],[22,5,8.2],[22.5,5,6.9],[23,5,7],[23.5,5,3.1],[24,5,3.8],[24.5,5,3.2],[25,5,1.7],[25.5,5,1.7],[26,5,1.7],[26.5,5,1.8],[27,5,4.5],[27.5,5,4.2],[28,5,6.1],[28.5,5,4.3],[29,5,2.6],[29.5,5,2.8],[30,5,4.5],[30.5,5,6.4],[31,5,6.1],[31.5,5,6.1],[32,5,6.7],[32.5,5,7.1],[33,5,5.8],[33.5,5,5.8],[34,5,5.6],[34.5,5,2.9],[35,5,3.2],[35.5,5,6.8],[36,5,11.4],[36.5,5,7.3],[37,5,4],[37.5,5,6.5],[38,5,10.5],[38.5,5,2.5],[39,5,3.2],[39.5,5,5.1],[40,5,5.4],[40.5,5,5.7],[41,5,5],[41.5,5,5.6],[42,5,4.9],[42.5,5,3.8],[43,5,4.9],[43.5,5,5.7],[44,5,6],[44.5,5,9.3],[45,5,11.5],[45.5,5,11.6],[46,5,6.5],[46.5,5,4.2],[47,5,4.2],[47.5,5,2],[48,5,1.8],[72.5,5,1288.6],[73,5,2123.3],[73.5,5,2123.3],[95,5,28.9],[95.5,5,19.4],[96,5,10.4],[96.5,5,78],[97,5,38.9],[97.5,5,107.8],[98,5,31.6],[100,5,182.3],[100.5,5,131.4],[101,5,209.4],[101.5,5,10.8],[102,5,9.5],[102.5,5,3.4],[103,5,57.4],[107.5,5,31.6],[108,5,31.6],[113.5,5,179.2],[114,5,73.2],[114.5,5,105.6],[115,5,17],[115.5,5,13],[116,5,11.4],[116.5,5,8.2],[117,5,23.4],[117.5,5,29.8],[118,5,43.2],[118.5,5,27.7],[119,5,394.7],[119.5,5,193],[120,5,139.4],[125,5,24],[125.5,5,17],[126.5,5,75.8],[127,5,104.7],[168.5,5,142.6],[-78,4.5,17],[-77.5,4.5,15.6],[-77,4.5,7.4],[-76.5,4.5,100.3],[-76,4.5,141.3],[-75.5,4.5,136.2],[-75,4.5,120.5],[-74.5,4.5,1005.7],[-74,4.5,82.5],[-73.5,4.5,52],[-73,4.5,8.1],[-72.5,4.5,3.8],[-72,4.5,1.3],[-71.5,4.5,1.1],[-58.5,4.5,3],[-54.5,4.5,1],[-54,4.5,1.2],[-8,4.5,41],[-7.5,4.5,50.9],[5.5,4.5,146.5],[6,4.5,166.6],[6.5,4.5,97.3],[7,4.5,482.3],[7.5,4.5,729.6],[8.5,4.5,35.7],[9,4.5,101.8],[9.5,4.5,115.8],[10,4.5,17.5],[10.5,4.5,32.2],[11,4.5,101],[11.5,4.5,52.6],[12,4.5,20.4],[12.5,4.5,13.4],[13,4.5,6],[13.5,4.5,9.1],[14,4.5,10.5],[14.5,4.5,10.4],[15,4.5,10.7],[15.5,4.5,16.3],[16,4.5,12.4],[16.5,4.5,7.5],[17,4.5,9],[17.5,4.5,14.5],[18,4.5,23.7],[18.5,4.5,223.3],[19,4.5,15.3],[19.5,4.5,17.3],[20,4.5,12.3],[20.5,4.5,10.6],[21,4.5,13.3],[21.5,4.5,11.4],[22,4.5,9.3],[22.5,4.5,5.8],[23,4.5,4.1],[23.5,4.5,4.1],[24,4.5,4.1],[24.5,4.5,4.1],[25,4.5,3.1],[25.5,4.5,1.7],[26,4.5,1.7],[26.5,4.5,1.8],[27,4.5,3.5],[27.5,4.5,4.6],[28,4.5,5],[28.5,4.5,4.6],[29,4.5,4.2],[29.5,4.5,11],[30,4.5,23],[30.5,4.5,23.3],[31,4.5,17.1],[31.5,4.5,6.7],[32,4.5,7.2],[32.5,4.5,7.3],[33,4.5,6.8],[33.5,4.5,5.8],[34,4.5,11.5],[34.5,4.5,2.3],[35,4.5,2.8],[35.5,4.5,10.1],[36,4.5,2.4],[36.5,4.5,1.7],[37,4.5,2.8],[37.5,4.5,7.5],[38,4.5,7.7],[38.5,4.5,5.5],[39,4.5,3],[39.5,4.5,4.7],[40,4.5,8.3],[40.5,4.5,5.7],[41,4.5,4.2],[41.5,4.5,4.7],[42,4.5,10.3],[42.5,4.5,6.2],[43,4.5,10.3],[43.5,4.5,12.3],[44,4.5,11.4],[44.5,4.5,10.6],[45,4.5,8.1],[45.5,4.5,7.2],[46,4.5,5.8],[46.5,4.5,5.9],[47,4.5,6.5],[47.5,4.5,5.2],[72.5,4.5,1447.2],[73.5,4.5,5867.4],[95.5,4.5,113.5],[96,4.5,69.8],[96.5,4.5,15],[97,4.5,6],[97.5,4.5,62.8],[98,4.5,153.1],[98.5,4.5,103.7],[100.5,4.5,122.3],[101,4.5,96.5],[101.5,4.5,14],[102,4.5,17.4],[102.5,4.5,5.1],[103,4.5,55.2],[103.5,4.5,131.2],[107.5,4.5,45.2],[108,4.5,13.8],[113.5,4.5,63.5],[114,4.5,28.7],[114.5,4.5,13.8],[115,4.5,4.5],[115.5,4.5,6.9],[116,4.5,1.8],[116.5,4.5,2.4],[117,4.5,24.3],[117.5,4.5,52.2],[118,4.5,68],[118.5,4.5,96.8],[125,4.5,24],[125.5,4.5,15.6],[126.5,4.5,59.2],[127,4.5,116.3],[-159.5,4,33.3],[-77.5,4,43.4],[-77,4,110.1],[-76.5,4,160.3],[-76,4,47.1],[-75.5,4,41.2],[-75,4,29.9],[-74.5,4,465.8],[-74,4,23.8],[-73.5,4,21.5],[-73,4,4.3],[-72.5,4,2.6],[-72,4,1.2],[-71.5,4,1.1],[-60.5,4,2.6],[-58.5,4,2.2],[-58,4,1.6],[-52,4,2],[8.5,4,113.1],[9,4,144.1],[9.5,4,258.1],[10,4,34.7],[10.5,4,29.9],[11,4,139.7],[11.5,4,145.1],[12,4,23.7],[12.5,4,6.1],[13,4,6],[13.5,4,7.3],[14,4,8],[14.5,4,5.4],[15,4,5.2],[15.5,4,6.9],[16,4,6.1],[16.5,4,1.9],[17,4,4.5],[17.5,4,12],[18,4,14.3],[18.5,4,16.7],[19,4,26.9],[19.5,4,55.5],[20,4,29],[20.5,4,14.6],[21,4,14.3],[21.5,4,7.7],[22,4,10.3],[22.5,4,23.4],[23,4,13.9],[23.5,4,4.3],[24,4,4.5],[24.5,4,4.1],[25,4,4.1],[25.5,4,5.3],[26,4,5.4],[26.5,4,5.4],[27,4,5.7],[27.5,4,8.9],[28,4,6.1],[28.5,4,4.5],[29,4,4.9],[29.5,4,16.5],[30,4,20.2],[30.5,4,41.3],[31,4,32.6],[31.5,4,44],[32,4,7.9],[32.5,4,18.7],[33,4,10.2],[33.5,4,7.3],[34,4,10],[34.5,4,33.1],[35,4,4.5],[35.5,4,6.1],[36,4,1],[36.5,4,1.1],[37,4,1.8],[37.5,4,3],[38,4,6.1],[38.5,4,9],[39,4,12.1],[39.5,4,6.3],[40,4,12.7],[40.5,4,8],[41,4,9.5],[41.5,4,29.4],[42,4,10.4],[42.5,4,6.9],[43,4,16.6],[43.5,4,22.8],[44,4,17.7],[44.5,4,8.9],[45,4,6.5],[45.5,4,6.9],[46,4,10.5],[46.5,4,9.7],[47,4,6.8],[47.5,4,6.8],[72.5,4,1635],[73,4,1855.1],[96,4,42],[96.5,4,52.2],[97,4,28],[97.5,4,17.7],[98,4,267.5],[98.5,4,1800.5],[99,4,513.1],[100.5,4,111.7],[101,4,80.6],[101.5,4,47.2],[102,4,37.7],[102.5,4,39.3],[103,4,137.3],[107.5,4,22.2],[108,4,24.2],[108.5,4,7.7],[113,4,46.5],[113.5,4,10.5],[114,4,3.2],[114.5,4,2.2],[115,4,2.2],[115.5,4,2.6],[116,4,2.9],[116.5,4,5.2],[117,4,4.4],[117.5,4,10],[125,4,242.9],[125.5,4,250.4],[126.5,4,139.4],[-78.5,3.5,13.1],[-78,3.5,10],[-77.5,3.5,32.2],[-77,3.5,686.2],[-76.5,3.5,140.4],[-76,3.5,45.2],[-75.5,3.5,47.2],[-75,3.5,8],[-74.5,3.5,6.4],[-74,3.5,21.2],[-73.5,3.5,5.9],[-73,3.5,2.9],[-72.5,3.5,1.2],[-72,3.5,1],[-61,3.5,33.4],[-60.5,3.5,9.4],[-58,3.5,3.8],[-57.5,3.5,1.5],[8,3.5,9.9],[8.5,3.5,9.9],[9.5,3.5,24.3],[10,3.5,14.9],[10.5,3.5,16.6],[11,3.5,30.1],[11.5,3.5,16.3],[12,3.5,9.7],[12.5,3.5,6.4],[13,3.5,5.9],[13.5,3.5,5.9],[14,3.5,5.5],[14.5,3.5,3.3],[15,3.5,3.3],[15.5,3.5,5.1],[16,3.5,6.2],[16.5,3.5,1.5],[17,3.5,1.1],[17.5,3.5,1.1],[18,3.5,1.1],[18.5,3.5,13.3],[19,3.5,43.9],[19.5,3.5,56],[20,3.5,39.9],[20.5,3.5,22.5],[21,3.5,18.5],[21.5,3.5,15.1],[22,3.5,16.2],[22.5,3.5,18.6],[23,3.5,6.8],[23.5,3.5,5.2],[24,3.5,5.2],[24.5,3.5,5.9],[25,3.5,8.4],[25.5,3.5,12.1],[26,3.5,12.7],[26.5,3.5,6.7],[27,3.5,7.2],[27.5,3.5,15.4],[28,3.5,9.1],[28.5,3.5,5.2],[29,3.5,9.7],[29.5,3.5,16.1],[30,3.5,51.3],[30.5,3.5,195.8],[31,3.5,112.9],[31.5,3.5,41.7],[32,3.5,22.5],[32.5,3.5,52.1],[33,3.5,37.9],[33.5,3.5,14.8],[34,3.5,13.2],[34.5,3.5,5.1],[35,3.5,7.3],[35.5,3.5,22.3],[36,3.5,4.2],[36.5,3.5,1.5],[37,3.5,2.7],[37.5,3.5,1.6],[38.5,3.5,1.3],[39,3.5,12.8],[39.5,3.5,8],[40,3.5,3.8],[40.5,3.5,6.9],[41,3.5,7.1],[41.5,3.5,11.9],[42,3.5,3.1],[42.5,3.5,7.4],[43,3.5,23.7],[43.5,3.5,27],[44,3.5,16.3],[44.5,3.5,14.1],[45,3.5,20.4],[45.5,3.5,22.8],[46,3.5,5.8],[46.5,3.5,11.6],[47,3.5,11.4],[72.5,3.5,2888.9],[73.5,3.5,945.7],[97,3.5,50.6],[97.5,3.5,40.4],[98,3.5,114.4],[98.5,3.5,165.6],[99,3.5,362.4],[99.5,3.5,355.2],[101,3.5,396.8],[101.5,3.5,1208.5],[102,3.5,58.2],[102.5,3.5,27.6],[103,3.5,19.4],[105.5,3.5,44.7],[106,3.5,63.7],[107.5,3.5,218],[108,3.5,29.2],[108.5,3.5,10.1],[112.5,3.5,24.5],[113,3.5,35.9],[113.5,3.5,5],[114,3.5,1.9],[114.5,3.5,2.2],[115,3.5,2.1],[116,3.5,1.6],[116.5,3.5,2.2],[117,3.5,4.5],[117.5,3.5,262.1],[125,3.5,225],[125.5,3.5,155.4],[131,3.5,25.5],[172.5,3.5,202.7],[173,3.5,202.7],[-79,3,20],[-78.5,3,14.3],[-78,3,14.3],[-77.5,3,14.1],[-77,3,87.3],[-76.5,3,45.4],[-76,3,20.6],[-75.5,3,70.5],[-75,3,6.8],[-74.5,3,3.1],[-74,3,4.4],[-73.5,3,5],[-73,3,5.7],[-72.5,3,1.8],[-72,3,1.5],[-71.5,3,1.5],[-61,3,21.1],[-60.5,3,1.1],[-58,3,4],[-57.5,3,3.2],[9.5,3,12.9],[10,3,13],[10.5,3,15.5],[11,3,16.2],[11.5,3,13.6],[12,3,9.7],[12.5,3,8.8],[13,3,8.4],[13.5,3,6.2],[14,3,5.6],[14.5,3,3.4],[15,3,3.3],[15.5,3,3.3],[16,3,5.3],[16.5,3,1.1],[17,3,1.1],[17.5,3,1.1],[18,3,6.2],[18.5,3,26.9],[19,3,33.4],[19.5,3,36.4],[20,3,29],[20.5,3,25.6],[21,3,23],[21.5,3,28.8],[22,3,37.1],[22.5,3,37],[23,3,6.9],[23.5,3,5.2],[24,3,5.4],[24.5,3,6.1],[25,3,6.1],[25.5,3,9.2],[26,3,10],[26.5,3,8.3],[27,3,21.2],[27.5,3,31.2],[28,3,26.7],[28.5,3,9.4],[29,3,9.8],[29.5,3,11.5],[30,3,84.1],[30.5,3,136.6],[31,3,46.6],[31.5,3,18],[32,3,78.4],[32.5,3,50.7],[33,3,49.6],[33.5,3,24.1],[34,3,12.4],[34.5,3,21.3],[35,3,9.4],[35.5,3,5.5],[36,3,4.7],[36.5,3,2.5],[37.5,3,2],[39,3,5.4],[39.5,3,4.9],[40,3,2.9],[40.5,3,10],[41,3,5.7],[41.5,3,5.7],[42,3,5.3],[42.5,3,34.5],[43,3,29.1],[43.5,3,15.3],[44,3,10.5],[44.5,3,19.6],[45,3,29.2],[45.5,3,28.9],[46,3,6.6],[46.5,3,4.7],[72.5,3,970.6],[73,3,1019],[73.5,3,1153.2],[95.5,3,27.9],[96,3,37.5],[97,3,193.4],[97.5,3,47.9],[98,3,97.5],[98.5,3,134.5],[99,3,183],[99.5,3,220.1],[100,3,86.8],[101,3,482.3],[101.5,3,351.5],[102,3,93.9],[102.5,3,58.6],[103,3,19.6],[103.5,3,28.9],[104,3,20.7],[105.5,3,27.8],[106,3,28.5],[107.5,3,141.9],[108.5,3,16.8],[109,3,62.1],[111,3,17.1],[111.5,3,37.2],[112,3,9.5],[112.5,3,6.7],[113,3,4.8],[113.5,3,2.3],[114,3,1.2],[114.5,3,1.7],[116.5,3,1.3],[117,3,14.6],[117.5,3,3.9],[125,3,306.9],[128,3,14.6],[128.5,3,20.4],[-157.5,2.5,6.8],[-79,2.5,17],[-78.5,2.5,16.4],[-78,2.5,11.9],[-77.5,2.5,31.9],[-77,2.5,88.1],[-76.5,2.5,35.7],[-76,2.5,46.2],[-75.5,2.5,16],[-75,2.5,2.3],[-74.5,2.5,1.3],[-74,2.5,1.4],[-73.5,2.5,2.6],[-73,2.5,1.9],[-72.5,2.5,1.8],[-72,2.5,1.8],[-71.5,2.5,1.8],[-71,2.5,1.5],[-61,2.5,1.6],[-60.5,2.5,1.1],[-58.5,2.5,1.4],[-58,2.5,4.2],[-57.5,2.5,4.2],[-57,2.5,1.5],[-51,2.5,1.1],[-50.5,2.5,1.3],[9.5,2.5,15.5],[10,2.5,14.1],[10.5,2.5,19],[11,2.5,17.1],[11.5,2.5,11.1],[12,2.5,4.7],[12.5,2.5,5.1],[13,2.5,5.5],[13.5,2.5,4.5],[14,2.5,4.3],[14.5,2.5,3],[15,2.5,3.3],[15.5,2.5,3.3],[16,2.5,2.3],[17.5,2.5,1],[18,2.5,21],[18.5,2.5,28.4],[19,2.5,24.7],[19.5,2.5,27.3],[20,2.5,24.1],[20.5,2.5,23.4],[21,2.5,22.2],[21.5,2.5,22.5],[22,2.5,27.5],[22.5,2.5,32.4],[23,2.5,26],[23.5,2.5,9.4],[24,2.5,6.2],[24.5,2.5,6.5],[25,2.5,6.2],[25.5,2.5,7.4],[26,2.5,7.7],[26.5,2.5,5.9],[27,2.5,28.4],[27.5,2.5,35],[28,2.5,24.4],[28.5,2.5,6.4],[29,2.5,4.5],[29.5,2.5,40.5],[30,2.5,117.1],[30.5,2.5,151.3],[31,2.5,140.7],[31.5,2.5,5.6],[32,2.5,62.9],[32.5,2.5,175.3],[33,2.5,94.7],[33.5,2.5,35.3],[34,2.5,16.1],[34.5,2.5,21.9],[35,2.5,12.3],[35.5,2.5,6],[36,2.5,3],[36.5,2.5,4.3],[37,2.5,1.6],[37.5,2.5,7.9],[38,2.5,5.5],[39,2.5,3.5],[39.5,2.5,6],[40,2.5,5.7],[40.5,2.5,5.9],[41,2.5,6],[41.5,2.5,6.1],[42,2.5,7],[42.5,2.5,14.5],[43,2.5,12.9],[43.5,2.5,10.5],[44,2.5,17.6],[44.5,2.5,37.6],[45,2.5,313.6],[45.5,2.5,147.4],[46,2.5,22.8],[72.5,2.5,876.7],[73,2.5,876.7],[73.5,2.5,507.2],[96,2.5,45],[96.5,2.5,15.1],[97,2.5,18.5],[97.5,2.5,32.3],[98,2.5,47.7],[98.5,2.5,92.7],[99,2.5,76.4],[99.5,2.5,115.6],[100,2.5,69.9],[100.5,2.5,49.3],[101,2.5,23.1],[101.5,2.5,86.9],[102,2.5,351.2],[102.5,2.5,123.8],[103,2.5,61.1],[103.5,2.5,26.1],[104,2.5,20.8],[108,2.5,23.8],[108.5,2.5,23.8],[109,2.5,41.1],[109.5,2.5,13.8],[111,2.5,27.8],[111.5,2.5,50.2],[112,2.5,18.5],[112.5,2.5,5.8],[113,2.5,3],[113.5,2.5,2.2],[114,2.5,1.2],[117,2.5,8.2],[117.5,2.5,18.8],[118,2.5,14.6],[118.5,2.5,58.9],[125,2.5,259.4],[127.5,2.5,36.2],[128,2.5,21.5],[128.5,2.5,16.1],[173,2.5,113.2],[-158,2,6.8],[-157.5,2,6.8],[-79.5,2,54.6],[-79,2,52.6],[-78.5,2,13],[-78,2,18.1],[-77.5,2,78.6],[-77,2,32.7],[-76.5,2,46],[-76,2,52.5],[-75.5,2,19.3],[-75,2,4.1],[-74.5,2,1.8],[-74,2,1.4],[-73.5,2,1.2],[-73,2,1.3],[-72.5,2,1.4],[-72,2,1.6],[-71.5,2,1.3],[-58.5,2,2.8],[-58,2,2.8],[-57,2,1.1],[-56,2,1.1],[7,2,58.2],[9.5,2,17.6],[10,2,8.6],[10.5,2,11.4],[11,2,14.4],[11.5,2,5.3],[12,2,2.5],[13,2,1.1],[13.5,2,1.1],[14,2,1.3],[14.5,2,1.6],[15,2,1.6],[15.5,2,1.5],[16,2,1.3],[17.5,2,1.6],[18,2,6.6],[18.5,2,6.3],[19,2,5.5],[19.5,2,8.6],[20,2,9.7],[20.5,2,9.1],[21,2,9.4],[21.5,2,8.7],[22,2,8.6],[22.5,2,5.6],[23,2,7.1],[23.5,2,7.6],[24,2,7.6],[24.5,2,6.6],[25,2,5.9],[25.5,2,5.8],[26,2,5.7],[26.5,2,2],[27,2,18.5],[27.5,2,20.4],[28,2,12],[28.5,2,3.8],[29,2,3.8],[29.5,2,34.4],[30,2,103.2],[30.5,2,114.1],[31,2,99.6],[31.5,2,52.3],[32,2,43.5],[32.5,2,89.5],[33,2,97],[33.5,2,110.3],[34,2,26.6],[34.5,2,18.2],[35,2,21.2],[35.5,2,4.9],[36,2,3],[36.5,2,6.1],[37,2,3.9],[37.5,2,2.7],[38,2,1.1],[39,2,1.3],[39.5,2,9],[40,2,22],[40.5,2,3.5],[41,2,6.2],[41.5,2,12.6],[42,2,13.8],[42.5,2,14.5],[43,2,12],[43.5,2,27.2],[44,2,79.3],[44.5,2,211.9],[45,2,139.4],[73,2,507.2],[73.5,2,507.2],[97,2,128.7],[98,2,26.1],[98.5,2,144.4],[99,2,48.6],[99.5,2,52.3],[100,2,62],[100.5,2,38.9],[101,2,38],[101.5,2,78.6],[102,2,92.2],[102.5,2,242.2],[103,2,142.6],[103.5,2,250.7],[104,2,59.7],[106.5,2,3.8],[109,2,47.1],[109.5,2,11.4],[110,2,245.4],[110.5,2,57],[111,2,27.6],[111.5,2,15.7],[112,2,9.2],[112.5,2,4.2],[113,2,3.7],[113.5,2,3.7],[114,2,2.5],[114.5,2,1.5],[117,2,2.6],[117.5,2,5],[118,2,11.3],[118.5,2,86.5],[124.5,2,514.1],[125,2,88.1],[127,2,8.9],[127.5,2,22],[128,2,38.8],[128.5,2,3.3],[172.5,2,529.3],[173,2,326.3],[-80,1.5,17.8],[-79.5,1.5,32.3],[-79,1.5,28.6],[-78.5,1.5,8.4],[-78,1.5,91.9],[-77.5,1.5,135.5],[-77,1.5,21.8],[-76.5,1.5,11.9],[-76,1.5,25.1],[-75.5,1.5,12.7],[-75,1.5,3.2],[-74.5,1.5,2.4],[-74,1.5,2.1],[-73.5,1.5,1.1],[-72.5,1.5,1.1],[-72,1.5,1.1],[-70.5,1.5,1.2],[-55.5,1.5,1.1],[-51,1.5,1.1],[-50,1.5,1.2],[9,1.5,17.9],[9.5,1.5,17.4],[10,1.5,9.9],[10.5,1.5,8.2],[11,1.5,9.8],[11.5,1.5,5.8],[12,1.5,4],[12.5,1.5,1.2],[13,1.5,1.3],[13.5,1.5,1.2],[14,1.5,1.1],[15,1.5,1],[17.5,1.5,1.9],[18,1.5,3.8],[18.5,1.5,5.4],[19,1.5,7],[19.5,1.5,8.2],[20,1.5,8.2],[20.5,1.5,7.9],[21,1.5,8.7],[21.5,1.5,8.8],[22,1.5,9.5],[22.5,1.5,6.7],[23,1.5,6],[23.5,1.5,8.9],[24,1.5,8.6],[24.5,1.5,9.9],[25,1.5,5.8],[25.5,1.5,4],[26,1.5,2],[26.5,1.5,1.9],[27,1.5,1.9],[27.5,1.5,3.7],[28,1.5,3.8],[28.5,1.5,3.8],[29,1.5,9.9],[29.5,1.5,60],[30,1.5,60.7],[30.5,1.5,77],[31,1.5,69.6],[31.5,1.5,22.5],[32,1.5,12.6],[32.5,1.5,51.2],[33,1.5,119.1],[33.5,1.5,208.7],[34,1.5,316.2],[34.5,1.5,98.8],[35,1.5,127.9],[35.5,1.5,33.6],[36,1.5,4.2],[36.5,1.5,17.5],[37,1.5,4],[37.5,1.5,2.5],[38,1.5,1],[38.5,1.5,3.8],[39,1.5,4.5],[39.5,1.5,6.6],[40,1.5,2.3],[40.5,1.5,3.8],[41,1.5,5.5],[41.5,1.5,8.7],[42,1.5,7.6],[42.5,1.5,11.4],[43,1.5,8.9],[43.5,1.5,17.1],[44,1.5,32.1],[97,1.5,105.3],[97.5,1.5,238.5],[98.5,1.5,43.3],[99,1.5,114.4],[99.5,1.5,58],[100,1.5,27.7],[100.5,1.5,24.5],[101,1.5,74.2],[101.5,1.5,10.2],[102,1.5,55.7],[102.5,1.5,108.1],[103,1.5,277.9],[103.5,1.5,3451.8],[104,1.5,522.9],[104.5,1.5,75.2],[106.5,1.5,3.8],[107,1.5,3.4],[107.5,1.5,3.1],[108.5,1.5,326.2],[109,1.5,124],[109.5,1.5,21.4],[110,1.5,89.2],[110.5,1.5,33.4],[111,1.5,18.6],[111.5,1.5,15.3],[112,1.5,3.7],[112.5,1.5,2.9],[113,1.5,2.2],[113.5,1.5,1.5],[116.5,1.5,2.5],[117,1.5,4.5],[117.5,1.5,4],[118,1.5,2.9],[118.5,1.5,5.2],[120,1.5,59.8],[120.5,1.5,76.3],[121,1.5,40.3],[121.5,1.5,47],[122,1.5,34.8],[122.5,1.5,26.2],[124,1.5,120.8],[124.5,1.5,312.4],[125,1.5,377.4],[127,1.5,45.3],[127.5,1.5,23.8],[128,1.5,10.4],[128.5,1.5,5],[172.5,1.5,853.5],[173,1.5,816.3],[-91,1,6.3],[-80.5,1,24.8],[-80,1,81.5],[-79.5,1,9.5],[-79,1,3.5],[-78.5,1,13.7],[-78,1,76.9],[-77.5,1,80.8],[-77,1,21.6],[-76.5,1,11.9],[-76,1,10.2],[-75.5,1,1.8],[-75,1,3],[-74.5,1,3.1],[-74,1,1.1],[-71,1,1.2],[-70.5,1,1.1],[-60.5,1,1.6],[-56,1,1.3],[-55.5,1,1.7],[-52,1,1.8],[-51.5,1,1.3],[-51,1,8.4],[-50.5,1,1.9],[-50,1,2.7],[9,1,5.3],[9.5,1,2.6],[10,1,1.7],[10.5,1,2.5],[11,1,1.6],[11.5,1,1.5],[12,1,1.4],[12.5,1,1.6],[13,1,1.5],[13.5,1,1.2],[14,1,1],[17.5,1,2.2],[18,1,4.5],[18.5,1,6.6],[19,1,6.8],[19.5,1,7.9],[20,1,8.2],[20.5,1,6.6],[21,1,7.1],[21.5,1,8.4],[22,1,9.3],[22.5,1,8.4],[23,1,5.3],[23.5,1,16.7],[24,1,23.6],[24.5,1,25.8],[25,1,87.6],[25.5,1,2.9],[26,1,2.1],[26.5,1,1.9],[27,1,1.9],[27.5,1,8.5],[28,1,29.4],[28.5,1,18],[29,1,56.2],[29.5,1,119.3],[30,1,146.9],[30.5,1,121.6],[31,1,75.4],[31.5,1,100.7],[32,1,113.5],[32.5,1,202.2],[33,1,358.2],[33.5,1,247.1],[34,1,328.7],[34.5,1,366.4],[35,1,239.3],[35.5,1,62.5],[36,1,18.9],[36.5,1,14.3],[37,1,7.2],[37.5,1,12.3],[38,1,7.5],[38.5,1,2.9],[39,1,6.9],[39.5,1,6.9],[40,1,3.3],[40.5,1,3.6],[41,1,4.2],[41.5,1,4.2],[42,1,4.2],[42.5,1,19.1],[43,1,30.2],[43.5,1,33.1],[72.5,1,1093.5],[73,1,979.6],[97,1,124.7],[97.5,1,172.5],[98.5,1,20.7],[99,1,36.8],[99.5,1,81.8],[100,1,46.4],[100.5,1,39.5],[101,1,109.4],[101.5,1,51.3],[102,1,19.4],[102.5,1,21.9],[103,1,84.1],[103.5,1,84.4],[104,1,151.8],[104.5,1,128.4],[106,1,8],[106.5,1,16.3],[107,1,3.8],[107.5,1,7.5],[108,1,11.7],[108.5,1,269.6],[109,1,67.7],[109.5,1,36],[110,1,28.6],[110.5,1,19.7],[111,1,12.6],[111.5,1,11.2],[112,1,12.3],[112.5,1,14.1],[113,1,4.1],[114,1,1],[114.5,1,1.2],[115,1,1.4],[115.5,1,1.8],[116,1,3.1],[116.5,1,6.3],[117,1,5.8],[117.5,1,21.2],[118,1,3.7],[118.5,1,1.8],[119.5,1,18.2],[120,1,45.9],[120.5,1,51.8],[121,1,13.7],[121.5,1,22.3],[122,1,31.7],[122.5,1,134.9],[123,1,107.7],[123.5,1,38.9],[124,1,97.2],[124.5,1,57.9],[127,1,898.7],[127.5,1,12.3],[128,1,5.6],[128.5,1,21.1],[172.5,1,98.5],[173,1,98.5],[-91,0.5,6.3],[-90.5,0.5,6.3],[-80.5,0.5,20.6],[-80,0.5,25.3],[-79.5,0.5,26.8],[-79,0.5,11.4],[-78.5,0.5,129.6],[-78,0.5,9.9],[-77.5,0.5,20.5],[-77,0.5,35.1],[-76.5,0.5,8.4],[-76,0.5,4.5],[-75.5,0.5,2.4],[-56,0.5,1.6],[-55.5,0.5,1.8],[-55,0.5,1.6],[-52.5,0.5,1.2],[-52,0.5,1.7],[-51.5,0.5,68.5],[-51,0.5,29.9],[-50.5,0.5,1.4],[-50,0.5,1.4],[-49.5,0.5,1.4],[6,0.5,150],[6.5,0.5,150],[9,0.5,429.8],[9.5,0.5,91.2],[10,0.5,2.1],[10.5,0.5,1.7],[11,0.5,1.4],[11.5,0.5,1.2],[12,0.5,1.1],[12.5,0.5,1.5],[13,0.5,1.6],[13.5,0.5,1.7],[14,0.5,1.8],[15,0.5,1.8],[15.5,0.5,2.7],[16,0.5,1.5],[16.5,0.5,1.4],[17.5,0.5,2.3],[18,0.5,16],[18.5,0.5,6.7],[19,0.5,6.7],[19.5,0.5,7],[20,0.5,7],[20.5,0.5,6.7],[21,0.5,8.8],[21.5,0.5,7.1],[22,0.5,8],[22.5,0.5,9.5],[23,0.5,6.1],[23.5,0.5,18.1],[24,0.5,15.9],[24.5,0.5,10],[25,0.5,78.7],[25.5,0.5,4.6],[26,0.5,4],[26.5,0.5,2.2],[27,0.5,1.9],[27.5,0.5,2.6],[28,0.5,55.7],[28.5,0.5,66.7],[29,0.5,108.6],[29.5,0.5,167],[30,0.5,182.7],[30.5,0.5,74.8],[31,0.5,56.8],[31.5,0.5,106.8],[32,0.5,237.8],[32.5,0.5,888.1],[33,0.5,271.4],[33.5,0.5,257.7],[34,0.5,381],[34.5,0.5,526.5],[35,0.5,198.5],[35.5,0.5,86.2],[36,0.5,93.6],[36.5,0.5,17.9],[37,0.5,42.3],[37.5,0.5,265.9],[38,0.5,21.2],[38.5,0.5,6.5],[39,0.5,5],[39.5,0.5,3.7],[40,0.5,35.8],[40.5,0.5,5.8],[41,0.5,4.2],[41.5,0.5,4.2],[42,0.5,4.2],[42.5,0.5,32.9],[43,0.5,36.5],[72.5,0.5,1093.5],[73,0.5,1066.5],[73.5,0.5,979.6],[98,0.5,218.3],[98.5,0.5,3.8],[99,0.5,34.7],[99.5,0.5,80.3],[100,0.5,53.4],[100.5,0.5,30],[101,0.5,191.1],[101.5,0.5,49.6],[102,0.5,11.3],[102.5,0.5,3.7],[103,0.5,29.4],[103.5,0.5,48],[104,0.5,38.4],[104.5,0.5,43.5],[108.5,0.5,225],[109,0.5,90],[109.5,0.5,41.3],[110,0.5,29.8],[110.5,0.5,34.4],[111,0.5,29.6],[111.5,0.5,33],[112,0.5,12.6],[112.5,0.5,4.7],[113,0.5,1.4],[115,0.5,3.7],[115.5,0.5,7.5],[116,0.5,5.2],[116.5,0.5,5.2],[117,0.5,34.7],[117.5,0.5,48.8],[119.5,0.5,44.9],[120,0.5,44.5],[120.5,0.5,68.4],[121,0.5,38.8],[121.5,0.5,76.3],[122,0.5,33.5],[122.5,0.5,101],[123,0.5,95.1],[123.5,0.5,45],[124,0.5,34.4],[124.5,0.5,36.9],[127,0.5,132.6],[127.5,0.5,14.8],[128,0.5,3.5],[128.5,0.5,27.6],[129.5,0.5,6.5],[130.5,0.5,3.4],[131,0.5,60.3],[173,0.5,73.4],[173.5,0.5,89.9],[-91,0,5.8],[-90.5,0,6.3],[-80.5,0,34.1],[-80,0,31.8],[-79.5,0,97.3],[-79,0,355.5],[-78.5,0,302],[-78,0,5.8],[-77.5,0,9.6],[-77,0,20],[-76.5,0,3.5],[-76,0,5.3],[-75,0,1.2],[-74.5,0,1.4],[-56,0,1.7],[-55.5,0,1.8],[-55,0,2.6],[-54.5,0,1.1],[-51.5,0,14.3],[-51,0,3.5],[-50.5,0,2.6],[-50,0,1.4],[-49.5,0,1.9],[-49,0,5.3],[-48.5,0,5.7],[9,0,6.2],[9.5,0,4],[10,0,2.6],[10.5,0,1.5],[11,0,1.3],[11.5,0,1.3],[12,0,1.3],[12.5,0,1.4],[13,0,1.4],[13.5,0,1.6],[14,0,2.6],[14.5,0,3.1],[15,0,3.6],[15.5,0,3.5],[16,0,3.3],[16.5,0,2.3],[17,0,1],[17.5,0,3.5],[18,0,66.3],[18.5,0,8.5],[19,0,7.4],[19.5,0,8],[20,0,10.3],[20.5,0,11.9],[21,0,12.1],[21.5,0,11.3],[22,0,11],[22.5,0,9.3],[23,0,7.5],[23.5,0,13.4],[24,0,8.3],[24.5,0,4.8],[25,0,4.6],[25.5,0,4.6],[26,0,4.8],[26.5,0,4.2],[27,0,2.4],[27.5,0,2.5],[28,0,20.5],[28.5,0,61.4],[29,0,70.4],[29.5,0,61.8],[30,0,146.3],[30.5,0,103.9],[31,0,105.9],[31.5,0,233.7],[32,0,68.1],[32.5,0,72.7],[33,0,203.3],[33.5,0,236.7],[34,0,274],[34.5,0,445.8],[35,0,226.6],[35.5,0,157.9],[36,0,237.9],[36.5,0,110.7],[37,0,168.7],[37.5,0,226.9],[38,0,23.4],[38.5,0,4.6],[39,0,6.1],[39.5,0,28.5],[40,0,9.6],[40.5,0,9],[41,0,32.8],[41.5,0,101.6],[42,0,110.2],[42.5,0,87.2],[73,0,2417.3],[97.5,0,79.9],[98,0,26.6],[98.5,0,21],[99.5,0,94.9],[100,0,232.3],[100.5,0,178.4],[101,0,23.3],[101.5,0,29.5],[102,0,42.9],[102.5,0,29.7],[103,0,58.4],[103.5,0,31.3],[104,0,31.3],[104.5,0,32.5],[105,0,22.3],[109,0,326.4],[109.5,0,30.3],[110,0,25],[110.5,0,35.5],[111,0,28.2],[111.5,0,35.9],[112,0,18.2],[112.5,0,6.1],[113,0,1.4],[113.5,0,1.6],[114,0,3.7],[114.5,0,9.3],[115,0,2.4],[115.5,0,14.8],[116,0,10.7],[116.5,0,28.6],[117,0,228.6],[117.5,0,9.8],[119.5,0,59.4],[120,0,71.7],[121.5,0,42.6],[122,0,50.4],[122.5,0,24.5],[127,0,31.4],[127.5,0,15.7],[128,0,5.2],[129,0,71.2],[129.5,0,15.9],[130,0,2.1],[130.5,0,3.6],[131,0,2.6],[132,0,1.8],[132.5,0,2.1],[133,0,2.7],[135,0,28.8],[-90.5,-0.5,6.4],[-90,-0.5,7],[-89.5,-0.5,7],[-81,-0.5,415.8],[-80.5,-0.5,79],[-80,-0.5,60.6],[-79.5,-0.5,57.3],[-79,-0.5,65],[-78.5,-0.5,23.8],[-78,-0.5,12.4],[-77.5,-0.5,6],[-77,-0.5,4.2],[-56,-0.5,1.7],[-55.5,-0.5,1.8],[-55,-0.5,2.2],[-54.5,-0.5,2.5],[-52.5,-0.5,1.5],[-52,-0.5,1.6],[-51.5,-0.5,3.2],[-51,-0.5,3.8],[-50.5,-0.5,2.8],[-50,-0.5,2.5],[-49.5,-0.5,5.2],[-49,-0.5,8.1],[-48.5,-0.5,25.9],[-48,-0.5,30.7],[-47.5,-0.5,45.2],[-47,-0.5,69.6],[-46.5,-0.5,26.1],[8.5,-0.5,13.6],[9,-0.5,13.6],[9.5,-0.5,7.6],[10,-0.5,4.5],[10.5,-0.5,2.4],[11,-0.5,1.4],[11.5,-0.5,1.1],[12,-0.5,2.9],[12.5,-0.5,1.4],[13,-0.5,1.4],[13.5,-0.5,1.6],[14,-0.5,1.3],[14.5,-0.5,3.5],[15,-0.5,5.2],[15.5,-0.5,4.1],[16,-0.5,3.6],[16.5,-0.5,2.5],[17,-0.5,1.9],[17.5,-0.5,11.9],[18,-0.5,14.5],[18.5,-0.5,10.7],[19,-0.5,7.9],[19.5,-0.5,7.6],[20,-0.5,6.6],[20.5,-0.5,10.9],[21,-0.5,12.1],[21.5,-0.5,11.6],[22,-0.5,11.1],[22.5,-0.5,9.6],[23,-0.5,8.7],[23.5,-0.5,5.3],[24,-0.5,5.1],[24.5,-0.5,4.7],[25,-0.5,4.6],[25.5,-0.5,4.6],[26,-0.5,5.1],[26.5,-0.5,5.7],[27,-0.5,5.8],[27.5,-0.5,7.6],[28,-0.5,9.7],[28.5,-0.5,15.1],[29,-0.5,102.2],[29.5,-0.5,198.4],[30,-0.5,253.1],[30.5,-0.5,140.2],[31,-0.5,102.2],[31.5,-0.5,115.7],[32,-0.5,53.9],[34,-0.5,191.6],[34.5,-0.5,570.2],[35,-0.5,276.1],[35.5,-0.5,66.5],[36,-0.5,82.1],[36.5,-0.5,295.9],[37,-0.5,357],[37.5,-0.5,71.1],[38,-0.5,44.3],[38.5,-0.5,3],[39,-0.5,2.7],[39.5,-0.5,7],[40,-0.5,1.8],[40.5,-0.5,2.5],[41,-0.5,24.3],[41.5,-0.5,67.2],[42,-0.5,116.6],[73,-0.5,1124.9],[98,-0.5,26.5],[98.5,-0.5,6.8],[100,-0.5,635.7],[100.5,-0.5,145.3],[101,-0.5,52.5],[101.5,-0.5,37.9],[102,-0.5,25.4],[102.5,-0.5,46.7],[103,-0.5,56],[103.5,-0.5,194.2],[104,-0.5,26.9],[104.5,-0.5,267.1],[109,-0.5,23.4],[109.5,-0.5,14.3],[110,-0.5,9],[110.5,-0.5,9.4],[111,-0.5,7.3],[111.5,-0.5,13.5],[112,-0.5,4.6],[112.5,-0.5,2.5],[113,-0.5,4.7],[113.5,-0.5,13.1],[114,-0.5,5.8],[114.5,-0.5,20.4],[115,-0.5,9.5],[115.5,-0.5,2.7],[116,-0.5,6.1],[116.5,-0.5,24.3],[117,-0.5,40.7],[117.5,-0.5,14],[119,-0.5,68.7],[119.5,-0.5,222.5],[120,-0.5,85.7],[120.5,-0.5,174.8],[121,-0.5,61.4],[121.5,-0.5,67.1],[122,-0.5,32.7],[122.5,-0.5,52.2],[123,-0.5,32.3],[127,-0.5,39.7],[127.5,-0.5,18.3],[128,-0.5,13.5],[128.5,-0.5,7.2],[129.5,-0.5,17.8],[130,-0.5,7.3],[130.5,-0.5,5.4],[131,-0.5,96.6],[131.5,-0.5,3],[132,-0.5,1.2],[132.5,-0.5,1.2],[133,-0.5,2.9],[133.5,-0.5,31.2],[134,-0.5,112.7],[134.5,-0.5,33],[135,-0.5,19.3],[135.5,-0.5,18.3],[136,-0.5,29],[145.5,-0.5,19.8],[166.5,-0.5,666.2],[169.5,-0.5,15.2],[174,-0.5,141.7],[-91,-1,4.2],[-90.5,-1,7],[-90,-1,7],[-81,-1,124.6],[-80.5,-1,87.6],[-80,-1,66.6],[-79.5,-1,63],[-79,-1,157.9],[-78.5,-1,20],[-78,-1,8.6],[-60.5,-1,1.2],[-56,-1,1.4],[-55.5,-1,1.9],[-55,-1,2.2],[-54.5,-1,2.9],[-54,-1,2.5],[-52.5,-1,1.3],[-52,-1,2.7],[-51.5,-1,2.7],[-51,-1,5.7],[-50.5,-1,5.8],[-50,-1,6.4],[-49.5,-1,6],[-49,-1,29.6],[-48.5,-1,589.5],[-48,-1,65.7],[-47.5,-1,36.8],[-47,-1,25.3],[-46.5,-1,17.6],[-46,-1,11],[-45.5,-1,16.3],[-45,-1,27.7],[5.5,-1,160.7],[8.5,-1,4.8],[9,-1,5.9],[9.5,-1,7.6],[10,-1,2.2],[10.5,-1,2.9],[11,-1,1.5],[11.5,-1,1.1],[12,-1,2.7],[12.5,-1,1.9],[13,-1,7.8],[13.5,-1,4.1],[14,-1,1.5],[14.5,-1,2.4],[15,-1,4.3],[15.5,-1,4.6],[16,-1,3.5],[16.5,-1,4.6],[17,-1,10],[17.5,-1,13.4],[18,-1,12.5],[18.5,-1,12.3],[19,-1,9.6],[19.5,-1,3.5],[20,-1,2.3],[20.5,-1,2.1],[21,-1,4.6],[21.5,-1,7.3],[22,-1,11.1],[22.5,-1,10.2],[23,-1,9.1],[23.5,-1,8],[24,-1,5.7],[24.5,-1,5],[25,-1,4.7],[25.5,-1,4.7],[26,-1,5.7],[26.5,-1,5.8],[27,-1,7.5],[27.5,-1,9.7],[28,-1,9.7],[28.5,-1,153.7],[29,-1,153.2],[29.5,-1,305.5],[30,-1,165.7],[30.5,-1,69.8],[31,-1,78.8],[31.5,-1,85.5],[33.5,-1,129.3],[34,-1,163.1],[34.5,-1,104.1],[35,-1,23.3],[35.5,-1,21.9],[36,-1,17.5],[36.5,-1,1092.5],[37,-1,237.7],[37.5,-1,106],[38,-1,71.9],[38.5,-1,3.7],[39.5,-1,8.4],[40,-1,5.6],[40.5,-1,5.3],[41,-1,12.1],[41.5,-1,25.2],[42,-1,116.6],[98.5,-1,6],[99,-1,7.3],[100,-1,179.9],[100.5,-1,82.7],[101,-1,19.8],[101.5,-1,59.6],[102,-1,63.4],[102.5,-1,14],[103,-1,21.1],[103.5,-1,34.5],[104,-1,47.5],[105.5,-1,16.9],[108.5,-1,11],[109,-1,20.2],[109.5,-1,26.9],[110,-1,14.5],[110.5,-1,9.1],[111,-1,2.3],[111.5,-1,2.8],[112,-1,2.9],[112.5,-1,5.8],[113,-1,9.6],[113.5,-1,8.2],[114,-1,4.7],[114.5,-1,7.9],[115,-1,8.7],[115.5,-1,1.9],[116,-1,12.2],[116.5,-1,245.8],[117,-1,25.5],[119,-1,36.9],[119.5,-1,43.9],[120,-1,38.7],[120.5,-1,30.2],[121,-1,9.4],[121.5,-1,7.9],[122,-1,29.5],[122.5,-1,34],[123,-1,46.7],[123.5,-1,50.9],[127,-1,20.2],[127.5,-1,18.6],[128,-1,38.4],[129,-1,8.3],[129.5,-1,8.6],[130,-1,31.7],[130.5,-1,4.3],[131,-1,30.4],[131.5,-1,10.6],[132,-1,7.4],[132.5,-1,1.2],[133,-1,1.3],[133.5,-1,10.9],[134,-1,13.2],[134.5,-1,25.4],[135,-1,4.6],[135.5,-1,22.7],[136,-1,104.1],[136.5,-1,24.5],[143,-1,19.8],[144,-1,19.8],[144.5,-1,19.8],[149.5,-1,11.5],[174.5,-1,135.3],[175,-1,135.3],[175.5,-1,148.7],[176,-1,100.5],[-81,-1.5,33.3],[-80.5,-1.5,52.4],[-80,-1.5,121],[-79.5,-1.5,68.2],[-79,-1.5,117],[-78.5,-1.5,6.8],[-78,-1.5,12.8],[-60.5,-1.5,4.1],[-58,-1.5,1.1],[-57,-1.5,2.1],[-56.5,-1.5,1.7],[-56,-1.5,1],[-55.5,-1.5,3],[-55,-1.5,2.3],[-54.5,-1.5,2.9],[-54,-1.5,2.9],[-53.5,-1.5,1.8],[-53,-1.5,1.2],[-52.5,-1.5,1.5],[-52,-1.5,2.5],[-51.5,-1.5,2.7],[-51,-1.5,6.4],[-50.5,-1.5,10],[-50,-1.5,9.1],[-49.5,-1.5,20.4],[-49,-1.5,47],[-48.5,-1.5,17.4],[-48,-1.5,22.2],[-47.5,-1.5,26.1],[-47,-1.5,9.4],[-46.5,-1.5,8.6],[-46,-1.5,13.8],[-45.5,-1.5,14.7],[-45,-1.5,23.2],[-44.5,-1.5,38.6],[10,-1.5,1.1],[10.5,-1.5,2.6],[11,-1.5,4.4],[11.5,-1.5,2.2],[12,-1.5,3],[12.5,-1.5,3.4],[13,-1.5,8.3],[13.5,-1.5,6.1],[14,-1.5,1.4],[14.5,-1.5,2],[15,-1.5,4.2],[15.5,-1.5,5.7],[16,-1.5,6.2],[16.5,-1.5,10.5],[17,-1.5,11],[17.5,-1.5,11.1],[18,-1.5,11.2],[18.5,-1.5,11.3],[19,-1.5,11.1],[19.5,-1.5,5.8],[20,-1.5,2.1],[20.5,-1.5,2.1],[21,-1.5,2.1],[21.5,-1.5,2.1],[22,-1.5,8.6],[22.5,-1.5,8.7],[23,-1.5,8.9],[23.5,-1.5,8.1],[24,-1.5,6.7],[24.5,-1.5,5.5],[25,-1.5,4.8],[25.5,-1.5,6.9],[26,-1.5,7],[26.5,-1.5,6.1],[27,-1.5,6.1],[27.5,-1.5,8.8],[28,-1.5,18.7],[28.5,-1.5,148.7],[29,-1.5,402.9],[29.5,-1.5,454.9],[30,-1.5,357.5],[30.5,-1.5,66.5],[31,-1.5,84.8],[31.5,-1.5,144],[32.5,-1.5,165.4],[33,-1.5,139.3],[33.5,-1.5,128],[34,-1.5,70],[34.5,-1.5,27.1],[35,-1.5,12.5],[35.5,-1.5,13.4],[36,-1.5,7.9],[36.5,-1.5,23.7],[37,-1.5,156.3],[37.5,-1.5,100.1],[38,-1.5,43.5],[38.5,-1.5,1.9],[39,-1.5,1.6],[39.5,-1.5,1.5],[40,-1.5,15],[40.5,-1.5,4.6],[41,-1.5,2],[41.5,-1.5,15.3],[98.5,-1.5,3.2],[99,-1.5,14.1],[100.5,-1.5,99.6],[101,-1.5,65.4],[101.5,-1.5,13.4],[102,-1.5,53.8],[102.5,-1.5,28.7],[103,-1.5,56.9],[103.5,-1.5,199.8],[104,-1.5,4.1],[104.5,-1.5,1.3],[105,-1.5,28.3],[105.5,-1.5,46.6],[106,-1.5,154],[108.5,-1.5,11],[109,-1.5,11],[109.5,-1.5,412.7],[110,-1.5,27.7],[110.5,-1.5,16],[111,-1.5,7.7],[111.5,-1.5,3.9],[112,-1.5,7.4],[112.5,-1.5,10.5],[113,-1.5,13.7],[113.5,-1.5,32.8],[114,-1.5,5.5],[114.5,-1.5,22.6],[115,-1.5,20],[115.5,-1.5,18.7],[116,-1.5,38.7],[116.5,-1.5,37],[119,-1.5,36],[119.5,-1.5,11.8],[120,-1.5,9.8],[120.5,-1.5,16.1],[121,-1.5,7.9],[121.5,-1.5,8.2],[122,-1.5,47.6],[122.5,-1.5,49],[123,-1.5,69.8],[123.5,-1.5,73],[124,-1.5,24.5],[124.5,-1.5,11.1],[125,-1.5,28.4],[125.5,-1.5,23],[126,-1.5,20.8],[127,-1.5,3.8],[127.5,-1.5,9.5],[128,-1.5,9.6],[129.5,-1.5,2.7],[130,-1.5,2.3],[130.5,-1.5,2.8],[131,-1.5,11.8],[131.5,-1.5,2.5],[132,-1.5,4],[132.5,-1.5,1.7],[133,-1.5,1.3],[133.5,-1.5,4.5],[134,-1.5,7.8],[134.5,-1.5,4.7],[135,-1.5,10.6],[135.5,-1.5,23.6],[136,-1.5,27.9],[136.5,-1.5,21.2],[137,-1.5,1.7],[138,-1.5,1.9],[138.5,-1.5,5.6],[139,-1.5,1.4],[142.5,-1.5,19.8],[144,-1.5,19.8],[145,-1.5,19.8],[146.5,-1.5,19.8],[147,-1.5,19.8],[149.5,-1.5,11.5],[150,-1.5,11.5],[175,-1.5,135.3],[175.5,-1.5,99.3],[-81.5,-2,1050.8],[-81,-2,113],[-80.5,-2,507.1],[-80,-2,271.6],[-79.5,-2,64],[-79,-2,32],[-78.5,-2,9.5],[-78,-2,5.8],[-77.5,-2,1],[-67.5,-2,1.3],[-67,-2,1.6],[-66.5,-2,2.3],[-66,-2,1.7],[-65.5,-2,1.1],[-61,-2,50.2],[-60.5,-2,111.4],[-60,-2,2.3],[-59,-2,1.1],[-57.5,-2,1.9],[-57,-2,6],[-56.5,-2,5],[-56,-2,4.9],[-55.5,-2,5.6],[-55,-2,15.6],[-54.5,-2,6.4],[-54,-2,2.6],[-53.5,-2,2.1],[-53,-2,1.5],[-52,-2,1.4],[-51.5,-2,1.5],[-51,-2,1.6],[-50.5,-2,3.7],[-50,-2,22.3],[-49.5,-2,25.5],[-49,-2,12.4],[-48.5,-2,10],[-48,-2,11.7],[-47.5,-2,16.3],[-47,-2,7.4],[-46.5,-2,5.9],[-46,-2,15.5],[-45.5,-2,23],[-45,-2,21.9],[-44.5,-2,161.3],[-44,-2,11.8],[-43.5,-2,7.1],[-43,-2,12.7],[9.5,-2,1.3],[10,-2,1.7],[10.5,-2,2.6],[11,-2,3.8],[11.5,-2,5.8],[12,-2,2.8],[12.5,-2,3.8],[13,-2,1.6],[13.5,-2,3.7],[14,-2,3.7],[14.5,-2,2.9],[15,-2,2.1],[15.5,-2,4.4],[16,-2,16.7],[16.5,-2,12.4],[17,-2,7.9],[17.5,-2,9.4],[18,-2,12.7],[18.5,-2,11.9],[19,-2,10.3],[19.5,-2,5.6],[20,-2,3.3],[20.5,-2,3],[21,-2,2.1],[21.5,-2,2.4],[22,-2,4.3],[22.5,-2,5],[23,-2,5.2],[23.5,-2,5],[24,-2,5.4],[24.5,-2,9],[25,-2,8.7],[25.5,-2,9.2],[26,-2,9],[26.5,-2,10.3],[27,-2,9.8],[27.5,-2,11.4],[28,-2,62.5],[28.5,-2,166.1],[29,-2,304.1],[29.5,-2,395.1],[30,-2,255.4],[30.5,-2,131.6],[31,-2,80.3],[31.5,-2,106.3],[32,-2,165.4],[32.5,-2,165.4],[33,-2,135.5],[33.5,-2,138.2],[34,-2,54.9],[34.5,-2,15.3],[35,-2,11.9],[35.5,-2,8.5],[36,-2,8.7],[36.5,-2,14.6],[37,-2,14.4],[37.5,-2,44.9],[38,-2,26],[40,-2,18.8],[40.5,-2,26.4],[41,-2,129.5],[99.5,-2,19.7],[100.5,-2,25.4],[101,-2,62.8],[101.5,-2,26.8],[102,-2,50.3],[102.5,-2,37.8],[103,-2,8.9],[103.5,-2,10.8],[104,-2,16.8],[104.5,-2,42.4],[105,-2,46.8],[105.5,-2,51.3],[106,-2,148.7],[110,-2,11.2],[110.5,-2,17.4],[111,-2,13.4],[111.5,-2,15.6],[112,-2,15.1],[112.5,-2,17],[113,-2,9.9],[113.5,-2,21.8],[114,-2,10.3],[114.5,-2,24.6],[115,-2,117.4],[115.5,-2,22.5],[116,-2,13.3],[116.5,-2,12.9],[119,-2,35.5],[119.5,-2,9.1],[120,-2,11.1],[120.5,-2,27.5],[121,-2,13.1],[121.5,-2,24.6],[123,-2,116.7],[123.5,-2,18.8],[124,-2,12.2],[124.5,-2,8.4],[125.5,-2,89.7],[126,-2,35.3],[129.5,-2,2],[130,-2,5],[130.5,-2,1.5],[132,-2,5.8],[132.5,-2,1.1],[133,-2,3.4],[133.5,-2,4.2],[134,-2,2.8],[134.5,-2,4.5],[136,-2,6.7],[136.5,-2,1.8],[137,-2,1.1],[138.5,-2,1.6],[139,-2,1.4],[139.5,-2,7.7],[140,-2,21.3],[140.5,-2,112.6],[146,-2,19.8],[146.5,-2,19.8],[147,-2,19.8],[147.5,-2,19.8],[148,-2,19.8],[149.5,-2,11.5],[150,-2,11.5],[150.5,-2,11.5],[175.5,-2,302.1],[-172,-2.5,3.6],[-81,-2.5,103.5],[-80.5,-2.5,171.1],[-80,-2.5,29.5],[-79.5,-2.5,73.1],[-79,-2.5,136.9],[-78.5,-2.5,7.1],[-78,-2.5,2.4],[-77.5,-2.5,1.1],[-74.5,-2.5,1.1],[-69.5,-2.5,1.7],[-69,-2.5,1.3],[-68.5,-2.5,2],[-68,-2.5,1.7],[-67.5,-2.5,1.3],[-67,-2.5,1.2],[-66.5,-2.5,2],[-65,-2.5,1],[-64.5,-2.5,1.1],[-61.5,-2.5,4],[-61,-2.5,62.8],[-60.5,-2.5,122.3],[-60,-2.5,46.4],[-59.5,-2.5,5.3],[-59,-2.5,3.1],[-58.5,-2.5,2.6],[-58,-2.5,2.4],[-57.5,-2.5,5.6],[-57,-2.5,15.5],[-56.5,-2.5,3.8],[-56,-2.5,1.4],[-55.5,-2.5,2],[-55,-2.5,17],[-54.5,-2.5,15.5],[-54,-2.5,1.3],[-53.5,-2.5,2.2],[-53,-2.5,2.3],[-52.5,-2.5,1.9],[-52,-2.5,1.3],[-51.5,-2.5,1.4],[-51,-2.5,1.5],[-50.5,-2.5,1.7],[-50,-2.5,9.2],[-49.5,-2.5,7.8],[-49,-2.5,7.8],[-48.5,-2.5,8.6],[-48,-2.5,4.6],[-47.5,-2.5,5.8],[-47,-2.5,3.5],[-46.5,-2.5,3.5],[-46,-2.5,9.5],[-45.5,-2.5,29.2],[-45,-2.5,25.1],[-44.5,-2.5,328],[-44,-2.5,12.3],[-43.5,-2.5,8.3],[-43,-2.5,13],[-42.5,-2.5,23.4],[-42,-2.5,90.7],[-41.5,-2.5,27.4],[-41,-2.5,57.9],[-40.5,-2.5,55.5],[-40,-2.5,46.9],[9.5,-2.5,1.6],[10,-2.5,1.7],[10.5,-2.5,2.8],[11,-2.5,1.7],[11.5,-2.5,4.5],[12,-2.5,7],[12.5,-2.5,6.1],[13,-2.5,3.9],[13.5,-2.5,3.1],[14,-2.5,3.5],[14.5,-2.5,1.9],[15,-2.5,1.6],[15.5,-2.5,1.8],[16,-2.5,16.8],[16.5,-2.5,13.5],[17,-2.5,8.8],[17.5,-2.5,19.5],[18,-2.5,19.7],[18.5,-2.5,20.7],[19,-2.5,4.7],[19.5,-2.5,3.4],[20,-2.5,3.4],[20.5,-2.5,3.4],[21,-2.5,3.4],[21.5,-2.5,3.5],[22,-2.5,5.7],[22.5,-2.5,5],[23,-2.5,13.5],[23.5,-2.5,9.6],[24,-2.5,10.9],[24.5,-2.5,11.6],[25,-2.5,9.6],[25.5,-2.5,9.2],[26,-2.5,15.3],[26.5,-2.5,18.5],[27,-2.5,11.6],[27.5,-2.5,11.9],[28,-2.5,56.9],[28.5,-2.5,327.1],[29,-2.5,231.1],[29.5,-2.5,438.8],[30,-2.5,290.3],[30.5,-2.5,68.5],[31,-2.5,43.4],[31.5,-2.5,68.6],[32,-2.5,165.4],[32.5,-2.5,165.4],[33,-2.5,165.3],[33.5,-2.5,82.5],[34,-2.5,57.6],[34.5,-2.5,53.8],[35,-2.5,24.7],[35.5,-2.5,8.5],[36,-2.5,11.7],[36.5,-2.5,17.9],[37,-2.5,45],[37.5,-2.5,24.9],[38,-2.5,22.2],[39.5,-2.5,4.9],[40,-2.5,29.7],[40.5,-2.5,22],[99.5,-2.5,16.6],[100,-2.5,17],[101,-2.5,60.2],[101.5,-2.5,6.4],[102,-2.5,7.5],[102.5,-2.5,50.1],[103,-2.5,44.9],[103.5,-2.5,60.1],[104,-2.5,81.2],[104.5,-2.5,344.4],[105,-2.5,34.3],[105.5,-2.5,8],[106,-2.5,33.4],[106.5,-2.5,19.3],[107,-2.5,47.6],[107.5,-2.5,53.1],[108,-2.5,71.3],[110,-2.5,3.9],[110.5,-2.5,3.8],[111,-2.5,9.4],[111.5,-2.5,35],[112,-2.5,6.8],[112.5,-2.5,44.6],[113,-2.5,15.3],[113.5,-2.5,4.8],[114,-2.5,63.6],[114.5,-2.5,39.3],[115,-2.5,160.1],[115.5,-2.5,11],[116,-2.5,21.1],[116.5,-2.5,20.4],[118.5,-2.5,83.9],[119,-2.5,36.3],[119.5,-2.5,53.9],[120,-2.5,117],[120.5,-2.5,120.7],[121,-2.5,22.4],[121.5,-2.5,8.4],[122,-2.5,12.7],[127.5,-2.5,74.1],[128,-2.5,27.1],[128.5,-2.5,6.8],[129,-2.5,19],[129.5,-2.5,12.1],[130,-2.5,3.9],[131.5,-2.5,32.6],[132,-2.5,24.4],[132.5,-2.5,2.4],[133,-2.5,3],[134,-2.5,1.6],[134.5,-2.5,5.7],[135.5,-2.5,17.4],[136,-2.5,2.5],[136.5,-2.5,1.2],[138,-2.5,1.1],[138.5,-2.5,1.6],[140,-2.5,20.6],[140.5,-2.5,73.4],[141,-2.5,4.9],[141.5,-2.5,4.9],[142,-2.5,4.9],[147,-2.5,19.8],[149.5,-2.5,11.5],[150,-2.5,11.5],[150.5,-2.5,11.5],[151,-2.5,11.5],[151.5,-2.5,11.5],[152,-2.5,11.5],[152.5,-2.5,11.5],[175.5,-2.5,302.1],[176.5,-2.5,120.4],[-80.5,-3,155.3],[-80,-3,135.7],[-79.5,-3,25.9],[-79,-3,17.3],[-78.5,-3,3],[-74,-3,5.8],[-73.5,-3,4.3],[-73,-3,2.2],[-72.5,-3,1.5],[-72,-3,1.2],[-71.5,-3,1.1],[-70.5,-3,1.9],[-70,-3,2.8],[-69.5,-3,2],[-69,-3,1.5],[-68.5,-3,1.7],[-65.5,-3,1.2],[-65,-3,1.9],[-64.5,-3,1.1],[-62.5,-3,1.3],[-62,-3,1.4],[-61.5,-3,5.1],[-61,-3,12.2],[-60.5,-3,35],[-60,-3,31.5],[-59.5,-3,14.2],[-59,-3,7.2],[-58.5,-3,8.1],[-58,-3,6.8],[-57.5,-3,2.9],[-57,-3,7.3],[-56.5,-3,1.5],[-55.5,-3,1.9],[-55,-3,13.9],[-54.5,-3,13.1],[-54,-3,3.8],[-53.5,-3,2],[-53,-3,3.4],[-52.5,-3,1.4],[-52,-3,2.3],[-51.5,-3,1.4],[-51,-3,1.7],[-50.5,-3,1.8],[-50,-3,3.2],[-49.5,-3,3.4],[-49,-3,6.6],[-48.5,-3,5.2],[-48,-3,4],[-47.5,-3,3.9],[-47,-3,2.6],[-46.5,-3,11.1],[-46,-3,13.9],[-45.5,-3,29],[-45,-3,27.6],[-44.5,-3,31],[-44,-3,13.9],[-43.5,-3,13.9],[-43,-3,13.2],[-42.5,-3,21.2],[-42,-3,31.4],[-41.5,-3,21],[-41,-3,21.9],[-40.5,-3,35.2],[-40,-3,40.2],[-39.5,-3,59],[-39,-3,116.7],[10,-3,1.4],[10.5,-3,1.7],[11,-3,2.5],[11.5,-3,2.3],[12,-3,6.3],[12.5,-3,6.7],[13,-3,5.1],[13.5,-3,4.1],[14,-3,4.5],[14.5,-3,2.5],[15,-3,2.3],[15.5,-3,2],[16,-3,6.8],[16.5,-3,6.7],[17,-3,34.3],[17.5,-3,27.3],[18,-3,21.1],[18.5,-3,18.2],[19,-3,3.4],[19.5,-3,3.4],[20,-3,3.4],[20.5,-3,3.4],[21,-3,3.4],[21.5,-3,3.5],[22,-3,6.8],[22.5,-3,7.5],[23,-3,34.6],[23.5,-3,28.2],[24,-3,11.6],[24.5,-3,10.5],[25,-3,6.4],[25.5,-3,6.9],[26,-3,19.1],[26.5,-3,19.9],[27,-3,13.3],[27.5,-3,21.4],[28,-3,33.5],[28.5,-3,118.4],[29,-3,371.3],[29.5,-3,335.8],[30,-3,182.3],[30.5,-3,68],[31,-3,42.7],[31.5,-3,49],[32,-3,97.9],[32.5,-3,125.6],[33,-3,127.9],[33.5,-3,72.1],[34,-3,49.2],[34.5,-3,30.3],[35,-3,15.4],[35.5,-3,26.2],[36,-3,16.2],[36.5,-3,215.5],[37,-3,182.1],[37.5,-3,112.7],[38,-3,37.5],[38.5,-3,12.1],[39,-3,2.8],[39.5,-3,50.1],[40,-3,301.6],[100,-3,9.3],[100.5,-3,5.5],[101,-3,92.6],[101.5,-3,51.2],[102,-3,73.5],[102.5,-3,156.6],[103,-3,39.5],[103.5,-3,59.8],[104,-3,109.4],[104.5,-3,426.8],[105,-3,24.2],[105.5,-3,9],[106,-3,26.3],[106.5,-3,66.3],[107,-3,58.6],[107.5,-3,24.2],[108,-3,33.4],[110.5,-3,2.6],[111,-3,2.3],[111.5,-3,1.3],[112,-3,5.5],[112.5,-3,13.5],[113,-3,17.1],[113.5,-3,5.1],[114,-3,51.5],[114.5,-3,371.9],[115,-3,45.9],[115.5,-3,23.9],[116,-3,100.4],[118.5,-3,90.4],[119,-3,122.9],[119.5,-3,122.8],[120,-3,121.8],[120.5,-3,73.9],[121,-3,16.5],[121.5,-3,1.3],[122,-3,12.7],[122.5,-3,95.8],[123,-3,146.1],[125.5,-3,31.9],[126,-3,6.4],[126.5,-3,17.9],[127,-3,32.1],[127.5,-3,58.9],[128,-3,39.4],[128.5,-3,29.5],[129,-3,18.4],[129.5,-3,17],[130,-3,4.5],[130.5,-3,4.5],[132,-3,15.9],[132.5,-3,1.4],[133,-3,1.3],[133.5,-3,2.1],[135,-3,11.9],[135.5,-3,12.6],[136,-3,2],[136.5,-3,3.9],[137,-3,3.9],[137.5,-3,4.3],[138,-3,10],[138.5,-3,5.4],[140,-3,4.4],[140.5,-3,2.2],[141,-3,4.9],[141.5,-3,4.9],[142,-3,4.9],[142.5,-3,5.2],[143,-3,7.1],[143.5,-3,7.6],[144,-3,7.6],[144.5,-3,7.6],[150.5,-3,11.5],[151,-3,11.5],[151.5,-3,11.5],[152,-3,11.5],[152.5,-3,11.5],[153,-3,11.5],[154,-3,22.6],[154.5,-3,22.6],[-81,-3.5,23.7],[-80.5,-3.5,50.9],[-80,-3.5,35.3],[-79.5,-3.5,49.1],[-79,-3.5,12.6],[-78.5,-3.5,2],[-74,-3.5,15.5],[-73.5,-3.5,47.7],[-73,-3.5,3.9],[-72.5,-3.5,1.7],[-72,-3.5,1.3],[-71.5,-3.5,1.8],[-71,-3.5,1.9],[-70.5,-3.5,5.1],[-70,-3.5,7.8],[-69.5,-3.5,2.9],[-66,-3.5,1.4],[-65.5,-3.5,2.1],[-65,-3.5,2.7],[-64.5,-3.5,2],[-64,-3.5,1.1],[-63.5,-3.5,1.1],[-62.5,-3.5,2.8],[-62,-3.5,2.5],[-61.5,-3.5,4.2],[-61,-3.5,5.5],[-60.5,-3.5,4.3],[-60,-3.5,3.6],[-59.5,-3.5,3],[-59,-3.5,5.2],[-58.5,-3.5,2.3],[-58,-3.5,3.2],[-57.5,-3.5,2.2],[-55.5,-3.5,2.6],[-55,-3.5,2.7],[-54.5,-3.5,2.7],[-54,-3.5,4.2],[-53.5,-3.5,2.6],[-53,-3.5,2.1],[-52,-3.5,1.1],[-51.5,-3.5,1.5],[-51,-3.5,2.5],[-50.5,-3.5,3.8],[-50,-3.5,24.7],[-49.5,-3.5,6.7],[-49,-3.5,3.6],[-48.5,-3.5,4.9],[-48,-3.5,3.9],[-47.5,-3.5,4.1],[-47,-3.5,4.3],[-46.5,-3.5,9.5],[-46,-3.5,17.6],[-45.5,-3.5,46.3],[-45,-3.5,28.5],[-44.5,-3.5,22.8],[-44,-3.5,18.1],[-43.5,-3.5,18.5],[-43,-3.5,23.5],[-42.5,-3.5,27.2],[-42,-3.5,12.8],[-41.5,-3.5,24.5],[-41,-3.5,54.3],[-40.5,-3.5,67],[-40,-3.5,36.8],[-39.5,-3.5,38.3],[-39,-3.5,904],[-38.5,-3.5,1287.7],[-32.5,-3.5,122.1],[10.5,-3.5,1.6],[11,-3.5,2.7],[11.5,-3.5,3.9],[12,-3.5,14.2],[12.5,-3.5,14.2],[13,-3.5,6.7],[13.5,-3.5,13.2],[14,-3.5,12.2],[14.5,-3.5,3.1],[15,-3.5,113.9],[15.5,-3.5,120.1],[16,-3.5,6.4],[16.5,-3.5,6.6],[17,-3.5,13.7],[17.5,-3.5,20],[18,-3.5,22],[18.5,-3.5,25.7],[19,-3.5,16.5],[19.5,-3.5,3.8],[20,-3.5,3.4],[20.5,-3.5,3.4],[21,-3.5,3.9],[21.5,-3.5,4],[22,-3.5,7.2],[22.5,-3.5,7.8],[23,-3.5,31.7],[23.5,-3.5,32.6],[24,-3.5,11.6],[24.5,-3.5,8.4],[25,-3.5,3.6],[25.5,-3.5,3.6],[26,-3.5,20.3],[26.5,-3.5,22.1],[27,-3.5,12.4],[27.5,-3.5,13.3],[28,-3.5,31.4],[28.5,-3.5,52.4],[29,-3.5,165.9],[29.5,-3.5,200.7],[30,-3.5,119.2],[30.5,-3.5,26.7],[31,-3.5,38.2],[31.5,-3.5,48.8],[32,-3.5,48.8],[32.5,-3.5,53.9],[33,-3.5,67.5],[33.5,-3.5,67.1],[34,-3.5,52.5],[34.5,-3.5,41],[35,-3.5,59.2],[35.5,-3.5,57.7],[36,-3.5,18.2],[36.5,-3.5,33.1],[37,-3.5,46.6],[37.5,-3.5,67.7],[38,-3.5,11.4],[38.5,-3.5,9.6],[39,-3.5,41.8],[39.5,-3.5,275.1],[101.5,-3.5,77],[102,-3.5,253.6],[102.5,-3.5,89.1],[103,-3.5,80.6],[103.5,-3.5,109],[104,-3.5,58.5],[104.5,-3.5,123.1],[105,-3.5,37.3],[105.5,-3.5,15.1],[112.5,-3.5,25.5],[114,-3.5,34.4],[114.5,-3.5,87.6],[115,-3.5,23.4],[115.5,-3.5,44.3],[116,-3.5,18.1],[118.5,-3.5,915.6],[119,-3.5,323],[119.5,-3.5,195.4],[120,-3.5,78.2],[120.5,-3.5,47.5],[121,-3.5,22],[121.5,-3.5,26.9],[122,-3.5,59.9],[122.5,-3.5,755.6],[123,-3.5,8.2],[126,-3.5,6],[126.5,-3.5,8.8],[127,-3.5,23.7],[127.5,-3.5,145.7],[128,-3.5,390.9],[128.5,-3.5,125.3],[130,-3.5,3.9],[130.5,-3.5,18.7],[131,-3.5,83],[132.5,-3.5,1.5],[133.5,-3.5,13.5],[135,-3.5,3.6],[135.5,-3.5,11.9],[136,-3.5,14.5],[136.5,-3.5,10.3],[137,-3.5,4.4],[137.5,-3.5,11.1],[138,-3.5,11.4],[138.5,-3.5,27.9],[139,-3.5,13.1],[139.5,-3.5,6.3],[140,-3.5,2.5],[140.5,-3.5,2],[141,-3.5,4.9],[141.5,-3.5,4.9],[142,-3.5,4.9],[142.5,-3.5,7.1],[143,-3.5,7.5],[143.5,-3.5,7.6],[144,-3.5,7.6],[144.5,-3.5,7.9],[152,-3.5,11.5],[152.5,-3.5,11.5],[153,-3.5,11.5],[153.5,-3.5,11.5],[-81.5,-4,40.2],[-81,-4,18.2],[-80.5,-4,13.7],[-80,-4,26.3],[-79.5,-4,40.3],[-79,-4,4.9],[-78.5,-4,1.7],[-78,-4,1.6],[-76.5,-4,1.6],[-75,-4,2.1],[-74.5,-4,8.2],[-74,-4,48.3],[-73.5,-4,16.4],[-73,-4,3.9],[-70.5,-4,1.1],[-70,-4,7.8],[-69.5,-4,1.8],[-66,-4,2.2],[-65.5,-4,2.7],[-65,-4,1.7],[-64.5,-4,1.2],[-64,-4,1.2],[-63.5,-4,1.2],[-63,-4,1.3],[-62.5,-4,2],[-62,-4,1.3],[-61,-4,1.7],[-60.5,-4,2.3],[-60,-4,1.6],[-59,-4,1.9],[-58.5,-4,2.1],[-57,-4,1.3],[-56.5,-4,1.4],[-56,-4,2.3],[-55.5,-4,3.4],[-55,-4,2.2],[-54.5,-4,1.4],[-54,-4,1.5],[-51.5,-4,1.1],[-51,-4,2.7],[-50.5,-4,4.4],[-50,-4,6.8],[-49.5,-4,7],[-49,-4,4.2],[-48.5,-4,5.7],[-48,-4,7],[-47.5,-4,7.4],[-47,-4,5.8],[-46.5,-4,14.7],[-46,-4,12.6],[-45.5,-4,24],[-45,-4,41.6],[-44.5,-4,28.7],[-44,-4,20],[-43.5,-4,23.2],[-43,-4,24],[-42.5,-4,19],[-42,-4,27.2],[-41.5,-4,13],[-41,-4,59.6],[-40.5,-4,19.7],[-40,-4,8.1],[-39.5,-4,29.9],[-39,-4,80.8],[-38.5,-4,68.2],[-38,-4,41.1],[11,-4,3.9],[11.5,-4,45.2],[12,-4,20.1],[12.5,-4,18.9],[13,-4,27.3],[13.5,-4,27],[14,-4,20.9],[14.5,-4,23.6],[15,-4,1505.6],[15.5,-4,246.8],[16,-4,19.4],[16.5,-4,18.2],[17,-4,20.2],[17.5,-4,25.9],[18,-4,65.2],[18.5,-4,72.5],[19,-4,47.8],[19.5,-4,34.7],[20,-4,10.1],[20.5,-4,12.8],[21,-4,15.9],[21.5,-4,16],[22,-4,15.4],[22.5,-4,10.3],[23,-4,13.4],[23.5,-4,14],[24,-4,10.5],[24.5,-4,11],[25,-4,3.7],[25.5,-4,3.6],[26,-4,20.8],[26.5,-4,23.3],[27,-4,9.7],[27.5,-4,10.5],[28,-4,18.4],[28.5,-4,30.6],[29,-4,40.1],[29.5,-4,154],[30,-4,80.4],[30.5,-4,38.7],[31,-4,29.5],[31.5,-4,29.9],[32,-4,38],[32.5,-4,52.1],[33,-4,56],[33.5,-4,48.4],[34,-4,50.6],[34.5,-4,48.5],[35,-4,56.6],[35.5,-4,55.1],[36,-4,30.7],[36.5,-4,8.7],[37,-4,8.7],[37.5,-4,34.3],[38,-4,55.5],[38.5,-4,44],[39,-4,72.9],[39.5,-4,1269.7],[55.5,-4,237.1],[102,-4,104.7],[102.5,-4,85.5],[103,-4,73.6],[103.5,-4,61.1],[104,-4,149.4],[104.5,-4,135.4],[105,-4,102.2],[105.5,-4,90.9],[114.5,-4,18.9],[115,-4,10],[115.5,-4,94.3],[116,-4,161.7],[119,-4,341.6],[119.5,-4,191.6],[120,-4,202.7],[121,-4,29.3],[121.5,-4,57.9],[122,-4,65.2],[122.5,-4,64.7],[123,-4,35.3],[127,-4,34.8],[129.5,-4,146.4],[131,-4,95.9],[131.5,-4,83.9],[133,-4,8.2],[134.5,-4,2.9],[135,-4,1.4],[135.5,-4,2.9],[136,-4,7.3],[136.5,-4,11.7],[137,-4,1.7],[137.5,-4,2.5],[138,-4,4.4],[138.5,-4,13.6],[139,-4,12.4],[139.5,-4,19],[140,-4,7.7],[140.5,-4,3.4],[141,-4,5.3],[141.5,-4,7.3],[142,-4,7.3],[142.5,-4,7.6],[143,-4,7.6],[143.5,-4,7.6],[144,-4,7.6],[144.5,-4,10.5],[145,-4,11.4],[151,-4,15.9],[151.5,-4,15.9],[152,-4,15.9],[152.5,-4,11.5],[153,-4,11.5],[153.5,-4,11.5],[154,-4,22.6],[-81.5,-4.5,49.8],[-81,-4.5,85.3],[-80.5,-4.5,56.4],[-80,-4.5,24.6],[-79.5,-4.5,10.3],[-79,-4.5,17.8],[-78.5,-4.5,4],[-78,-4.5,3.1],[-77.5,-4.5,1.7],[-77,-4.5,1.3],[-76.5,-4.5,1.2],[-76,-4.5,1.3],[-74.5,-4.5,2.1],[-74,-4.5,4.3],[-73.5,-4.5,2.3],[-70.5,-4.5,1],[-70,-4.5,1.4],[-66.5,-4.5,2.1],[-66,-4.5,2.6],[-65.5,-4.5,1.5],[-65,-4.5,1.2],[-64.5,-4.5,1.2],[-64,-4.5,1.2],[-57.5,-4.5,1.4],[-57,-4.5,1.5],[-56.5,-4.5,1.3],[-56,-4.5,1.3],[-55.5,-4.5,1.3],[-52,-4.5,1.1],[-51,-4.5,2.6],[-50.5,-4.5,3.9],[-50,-4.5,4.7],[-49.5,-4.5,17.2],[-49,-4.5,5.1],[-48.5,-4.5,5.8],[-48,-4.5,11.1],[-47.5,-4.5,13.7],[-47,-4.5,7],[-46.5,-4.5,12.9],[-46,-4.5,10.8],[-45.5,-4.5,21.6],[-45,-4.5,41.9],[-44.5,-4.5,21.6],[-44,-4.5,25.5],[-43.5,-4.5,23.8],[-43,-4.5,88.4],[-42.5,-4.5,21.2],[-42,-4.5,10.6],[-41.5,-4.5,7.9],[-41,-4.5,27.7],[-40.5,-4.5,15],[-40,-4.5,13.4],[-39.5,-4.5,21.6],[-39,-4.5,25.4],[-38.5,-4.5,21.1],[-38,-4.5,47],[-37.5,-4.5,49],[-37,-4.5,55.9],[11.5,-4.5,211.7],[12,-4.5,90.1],[12.5,-4.5,46.8],[13,-4.5,54.7],[13.5,-4.5,27.4],[14,-4.5,34.4],[14.5,-4.5,33.4],[15,-4.5,41.3],[15.5,-4.5,29.3],[16,-4.5,21.3],[16.5,-4.5,21.8],[17,-4.5,21.8],[17.5,-4.5,41.5],[18,-4.5,62.9],[18.5,-4.5,79.6],[19,-4.5,54],[19.5,-4.5,38.6],[20,-4.5,20.4],[20.5,-4.5,16.7],[21,-4.5,16.3],[21.5,-4.5,16.3],[22,-4.5,22.3],[22.5,-4.5,17],[23,-4.5,9.8],[23.5,-4.5,8.7],[24,-4.5,9.8],[24.5,-4.5,9.1],[25,-4.5,3.7],[25.5,-4.5,8.8],[26,-4.5,23.2],[26.5,-4.5,21.7],[27,-4.5,8.9],[27.5,-4.5,8.9],[28,-4.5,8.9],[28.5,-4.5,22.4],[29,-4.5,30.9],[29.5,-4.5,54.7],[30,-4.5,62.7],[30.5,-4.5,48.7],[31,-4.5,24.4],[31.5,-4.5,17.1],[32,-4.5,16.8],[32.5,-4.5,30.6],[33,-4.5,35.1],[33.5,-4.5,35.1],[34,-4.5,44.7],[34.5,-4.5,41.2],[35,-4.5,45.3],[35.5,-4.5,36.4],[36,-4.5,24.8],[36.5,-4.5,8.7],[37,-4.5,8.7],[37.5,-4.5,12.4],[38,-4.5,87.6],[38.5,-4.5,81.6],[39,-4.5,85.2],[39.5,-4.5,421.1],[55,-4.5,462.7],[55.5,-4.5,462.7],[102.5,-4.5,74.7],[103,-4.5,41.7],[103.5,-4.5,46.2],[104,-4.5,78.4],[104.5,-4.5,205.8],[105,-4.5,238.5],[105.5,-4.5,96.2],[119,-4.5,344.4],[119.5,-4.5,155.4],[120,-4.5,168.4],[121,-4.5,42.3],[121.5,-4.5,31.8],[122,-4.5,60.7],[122.5,-4.5,80.8],[123,-4.5,39.3],[129.5,-4.5,86.7],[131.5,-4.5,44.8],[135.5,-4.5,1.3],[136,-4.5,2.3],[136.5,-4.5,8.6],[138,-4.5,1.4],[138.5,-4.5,1.2],[139,-4.5,1.9],[139.5,-4.5,1.8],[140,-4.5,1.6],[140.5,-4.5,4.5],[141,-4.5,5],[141.5,-4.5,5.3],[142,-4.5,5.9],[142.5,-4.5,7.7],[143,-4.5,7.6],[143.5,-4.5,7.6],[144,-4.5,8.6],[144.5,-4.5,11.2],[145,-4.5,11.4],[145.5,-4.5,11.4],[146,-4.5,11.4],[149,-4.5,7.9],[149.5,-4.5,7.9],[150,-4.5,7.9],[151,-4.5,8],[151.5,-4.5,15.5],[152,-4.5,15.9],[152.5,-4.5,11.5],[153,-4.5,11.5],[154,-4.5,22.6],[155,-4.5,22.6],[157,-4.5,22.6],[159,-4.5,22.6],[-81.5,-5,68],[-81,-5,121.9],[-80.5,-5,56.7],[-80,-5,44.3],[-79.5,-5,29.7],[-79,-5,29.5],[-78.5,-5,8.6],[-78,-5,4.5],[-77.5,-5,1.4],[-77,-5,1.4],[-76,-5,1.7],[-74.5,-5,3.1],[-74,-5,5.9],[-70.5,-5,1.2],[-67,-5,2.1],[-66.5,-5,2.2],[-66,-5,1.8],[-65.5,-5,1.2],[-65,-5,1.2],[-64.5,-5,1.1],[-57.5,-5,1.5],[-57,-5,1.5],[-56.5,-5,1.2],[-56,-5,1.2],[-51,-5,5.3],[-50.5,-5,8],[-50,-5,7.3],[-49.5,-5,9.6],[-49,-5,8.5],[-48.5,-5,13.5],[-48,-5,61.8],[-47.5,-5,33.8],[-47,-5,7.4],[-46.5,-5,6.5],[-46,-5,8.1],[-45.5,-5,12.3],[-45,-5,17.5],[-44.5,-5,28.4],[-44,-5,14.1],[-43.5,-5,22.5],[-43,-5,189.2],[-42.5,-5,13.7],[-42,-5,8.3],[-41.5,-5,4.1],[-41,-5,24.5],[-40.5,-5,9.3],[-40,-5,22.1],[-39.5,-5,21.3],[-39,-5,13.3],[-38.5,-5,34.1],[-38,-5,27.2],[-37.5,-5,68.1],[-37,-5,24.9],[-36.5,-5,17.1],[-36,-5,25.8],[-35.5,-5,49.2],[11.5,-5,211.7],[12,-5,29.9],[12.5,-5,90],[13,-5,85.6],[13.5,-5,39.9],[14,-5,41.8],[14.5,-5,70.7],[15,-5,50.1],[15.5,-5,38.5],[16,-5,23.7],[16.5,-5,22.1],[17,-5,22],[17.5,-5,45],[18,-5,47.8],[18.5,-5,61.2],[19,-5,40.7],[19.5,-5,38.3],[20,-5,22.8],[20.5,-5,16.8],[21,-5,19],[21.5,-5,24.5],[22,-5,31.1],[22.5,-5,21.4],[23,-5,13.9],[23.5,-5,9.7],[24,-5,10.1],[24.5,-5,11.6],[25,-5,10.6],[25.5,-5,10.6],[26,-5,18.2],[26.5,-5,21.9],[27,-5,21.9],[27.5,-5,13],[28,-5,8.5],[28.5,-5,14.2],[29,-5,14.5],[29.5,-5,46.4],[30,-5,29.5],[30.5,-5,35.8],[31,-5,27.8],[31.5,-5,17.1],[32,-5,16.9],[32.5,-5,15],[33,-5,15],[33.5,-5,15.9],[34,-5,34.2],[34.5,-5,40.6],[35,-5,36.1],[35.5,-5,34.5],[36,-5,22.6],[36.5,-5,8.7],[37,-5,12.8],[37.5,-5,28.7],[38,-5,39.3],[38.5,-5,57.1],[39,-5,586.7],[39.5,-5,374.9],[103.5,-5,107.2],[104,-5,83],[104.5,-5,265.5],[105,-5,664.1],[105.5,-5,296],[106,-5,531.5],[106.5,-5,531.5],[119,-5,2339.5],[119.5,-5,172.6],[120,-5,256.7],[121.5,-5,30.8],[122,-5,85],[122.5,-5,87.4],[123,-5,65],[123.5,-5,197.9],[124,-5,23.8],[131.5,-5,92.3],[132,-5,98.3],[132.5,-5,66.9],[133,-5,59.9],[134,-5,22.8],[134.5,-5,13.7],[138,-5,3.1],[138.5,-5,1.1],[139.5,-5,1],[140,-5,1.4],[140.5,-5,2.1],[141,-5,1.8],[141.5,-5,2.8],[142,-5,9.3],[142.5,-5,19.5],[143,-5,21.4],[143.5,-5,22.3],[144,-5,27.8],[144.5,-5,16.4],[145,-5,11.4],[145.5,-5,11.4],[146,-5,11.4],[146.5,-5,11.4],[147,-5,11.4],[147.5,-5,14.8],[148,-5,10.4],[148.5,-5,7.9],[149,-5,7.9],[149.5,-5,7.9],[150,-5,7.9],[150.5,-5,7.9],[151,-5,12.1],[151.5,-5,15.9],[152,-5,15.9],[154.5,-5,22.6],[159,-5,5.1],[159.5,-5,5.1],[-81,-5.5,1.3],[-80.5,-5.5,11.4],[-80,-5.5,13.6],[-79.5,-5.5,20],[-79,-5.5,56.5],[-78.5,-5.5,35.9],[-78,-5.5,10],[-77.5,-5.5,24.1],[-77,-5.5,6.9],[-76.5,-5.5,13.8],[-76,-5.5,8.3],[-75,-5.5,1.5],[-74.5,-5.5,1.7],[-74,-5.5,1.1],[-70.5,-5.5,1.6],[-57.5,-5.5,1.1],[-57,-5.5,1.5],[-56.5,-5.5,1.4],[-56,-5.5,1.5],[-55.5,-5.5,1.2],[-51.5,-5.5,1.9],[-51,-5.5,10.1],[-50.5,-5.5,11],[-50,-5.5,10.8],[-49.5,-5.5,10.8],[-49,-5.5,11.5],[-48.5,-5.5,7.8],[-48,-5.5,15.8],[-47.5,-5.5,19.7],[-47,-5.5,5.3],[-46.5,-5.5,5.9],[-46,-5.5,6.3],[-45.5,-5.5,11.2],[-45,-5.5,9.4],[-44.5,-5.5,20.4],[-44,-5.5,11.8],[-43.5,-5.5,10.2],[-43,-5.5,40],[-42.5,-5.5,8.4],[-42,-5.5,4.3],[-41.5,-5.5,3.7],[-41,-5.5,15.7],[-40.5,-5.5,8.8],[-40,-5.5,22.1],[-39.5,-5.5,21.1],[-39,-5.5,15.9],[-38.5,-5.5,17.5],[-38,-5.5,24],[-37.5,-5.5,14.9],[-37,-5.5,19.8],[-36.5,-5.5,12.5],[-36,-5.5,34],[-35.5,-5.5,552.7],[12,-5.5,30.5],[12.5,-5.5,58.1],[13,-5.5,110.1],[13.5,-5.5,60.5],[14,-5.5,28],[14.5,-5.5,53.2],[15,-5.5,41.5],[15.5,-5.5,31.1],[16,-5.5,22.4],[16.5,-5.5,23.8],[17,-5.5,20.8],[17.5,-5.5,24.2],[18,-5.5,29.7],[18.5,-5.5,29.6],[19,-5.5,30.1],[19.5,-5.5,31.2],[20,-5.5,25.1],[20.5,-5.5,25.3],[21,-5.5,21.2],[21.5,-5.5,24.8],[22,-5.5,101.1],[22.5,-5.5,94.8],[23,-5.5,54.7],[23.5,-5.5,48.6],[24,-5.5,19],[24.5,-5.5,16],[25,-5.5,10.6],[25.5,-5.5,10.6],[26,-5.5,16.2],[26.5,-5.5,18.9],[27,-5.5,13.3],[27.5,-5.5,8.1],[28,-5.5,10.5],[28.5,-5.5,14.4],[29,-5.5,14.5],[29.5,-5.5,47.4],[30,-5.5,19.8],[30.5,-5.5,9.1],[31,-5.5,12.6],[31.5,-5.5,13.1],[32,-5.5,14.9],[32.5,-5.5,15],[33,-5.5,15],[33.5,-5.5,15],[34,-5.5,8.7],[34.5,-5.5,11.3],[35,-5.5,23.3],[35.5,-5.5,46],[36,-5.5,42.1],[36.5,-5.5,17.6],[37,-5.5,21.4],[37.5,-5.5,30.9],[38,-5.5,28],[38.5,-5.5,29.4],[39,-5.5,306.7],[104,-5.5,37.9],[104.5,-5.5,89.7],[105,-5.5,234.8],[105.5,-5.5,313.6],[106,-5.5,766.8],[106.5,-5.5,562.4],[107,-5.5,197.6],[110,-5.5,194.6],[110.5,-5.5,185.7],[114,-5.5,482.5],[114.5,-5.5,312.8],[119,-5.5,344.4],[119.5,-5.5,499.7],[120,-5.5,351.4],[120.5,-5.5,84.9],[121.5,-5.5,43.2],[122,-5.5,388.6],[122.5,-5.5,161.8],[123.5,-5.5,196.1],[124,-5.5,104.8],[131.5,-5.5,66.7],[132,-5.5,82.1],[132.5,-5.5,120.7],[133,-5.5,86.6],[134,-5.5,18.3],[134.5,-5.5,8],[138,-5.5,1.9],[138.5,-5.5,4.4],[139,-5.5,2.6],[139.5,-5.5,2.5],[140,-5.5,2.6],[140.5,-5.5,2.4],[141,-5.5,1.4],[141.5,-5.5,1.4],[142,-5.5,4],[142.5,-5.5,15.7],[143,-5.5,20.2],[143.5,-5.5,24.7],[144,-5.5,46.5],[144.5,-5.5,44.7],[145,-5.5,19.1],[145.5,-5.5,13.1],[146,-5.5,11.4],[146.5,-5.5,13.1],[147,-5.5,14.8],[147.5,-5.5,14.8],[148,-5.5,9.7],[148.5,-5.5,7.9],[149,-5.5,7.9],[149.5,-5.5,7.9],[150,-5.5,7.9],[150.5,-5.5,11.3],[151,-5.5,15.1],[151.5,-5.5,15.9],[154.5,-5.5,22.6],[155,-5.5,22.6],[159.5,-5.5,5.1],[176,-5.5,172.6],[-81,-6,1.4],[-80.5,-6,11.1],[-80,-6,31.1],[-79.5,-6,27],[-79,-6,65.2],[-78.5,-6,24.1],[-78,-6,20.4],[-77.5,-6,26.9],[-77,-6,25],[-76.5,-6,30.4],[-76,-6,5.3],[-75.5,-6,2.4],[-75,-6,2.1],[-56.5,-6,1.5],[-56,-6,1.4],[-51.5,-6,4.8],[-51,-6,9.1],[-50.5,-6,6.9],[-50,-6,7.5],[-49.5,-6,8.1],[-49,-6,7.8],[-48.5,-6,6.7],[-48,-6,10.4],[-47.5,-6,13.1],[-47,-6,5.5],[-46.5,-6,5],[-46,-6,2.8],[-45.5,-6,2.1],[-45,-6,1.8],[-44.5,-6,9.9],[-44,-6,14.6],[-43.5,-6,5.6],[-43,-6,13.7],[-42.5,-6,12.1],[-42,-6,9.1],[-41.5,-6,2.9],[-41,-6,11.7],[-40.5,-6,11.6],[-40,-6,16.2],[-39.5,-6,47],[-39,-6,30.1],[-38.5,-6,46],[-38,-6,40.1],[-37.5,-6,24.4],[-37,-6,27.8],[-36.5,-6,37.2],[-36,-6,45.7],[-35.5,-6,86.4],[-35,-6,30.9],[12,-6,8],[12.5,-6,6.8],[13,-6,6.5],[13.5,-6,6.5],[14,-6,6.5],[14.5,-6,8.8],[15,-6,17],[15.5,-6,17],[16,-6,17],[16.5,-6,18.7],[17,-6,17.6],[17.5,-6,10.1],[18,-6,9.6],[18.5,-6,14.6],[19,-6,19.8],[19.5,-6,30.7],[20,-6,36.8],[20.5,-6,36.8],[21,-6,34],[21.5,-6,31.7],[22,-6,42.5],[22.5,-6,38.4],[23,-6,80.6],[23.5,-6,391.6],[24,-6,27.4],[24.5,-6,20.4],[25,-6,16],[25.5,-6,12.4],[26,-6,11.7],[26.5,-6,11.3],[27,-6,11.3],[27.5,-6,9.8],[28,-6,10.1],[28.5,-6,14.5],[29,-6,14.5],[29.5,-6,47.4],[30,-6,32.8],[30.5,-6,9.1],[31,-6,9.1],[31.5,-6,9.1],[32,-6,10.5],[32.5,-6,14.2],[33,-6,15],[33.5,-6,13.1],[34,-6,7.5],[34.5,-6,7.1],[35,-6,27.2],[35.5,-6,47.5],[36,-6,45.9],[36.5,-6,41.6],[37,-6,36.6],[37.5,-6,38.8],[38,-6,24.4],[38.5,-6,24.2],[39,-6,471.4],[39.5,-6,93.4],[105.5,-6,665.2],[106,-6,1036.9],[106.5,-6,5979.8],[107,-6,1332.2],[107.5,-6,739.2],[108,-6,946.2],[108.5,-6,623.7],[110.5,-6,651.1],[111,-6,826.9],[112.5,-6,338.7],[120,-6,116.6],[120.5,-6,76.7],[121,-6,92.4],[124,-6,172.2],[124.5,-6,114.1],[132,-6,40.8],[132.5,-6,74.3],[134,-6,7.1],[134.5,-6,5],[138,-6,5.6],[138.5,-6,5.6],[139,-6,6],[139.5,-6,2.6],[140,-6,1.1],[140.5,-6,1.9],[141,-6,1.4],[141.5,-6,1.4],[142,-6,1.4],[142.5,-6,11.8],[143,-6,16.1],[143.5,-6,16.1],[144,-6,27.1],[144.5,-6,38.7],[145,-6,34.6],[145.5,-6,34.2],[146,-6,18.7],[146.5,-6,14.8],[147,-6,14.8],[147.5,-6,14.8],[148.5,-6,7.9],[149,-6,7.9],[149.5,-6,7.9],[150,-6,7.9],[150.5,-6,8.8],[151,-6,15.9],[154.5,-6,22.6],[155,-6,22.6],[155.5,-6,22.6],[176,-6,185],[177,-6,210.6],[-80.5,-6.5,52.2],[-80,-6.5,318.8],[-79.5,-6.5,24.3],[-79,-6.5,73],[-78.5,-6.5,45.5],[-78,-6.5,8.4],[-77.5,-6.5,2.8],[-77,-6.5,24.8],[-76.5,-6.5,37.3],[-76,-6.5,4.6],[-75.5,-6.5,3.6],[-75,-6.5,2.3],[-71,-6.5,1.6],[-70.5,-6.5,1.4],[-70,-6.5,1.6],[-57,-6.5,1.2],[-56.5,-6.5,1.3],[-52,-6.5,2.6],[-51.5,-6.5,6.6],[-51,-6.5,2.9],[-50.5,-6.5,3],[-50,-6.5,5],[-49.5,-6.5,6.2],[-49,-6.5,4.4],[-48.5,-6.5,5.7],[-48,-6.5,4.8],[-47.5,-6.5,8],[-47,-6.5,5.2],[-46.5,-6.5,4.6],[-46,-6.5,3.7],[-45.5,-6.5,2.7],[-45,-6.5,3.8],[-44.5,-6.5,6.4],[-44,-6.5,9.8],[-43.5,-6.5,10.4],[-43,-6.5,9.7],[-42.5,-6.5,11],[-42,-6.5,17.2],[-41.5,-6.5,11.1],[-41,-6.5,8.2],[-40.5,-6.5,9.3],[-40,-6.5,22.3],[-39.5,-6.5,33.4],[-39,-6.5,44.6],[-38.5,-6.5,47.6],[-38,-6.5,27],[-37.5,-6.5,30.9],[-37,-6.5,26.6],[-36.5,-6.5,23.5],[-36,-6.5,78.7],[-35.5,-6.5,88.7],[-35,-6.5,73.8],[12,-6.5,6.5],[12.5,-6.5,6.5],[13,-6.5,6.5],[13.5,-6.5,6.8],[14,-6.5,11.3],[14.5,-6.5,15.9],[15,-6.5,17],[15.5,-6.5,17],[16,-6.5,17],[16.5,-6.5,17.1],[17,-6.5,17.2],[17.5,-6.5,16],[18,-6.5,11.7],[18.5,-6.5,8.2],[19,-6.5,7.6],[19.5,-6.5,15.6],[20,-6.5,34.6],[20.5,-6.5,35.5],[21,-6.5,36.8],[21.5,-6.5,32],[22,-6.5,30],[22.5,-6.5,32.2],[23,-6.5,44.6],[23.5,-6.5,73.1],[24,-6.5,78.3],[24.5,-6.5,42.4],[25,-6.5,16.6],[25.5,-6.5,14.3],[26,-6.5,10.3],[26.5,-6.5,8.6],[27,-6.5,9.1],[27.5,-6.5,8.9],[28,-6.5,8.3],[28.5,-6.5,12.9],[29,-6.5,15.2],[29.5,-6.5,15.8],[30,-6.5,11.1],[30.5,-6.5,10.8],[31,-6.5,9.1],[31.5,-6.5,9.1],[32,-6.5,9.1],[32.5,-6.5,12.2],[33,-6.5,13.5],[33.5,-6.5,7.4],[34,-6.5,7.1],[34.5,-6.5,8.7],[35,-6.5,35.2],[35.5,-6.5,47.3],[36,-6.5,44.9],[36.5,-6.5,38.8],[37,-6.5,37.1],[37.5,-6.5,40.4],[38,-6.5,41.9],[38.5,-6.5,43.3],[39,-6.5,1139.3],[39.5,-6.5,1767.2],[105.5,-6.5,213.4],[106,-6.5,265.8],[106.5,-6.5,1405.7],[107,-6.5,892.9],[107.5,-6.5,1757.7],[108,-6.5,877.3],[108.5,-6.5,1759.4],[109,-6.5,2147.5],[109.5,-6.5,1744.2],[110,-6.5,2160.9],[110.5,-6.5,1026.7],[111,-6.5,687.3],[111.5,-6.5,448.6],[112,-6.5,758.9],[112.5,-6.5,568.9],[113,-6.5,546.4],[113.5,-6.5,548.7],[114,-6.5,574.5],[115,-6.5,168.3],[115.5,-6.5,174.6],[116,-6.5,72.6],[120,-6.5,172.5],[120.5,-6.5,165.5],[121,-6.5,186.4],[131,-6.5,21.8],[131.5,-6.5,42.2],[132,-6.5,405],[134,-6.5,6],[134.5,-6.5,12.9],[138.5,-6.5,1.4],[139,-6.5,4.1],[139.5,-6.5,3],[140.5,-6.5,1.5],[141,-6.5,1.4],[141.5,-6.5,1.4],[142,-6.5,1.4],[142.5,-6.5,7.4],[143,-6.5,10.8],[143.5,-6.5,10.7],[144,-6.5,10.4],[144.5,-6.5,16.9],[145,-6.5,24.7],[145.5,-6.5,34.3],[146,-6.5,16.2],[146.5,-6.5,14.8],[147,-6.5,14.8],[147.5,-6.5,14.8],[155,-6.5,22.6],[155.5,-6.5,22.5],[156,-6.5,8.4],[156.5,-6.5,6.7],[157,-6.5,6.7],[-80,-7,78.3],[-79.5,-7,40.4],[-79,-7,64.4],[-78.5,-7,52.3],[-78,-7,10.8],[-77.5,-7,1.1],[-77,-7,23.3],[-76.5,-7,4.6],[-75.5,-7,1.7],[-75,-7,2.9],[-74.5,-7,3.8],[-74,-7,1.3],[-73.5,-7,1.7],[-73,-7,1.4],[-72.5,-7,1],[-72,-7,1.1],[-71.5,-7,1.1],[-71,-7,1.5],[-70.5,-7,1.6],[-70,-7,1.5],[-57,-7,1.5],[-56.5,-7,1.1],[-51.5,-7,1.5],[-51,-7,1.4],[-50.5,-7,4.4],[-50,-7,5.7],[-49.5,-7,10.6],[-49,-7,13.4],[-48.5,-7,20],[-48,-7,5],[-47.5,-7,3.8],[-47,-7,3.8],[-46.5,-7,4.6],[-46,-7,4.2],[-45.5,-7,2.7],[-45,-7,2.5],[-44.5,-7,2.9],[-44,-7,3.4],[-43.5,-7,7.8],[-43,-7,6.5],[-42.5,-7,7.8],[-42,-7,20.8],[-41.5,-7,21.4],[-41,-7,19.3],[-40.5,-7,22.8],[-40,-7,23.6],[-39.5,-7,141.5],[-39,-7,38.5],[-38.5,-7,31.6],[-38,-7,21.1],[-37.5,-7,49.8],[-37,-7,18.9],[-36.5,-7,20.4],[-36,-7,192.5],[-35.5,-7,109.6],[-35,-7,704.4],[12.5,-7,6.5],[13,-7,6.5],[13.5,-7,9],[14,-7,17],[14.5,-7,17],[15,-7,17],[15.5,-7,17],[16,-7,16.8],[16.5,-7,16.6],[17,-7,17],[17.5,-7,17.2],[18,-7,17],[18.5,-7,7.4],[19,-7,6.7],[19.5,-7,3.7],[20,-7,3.6],[20.5,-7,20.2],[21,-7,22.1],[21.5,-7,21.2],[22,-7,23.9],[22.5,-7,23.7],[23,-7,35.4],[23.5,-7,42.4],[24,-7,16.3],[24.5,-7,10.1],[25,-7,13.5],[25.5,-7,14.3],[26,-7,16.5],[26.5,-7,9.3],[27,-7,8.3],[27.5,-7,8.2],[28,-7,8.2],[28.5,-7,12.4],[29,-7,15.7],[29.5,-7,15.7],[30,-7,15.7],[30.5,-7,19.5],[31,-7,13.9],[31.5,-7,9.1],[32,-7,8.7],[32.5,-7,8],[33,-7,7.9],[33.5,-7,7.6],[34,-7,10.2],[34.5,-7,20.2],[35,-7,21.9],[35.5,-7,23.8],[36,-7,31.6],[36.5,-7,36.3],[37,-7,37.8],[37.5,-7,40.4],[38,-7,40.6],[38.5,-7,39.2],[39,-7,128.3],[39.5,-7,1767.2],[106,-7,203.9],[106.5,-7,308.4],[107,-7,308.4],[107.5,-7,1055],[108,-7,928.9],[108.5,-7,589.2],[109,-7,1040],[109.5,-7,677.6],[110,-7,1014.3],[110.5,-7,811.4],[111,-7,538.8],[111.5,-7,475.5],[112,-7,749],[112.5,-7,2435.7],[113,-7,712.5],[113.5,-7,830.8],[114,-7,450.9],[114.5,-7,428],[115,-7,99.2],[115.5,-7,159.3],[120.5,-7,54.8],[121,-7,72.6],[121.5,-7,55],[127,-7,6.4],[128.5,-7,24.6],[130.5,-7,1.8],[131,-7,5.4],[131.5,-7,26.2],[134,-7,9.8],[134.5,-7,9.8],[138,-7,3.4],[138.5,-7,1.2],[139,-7,1.5],[139.5,-7,3.6],[140,-7,1],[140.5,-7,5.1],[141,-7,1.4],[141.5,-7,1.4],[142,-7,1.4],[142.5,-7,1.4],[143,-7,1.9],[143.5,-7,2.5],[144,-7,2.5],[144.5,-7,2.5],[145,-7,2.5],[145.5,-7,9.4],[146,-7,14],[146.5,-7,14.8],[147,-7,14.8],[155.5,-7,12.4],[156,-7,12.4],[156.5,-7,6.7],[157,-7,6.7],[157.5,-7,6.7],[158,-7,5.2],[177,-7,212.8],[178.5,-7,149.2],[-80,-7.5,27.8],[-79.5,-7.5,55],[-79,-7.5,26.7],[-78.5,-7.5,55.4],[-78,-7.5,35],[-77.5,-7.5,2.1],[-77,-7.5,4.1],[-76,-7.5,1.4],[-75.5,-7.5,2],[-75,-7.5,5.3],[-74.5,-7.5,18.1],[-74,-7.5,8.4],[-73.5,-7.5,3.2],[-73,-7.5,5],[-72.5,-7.5,4],[-72,-7.5,1.3],[-71.5,-7.5,1.5],[-71,-7.5,1.5],[-70.5,-7.5,1.4],[-70,-7.5,1.1],[-57,-7.5,1.4],[-56.5,-7.5,1.3],[-52,-7.5,1.3],[-51,-7.5,1.4],[-50.5,-7.5,8.5],[-50,-7.5,5.3],[-49.5,-7.5,5.6],[-49,-7.5,4.6],[-48.5,-7.5,4.7],[-48,-7.5,2.9],[-47.5,-7.5,2.9],[-47,-7.5,3.2],[-46.5,-7.5,4.4],[-46,-7.5,2.9],[-45.5,-7.5,1.5],[-45,-7.5,1.9],[-44.5,-7.5,1.7],[-44,-7.5,3.3],[-43.5,-7.5,4.7],[-43,-7.5,3.8],[-42.5,-7.5,6.2],[-42,-7.5,8],[-41.5,-7.5,7.1],[-41,-7.5,16],[-40.5,-7.5,32.8],[-40,-7.5,17.1],[-39.5,-7.5,28.6],[-39,-7.5,24],[-38.5,-7.5,34.9],[-38,-7.5,42.3],[-37.5,-7.5,24.8],[-37,-7.5,15.1],[-36.5,-7.5,43.8],[-36,-7.5,94.7],[-35.5,-7.5,217.6],[-35,-7.5,1035.7],[-14.5,-7.5,7.3],[12.5,-7.5,6.5],[13,-7.5,6.4],[13.5,-7.5,7],[14,-7.5,12],[14.5,-7.5,16],[15,-7.5,17.2],[15.5,-7.5,17],[16,-7.5,14.3],[16.5,-7.5,13.7],[17,-7.5,14.6],[17.5,-7.5,16.9],[18,-7.5,9.8],[18.5,-7.5,6.4],[19,-7.5,6],[19.5,-7.5,3.6],[20,-7.5,3.6],[20.5,-7.5,3.6],[21,-7.5,3.6],[21.5,-7.5,6.4],[22,-7.5,15.9],[22.5,-7.5,17.8],[23,-7.5,30.3],[23.5,-7.5,32.2],[24,-7.5,10.8],[24.5,-7.5,7.2],[25,-7.5,7.6],[25.5,-7.5,11.8],[26,-7.5,24.8],[26.5,-7.5,25.1],[27,-7.5,24.1],[27.5,-7.5,17.1],[28,-7.5,8.3],[28.5,-7.5,13],[29,-7.5,13],[29.5,-7.5,15.3],[30,-7.5,15.7],[30.5,-7.5,19.7],[31,-7.5,20.1],[31.5,-7.5,32],[32,-7.5,10.7],[32.5,-7.5,7.9],[33,-7.5,8],[33.5,-7.5,19.9],[34,-7.5,31.9],[34.5,-7.5,30.6],[35,-7.5,21.9],[35.5,-7.5,21.9],[36,-7.5,21.9],[36.5,-7.5,24.1],[37,-7.5,32.5],[37.5,-7.5,30.6],[38,-7.5,19.3],[38.5,-7.5,18],[39,-7.5,16.6],[39.5,-7.5,93.1],[107,-7.5,187.4],[107.5,-7.5,254.6],[108,-7.5,315.3],[108.5,-7.5,494.3],[109,-7.5,1031.1],[109.5,-7.5,816.6],[110,-7.5,1251.3],[110.5,-7.5,1277.2],[111,-7.5,744.3],[111.5,-7.5,687.6],[112,-7.5,984.1],[112.5,-7.5,1244.1],[113,-7.5,791.5],[113.5,-7.5,489.9],[114,-7.5,300],[121,-7.5,60.2],[125.5,-7.5,4],[126,-7.5,1.7],[126.5,-7.5,2.8],[127,-7.5,57],[127.5,-7.5,26.9],[129.5,-7.5,20],[130,-7.5,53.2],[130.5,-7.5,14.9],[131,-7.5,17.9],[131.5,-7.5,19.2],[137.5,-7.5,1.1],[138,-7.5,1.1],[138.5,-7.5,2],[139.5,-7.5,1],[140,-7.5,1.2],[140.5,-7.5,5.2],[141,-7.5,1.4],[141.5,-7.5,1.4],[142,-7.5,1.4],[142.5,-7.5,1.4],[143,-7.5,1.4],[143.5,-7.5,1.9],[144,-7.5,2.5],[144.5,-7.5,2.5],[145,-7.5,2.5],[145.5,-7.5,2.5],[146,-7.5,4.1],[146.5,-7.5,11.5],[147,-7.5,14.6],[147.5,-7.5,13.3],[156,-7.5,12.4],[156.5,-7.5,12.4],[157,-7.5,12.4],[157.5,-7.5,12.4],[158,-7.5,5.1],[158.5,-7.5,5.1],[159,-7.5,5.1],[160.5,-7.5,30],[178,-7.5,772.4],[-79.5,-8,1989.7],[-79,-8,66.3],[-78.5,-8,27.2],[-78,-8,18.6],[-77.5,-8,17.1],[-77,-8,11.3],[-76.5,-8,16.5],[-76,-8,2.4],[-75.5,-8,4.1],[-75,-8,23.9],[-74.5,-8,17.8],[-74,-8,14.7],[-73.5,-8,7.8],[-73,-8,4.2],[-72.5,-8,3.1],[-72,-8,1.7],[-71.5,-8,1.7],[-71,-8,1.5],[-70.5,-8,1.2],[-69,-8,1],[-68.5,-8,1.2],[-64,-8,16.2],[-63.5,-8,1.3],[-51,-8,1.2],[-50.5,-8,9.8],[-50,-8,8.1],[-49.5,-8,5.5],[-49,-8,6.9],[-48.5,-8,4.3],[-48,-8,1.9],[-47.5,-8,1.8],[-47,-8,2.2],[-46.5,-8,3.8],[-46,-8,1.8],[-45.5,-8,1.1],[-45,-8,1.8],[-44.5,-8,2.1],[-44,-8,4.3],[-43.5,-8,3.6],[-43,-8,2.6],[-42.5,-8,6.8],[-42,-8,4.6],[-41.5,-8,7.5],[-41,-8,9.5],[-40.5,-8,12],[-40,-8,11.5],[-39.5,-8,26.1],[-39,-8,11.2],[-38.5,-8,15.3],[-38,-8,15],[-37.5,-8,24.4],[-37,-8,43.9],[-36.5,-8,92.3],[-36,-8,140.6],[-35.5,-8,264.9],[-35,-8,3609.7],[13,-8,6.3],[13.5,-8,6.3],[14,-8,7.5],[14.5,-8,15],[15,-8,19.5],[15.5,-8,17.8],[16,-8,13.6],[16.5,-8,13.4],[17,-8,13.4],[17.5,-8,6.8],[18,-8,3.7],[18.5,-8,3.6],[19,-8,3.6],[19.5,-8,3.6],[20,-8,3.6],[20.5,-8,3.6],[21,-8,3.6],[21.5,-8,3.8],[22,-8,5.1],[22.5,-8,5.1],[23,-8,5.1],[23.5,-8,8.5],[24,-8,9.8],[24.5,-8,6.2],[25,-8,6.2],[25.5,-8,11.9],[26,-8,21.5],[26.5,-8,24.5],[27,-8,16.5],[27.5,-8,8.4],[28,-8,9.1],[28.5,-8,10.3],[29,-8,15.1],[29.5,-8,13.6],[30,-8,12.6],[30.5,-8,16.5],[31,-8,32.8],[31.5,-8,40.9],[32,-8,43.5],[32.5,-8,17.3],[33,-8,10.4],[33.5,-8,33.8],[34,-8,40.8],[34.5,-8,37],[35,-8,30.3],[35.5,-8,28],[36,-8,20.1],[36.5,-8,13.1],[37,-8,19.9],[37.5,-8,10.1],[38,-8,9.6],[38.5,-8,14.2],[39,-8,15.3],[39.5,-8,89.3],[110,-8,338.1],[110.5,-8,357.6],[111,-8,415.9],[111.5,-8,715.1],[112,-8,692.5],[112.5,-8,607.9],[113,-8,705.8],[113.5,-8,611.3],[114,-8,536],[114.5,-8,281.2],[115,-8,452.8],[115.5,-8,447.6],[116,-8,231.6],[116.5,-8,149.6],[117,-8,187.8],[117.5,-8,33.2],[118,-8,39.6],[118.5,-8,148],[119,-8,40.2],[119.5,-8,62.7],[120,-8,76],[120.5,-8,45.8],[121,-8,49.7],[121.5,-8,67.9],[122,-8,101.4],[122.5,-8,75.2],[123,-8,154.9],[123.5,-8,68.8],[124,-8,83.9],[124.5,-8,57.2],[125,-8,12.2],[125.5,-8,116.6],[126,-8,29.6],[126.5,-8,37.7],[127,-8,68.5],[127.5,-8,37.8],[128,-8,19.2],[128.5,-8,42.2],[129,-8,27.8],[129.5,-8,38],[130.5,-8,31.3],[131,-8,60.7],[137.5,-8,1],[139.5,-8,1.2],[140,-8,7],[140.5,-8,8.1],[141,-8,1.4],[141.5,-8,1.4],[142,-8,1.4],[142.5,-8,1.4],[143,-8,1.4],[143.5,-8,1.4],[145.5,-8,2.5],[146,-8,3.6],[146.5,-8,5.9],[147,-8,5.9],[147.5,-8,5.5],[148,-8,5.5],[150.5,-8,14.2],[151,-8,14.2],[156.5,-8,12.4],[157,-8,12.4],[157.5,-8,12.4],[158,-8,12.4],[158.5,-8,5.1],[159,-8,5.1],[159.5,-8,5.1],[160,-8,5.1],[160.5,-8,30],[162.5,-8,30],[179,-8,1048.3],[-173,-8.5,135.1],[-172.5,-8.5,135.1],[-140.5,-8.5,7.4],[-140,-8.5,6.8],[-139.5,-8.5,6.7],[-79,-8.5,45.2],[-78.5,-8.5,64.7],[-78,-8.5,23.5],[-77.5,-8.5,26.2],[-77,-8.5,5],[-76.5,-8.5,7.4],[-76,-8.5,6.3],[-75.5,-8.5,4.4],[-75,-8.5,6.7],[-74.5,-8.5,3.2],[-74,-8.5,1.2],[-72.5,-8.5,1.1],[-72,-8.5,1.3],[-71.5,-8.5,1.5],[-71,-8.5,1.1],[-70.5,-8.5,1.1],[-69,-8.5,1.4],[-68.5,-8.5,1.4],[-68,-8.5,1.4],[-67.5,-8.5,1.2],[-64.5,-8.5,6.7],[-64,-8.5,23.2],[-63.5,-8.5,2.4],[-63,-8.5,1.3],[-62,-8.5,1.3],[-51,-8.5,1.4],[-50.5,-8.5,1.2],[-50,-8.5,3],[-49.5,-8.5,2.6],[-49,-8.5,6.3],[-48.5,-8.5,5.4],[-48,-8.5,1.9],[-47.5,-8.5,1.5],[-47,-8.5,4.1],[-46.5,-8.5,2.7],[-46,-8.5,1.2],[-45.5,-8.5,1],[-45,-8.5,1.4],[-44.5,-8.5,3],[-44,-8.5,3.2],[-43.5,-8.5,2.7],[-43,-8.5,6.2],[-42.5,-8.5,2.8],[-42,-8.5,2.8],[-41.5,-8.5,5.3],[-41,-8.5,12.4],[-40.5,-8.5,9.2],[-40,-8.5,11.6],[-39.5,-8.5,8.4],[-39,-8.5,9.2],[-38.5,-8.5,13.3],[-38,-8.5,14.1],[-37.5,-8.5,26.9],[-37,-8.5,59.1],[-36.5,-8.5,92.3],[-36,-8.5,98.7],[-35.5,-8.5,93],[-35,-8.5,163.8],[13,-8.5,659.2],[13.5,-8.5,98.7],[14,-8.5,12.6],[14.5,-8.5,20.3],[15,-8.5,20.3],[15.5,-8.5,15.7],[16,-8.5,13.4],[16.5,-8.5,13.4],[17,-8.5,13.4],[17.5,-8.5,5.2],[18,-8.5,3.6],[18.5,-8.5,3.6],[19,-8.5,3.6],[19.5,-8.5,3.6],[20,-8.5,3.6],[20.5,-8.5,3.3],[21,-8.5,2.7],[21.5,-8.5,3.3],[22,-8.5,5.5],[22.5,-8.5,5.2],[23,-8.5,5.2],[23.5,-8.5,7.7],[24,-8.5,6.3],[24.5,-8.5,6.2],[25,-8.5,6.2],[25.5,-8.5,18.5],[26,-8.5,21],[26.5,-8.5,16.3],[27,-8.5,6.2],[27.5,-8.5,7.8],[28,-8.5,9.9],[28.5,-8.5,10.5],[29,-8.5,27],[29.5,-8.5,7.9],[30,-8.5,9.1],[30.5,-8.5,13.5],[31,-8.5,19.1],[31.5,-8.5,34.2],[32,-8.5,49.7],[32.5,-8.5,46.6],[33,-8.5,31.8],[33.5,-8.5,39.9],[34,-8.5,38.1],[34.5,-8.5,38.1],[35,-8.5,30.8],[35.5,-8.5,23.7],[36,-8.5,9],[36.5,-8.5,8.2],[37,-8.5,7.9],[37.5,-8.5,5.2],[38,-8.5,5.2],[38.5,-8.5,10.3],[39,-8.5,14.4],[39.5,-8.5,14.4],[113,-8.5,103.9],[113.5,-8.5,27.7],[114,-8.5,232.5],[114.5,-8.5,13.4],[115,-8.5,1564.9],[115.5,-8.5,186.6],[116,-8.5,913.4],[116.5,-8.5,363],[117,-8.5,41.2],[117.5,-8.5,54],[118,-8.5,89.3],[118.5,-8.5,174.6],[119,-8.5,68.6],[119.5,-8.5,29.6],[120,-8.5,158.6],[120.5,-8.5,105.1],[121,-8.5,78.9],[121.5,-8.5,120],[122,-8.5,230.4],[122.5,-8.5,59.4],[123,-8.5,58.1],[123.5,-8.5,46.8],[124,-8.5,13.7],[124.5,-8.5,176.7],[125,-8.5,60.4],[125.5,-8.5,70.3],[126,-8.5,23.8],[126.5,-8.5,39.7],[127,-8.5,55.6],[140,-8.5,11.8],[140.5,-8.5,13.9],[141,-8.5,1.4],[141.5,-8.5,1.4],[142,-8.5,1.4],[142.5,-8.5,1.4],[143,-8.5,1.4],[143.5,-8.5,1.4],[146,-8.5,5.4],[146.5,-8.5,5.9],[147,-8.5,5.9],[147.5,-8.5,5.6],[148,-8.5,5.5],[148.5,-8.5,5.5],[149,-8.5,5.5],[150,-8.5,14.2],[150.5,-8.5,14.2],[151,-8.5,14.2],[151.5,-8.5,14.2],[152,-8.5,14.2],[152.5,-8.5,14.2],[157,-8.5,12.4],[157.5,-8.5,12.4],[158,-8.5,12.4],[159,-8.5,34.4],[159.5,-8.5,6],[160,-8.5,34.4],[160.5,-8.5,30],[161,-8.5,30],[179,-8.5,1048.3],[-172,-9,76.6],[-171.5,-9,82.9],[-140.5,-9,19.2],[-79,-9,219.2],[-78.5,-9,39],[-78,-9,57.1],[-77.5,-9,37.3],[-77,-9,20.5],[-76.5,-9,25.3],[-76,-9,13.4],[-75.5,-9,4.2],[-75,-9,4.2],[-74.5,-9,1.5],[-74,-9,1],[-72.5,-9,1],[-71.5,-9,1.1],[-69.5,-9,1.1],[-69,-9,1.2],[-68.5,-9,1.3],[-68,-9,1.1],[-64.5,-9,21.1],[-64,-9,18.4],[-63.5,-9,2.1],[-63,-9,1.7],[-62.5,-9,2.1],[-62,-9,2.6],[-57,-9,1],[-56.5,-9,1.1],[-51,-9,2.7],[-50.5,-9,2.6],[-50,-9,2],[-49.5,-9,1.8],[-49,-9,5.1],[-48.5,-9,4.2],[-48,-9,1.7],[-47,-9,2.4],[-46.5,-9,1.3],[-46,-9,1.2],[-45.5,-9,2.4],[-45,-9,2.9],[-44.5,-9,3.1],[-44,-9,1.9],[-43.5,-9,8.5],[-43,-9,9.5],[-42.5,-9,7.1],[-42,-9,6.1],[-41.5,-9,8.3],[-41,-9,37.5],[-40.5,-9,78.5],[-40,-9,5.6],[-39.5,-9,3.7],[-39,-9,4.5],[-38.5,-9,35],[-38,-9,37.2],[-37.5,-9,52],[-37,-9,58.7],[-36.5,-9,70],[-36,-9,189],[-35.5,-9,68.1],[12.5,-9,746.4],[13,-9,362.6],[13.5,-9,6.3],[14,-9,16.3],[14.5,-9,20.3],[15,-9,17.9],[15.5,-9,14.1],[16,-9,13.4],[16.5,-9,13.4],[17,-9,12.1],[17.5,-9,4.3],[18,-9,3.6],[18.5,-9,3.6],[19,-9,3.6],[19.5,-9,3.6],[20,-9,3.1],[20.5,-9,2.6],[21,-9,2.6],[21.5,-9,3.8],[22,-9,6.3],[22.5,-9,6.3],[23,-9,6.2],[23.5,-9,6.3],[24,-9,6.2],[24.5,-9,6.2],[25,-9,6.2],[25.5,-9,18.6],[26,-9,20.6],[26.5,-9,5.9],[27,-9,5.4],[27.5,-9,7.6],[28,-9,10.9],[28.5,-9,41.9],[29,-9,15.7],[29.5,-9,7.2],[30,-9,7.6],[30.5,-9,12.4],[31,-9,13.6],[31.5,-9,14],[32,-9,21.7],[32.5,-9,39],[33,-9,55],[33.5,-9,120.3],[34,-9,41],[34.5,-9,40.5],[35,-9,39.5],[35.5,-9,20],[36,-9,8.2],[36.5,-9,8.2],[37,-9,7.3],[37.5,-9,5.2],[38,-9,5.2],[38.5,-9,10.8],[39,-9,14.4],[39.5,-9,14.8],[116.5,-9,24],[117,-9,16.1],[117.5,-9,11.2],[118.5,-9,63.9],[119,-9,113.1],[119.5,-9,17.4],[120,-9,14.9],[123.5,-9,17.4],[124,-9,82.1],[124.5,-9,85.7],[125,-9,59.5],[125.5,-9,32.4],[126,-9,28],[140.5,-9,1.5],[141,-9,1.4],[141.5,-9,1.4],[142,-9,1.6],[142.5,-9,1.6],[143,-9,1.4],[143.5,-9,5],[146.5,-9,5.9],[147,-9,86.5],[147.5,-9,5.8],[148,-9,5.5],[148.5,-9,5.5],[149,-9,5.5],[150,-9,14.2],[150.5,-9,14.2],[151.5,-9,14.2],[152,-9,14.2],[152.5,-9,14.2],[153,-9,14.2],[153.5,-9,14.2],[158.5,-9,34.4],[159,-9,34.4],[159.5,-9,74.8],[160,-9,22.1],[160.5,-9,30],[161,-9,30],[179.5,-9,77],[-139.5,-9.5,6.9],[-139,-9.5,8.7],[-78.5,-9.5,13],[-78,-9.5,26.1],[-77.5,-9.5,24.4],[-77,-9.5,41.2],[-76.5,-9.5,71.7],[-76,-9.5,11.6],[-75.5,-9.5,2.3],[-75,-9.5,1.8],[-74.5,-9.5,1.4],[-74,-9.5,1.2],[-72,-9.5,1.1],[-70,-9.5,1.1],[-69.5,-9.5,1.2],[-69,-9.5,10.6],[-68.5,-9.5,11.1],[-68,-9.5,10.9],[-67.5,-9.5,9],[-67,-9.5,2.4],[-66.5,-9.5,1.5],[-64.5,-9.5,5],[-64,-9.5,21.1],[-63.5,-9.5,9.4],[-63,-9.5,8.8],[-62.5,-9.5,4.3],[-62,-9.5,7.2],[-57,-9.5,2.3],[-56.5,-9.5,4.4],[-56,-9.5,2.8],[-55,-9.5,5.5],[-54.5,-9.5,4],[-54,-9.5,1.7],[-53.5,-9.5,1.4],[-52,-9.5,1.3],[-51.5,-9.5,1.8],[-51,-9.5,2.2],[-50.5,-9.5,1.7],[-50,-9.5,1.6],[-49.5,-9.5,2],[-49,-9.5,7.2],[-48.5,-9.5,8.1],[-48,-9.5,1.3],[-46,-9.5,1.7],[-45.5,-9.5,3.2],[-45,-9.5,2.9],[-44.5,-9.5,3.3],[-44,-9.5,1.9],[-43.5,-9.5,5.3],[-43,-9.5,6.9],[-42.5,-9.5,9.3],[-42,-9.5,12.6],[-41.5,-9.5,4.3],[-41,-9.5,10.9],[-40.5,-9.5,15.5],[-40,-9.5,5.8],[-39.5,-9.5,6.1],[-39,-9.5,3.8],[-38.5,-9.5,31.1],[-38,-9.5,27.8],[-37.5,-9.5,41.7],[-37,-9.5,127.6],[-36.5,-9.5,88.5],[-36,-9.5,487.7],[13,-9.5,6.3],[13.5,-9.5,6.3],[14,-9.5,9.9],[14.5,-9.5,17.1],[15,-9.5,15],[15.5,-9.5,14.3],[16,-9.5,13.9],[16.5,-9.5,13.4],[17,-9.5,13],[17.5,-9.5,7.3],[18,-9.5,3.9],[18.5,-9.5,3.6],[19,-9.5,3.6],[19.5,-9.5,3.3],[20,-9.5,2.6],[20.5,-9.5,2.6],[21,-9.5,2.6],[21.5,-9.5,3],[22,-9.5,6],[22.5,-9.5,6.5],[23,-9.5,6.4],[23.5,-9.5,6.5],[24,-9.5,6.9],[24.5,-9.5,6.7],[25,-9.5,7],[25.5,-9.5,10.5],[26,-9.5,11],[26.5,-9.5,6.2],[27,-9.5,5.7],[27.5,-9.5,6.8],[28,-9.5,8.2],[28.5,-9.5,19.3],[29,-9.5,11.6],[29.5,-9.5,9],[30,-9.5,6.2],[30.5,-9.5,8.7],[31,-9.5,12.9],[31.5,-9.5,14.2],[32,-9.5,13],[32.5,-9.5,14.2],[33,-9.5,37.2],[33.5,-9.5,91.9],[34,-9.5,34],[34.5,-9.5,25.4],[35,-9.5,22.4],[35.5,-9.5,11.5],[36,-9.5,11.5],[36.5,-9.5,9.4],[37,-9.5,5.9],[37.5,-9.5,5.2],[38,-9.5,5.2],[38.5,-9.5,14.6],[39,-9.5,26.4],[39.5,-9.5,29.2],[118.5,-9.5,85.8],[119,-9.5,169.7],[119.5,-9.5,29.9],[120,-9.5,41.1],[120.5,-9.5,27.7],[123.5,-9.5,27.2],[124,-9.5,80],[124.5,-9.5,131.1],[125,-9.5,69.5],[141,-9.5,5],[141.5,-9.5,2.6],[142,-9.5,5],[142.5,-9.5,5],[143,-9.5,5],[143.5,-9.5,3],[144,-9.5,5],[147,-9.5,36.7],[147.5,-9.5,5.9],[148,-9.5,5.8],[148.5,-9.5,5.9],[149,-9.5,9.7],[149.5,-9.5,14],[150,-9.5,14.2],[150.5,-9.5,14.2],[151,-9.5,14.2],[152,-9.5,14.2],[159.5,-9.5,11.9],[160,-9.5,11.9],[160.5,-9.5,11.9],[161,-9.5,30],[161.5,-9.5,30],[167,-9.5,23.4],[-161.5,-10,6.9],[-158.5,-10,3.7],[-139.5,-10,9.3],[-139,-10,2.5],[-78.5,-10,6.8],[-78,-10,12.1],[-77.5,-10,9],[-77,-10,16.4],[-76.5,-10,48.6],[-76,-10,7.1],[-75.5,-10,2.3],[-75,-10,1.4],[-74.5,-10,1.3],[-74,-10,1.3],[-73.5,-10,1.4],[-70,-10,1.2],[-69.5,-10,6.2],[-69,-10,18.8],[-68.5,-10,18.3],[-68,-10,14],[-67.5,-10,5.4],[-65.5,-10,1.4],[-65,-10,1.4],[-64.5,-10,3.1],[-64,-10,5.7],[-63.5,-10,6.3],[-63,-10,10.6],[-62.5,-10,10.1],[-62,-10,14.5],[-59,-10,1.3],[-57.5,-10,1.4],[-57,-10,4.7],[-56.5,-10,5.1],[-56,-10,5],[-55.5,-10,3.8],[-55,-10,2.9],[-54.5,-10,1.9],[-54,-10,1.8],[-53.5,-10,1.8],[-52.5,-10,1.1],[-52,-10,2.8],[-51.5,-10,1.7],[-51,-10,1.4],[-49.5,-10,2.1],[-49,-10,14.7],[-48.5,-10,44.8],[-48,-10,2.1],[-47.5,-10,1.3],[-45.5,-10,5],[-45,-10,3.7],[-44.5,-10,4],[-44,-10,4.4],[-43.5,-10,2.7],[-43,-10,3.2],[-42.5,-10,4],[-41.5,-10,3.9],[-41,-10,9.1],[-40.5,-10,21.4],[-40,-10,15.5],[-39.5,-10,13.4],[-39,-10,9.4],[-38.5,-10,24.8],[-38,-10,25.7],[-37.5,-10,33.3],[-37,-10,67.6],[-36.5,-10,69.9],[13,-10,6.3],[13.5,-10,9],[14,-10,9.3],[14.5,-10,14],[15,-10,15.2],[15.5,-10,15.2],[16,-10,14.8],[16.5,-10,13.4],[17,-10,13.4],[17.5,-10,13.4],[18,-10,9.2],[18.5,-10,3.3],[19,-10,2.8],[19.5,-10,2.6],[20,-10,2.6],[20.5,-10,2.6],[21,-10,2.6],[21.5,-10,2.6],[22,-10,4.9],[22.5,-10,7.5],[23,-10,7.4],[23.5,-10,7.5],[24,-10,17],[24.5,-10,22.9],[25,-10,17.5],[25.5,-10,14.9],[26,-10,9.4],[26.5,-10,10.2],[27,-10,8],[27.5,-10,7.6],[28,-10,7.7],[28.5,-10,13.9],[29,-10,15.1],[29.5,-10,10.4],[30,-10,8.5],[30.5,-10,12.9],[31,-10,14.3],[31.5,-10,13.7],[32,-10,9.2],[32.5,-10,11.6],[33,-10,13.8],[33.5,-10,15.5],[34,-10,82.8],[34.5,-10,25.8],[35,-10,21.2],[35.5,-10,12.9],[36,-10,12.9],[36.5,-10,12.4],[37,-10,8],[37.5,-10,8.6],[38,-10,17.1],[38.5,-10,27.4],[39,-10,44],[39.5,-10,47.2],[40,-10,77.3],[40.5,-10,11.6],[105.5,-10,11.6],[119.5,-10,41.1],[120,-10,21.7],[120.5,-10,13.5],[121.5,-10,128.8],[122,-10,103.7],[123,-10,46.8],[123.5,-10,248.3],[124,-10,76.3],[124.5,-10,126.4],[142,-10,5],[142.5,-10,5],[143,-10,5],[147.5,-10,5.9],[148,-10,5.9],[148.5,-10,5.9],[149,-10,5.9],[149.5,-10,11.1],[150,-10,14.2],[150.5,-10,14.2],[151,-10,14.2],[151.5,-10,14.2],[152,-10,14.2],[161,-10,9.9],[161.5,-10,9.9],[162,-10,9.9],[165.5,-10,23.4],[166,-10,23.4],[-166,-10.5,8],[-78,-10.5,72],[-77.5,-10.5,10.8],[-77,-10.5,12.8],[-76.5,-10.5,39],[-76,-10.5,13.3],[-75.5,-10.5,23],[-75,-10.5,7.6],[-74.5,-10.5,1.5],[-74,-10.5,1.5],[-73.5,-10.5,1.4],[-73,-10.5,1.1],[-70.5,-10.5,1.2],[-70,-10.5,1.6],[-69.5,-10.5,3.6],[-69,-10.5,3.2],[-68.5,-10.5,4.1],[-68,-10.5,2.9],[-66,-10.5,4.5],[-65.5,-10.5,3.4],[-65,-10.5,1.7],[-64.5,-10.5,1.5],[-64,-10.5,2.6],[-63.5,-10.5,2.9],[-63,-10.5,10.3],[-62.5,-10.5,16.8],[-62,-10.5,15.3],[-60,-10.5,1.1],[-59,-10.5,1.5],[-57.5,-10.5,3.5],[-57,-10.5,2.7],[-56.5,-10.5,2.2],[-56,-10.5,3.7],[-55.5,-10.5,6.1],[-55,-10.5,2.5],[-54.5,-10.5,1.2],[-54,-10.5,1.2],[-53.5,-10.5,1.2],[-52.5,-10.5,1.3],[-52,-10.5,2.8],[-51.5,-10.5,1.8],[-49.5,-10.5,2.5],[-49,-10.5,7.9],[-48.5,-10.5,6.5],[-48,-10.5,1.3],[-46,-10.5,1.1],[-45.5,-10.5,3.8],[-45,-10.5,4.2],[-44.5,-10.5,3.7],[-44,-10.5,5.4],[-43.5,-10.5,5.2],[-43,-10.5,14.8],[-42.5,-10.5,5.8],[-42,-10.5,2.3],[-41.5,-10.5,8.2],[-41,-10.5,9.4],[-40.5,-10.5,33.8],[-40,-10.5,19.4],[-39.5,-10.5,23],[-39,-10.5,27.6],[-38.5,-10.5,39.4],[-38,-10.5,61.5],[-37.5,-10.5,225.7],[-37,-10.5,54.2],[-36.5,-10.5,55],[13.5,-10.5,15.2],[14,-10.5,15.2],[14.5,-10.5,15.2],[15,-10.5,15.2],[15.5,-10.5,15.3],[16,-10.5,16.2],[16.5,-10.5,17.2],[17,-10.5,14.9],[17.5,-10.5,13.4],[18,-10.5,13.4],[18.5,-10.5,6.1],[19,-10.5,2.6],[19.5,-10.5,2.6],[20,-10.5,2.6],[20.5,-10.5,2.6],[21,-10.5,2.6],[21.5,-10.5,2.3],[22,-10.5,4.6],[22.5,-10.5,7.5],[23,-10.5,7.3],[23.5,-10.5,7.3],[24,-10.5,14.1],[24.5,-10.5,23],[25,-10.5,23],[25.5,-10.5,21.9],[26,-10.5,11.8],[26.5,-10.5,23.9],[27,-10.5,19],[27.5,-10.5,7.7],[28,-10.5,7.9],[28.5,-10.5,13.7],[29,-10.5,13.1],[29.5,-10.5,12.5],[30,-10.5,11.4],[30.5,-10.5,12.6],[31,-10.5,11.7],[31.5,-10.5,9.1],[32,-10.5,7.4],[32.5,-10.5,4.2],[33,-10.5,7.7],[33.5,-10.5,22.3],[34,-10.5,49],[34.5,-10.5,49.2],[35,-10.5,27.6],[35.5,-10.5,12.9],[36,-10.5,12.9],[36.5,-10.5,13.4],[37,-10.5,13.5],[37.5,-10.5,15.4],[38,-10.5,36.7],[38.5,-10.5,44.6],[39,-10.5,80.4],[39.5,-10.5,78.5],[40,-10.5,30.9],[40.5,-10.5,18.7],[105.5,-10.5,11.6],[121.5,-10.5,175.9],[122.5,-10.5,104.3],[123,-10.5,75.2],[141.5,-10.5,5],[142,-10.5,5],[142.5,-10.5,5],[143,-10.5,5],[149.5,-10.5,14.2],[150,-10.5,14.2],[150.5,-10.5,14.2],[151,-10.5,14.2],[151.5,-10.5,14.2],[152,-10.5,14.2],[152.5,-10.5,14.2],[153,-10.5,14.2],[161,-10.5,9.9],[161.5,-10.5,9.9],[162,-10.5,9.9],[165.5,-10.5,23.4],[166,-10.5,23.4],[179,-10.5,50.2],[179.5,-10.5,50.2],[-171.5,-11,7.4],[-166,-11,6.4],[-78,-11,140],[-77.5,-11,61.6],[-77,-11,9.2],[-76.5,-11,7.8],[-76,-11,43.8],[-75.5,-11,20.4],[-75,-11,22.2],[-74.5,-11,5.4],[-74,-11,1.1],[-73.5,-11,1.2],[-73,-11,1],[-72.5,-11,1.1],[-72,-11,1.5],[-71.5,-11,1.5],[-69.5,-11,2.5],[-69,-11,2.5],[-68.5,-11,2],[-68,-11,1.3],[-66.5,-11,3.9],[-66,-11,6.9],[-65.5,-11,3.5],[-65,-11,1.6],[-64.5,-11,1.6],[-64,-11,1.8],[-63.5,-11,3.9],[-63,-11,8.1],[-62.5,-11,11.3],[-62,-11,18.5],[-61.5,-11,10.9],[-61,-11,5.7],[-60.5,-11,4.2],[-60,-11,1.9],[-59.5,-11,1.6],[-59,-11,1.7],[-57.5,-11,3.2],[-57,-11,1.3],[-56.5,-11,1.3],[-56,-11,1.7],[-55.5,-11,2.7],[-55,-11,1.7],[-54.5,-11,1.1],[-52,-11,1.3],[-49.5,-11,1.6],[-49,-11,6.3],[-48.5,-11,2.5],[-48,-11,2.8],[-47.5,-11,2.4],[-47,-11,1.7],[-46.5,-11,1.1],[-46,-11,1.1],[-45.5,-11,1.3],[-45,-11,3.8],[-44.5,-11,3.4],[-44,-11,4],[-43.5,-11,3.5],[-43,-11,3.9],[-42.5,-11,14.5],[-42,-11,42.5],[-41.5,-11,9.7],[-41,-11,25.6],[-40.5,-11,28.2],[-40,-11,20.1],[-39.5,-11,33.8],[-39,-11,26.9],[-38.5,-11,27.5],[-38,-11,65.2],[-37.5,-11,185.4],[13.5,-11,15.2],[14,-11,15.2],[14.5,-11,15.2],[15,-11,15.2],[15.5,-11,18.2],[16,-11,21.2],[16.5,-11,19.9],[17,-11,19.3],[17.5,-11,13.6],[18,-11,13.4],[18.5,-11,16.3],[19,-11,6.9],[19.5,-11,2.3],[20,-11,2.3],[20.5,-11,2.5],[21,-11,2.3],[21.5,-11,2.1],[22,-11,3.1],[22.5,-11,2.9],[23,-11,2.6],[23.5,-11,2.1],[24,-11,10.2],[24.5,-11,17.5],[25,-11,17.3],[25.5,-11,24.3],[26,-11,25],[26.5,-11,26.3],[27,-11,24.1],[27.5,-11,32.1],[28,-11,12.8],[28.5,-11,13.5],[29,-11,13.6],[29.5,-11,17.1],[30,-11,14.7],[30.5,-11,8.3],[31,-11,5.1],[31.5,-11,8.6],[32,-11,5.5],[32.5,-11,4.2],[33,-11,17.9],[33.5,-11,69.9],[34,-11,78.4],[34.5,-11,49.3],[35,-11,36.9],[35.5,-11,12.2],[36,-11,12.9],[36.5,-11,13.1],[37,-11,13.5],[37.5,-11,12],[38,-11,27.4],[38.5,-11,24.9],[39,-11,20],[39.5,-11,23.4],[40,-11,25.8],[40.5,-11,13],[43,-11,355.6],[152,-11,14.2],[152.5,-11,14.2],[153,-11,14.2],[153.5,-11,14.2],[154,-11,14.2],[159.5,-11,4.6],[160,-11,4.6],[166,-11,23.4],[166.5,-11,23.4],[-77.5,-11.5,1229.4],[-77,-11.5,260.1],[-76.5,-11.5,17.1],[-76,-11.5,37.7],[-75.5,-11.5,98.5],[-75,-11.5,14.8],[-74.5,-11.5,5.7],[-74,-11.5,1.3],[-73.5,-11.5,2.1],[-73,-11.5,2.1],[-71.5,-11.5,1.1],[-71,-11.5,2.3],[-70.5,-11.5,1.5],[-70,-11.5,1.2],[-67,-11.5,3.5],[-66.5,-11.5,6.1],[-66,-11.5,5.9],[-65.5,-11.5,4.1],[-65,-11.5,1.2],[-64.5,-11.5,1.5],[-64,-11.5,1.8],[-63.5,-11.5,3.6],[-63,-11.5,3.2],[-62.5,-11.5,10.5],[-62,-11.5,22.5],[-61.5,-11.5,14],[-61,-11.5,3.5],[-60.5,-11.5,3.6],[-60,-11.5,1.7],[-59.5,-11.5,1.8],[-56,-11.5,10],[-55.5,-11.5,12.7],[-55,-11.5,1.2],[-50.5,-11.5,1.4],[-50,-11.5,1.4],[-49.5,-11.5,6.9],[-49,-11.5,13.7],[-48.5,-11.5,2],[-48,-11.5,2.6],[-47.5,-11.5,2.9],[-47,-11.5,3.7],[-46.5,-11.5,7.6],[-46,-11.5,7.5],[-45.5,-11.5,7.4],[-45,-11.5,5.9],[-44.5,-11.5,3.8],[-44,-11.5,3.1],[-43.5,-11.5,5],[-43,-11.5,5.6],[-42.5,-11.5,9.4],[-42,-11.5,26],[-41.5,-11.5,12.9],[-41,-11.5,15.2],[-40.5,-11.5,22.6],[-40,-11.5,21],[-39.5,-11.5,45.1],[-39,-11.5,40.3],[-38.5,-11.5,30.4],[-38,-11.5,29.6],[-37.5,-11.5,14.5],[13.5,-11.5,17.9],[14,-11.5,16.6],[14.5,-11.5,15.4],[15,-11.5,25.5],[15.5,-11.5,58.4],[16,-11.5,52.2],[16.5,-11.5,21.4],[17,-11.5,19.8],[17.5,-11.5,18.4],[18,-11.5,19.4],[18.5,-11.5,17.7],[19,-11.5,3.2],[19.5,-11.5,2],[20,-11.5,2],[20.5,-11.5,2],[21,-11.5,2],[21.5,-11.5,2],[22,-11.5,2],[22.5,-11.5,2],[23,-11.5,2],[23.5,-11.5,2.1],[24,-11.5,5.9],[24.5,-11.5,5.9],[25,-11.5,8.3],[25.5,-11.5,18.7],[26,-11.5,23.9],[26.5,-11.5,25],[27,-11.5,176.3],[27.5,-11.5,147.6],[28,-11.5,11.6],[28.5,-11.5,13],[29,-11.5,13.5],[29.5,-11.5,16.2],[30,-11.5,11.2],[30.5,-11.5,3.9],[31,-11.5,3.9],[31.5,-11.5,4.7],[32,-11.5,3.9],[32.5,-11.5,4.2],[33,-11.5,33.2],[33.5,-11.5,41.9],[34,-11.5,92.9],[34.5,-11.5,9.7],[35,-11.5,8.1],[35.5,-11.5,1.2],[36,-11.5,4.6],[36.5,-11.5,4.5],[37,-11.5,5],[37.5,-11.5,3.1],[38,-11.5,1.2],[38.5,-11.5,1.9],[39,-11.5,8.8],[39.5,-11.5,35.9],[40,-11.5,19.7],[40.5,-11.5,24.8],[43,-11.5,355.6],[43.5,-11.5,355.6],[49,-11.5,3.4],[153,-11.5,14.2],[153.5,-11.5,14.2],[159.5,-11.5,4.6],[160,-11.5,4.6],[160.5,-11.5,4.6],[166.5,-11.5,23.4],[-77,-12,922.8],[-76.5,-12,7],[-76,-12,6.8],[-75.5,-12,102.8],[-75,-12,33.8],[-74.5,-12,6.5],[-74,-12,6.2],[-73.5,-12,2.1],[-73,-12,2.5],[-72.5,-12,2.7],[-70.5,-12,1.7],[-70,-12,2.3],[-69.5,-12,1.4],[-67,-12,1.6],[-66.5,-12,1.2],[-64,-12,1.7],[-63.5,-12,2.4],[-63,-12,1.4],[-62.5,-12,3.1],[-62,-12,4.1],[-61.5,-12,2.1],[-61,-12,1.7],[-60.5,-12,3.9],[-60,-12,2],[-59.5,-12,1.3],[-56.5,-12,1.2],[-56,-12,6.6],[-55.5,-12,4],[-50.5,-12,1.4],[-50,-12,1.3],[-49.5,-12,3.8],[-49,-12,1.9],[-48.5,-12,1.4],[-48,-12,1],[-47.5,-12,1.7],[-47,-12,3.6],[-46.5,-12,5.2],[-46,-12,7.3],[-45.5,-12,10.9],[-45,-12,7.6],[-44.5,-12,8.5],[-44,-12,3.1],[-43.5,-12,8.1],[-43,-12,6.2],[-42.5,-12,6.5],[-42,-12,18.1],[-41.5,-12,13.6],[-41,-12,12.6],[-40.5,-12,20.8],[-40,-12,19.5],[-39.5,-12,75.1],[-39,-12,185.3],[-38.5,-12,88.1],[-38,-12,16.3],[13,-12,20.9],[13.5,-12,20.9],[14,-12,20.9],[14.5,-12,20],[15,-12,54.1],[15.5,-12,58.5],[16,-12,52.1],[16.5,-12,20.3],[17,-12,19.9],[17.5,-12,19.9],[18,-12,19.4],[18.5,-12,8.3],[19,-12,2],[19.5,-12,2],[20,-12,2],[20.5,-12,2],[21,-12,2],[21.5,-12,2],[22,-12,2],[22.5,-12,2],[23,-12,2],[23.5,-12,2.1],[24,-12,5.7],[24.5,-12,5.9],[25,-12,6.9],[25.5,-12,7.1],[26,-12,7.1],[26.5,-12,7.1],[27,-12,19.9],[27.5,-12,47.6],[28,-12,26.4],[28.5,-12,7.9],[29,-12,12.1],[29.5,-12,9],[30,-12,5],[30.5,-12,3.9],[31,-12,3.9],[31.5,-12,3.9],[32,-12,8.5],[32.5,-12,16],[33,-12,35.9],[33.5,-12,32.9],[34,-12,122.3],[34.5,-12,14],[35,-12,4.2],[35.5,-12,1.6],[36,-12,2.1],[37.5,-12,1.2],[39,-12,1.6],[39.5,-12,10],[40,-12,19.1],[40.5,-12,90.6],[43.5,-12,188.5],[44,-12,696.5],[44.5,-12,696.5],[48.5,-12,6.6],[49,-12,48.6],[49.5,-12,22.8],[96.5,-12,42],[130.5,-12,197.2],[131,-12,3.1],[136.5,-12,2.9],[168.5,-12,23.4],[176.5,-12,56.6],[177,-12,56.6],[-77,-12.5,47.4],[-76.5,-12.5,13.7],[-76,-12.5,5.3],[-75.5,-12.5,17.2],[-75,-12.5,48.3],[-74.5,-12.5,30.6],[-74,-12.5,19.5],[-73.5,-12.5,3.3],[-73,-12.5,18.9],[-72.5,-12.5,6.4],[-72,-12.5,2.4],[-71.5,-12.5,1.5],[-71,-12.5,1.6],[-70.5,-12.5,1.5],[-70,-12.5,2],[-69.5,-12.5,2.3],[-67,-12.5,2],[-62.5,-12.5,3.2],[-62,-12.5,2.1],[-61.5,-12.5,2.2],[-61,-12.5,2.2],[-60.5,-12.5,3.8],[-59.5,-12.5,1],[-57,-12.5,1],[-56.5,-12.5,2.7],[-56,-12.5,4.2],[-55.5,-12.5,1.4],[-50.5,-12.5,2.6],[-50,-12.5,1.6],[-49.5,-12.5,2.9],[-49,-12.5,2],[-48.5,-12.5,2],[-47.5,-12.5,1.5],[-47,-12.5,4.5],[-46.5,-12.5,4.6],[-45.5,-12.5,1.3],[-45,-12.5,2.3],[-44.5,-12.5,8.7],[-44,-12.5,9.8],[-43.5,-12.5,9.1],[-43,-12.5,14.1],[-42.5,-12.5,11.8],[-42,-12.5,11],[-41.5,-12.5,9.6],[-41,-12.5,6.4],[-40.5,-12.5,16.7],[-40,-12.5,18.7],[-39.5,-12.5,94.7],[-39,-12.5,575.5],[-38.5,-12.5,733.6],[-38,-12.5,23.2],[12.5,-12.5,20.9],[13,-12.5,20.9],[13.5,-12.5,20.9],[14,-12.5,20.9],[14.5,-12.5,31.1],[15,-12.5,58.1],[15.5,-12.5,58.5],[16,-12.5,52.9],[16.5,-12.5,20.1],[17,-12.5,19.9],[17.5,-12.5,19.9],[18,-12.5,11.7],[18.5,-12.5,2],[19,-12.5,2],[19.5,-12.5,2],[20,-12.5,2],[20.5,-12.5,2],[21,-12.5,2],[21.5,-12.5,2],[22,-12.5,2],[22.5,-12.5,2],[23,-12.5,2],[23.5,-12.5,2.2],[24,-12.5,4.2],[24.5,-12.5,5.7],[25,-12.5,6.6],[25.5,-12.5,6.3],[26,-12.5,6.2],[26.5,-12.5,7.5],[27,-12.5,9.8],[27.5,-12.5,47],[28,-12.5,230.8],[28.5,-12.5,58.6],[29,-12.5,6.9],[29.5,-12.5,6.5],[30,-12.5,5.9],[30.5,-12.5,4.9],[31,-12.5,4],[31.5,-12.5,4.4],[32,-12.5,16.1],[32.5,-12.5,17.6],[33,-12.5,36.4],[33.5,-12.5,65.1],[34,-12.5,80.7],[34.5,-12.5,16.9],[35,-12.5,11.1],[35.5,-12.5,2.4],[36,-12.5,2.7],[36.5,-12.5,2.8],[37,-12.5,2.4],[37.5,-12.5,1.3],[38.5,-12.5,6.6],[39,-12.5,13.6],[39.5,-12.5,14.2],[40,-12.5,21.1],[40.5,-12.5,117.5],[45,-12.5,410.6],[48.5,-12.5,12.9],[49,-12.5,17.4],[49.5,-12.5,10.3],[130.5,-12.5,3.2],[131,-12.5,2.3],[141.5,-12.5,1.6],[177,-12.5,56.6],[-176.5,-13,117],[-173,-13,22.1],[-172.5,-13,22.1],[-77,-13,47.6],[-76.5,-13,122.7],[-76,-13,11.4],[-75.5,-13,5.1],[-75,-13,12.5],[-74.5,-13,56.2],[-74,-13,17.7],[-73.5,-13,8.3],[-73,-13,9.4],[-72.5,-13,39],[-72,-13,44.9],[-71.5,-13,3.9],[-71,-13,1.1],[-70.5,-13,2.3],[-70,-13,2],[-69.5,-13,2.6],[-67.5,-13,1.3],[-67,-13,2],[-62.5,-13,1.3],[-62,-13,1.8],[-61.5,-13,3.9],[-61,-13,7.4],[-60.5,-13,3.6],[-58.5,-13,1.1],[-57,-13,1.9],[-56.5,-13,3.9],[-56,-13,1.6],[-53,-13,1.3],[-52.5,-13,1.1],[-50.5,-13,3.7],[-50,-13,3.3],[-49.5,-13,7.1],[-49,-13,4.1],[-48.5,-13,4.4],[-48,-13,1.1],[-47.5,-13,1.9],[-47,-13,4.7],[-46.5,-13,3.4],[-46,-13,2],[-45.5,-13,2.3],[-45,-13,5.6],[-44.5,-13,16.2],[-44,-13,10],[-43.5,-13,13.4],[-43,-13,13.3],[-42.5,-13,16.6],[-42,-13,12.3],[-41.5,-13,9.2],[-41,-13,11.4],[-40.5,-13,18.6],[-40,-13,39.1],[-39.5,-13,63.3],[-39,-13,57.4],[-38.5,-13,3457.5],[12.5,-13,20.9],[13,-13,20.9],[13.5,-13,20.9],[14,-13,20.9],[14.5,-13,24.3],[15,-13,51.9],[15.5,-13,56.8],[16,-13,48.1],[16.5,-13,21.4],[17,-13,19.9],[17.5,-13,19.4],[18,-13,3.8],[18.5,-13,2],[19,-13,2],[19.5,-13,2],[20,-13,2],[20.5,-13,2],[21,-13,2],[21.5,-13,2],[22,-13,5.3],[22.5,-13,5.3],[23,-13,5.3],[23.5,-13,4.4],[24,-13,4],[24.5,-13,4],[25,-13,3.6],[25.5,-13,2.5],[26,-13,2.2],[26.5,-13,5.8],[27,-13,9.7],[27.5,-13,9.8],[28,-13,42.6],[28.5,-13,48.8],[29,-13,6.4],[29.5,-13,6.1],[30,-13,5.9],[30.5,-13,5.9],[31,-13,5.8],[31.5,-13,25.8],[32,-13,36.5],[32.5,-13,31],[33,-13,75.4],[33.5,-13,123.7],[34,-13,75.7],[34.5,-13,12.9],[35,-13,50.6],[35.5,-13,9.6],[36,-13,3.7],[36.5,-13,2.3],[37,-13,4.8],[37.5,-13,2.5],[38,-13,14.1],[38.5,-13,40.6],[39,-13,34.1],[39.5,-13,45],[40,-13,41.9],[40.5,-13,180.6],[45,-13,410.6],[48,-13,111.3],[48.5,-13,38.2],[49,-13,16.7],[49.5,-13,15.3],[50,-13,302.1],[167,-13,12.6],[167.5,-13,12.6],[-173,-13.5,22.1],[-172.5,-13.5,24.3],[-172,-13.5,112.7],[-171.5,-13.5,75.1],[-76.5,-13.5,80],[-76,-13.5,16.5],[-75.5,-13.5,5.5],[-75,-13.5,4],[-74.5,-13.5,14.3],[-74,-13.5,26.3],[-73.5,-13.5,40.6],[-73,-13.5,33.8],[-72.5,-13.5,36.8],[-72,-13.5,98.6],[-71.5,-13.5,14.3],[-71,-13.5,4.7],[-70.5,-13.5,4.4],[-70,-13.5,2.7],[-69.5,-13.5,3.2],[-67.5,-13.5,1.7],[-67,-13.5,2],[-61,-13.5,1.6],[-58.5,-13.5,1.4],[-58,-13.5,2],[-57.5,-13.5,1.9],[-57,-13.5,2.5],[-56.5,-13.5,1.6],[-56,-13.5,1.3],[-52.5,-13.5,2.3],[-52,-13.5,1.1],[-50.5,-13.5,3.2],[-50,-13.5,3.7],[-49.5,-13.5,6],[-49,-13.5,4],[-48.5,-13.5,9.3],[-48,-13.5,1.3],[-47.5,-13.5,2],[-47,-13.5,3.1],[-46.5,-13.5,2.8],[-46,-13.5,2],[-45.5,-13.5,1.7],[-45,-13.5,3.2],[-44.5,-13.5,5],[-44,-13.5,9.9],[-43.5,-13.5,10.9],[-43,-13.5,14.7],[-42.5,-13.5,12.4],[-42,-13.5,19.1],[-41.5,-13.5,14.8],[-41,-13.5,7.9],[-40.5,-13.5,43.2],[-40,-13.5,51.8],[-39.5,-13.5,45.2],[-39,-13.5,28.1],[12,-13.5,2.5],[12.5,-13.5,4.9],[13,-13.5,7.9],[13.5,-13.5,17.9],[14,-13.5,18.5],[14.5,-13.5,15.5],[15,-13.5,17.2],[15.5,-13.5,24.1],[16,-13.5,14.3],[16.5,-13.5,19.5],[17,-13.5,19.9],[17.5,-13.5,13.5],[18,-13.5,1.3],[18.5,-13.5,1.9],[19,-13.5,2],[19.5,-13.5,2],[20,-13.5,2],[20.5,-13.5,2],[21,-13.5,2],[21.5,-13.5,2],[22,-13.5,4.7],[22.5,-13.5,5.1],[23,-13.5,5.3],[23.5,-13.5,4.5],[24,-13.5,4],[24.5,-13.5,3.7],[25,-13.5,3.6],[25.5,-13.5,2.7],[26,-13.5,2.2],[26.5,-13.5,5.1],[27,-13.5,13.7],[27.5,-13.5,13.8],[28,-13.5,11.7],[28.5,-13.5,8.1],[29,-13.5,4.9],[29.5,-13.5,5],[30,-13.5,6.8],[30.5,-13.5,7.7],[31,-13.5,14.5],[31.5,-13.5,33.4],[32,-13.5,40.6],[32.5,-13.5,60.1],[33,-13.5,143.6],[33.5,-13.5,278.5],[34,-13.5,108.1],[34.5,-13.5,129.8],[35,-13.5,27.1],[35.5,-13.5,7.5],[36,-13.5,2.5],[36.5,-13.5,4],[37,-13.5,5.6],[37.5,-13.5,4.2],[38,-13.5,8.3],[38.5,-13.5,32.4],[39,-13.5,26.4],[39.5,-13.5,41.7],[40,-13.5,31.5],[40.5,-13.5,24.6],[47.5,-13.5,11.4],[48,-13.5,26.9],[48.5,-13.5,21.1],[49,-13.5,13],[49.5,-13.5,28.9],[50,-13.5,34.6],[136.5,-13.5,1],[167,-13.5,12.6],[167.5,-13.5,12.6],[-178.5,-14,51.1],[-178,-14,51.1],[-172,-14,75.1],[-171.5,-14,75.1],[-171,-14,473.4],[-170,-14,28.6],[-169.5,-14,28.6],[-146.5,-14,44.8],[-146,-14,44.8],[-145.5,-14,36.7],[-145,-14,36.7],[-141.5,-14,27.4],[-76.5,-14,18.9],[-76,-14,74.7],[-75.5,-14,6.5],[-75,-14,3.9],[-74.5,-14,3.1],[-74,-14,5.4],[-73.5,-14,8.3],[-73,-14,8.6],[-72.5,-14,16.5],[-72,-14,18.1],[-71.5,-14,36.1],[-71,-14,14],[-70.5,-14,9],[-70,-14,8.1],[-69.5,-14,6.1],[-69,-14,1.3],[-67.5,-14,1.9],[-67,-14,1.9],[-65,-14,6],[-64.5,-14,4.8],[-64,-14,2.9],[-63.5,-14,1.3],[-63,-14,1.6],[-62.5,-14,1.5],[-59.5,-14,1],[-58,-14,7.1],[-57.5,-14,2.2],[-57,-14,5.4],[-56.5,-14,2.5],[-56,-14,3.2],[-55.5,-14,1.2],[-53.5,-14,1.4],[-53,-14,2],[-52.5,-14,2.7],[-51,-14,1.1],[-50.5,-14,3],[-50,-14,8.1],[-49.5,-14,9.4],[-49,-14,2.9],[-48.5,-14,7.6],[-48,-14,2.1],[-47.5,-14,1.8],[-47,-14,8.5],[-46.5,-14,8.9],[-46,-14,1.3],[-45.5,-14,1.5],[-45,-14,2.4],[-44.5,-14,8.1],[-44,-14,9],[-43.5,-14,6.9],[-43,-14,36.4],[-42.5,-14,20.4],[-42,-14,25.3],[-41.5,-14,12],[-41,-14,15.1],[-40.5,-14,21.3],[-40,-14,44.7],[-39.5,-14,39.6],[-39,-14,19.3],[12,-14,2.5],[12.5,-14,2.5],[13,-14,2.5],[13.5,-14,11],[14,-14,14.1],[14.5,-14,14.1],[15,-14,14.1],[15.5,-14,14.1],[16,-14,13.7],[16.5,-14,1.1],[17,-14,8],[18.5,-14,1.2],[19,-14,1.6],[19.5,-14,1.9],[20,-14,2],[20.5,-14,2],[21,-14,2],[21.5,-14,2],[22,-14,5.4],[22.5,-14,4.7],[23,-14,4.3],[23.5,-14,4.3],[24,-14,4.3],[24.5,-14,6],[25,-14,3.9],[25.5,-14,3.4],[26,-14,2.4],[26.5,-14,4],[27,-14,16.5],[27.5,-14,18.1],[28,-14,43.7],[28.5,-14,12.2],[29,-14,4.9],[29.5,-14,4.9],[30,-14,12],[30.5,-14,16.3],[31,-14,17.4],[31.5,-14,37.5],[32,-14,30.8],[32.5,-14,18.3],[33,-14,38.7],[33.5,-14,230.2],[34,-14,167],[34.5,-14,95.9],[35,-14,121.4],[35.5,-14,43.8],[36,-14,12],[36.5,-14,6.7],[37,-14,5.2],[37.5,-14,7.2],[38,-14,12.3],[38.5,-14,16.2],[39,-14,22.5],[39.5,-14,33.2],[40,-14,55.2],[40.5,-14,145.3],[47.5,-14,9.7],[48,-14,9.5],[48.5,-14,11.5],[49,-14,13.2],[49.5,-14,38.1],[50,-14,88.6],[132,-14,3.4],[136,-14,1],[136.5,-14,1],[167,-14,12.6],[167.5,-14,12.6],[-149,-14.5,43.7],[-148.5,-14.5,43.7],[-148,-14.5,43.7],[-146.5,-14.5,44.8],[-145.5,-14.5,36.7],[-139,-14.5,45.3],[-76,-14.5,4.9],[-75.5,-14.5,11.2],[-75,-14.5,9.4],[-74.5,-14.5,4.7],[-74,-14.5,6.9],[-73.5,-14.5,1.5],[-73,-14.5,3.3],[-72.5,-14.5,10],[-72,-14.5,9.2],[-71.5,-14.5,16.9],[-71,-14.5,14.5],[-70.5,-14.5,28.3],[-70,-14.5,12.5],[-69.5,-14.5,4],[-69,-14.5,2.3],[-68.5,-14.5,1.1],[-68,-14.5,1],[-67.5,-14.5,1.8],[-67,-14.5,1.9],[-65,-14.5,5.9],[-64.5,-14.5,5.3],[-64,-14.5,3.8],[-63.5,-14.5,1.7],[-63,-14.5,1.7],[-62.5,-14.5,1.7],[-62,-14.5,1.3],[-60,-14.5,1.4],[-59.5,-14.5,3.3],[-58,-14.5,12.8],[-57.5,-14.5,8.3],[-57,-14.5,6.7],[-56.5,-14.5,5.3],[-56,-14.5,1.6],[-55.5,-14.5,1.6],[-55,-14.5,2.2],[-54.5,-14.5,4.5],[-54,-14.5,1.6],[-53.5,-14.5,2],[-53,-14.5,2.7],[-52.5,-14.5,4],[-52,-14.5,1.1],[-51,-14.5,3.8],[-50.5,-14.5,2.9],[-50,-14.5,6.6],[-49.5,-14.5,11.8],[-49,-14.5,3],[-48.5,-14.5,2.5],[-48,-14.5,2.5],[-47.5,-14.5,2.9],[-47,-14.5,3],[-46.5,-14.5,2.9],[-46,-14.5,1.6],[-45.5,-14.5,1.8],[-45,-14.5,3.4],[-44.5,-14.5,10.9],[-44,-14.5,7.6],[-43.5,-14.5,4],[-43,-14.5,18.1],[-42.5,-14.5,15.7],[-42,-14.5,17.6],[-41.5,-14.5,17.5],[-41,-14.5,90.5],[-40.5,-14.5,30.9],[-40,-14.5,37.2],[-39.5,-14.5,168.5],[-39,-14.5,36.4],[12,-14.5,2.5],[12.5,-14.5,2.5],[13,-14.5,4.3],[13.5,-14.5,12.9],[14,-14.5,14.1],[14.5,-14.5,14.1],[15,-14.5,14.1],[15.5,-14.5,14.1],[16,-14.5,14.1],[16.5,-14.5,3.2],[19.5,-14.5,1.1],[20,-14.5,1.9],[20.5,-14.5,2],[21,-14.5,2],[21.5,-14.5,2],[22,-14.5,6.6],[22.5,-14.5,6.4],[23,-14.5,8.9],[23.5,-14.5,9.8],[24,-14.5,7.5],[24.5,-14.5,7.5],[25,-14.5,6.8],[25.5,-14.5,7.2],[26,-14.5,6.4],[26.5,-14.5,7.7],[27,-14.5,13.1],[27.5,-14.5,18.1],[28,-14.5,40.8],[28.5,-14.5,15.7],[29,-14.5,7],[29.5,-14.5,11.2],[30,-14.5,15.9],[30.5,-14.5,11.4],[31,-14.5,8.6],[31.5,-14.5,5.7],[32,-14.5,4.2],[32.5,-14.5,5],[33,-14.5,8.2],[33.5,-14.5,19.4],[34,-14.5,92.5],[34.5,-14.5,135.9],[35,-14.5,114.9],[35.5,-14.5,97.7],[36,-14.5,19.8],[36.5,-14.5,27.3],[37,-14.5,18.5],[37.5,-14.5,24],[38,-14.5,22.1],[38.5,-14.5,23],[39,-14.5,23.6],[39.5,-14.5,42.1],[40,-14.5,65.9],[40.5,-14.5,107.4],[47,-14.5,6.4],[47.5,-14.5,13.4],[48,-14.5,22.2],[48.5,-14.5,17.4],[49,-14.5,24.5],[49.5,-14.5,41.7],[50,-14.5,40.8],[166.5,-14.5,10.3],[167,-14.5,10.3],[-148.5,-15,43.7],[-148,-15,43.7],[-147.5,-15,43.7],[-146.5,-15,90.7],[-146,-15,12.7],[-145.5,-15,12.7],[-75.5,-15,7.6],[-75,-15,3.4],[-74.5,-15,3.3],[-74,-15,3.9],[-73.5,-15,4.3],[-73,-15,4.6],[-72.5,-15,4.1],[-72,-15,3.8],[-71.5,-15,5.2],[-71,-15,7.3],[-70.5,-15,73.1],[-70,-15,51.1],[-69.5,-15,21.6],[-69,-15,9.2],[-68.5,-15,6.5],[-68,-15,6.9],[-67.5,-15,6.5],[-67,-15,1.9],[-63.5,-15,1.6],[-63,-15,1.7],[-62.5,-15,1.7],[-62,-15,1.4],[-60,-15,1.1],[-59.5,-15,3.4],[-59,-15,6.4],[-58.5,-15,7.5],[-58,-15,4.1],[-57.5,-15,4.7],[-57,-15,3.4],[-56.5,-15,11.9],[-56,-15,13.2],[-55.5,-15,2.7],[-55,-15,3.6],[-54.5,-15,6.4],[-54,-15,1.5],[-53.5,-15,1.1],[-53,-15,4.5],[-52.5,-15,4.5],[-51.5,-15,2.3],[-51,-15,2.9],[-50.5,-15,4.2],[-50,-15,26],[-49.5,-15,18.3],[-49,-15,4.5],[-48.5,-15,5.5],[-48,-15,26],[-47.5,-15,13.4],[-47,-15,2.6],[-46.5,-15,2.2],[-46,-15,2.3],[-45.5,-15,2.2],[-45,-15,3.4],[-44.5,-15,16.1],[-44,-15,8.8],[-43.5,-15,9.5],[-43,-15,17.5],[-42.5,-15,9.6],[-42,-15,12.6],[-41.5,-15,17.5],[-41,-15,24.5],[-40.5,-15,26.4],[-40,-15,21.8],[-39.5,-15,32.7],[-39,-15,13.7],[12,-15,2.5],[12.5,-15,2.5],[13,-15,6.5],[13.5,-15,14.1],[14,-15,14.1],[14.5,-15,14.1],[15,-15,14.1],[15.5,-15,12.5],[16,-15,10.4],[16.5,-15,4.1],[21,-15,1.5],[21.5,-15,2],[22,-15,6.6],[22.5,-15,8.1],[23,-15,16.3],[23.5,-15,16.2],[24,-15,8.5],[24.5,-15,7.6],[25,-15,7.4],[25.5,-15,7.2],[26,-15,7.3],[26.5,-15,7.4],[27,-15,7.7],[27.5,-15,13.4],[28,-15,351.4],[28.5,-15,17.9],[29,-15,17.8],[29.5,-15,13.3],[30,-15,4.6],[30.5,-15,3.5],[31,-15,4.1],[31.5,-15,4.8],[32,-15,3.5],[32.5,-15,3.2],[33,-15,10.1],[33.5,-15,7.8],[34,-15,26.9],[34.5,-15,73.9],[35,-15,200.6],[35.5,-15,51.6],[36,-15,22.9],[36.5,-15,32.2],[37,-15,36.3],[37.5,-15,27],[38,-15,20.5],[38.5,-15,30],[39,-15,148.6],[39.5,-15,32.4],[40,-15,33.2],[40.5,-15,90.9],[46.5,-15,6.4],[47,-15,10],[47.5,-15,16.6],[48,-15,17.3],[48.5,-15,25.2],[49,-15,13.2],[49.5,-15,37.7],[50,-15,42.1],[166.5,-15,10.3],[167,-15,10.3],[-180,-15.5,32.6],[-179.5,-15.5,15.1],[-174,-15.5,104.3],[-148.5,-15.5,43.7],[-146.5,-15.5,31.7],[-146,-15.5,12.7],[-145.5,-15.5,12.7],[-142.5,-15.5,13],[-141,-15.5,11],[-140.5,-15.5,11],[-75,-15.5,3.7],[-74.5,-15.5,3.4],[-74,-15.5,1.5],[-73.5,-15.5,4.4],[-73,-15.5,6],[-72.5,-15.5,4.2],[-72,-15.5,8.5],[-71.5,-15.5,2],[-71,-15.5,4.1],[-70.5,-15.5,57.6],[-70,-15.5,77.7],[-69.5,-15.5,30.5],[-69,-15.5,20.6],[-68.5,-15.5,23.6],[-68,-15.5,145.8],[-67.5,-15.5,11.6],[-67,-15.5,2],[-65.5,-15.5,3.5],[-65,-15.5,3.5],[-64.5,-15.5,1.2],[-64,-15.5,1.2],[-63.5,-15.5,1.5],[-63,-15.5,1.7],[-62.5,-15.5,1.7],[-62,-15.5,1.6],[-60,-15.5,3.4],[-59.5,-15.5,2.9],[-59,-15.5,3.7],[-58.5,-15.5,11.2],[-58,-15.5,6.9],[-57.5,-15.5,2.6],[-57,-15.5,2],[-56.5,-15.5,154.6],[-56,-15.5,64.7],[-55.5,-15.5,7.5],[-55,-15.5,5.6],[-54.5,-15.5,4.6],[-53,-15.5,2.7],[-52.5,-15.5,7.2],[-52,-15.5,3],[-51.5,-15.5,4.6],[-51,-15.5,7.5],[-50.5,-15.5,10.5],[-50,-15.5,19.8],[-49.5,-15.5,15.4],[-49,-15.5,8.7],[-48.5,-15.5,212.1],[-48,-15.5,353.3],[-47.5,-15.5,112],[-47,-15.5,5.6],[-46.5,-15.5,5.2],[-46,-15.5,2.8],[-45.5,-15.5,3.3],[-45,-15.5,10.7],[-44.5,-15.5,18.4],[-44,-15.5,17.2],[-43.5,-15.5,24.8],[-43,-15.5,12.3],[-42.5,-15.5,13.5],[-42,-15.5,11.3],[-41.5,-15.5,14.8],[-41,-15.5,14.1],[-40.5,-15.5,12.1],[-40,-15.5,15.1],[-39.5,-15.5,16.8],[-39,-15.5,34.2],[-6,-15.5,40.9],[11.5,-15.5,2.5],[12,-15.5,2.5],[12.5,-15.5,2.5],[13,-15.5,2.5],[13.5,-15.5,12.8],[14,-15.5,13.8],[14.5,-15.5,11.7],[15,-15.5,11],[15.5,-15.5,3.8],[16,-15.5,3.8],[16.5,-15.5,3.8],[17,-15.5,2.4],[21.5,-15.5,1.7],[22,-15.5,6.6],[22.5,-15.5,6.4],[23,-15.5,6.6],[23.5,-15.5,11.8],[24,-15.5,5.5],[24.5,-15.5,4.4],[25,-15.5,7],[25.5,-15.5,6.5],[26,-15.5,6.5],[26.5,-15.5,6.5],[27,-15.5,19.4],[27.5,-15.5,28.7],[28,-15.5,72],[28.5,-15.5,18.3],[29,-15.5,15.7],[29.5,-15.5,13],[30,-15.5,14.7],[30.5,-15.5,7.2],[31,-15.5,5.3],[31.5,-15.5,7],[32,-15.5,9.5],[32.5,-15.5,22.4],[33,-15.5,15.7],[33.5,-15.5,14.2],[34,-15.5,35],[34.5,-15.5,112.4],[35,-15.5,451.5],[35.5,-15.5,115.9],[36,-15.5,18.5],[36.5,-15.5,30.9],[37,-15.5,47.5],[37.5,-15.5,38.6],[38,-15.5,17.1],[38.5,-15.5,31.4],[39,-15.5,44],[39.5,-15.5,36.9],[40,-15.5,36.1],[40.5,-15.5,55.9],[45,-15.5,5.2],[45.5,-15.5,20.7],[46,-15.5,102.1],[46.5,-15.5,11],[47,-15.5,12.9],[47.5,-15.5,22.6],[48,-15.5,15.3],[48.5,-15.5,31.2],[49,-15.5,18.3],[49.5,-15.5,21.1],[50,-15.5,16.4],[166.5,-15.5,10.3],[167,-15.5,11.7],[179.5,-15.5,33.1],[-180,-16,17.8],[-179.5,-16,15.1],[-152.5,-16,110.4],[-152,-16,139.1],[-146.5,-16,5.5],[-146,-16,12.7],[-145.5,-16,12.7],[-145,-16,12.7],[-144,-16,13],[-143.5,-16,13],[-143,-16,13],[-142.5,-16,11.7],[-140.5,-16,11],[-74.5,-16,1.4],[-74,-16,1.4],[-73.5,-16,2.8],[-73,-16,6.8],[-72.5,-16,4.6],[-72,-16,158],[-71.5,-16,105.8],[-71,-16,3.2],[-70.5,-16,6.9],[-70,-16,36.1],[-69.5,-16,69.7],[-69,-16,46.2],[-68.5,-16,162.8],[-68,-16,58.1],[-67.5,-16,11.1],[-67,-16,7.4],[-66.5,-16,4.9],[-66,-16,3.8],[-65.5,-16,11.1],[-65,-16,8.1],[-64.5,-16,11.2],[-64,-16,11],[-63.5,-16,1.7],[-63,-16,1.7],[-62.5,-16,1.7],[-62,-16,1.4],[-60,-16,1.2],[-59.5,-16,1.2],[-59,-16,1.7],[-58.5,-16,2.9],[-58,-16,3.3],[-57.5,-16,2.9],[-57,-16,1.9],[-56.5,-16,2.3],[-56,-16,1.5],[-55.5,-16,3.3],[-55,-16,27.9],[-54.5,-16,10.5],[-54,-16,2.9],[-53,-16,1.9],[-52.5,-16,4.7],[-52,-16,4.8],[-51.5,-16,11.8],[-51,-16,6.4],[-50.5,-16,16.8],[-50,-16,26.4],[-49.5,-16,49.3],[-49,-16,87.5],[-48.5,-16,86.6],[-48,-16,87],[-47.5,-16,22.2],[-47,-16,6.4],[-46.5,-16,3.9],[-46,-16,4.2],[-45.5,-16,6.1],[-45,-16,17],[-44.5,-16,17.6],[-44,-16,9.6],[-43.5,-16,6.2],[-43,-16,6.5],[-42.5,-16,13.9],[-42,-16,13.5],[-41.5,-16,11.1],[-41,-16,13.5],[-40.5,-16,11.1],[-40,-16,30.2],[-39.5,-16,43.5],[-39,-16,16.1],[-6,-16,40.9],[11.5,-16,2.5],[12,-16,2.5],[12.5,-16,2.5],[13,-16,2.8],[13.5,-16,9.2],[14,-16,5.4],[14.5,-16,3.8],[15,-16,4.1],[15.5,-16,3.8],[16,-16,3.8],[16.5,-16,3.8],[17,-16,3.2],[22,-16,5.6],[22.5,-16,6.2],[23,-16,6.2],[23.5,-16,6.2],[24,-16,3.8],[24.5,-16,2.9],[25,-16,5.3],[25.5,-16,6.9],[26,-16,7],[26.5,-16,16.1],[27,-16,41.8],[27.5,-16,34],[28,-16,15.7],[28.5,-16,19.1],[29,-16,15.5],[29.5,-16,16.2],[30,-16,21.8],[30.5,-16,24.2],[31,-16,24.6],[31.5,-16,24.2],[32,-16,4],[32.5,-16,6],[33,-16,26.2],[33.5,-16,51],[34,-16,10.5],[34.5,-16,97.2],[35,-16,204.5],[35.5,-16,92.4],[36,-16,26],[36.5,-16,27.4],[37,-16,50.3],[37.5,-16,31.8],[38,-16,14.8],[38.5,-16,17.7],[39,-16,43.3],[39.5,-16,83.4],[40,-16,214.3],[44,-16,3.1],[44.5,-16,3.8],[45,-16,4.9],[45.5,-16,7.2],[46,-16,13.2],[46.5,-16,33.7],[47,-16,19.4],[47.5,-16,15.3],[48,-16,8.9],[48.5,-16,15.7],[49,-16,18.4],[49.5,-16,29.9],[139,-16,1],[139.5,-16,1],[145,-16,4.9],[145.5,-16,6.5],[167,-16,14.4],[167.5,-16,14.4],[168,-16,15.7],[178.5,-16,33.1],[179,-16,32.6],[179.5,-16,25.4],[-180,-16.5,15.1],[-179.5,-16.5,21.1],[-152,-16.5,94],[-151.5,-16.5,61.4],[-151,-16.5,67.5],[-145.5,-16.5,18.7],[-144,-16.5,13],[-143.5,-16.5,8.4],[-73.5,-16.5,5.3],[-73,-16.5,52.9],[-72.5,-16.5,4.5],[-72,-16.5,18.5],[-71.5,-16.5,6.2],[-71,-16.5,5.2],[-70.5,-16.5,3.7],[-70,-16.5,3.6],[-69.5,-16.5,18.6],[-69,-16.5,20.9],[-68.5,-16.5,82.8],[-68,-16.5,103.6],[-67.5,-16.5,9.3],[-67,-16.5,8],[-66.5,-16.5,9.7],[-66,-16.5,11.7],[-65.5,-16.5,11.1],[-65,-16.5,7.5],[-64.5,-16.5,6],[-64,-16.5,12.2],[-63.5,-16.5,13.1],[-63,-16.5,1.7],[-62.5,-16.5,1.7],[-62,-16.5,1.3],[-58.5,-16.5,3],[-58,-16.5,3.2],[-57.5,-16.5,2.1],[-57,-16.5,1.6],[-55,-16.5,17.9],[-54.5,-16.5,4.1],[-54,-16.5,3.3],[-53.5,-16.5,2.2],[-53,-16.5,3],[-52.5,-16.5,2.2],[-52,-16.5,2.8],[-51.5,-16.5,4.2],[-51,-16.5,4.4],[-50.5,-16.5,12.8],[-50,-16.5,34.1],[-49.5,-16.5,525.2],[-49,-16.5,10.8],[-48.5,-16.5,16.2],[-48,-16.5,14.4],[-47.5,-16.5,9.7],[-47,-16.5,8.2],[-46.5,-16.5,4.7],[-46,-16.5,2.7],[-45.5,-16.5,2],[-45,-16.5,7.1],[-44.5,-16.5,22.6],[-44,-16.5,77.6],[-43.5,-16.5,3.7],[-43,-16.5,8],[-42.5,-16.5,16.2],[-42,-16.5,15.4],[-41.5,-16.5,10.6],[-41,-16.5,12.1],[-40.5,-16.5,11.1],[-40,-16.5,21.2],[-39.5,-16.5,9.6],[11.5,-16.5,2.5],[12,-16.5,2.5],[12.5,-16.5,2.5],[13,-16.5,3.1],[13.5,-16.5,3.8],[14,-16.5,3.8],[14.5,-16.5,3.8],[15,-16.5,3.8],[15.5,-16.5,3.8],[16,-16.5,3.8],[16.5,-16.5,3.8],[17,-16.5,2.4],[22,-16.5,2],[22.5,-16.5,5.9],[23,-16.5,6.2],[23.5,-16.5,4.7],[24,-16.5,2.9],[24.5,-16.5,2.9],[25,-16.5,6],[25.5,-16.5,7.7],[26,-16.5,7.7],[26.5,-16.5,18.2],[27,-16.5,28],[27.5,-16.5,7.8],[28,-16.5,7.6],[28.5,-16.5,10.1],[29,-16.5,14.9],[29.5,-16.5,16.3],[30,-16.5,21.1],[30.5,-16.5,27.7],[31,-16.5,39.5],[31.5,-16.5,43.4],[32,-16.5,35.7],[32.5,-16.5,25.2],[33,-16.5,10.3],[33.5,-16.5,7.2],[34,-16.5,12.4],[34.5,-16.5,23.4],[35,-16.5,56.9],[35.5,-16.5,26.2],[36,-16.5,14.8],[36.5,-16.5,26.3],[37,-16.5,32.8],[37.5,-16.5,12.5],[38,-16.5,15.4],[38.5,-16.5,11.9],[39,-16.5,46.8],[39.5,-16.5,46.9],[44,-16.5,4],[44.5,-16.5,3.7],[45,-16.5,4.1],[45.5,-16.5,5.2],[46,-16.5,7.9],[46.5,-16.5,21.3],[47,-16.5,9.2],[47.5,-16.5,7.6],[48,-16.5,5.6],[48.5,-16.5,8.7],[49,-16.5,27.3],[49.5,-16.5,26.1],[50,-16.5,65.1],[145.5,-16.5,101.6],[146,-16.5,5.6],[167,-16.5,14.4],[167.5,-16.5,14.4],[168,-16.5,43.8],[168.5,-16.5,43.8],[177,-16.5,84.3],[177.5,-16.5,84.4],[178,-16.5,21],[178.5,-16.5,23.4],[179,-16.5,21.7],[179.5,-16.5,15.1],[-180,-17,16.8],[-179.5,-17,20.9],[-179,-17,21.1],[-150,-17,88.7],[-149.5,-17,176.9],[-146,-17,20.5],[-145.5,-17,20.5],[-138.5,-17,18.1],[-72.5,-17,19.5],[-72,-17,15.7],[-71.5,-17,10.9],[-71,-17,10.8],[-70.5,-17,5.2],[-70,-17,3.8],[-69.5,-17,4.4],[-69,-17,4.1],[-68.5,-17,10.2],[-68,-17,17],[-67.5,-17,14],[-67,-17,11.3],[-66.5,-17,236],[-66,-17,19.3],[-65.5,-17,10.7],[-65,-17,9.1],[-64.5,-17,6.6],[-64,-17,6.5],[-63.5,-17,28.8],[-63,-17,11.1],[-62.5,-17,1.7],[-62,-17,1.4],[-61.5,-17,1],[-61,-17,1.2],[-60.5,-17,1.3],[-60,-17,1.4],[-58.5,-17,2.1],[-58,-17,3.2],[-57.5,-17,2.1],[-57,-17,1.1],[-55,-17,2],[-54.5,-17,1.4],[-54,-17,2],[-53.5,-17,2.9],[-53,-17,4.7],[-52.5,-17,2.4],[-52,-17,5.4],[-51.5,-17,4.2],[-51,-17,8.2],[-50.5,-17,8.5],[-50,-17,9.5],[-49.5,-17,10.7],[-49,-17,9.6],[-48.5,-17,11],[-48,-17,3.2],[-47.5,-17,8.5],[-47,-17,9.1],[-46.5,-17,5.8],[-46,-17,2.2],[-45.5,-17,3.1],[-45,-17,22.5],[-44.5,-17,20.9],[-44,-17,12.4],[-43.5,-17,3.5],[-43,-17,14.1],[-42.5,-17,16.7],[-42,-17,19.7],[-41.5,-17,13.5],[-41,-17,10.8],[-40.5,-17,16],[-40,-17,23.7],[-39.5,-17,16.2],[11.5,-17,1.4],[12,-17,1.3],[12.5,-17,1.1],[13.5,-17,2.4],[14,-17,3.4],[14.5,-17,9],[15,-17,12.6],[15.5,-17,19],[16,-17,11.6],[16.5,-17,5.1],[17,-17,2.9],[17.5,-17,1.6],[18,-17,1.1],[22.5,-17,2],[23,-17,4.8],[23.5,-17,2.9],[24,-17,4.7],[24.5,-17,2.9],[25,-17,7],[25.5,-17,7.8],[26,-17,10.6],[26.5,-17,8.1],[27,-17,26],[27.5,-17,10.3],[28,-17,12],[28.5,-17,20.4],[29,-17,19.7],[29.5,-17,18],[30,-17,28.9],[30.5,-17,44.5],[31,-17,55.9],[31.5,-17,40.3],[32,-17,34.1],[32.5,-17,29.9],[33,-17,13.6],[33.5,-17,3.9],[34,-17,8.9],[34.5,-17,17.9],[35,-17,49.2],[35.5,-17,31.5],[36,-17,15.4],[36.5,-17,39],[37,-17,50.9],[37.5,-17,46.5],[38,-17,30.8],[38.5,-17,10.7],[39,-17,13.7],[43.5,-17,2.8],[44,-17,4],[44.5,-17,2.4],[45,-17,2.8],[45.5,-17,2.9],[46,-17,4.3],[46.5,-17,7.1],[47,-17,6],[47.5,-17,6.5],[48,-17,44.4],[48.5,-17,50.1],[49,-17,90],[49.5,-17,98.9],[145,-17,2],[145.5,-17,14],[146,-17,9.5],[168,-17,43.8],[168.5,-17,43.8],[176.5,-17,84.4],[177,-17,84.4],[177.5,-17,80.3],[178,-17,25],[178.5,-17,31.1],[179,-17,41.3],[179.5,-17,15.1],[-179.5,-17.5,21.1],[-179,-17.5,21.1],[-151,-17.5,43],[-150,-17.5,155.2],[-149.5,-17.5,142],[-143,-17.5,18.9],[-141,-17.5,26.4],[-71.5,-17.5,46.2],[-71,-17.5,3.5],[-70.5,-17.5,38.9],[-70,-17.5,2.6],[-69.5,-17.5,3.1],[-69,-17.5,3.2],[-68.5,-17.5,2.9],[-68,-17.5,16.9],[-67.5,-17.5,36.3],[-67,-17.5,34.8],[-66.5,-17.5,52.4],[-66,-17.5,32.4],[-65.5,-17.5,9],[-65,-17.5,8.3],[-64.5,-17.5,6.5],[-64,-17.5,39.8],[-63.5,-17.5,212.8],[-63,-17.5,92.7],[-62.5,-17.5,1.6],[-62,-17.5,1.6],[-61.5,-17.5,1.6],[-61,-17.5,1.6],[-60.5,-17.5,1.6],[-60,-17.5,1.5],[-57.5,-17.5,1.1],[-55.5,-17.5,1.7],[-55,-17.5,2.5],[-54.5,-17.5,2.1],[-54,-17.5,1.6],[-53.5,-17.5,3.4],[-53,-17.5,4.2],[-52.5,-17.5,5.4],[-52,-17.5,11.1],[-51.5,-17.5,13.9],[-51,-17.5,18.7],[-50.5,-17.5,9],[-50,-17.5,11.3],[-49.5,-17.5,13.1],[-49,-17.5,20.6],[-48.5,-17.5,9],[-48,-17.5,7.9],[-47.5,-17.5,3],[-47,-17.5,7.9],[-46.5,-17.5,6.8],[-46,-17.5,2.9],[-45.5,-17.5,3.3],[-45,-17.5,10.7],[-44.5,-17.5,5.3],[-44,-17.5,6],[-43.5,-17.5,6.1],[-43,-17.5,15.2],[-42.5,-17.5,22.9],[-42,-17.5,38.6],[-41.5,-17.5,20.4],[-41,-17.5,10],[-40.5,-17.5,17.6],[-40,-17.5,41.1],[-39.5,-17.5,15],[14,-17.5,1.4],[14.5,-17.5,15.3],[15,-17.5,24.9],[15.5,-17.5,74.2],[16,-17.5,31.8],[16.5,-17.5,6.4],[17,-17.5,3.9],[17.5,-17.5,3.9],[18,-17.5,2.2],[18.5,-17.5,2.1],[19,-17.5,1.7],[19.5,-17.5,9.5],[20,-17.5,1],[21,-17.5,1.1],[21.5,-17.5,1.1],[22,-17.5,1.7],[23,-17.5,1.4],[23.5,-17.5,2.6],[24,-17.5,10.7],[24.5,-17.5,7],[25,-17.5,5.9],[25.5,-17.5,31.1],[26,-17.5,13.9],[26.5,-17.5,11.1],[27,-17.5,16.2],[27.5,-17.5,9.9],[28,-17.5,23.9],[28.5,-17.5,28.5],[29,-17.5,27.7],[29.5,-17.5,24.4],[30,-17.5,38.6],[30.5,-17.5,96.4],[31,-17.5,228.3],[31.5,-17.5,51.1],[32,-17.5,37.2],[32.5,-17.5,24.7],[33,-17.5,12.9],[33.5,-17.5,2.3],[34,-17.5,9.4],[34.5,-17.5,21.9],[35,-17.5,27.9],[35.5,-17.5,15.5],[36,-17.5,10.2],[36.5,-17.5,104.9],[37,-17.5,133.8],[37.5,-17.5,64.9],[43.5,-17.5,2.8],[44,-17.5,3.6],[44.5,-17.5,2.9],[45,-17.5,4.1],[45.5,-17.5,6],[46,-17.5,8.5],[46.5,-17.5,8.1],[47,-17.5,8.8],[47.5,-17.5,14.9],[48,-17.5,53.8],[48.5,-17.5,48.5],[49,-17.5,62.2],[49.5,-17.5,81.6],[145.5,-17.5,6.8],[146,-17.5,11.8],[168,-17.5,43.8],[168.5,-17.5,43.8],[177,-17.5,60.2],[177.5,-17.5,62.2],[178,-17.5,57.8],[178.5,-17.5,55.1],[179,-17.5,41.4],[-179.5,-18,21.1],[-179,-18,21.1],[-178.5,-18,21.1],[-174.5,-18,87.1],[-163.5,-18,2.6],[-142.5,-18,2],[-141,-18,16],[-137.5,-18,12.3],[-137,-18,12.3],[-136.5,-18,12.3],[-71,-18,21],[-70.5,-18,47.6],[-70,-18,26.9],[-69,-18,1],[-68.5,-18,1.4],[-68,-18,3.3],[-67.5,-18,16.8],[-67,-18,23.2],[-66.5,-18,18.7],[-66,-18,15.4],[-65.5,-18,10.5],[-65,-18,5.9],[-64.5,-18,5.5],[-64,-18,24],[-63.5,-18,54.8],[-63,-18,1.2],[-62.5,-18,1.3],[-62,-18,1.3],[-61.5,-18,1.4],[-61,-18,1.5],[-60.5,-18,1.5],[-60,-18,1.6],[-59.5,-18,1.4],[-59,-18,1.1],[-58.5,-18,1.1],[-58,-18,3.9],[-57.5,-18,4.7],[-55.5,-18,3.2],[-55,-18,6],[-54.5,-18,1.2],[-53.5,-18,2.6],[-53,-18,2.1],[-52.5,-18,1.6],[-52,-18,6.6],[-51.5,-18,8.3],[-51,-18,9.4],[-50.5,-18,10.3],[-50,-18,18.8],[-49.5,-18,22.2],[-49,-18,8.6],[-48.5,-18,8.1],[-48,-18,18.6],[-47.5,-18,7.3],[-47,-18,12.6],[-46.5,-18,5.6],[-46,-18,3],[-45.5,-18,9.1],[-45,-18,5.1],[-44.5,-18,5.8],[-44,-18,15.4],[-43.5,-18,12.1],[-43,-18,19.3],[-42.5,-18,16.4],[-42,-18,12.9],[-41.5,-18,13.6],[-41,-18,11.7],[-40.5,-18,20.5],[-40,-18,22.5],[-39.5,-18,11.9],[14,-18,1.3],[14.5,-18,3.6],[15,-18,1.8],[15.5,-18,4.7],[16,-18,15.2],[16.5,-18,2.3],[17,-18,1.8],[17.5,-18,1.8],[18,-18,2.2],[18.5,-18,3.3],[19,-18,3.7],[19.5,-18,12.4],[20,-18,1.8],[20.5,-18,2.3],[21,-18,3.2],[21.5,-18,2.8],[22,-18,2],[23,-18,1.4],[23.5,-18,3],[24,-18,1.2],[24.5,-18,1.1],[25,-18,1.3],[25.5,-18,4.6],[26,-18,4.8],[26.5,-18,5.4],[27,-18,8.7],[27.5,-18,10.9],[28,-18,27.7],[28.5,-18,28.5],[29,-18,28.5],[29.5,-18,28.2],[30,-18,39.4],[30.5,-18,38.4],[31,-18,57.7],[31.5,-18,44],[32,-18,36.5],[32.5,-18,30.5],[33,-18,19.5],[33.5,-18,3.6],[34,-18,7.9],[34.5,-18,7.7],[35,-18,6.3],[35.5,-18,16],[36,-18,21.4],[36.5,-18,53],[37,-18,192.7],[44,-18,9.8],[44.5,-18,3.2],[45,-18,2.7],[45.5,-18,9.6],[46,-18,11.2],[46.5,-18,13.5],[47,-18,20.8],[47.5,-18,34.8],[48,-18,37.9],[48.5,-18,15.3],[49,-18,91],[145.5,-18,2.5],[146,-18,4.1],[177,-18,23.4],[177.5,-18,22.7],[178,-18,100.9],[178.5,-18,188.3],[179,-18,41.4],[-180,-18.5,21.1],[-179.5,-18.5,21.1],[-179,-18.5,21.1],[-178.5,-18.5,21.1],[-175,-18.5,87.1],[-174.5,-18.5,87.1],[-174,-18.5,87.1],[-170,-18.5,7.5],[-160,-18.5,120.5],[-139,-18.5,23.6],[-136.5,-18.5,12.3],[-70.5,-18.5,31.3],[-70,-18.5,12.2],[-69,-18.5,1.3],[-68.5,-18.5,1.5],[-68,-18.5,3.3],[-67.5,-18.5,4.1],[-67,-18.5,11.1],[-66.5,-18.5,20.6],[-66,-18.5,22.7],[-65.5,-18.5,46.9],[-65,-18.5,7.6],[-64.5,-18.5,5.5],[-64,-18.5,3.9],[-63.5,-18.5,1.2],[-63,-18.5,1.2],[-62.5,-18.5,1.2],[-62,-18.5,1.2],[-61.5,-18.5,1.2],[-61,-18.5,1.2],[-60.5,-18.5,1.2],[-60,-18.5,1.2],[-59.5,-18.5,1.3],[-59,-18.5,1.5],[-58.5,-18.5,1.6],[-58,-18.5,10.4],[-57.5,-18.5,4.7],[-55.5,-18.5,2.2],[-55,-18.5,2.3],[-53.5,-18.5,2.4],[-53,-18.5,2.5],[-52.5,-18.5,1.6],[-52,-18.5,1.9],[-51.5,-18.5,3.3],[-51,-18.5,9.6],[-50.5,-18.5,9.3],[-50,-18.5,20.4],[-49.5,-18.5,18.6],[-49,-18.5,18.7],[-48.5,-18.5,137.8],[-48,-18.5,12.9],[-47.5,-18.5,21.9],[-47,-18.5,38.1],[-46.5,-18.5,23.8],[-46,-18.5,5.1],[-45.5,-18.5,4.6],[-45,-18.5,16],[-44.5,-18.5,14.5],[-44,-18.5,9],[-43.5,-18.5,15.8],[-43,-18.5,25.7],[-42.5,-18.5,37.1],[-42,-18.5,69.8],[-41.5,-18.5,25.7],[-41,-18.5,33.6],[-40.5,-18.5,35.3],[-40,-18.5,40.8],[14,-18.5,1.2],[14.5,-18.5,1.9],[15,-18.5,1.9],[16,-18.5,2.6],[16.5,-18.5,2.7],[17,-18.5,1.1],[18,-18.5,1.9],[18.5,-18.5,2.7],[19,-18.5,3.3],[19.5,-18.5,2.8],[20,-18.5,1.8],[20.5,-18.5,2.3],[23,-18.5,1.1],[23.5,-18.5,1.2],[25.5,-18.5,2.3],[26,-18.5,4.8],[26.5,-18.5,4.8],[27,-18.5,5.3],[27.5,-18.5,12.3],[28,-18.5,18.3],[28.5,-18.5,24.8],[29,-18.5,32.4],[29.5,-18.5,32],[30,-18.5,28.8],[30.5,-18.5,23],[31,-18.5,21.9],[31.5,-18.5,30.8],[32,-18.5,48.2],[32.5,-18.5,74.9],[33,-18.5,27.9],[33.5,-18.5,21.6],[34,-18.5,15.8],[34.5,-18.5,4.7],[35,-18.5,3.4],[35.5,-18.5,9.7],[36,-18.5,43.4],[36.5,-18.5,17.9],[44,-18.5,4.1],[44.5,-18.5,3.4],[45,-18.5,4.8],[45.5,-18.5,26.1],[46,-18.5,19.7],[46.5,-18.5,57],[47,-18.5,167.4],[47.5,-18.5,477],[48,-18.5,25.5],[48.5,-18.5,27.1],[49,-18.5,32.5],[145.5,-18.5,1.8],[146,-18.5,5.3],[146.5,-18.5,5.9],[168.5,-18.5,22.1],[169,-18.5,22.1],[177.5,-18.5,23.4],[178,-18.5,14.3],[178.5,-18.5,14.3],[179.5,-18.5,21.1],[-180,-19,21.1],[-179,-19,21.1],[-178.5,-19,21.1],[-170,-19,7.5],[-139.5,-19,23.6],[-139,-19,13],[-68.5,-19,1.4],[-68,-19,1.9],[-67.5,-19,1.8],[-67,-19,6.2],[-66.5,-19,24],[-66,-19,36.5],[-65.5,-19,35.8],[-65,-19,11.7],[-64.5,-19,9.1],[-64,-19,2],[-63.5,-19,1.2],[-63,-19,1.2],[-62.5,-19,1.2],[-62,-19,1.2],[-61.5,-19,1.2],[-61,-19,1.2],[-59,-19,1.5],[-58.5,-19,1.6],[-58,-19,10.5],[-57.5,-19,4.8],[-56.5,-19,1.3],[-56,-19,1.7],[-55.5,-19,2.5],[-55,-19,5.5],[-54.5,-19,1.7],[-54,-19,1.4],[-53.5,-19,1.2],[-53,-19,1.9],[-52.5,-19,2.4],[-52,-19,5.6],[-51.5,-19,3.1],[-51,-19,5.3],[-50.5,-19,3.6],[-50,-19,11.1],[-49.5,-19,11.7],[-49,-19,4.1],[-48.5,-19,79.6],[-48,-19,23.8],[-47.5,-19,8.1],[-47,-19,12.3],[-46.5,-19,15.9],[-46,-19,10.3],[-45.5,-19,12.3],[-45,-19,16.4],[-44.5,-19,68.9],[-44,-19,12.7],[-43.5,-19,15.6],[-43,-19,109],[-42.5,-19,40.6],[-42,-19,16.8],[-41.5,-19,17.1],[-41,-19,38.1],[-40.5,-19,36.9],[-40,-19,30.2],[14.5,-19,1.1],[16,-19,2.3],[16.5,-19,2.4],[17,-19,1.1],[17.5,-19,5.6],[18,-19,1.8],[18.5,-19,1.8],[19,-19,1.1],[22.5,-19,1.2],[23,-19,1.3],[23.5,-19,1.3],[24,-19,1.3],[24.5,-19,1.4],[25,-19,3.1],[25.5,-19,3.1],[26,-19,4.6],[26.5,-19,5.7],[27,-19,10.4],[27.5,-19,13.8],[28,-19,11.9],[28.5,-19,16.9],[29,-19,33.4],[29.5,-19,37.3],[30,-19,23.2],[30.5,-19,20.7],[31,-19,28.8],[31.5,-19,40.2],[32,-19,66.8],[32.5,-19,54.9],[33,-19,94.8],[33.5,-19,59.2],[34,-19,39.6],[34.5,-19,24.9],[35,-19,5.3],[35.5,-19,3],[44,-19,5.2],[44.5,-19,7],[45,-19,3.8],[45.5,-19,7.6],[46,-19,38.7],[46.5,-19,73.4],[47,-19,134.6],[47.5,-19,105.8],[48,-19,21],[48.5,-19,37.4],[49,-19,15.6],[146.5,-19,80.7],[147,-19,3.5],[147.5,-19,4.1],[169,-19,22.1],[169.5,-19,22.1],[177.5,-19,14.3],[178,-19,14.3],[179.5,-19,21.1],[-178.5,-19.5,21.1],[-175.5,-19.5,59.1],[-175,-19.5,59.1],[-174.5,-19.5,59.1],[-158.5,-19.5,24.4],[-158,-19.5,13.9],[-70.5,-19.5,1.2],[-68,-19.5,1.4],[-67.5,-19.5,1],[-67,-19.5,2.5],[-66.5,-19.5,6.7],[-66,-19.5,17.3],[-65.5,-19.5,13.6],[-65,-19.5,9.2],[-64.5,-19.5,8.4],[-64,-19.5,2.1],[-63.5,-19.5,1.2],[-63,-19.5,1.2],[-62.5,-19.5,1.2],[-58.5,-19.5,1],[-57,-19.5,3],[-56.5,-19.5,2.5],[-56,-19.5,2.8],[-55.5,-19.5,2.1],[-55,-19.5,2.7],[-54.5,-19.5,2.5],[-54,-19.5,1.9],[-53.5,-19.5,1.2],[-52,-19.5,4.7],[-51.5,-19.5,9.7],[-51,-19.5,6.5],[-50.5,-19.5,16.8],[-50,-19.5,6.7],[-49.5,-19.5,8.6],[-49,-19.5,9],[-48.5,-19.5,25.9],[-48,-19.5,30.2],[-47.5,-19.5,17],[-47,-19.5,18.3],[-46.5,-19.5,8.3],[-46,-19.5,15.1],[-45.5,-19.5,31.9],[-45,-19.5,59.9],[-44.5,-19.5,555.6],[-44,-19.5,800],[-43.5,-19.5,80.1],[-43,-19.5,56.8],[-42.5,-19.5,55.1],[-42,-19.5,21.6],[-41.5,-19.5,18.8],[-41,-19.5,41.4],[-40.5,-19.5,39.5],[-40,-19.5,8.7],[16,-19.5,1.2],[16.5,-19.5,1],[17.5,-19.5,1],[18,-19.5,1.8],[18.5,-19.5,1.2],[22.5,-19.5,1.3],[23,-19.5,1.3],[23.5,-19.5,1.3],[24,-19.5,1.3],[24.5,-19.5,1.4],[25,-19.5,3.1],[25.5,-19.5,3.1],[26,-19.5,3.5],[26.5,-19.5,9.4],[27,-19.5,15.6],[27.5,-19.5,15.3],[28,-19.5,12.7],[28.5,-19.5,9.7],[29,-19.5,16.3],[29.5,-19.5,32.1],[30,-19.5,26],[30.5,-19.5,30.5],[31,-19.5,30.7],[31.5,-19.5,33.7],[32,-19.5,48.4],[32.5,-19.5,34.6],[33,-19.5,18.7],[33.5,-19.5,21.7],[34,-19.5,30.6],[34.5,-19.5,185.8],[35,-19.5,247.1],[44,-19.5,4.1],[44.5,-19.5,6.6],[45,-19.5,7.6],[45.5,-19.5,12],[46,-19.5,30.9],[46.5,-19.5,66.6],[47,-19.5,201.3],[47.5,-19.5,68],[48,-19.5,34.2],[48.5,-19.5,74.8],[57.5,-19.5,590.3],[63,-19.5,304.1],[63.5,-19.5,311.5],[118.5,-19.5,1.4],[119,-19.5,1.4],[134,-19.5,1.5],[146.5,-19.5,1.5],[147,-19.5,4],[147.5,-19.5,1.5],[163.5,-19.5,15.7],[169,-19.5,22.1],[169.5,-19.5,22.1],[170,-19.5,22.1],[-175.5,-20,59.1],[-175,-20,59.1],[-174.5,-20,59.1],[-158.5,-20,27.5],[-157.5,-20,32.3],[-70.5,-20,59.3],[-70,-20,9.5],[-67,-20,2.7],[-66.5,-20,3],[-66,-20,4],[-65.5,-20,7.8],[-65,-20,9],[-64.5,-20,6.9],[-64,-20,2.9],[-63.5,-20,1.2],[-63,-20,1.2],[-62.5,-20,1.1],[-57,-20,3.6],[-56.5,-20,3.4],[-56,-20,3],[-55.5,-20,2.6],[-55,-20,37.8],[-54.5,-20,15],[-53.5,-20,1.1],[-53,-20,1.3],[-52,-20,2.5],[-51.5,-20,14.2],[-51,-20,44.9],[-50.5,-20,49.1],[-50,-20,24.2],[-49.5,-20,17.2],[-49,-20,30.8],[-48.5,-20,26.1],[-48,-20,41.7],[-47.5,-20,39.3],[-47,-20,5.7],[-46.5,-20,11.1],[-46,-20,27.5],[-45.5,-20,34.1],[-45,-20,97.9],[-44.5,-20,131.7],[-44,-20,81.4],[-43.5,-20,36.9],[-43,-20,43.5],[-42.5,-20,58.4],[-42,-20,47],[-41.5,-20,39.6],[-41,-20,51.6],[-40.5,-20,837.6],[-29.5,-20,1839],[-29,-20,1839],[16,-20,2.1],[16.5,-20,2.3],[18,-20,1.4],[18.5,-20,1.4],[22.5,-20,1.2],[23,-20,1.3],[23.5,-20,1.3],[24.5,-20,1.8],[25,-20,2.7],[25.5,-20,3.1],[26,-20,3.1],[26.5,-20,3.2],[27,-20,9.2],[27.5,-20,14.8],[28,-20,231.5],[28.5,-20,591.9],[29,-20,14.4],[29.5,-20,23.4],[30,-20,44.1],[30.5,-20,42],[31,-20,53.5],[31.5,-20,39.3],[32,-20,41.3],[32.5,-20,50.1],[33,-20,20.6],[33.5,-20,12.6],[34,-20,19.8],[34.5,-20,16.3],[44,-20,58.2],[44.5,-20,12.7],[45,-20,7.8],[45.5,-20,7.7],[46,-20,6.8],[46.5,-20,35.5],[47,-20,82.4],[47.5,-20,37.8],[48,-20,39.1],[48.5,-20,41.8],[57,-20,758.2],[57.5,-20,537.9],[115.5,-20,1.1],[116.5,-20,1.1],[117,-20,1.1],[117.5,-20,1.4],[118,-20,1.4],[118.5,-20,1.4],[119,-20,1.3],[146,-20,3.4],[147,-20,1.9],[148,-20,2.8],[148.5,-20,7.4],[149,-20,6.5],[163.5,-20,6.5],[164,-20,6.5],[164.5,-20,6.5],[166.5,-20,27.3],[169.5,-20,22.1],[-179,-20.5,21.1],[-175.5,-20.5,59.1],[-175,-20.5,59.1],[-139,-20.5,41],[-138.5,-20.5,41],[-70.5,-20.5,67.1],[-70,-20.5,2.4],[-67,-20.5,1.9],[-66.5,-20.5,4],[-66,-20.5,3.7],[-65.5,-20.5,6.6],[-65,-20.5,6.3],[-64.5,-20.5,5.1],[-64,-20.5,2.8],[-63.5,-20.5,1.6],[-63,-20.5,1.6],[-57,-20.5,2.6],[-56.5,-20.5,3.3],[-56,-20.5,6.3],[-55.5,-20.5,5.2],[-55,-20.5,92.8],[-54.5,-20.5,89.5],[-53.5,-20.5,1],[-53,-20.5,1.7],[-52.5,-20.5,2.6],[-52,-20.5,22.4],[-51.5,-20.5,34.7],[-51,-20.5,28.3],[-50.5,-20.5,20.1],[-50,-20.5,39.9],[-49.5,-20.5,161.9],[-49,-20.5,63.2],[-48.5,-20.5,50.2],[-48,-20.5,59.8],[-47.5,-20.5,94.2],[-47,-20.5,51.7],[-46.5,-20.5,24.3],[-46,-20.5,17.4],[-45.5,-20.5,37.4],[-45,-20.5,32],[-44.5,-20.5,20.6],[-44,-20.5,70.9],[-43.5,-20.5,28.6],[-43,-20.5,60.5],[-42.5,-20.5,43.1],[-42,-20.5,42.4],[-41.5,-20.5,89.5],[-41,-20.5,67.1],[-40.5,-20.5,214.1],[-29.5,-20.5,1839],[15.5,-20.5,2.1],[16,-20.5,2.5],[17.5,-20.5,1.1],[18,-20.5,1.4],[18.5,-20.5,1],[22.5,-20.5,1.2],[23,-20.5,1.3],[23.5,-20.5,1.1],[24.5,-20.5,1.8],[25.5,-20.5,2.8],[26,-20.5,3.1],[26.5,-20.5,3.1],[27,-20.5,12.3],[27.5,-20.5,18],[28,-20.5,14.5],[28.5,-20.5,15.4],[29,-20.5,12.6],[29.5,-20.5,31.3],[30,-20.5,38.5],[30.5,-20.5,36.9],[31,-20.5,34.2],[31.5,-20.5,20.7],[32,-20.5,40],[32.5,-20.5,27.8],[33,-20.5,12.6],[33.5,-20.5,10.5],[34,-20.5,11.4],[34.5,-20.5,12.1],[35,-20.5,8.7],[43.5,-20.5,2.9],[44,-20.5,5.2],[44.5,-20.5,4.1],[45,-20.5,3.3],[45.5,-20.5,3.7],[46,-20.5,4.2],[46.5,-20.5,45.9],[47,-20.5,68.7],[47.5,-20.5,48.1],[48,-20.5,53.1],[48.5,-20.5,55.6],[55,-20.5,283.1],[55.5,-20.5,283.1],[57,-20.5,696.4],[57.5,-20.5,473.2],[115.5,-20.5,1.1],[116,-20.5,1.1],[116.5,-20.5,1.1],[117,-20.5,1.1],[117.5,-20.5,1.1],[118,-20.5,1.3],[118.5,-20.5,1.1],[148,-20.5,2],[148.5,-20.5,4.7],[149,-20.5,5.2],[149.5,-20.5,4.6],[164,-20.5,6.5],[164.5,-20.5,6.5],[165,-20.5,6.5],[166,-20.5,27.3],[166.5,-20.5,27.3],[167,-20.5,9.2],[-179,-21,21.1],[-175.5,-21,264.2],[-175,-21,59.6],[-160,-21,185.6],[-70.5,-21,63.7],[-70,-21,13.5],[-69,-21,5.4],[-66.5,-21,4.8],[-66,-21,5.3],[-65.5,-21,6],[-65,-21,25],[-64.5,-21,11.2],[-64,-21,5.1],[-63.5,-21,6.2],[-63,-21,6.2],[-62.5,-21,2.2],[-57,-21,3.5],[-56.5,-21,6.1],[-56,-21,4.7],[-55.5,-21,6.1],[-55,-21,3.6],[-54.5,-21,1.6],[-53.5,-21,1],[-53,-21,1.2],[-52.5,-21,3.5],[-52,-21,29.4],[-51.5,-21,27.5],[-51,-21,46.8],[-50.5,-21,81.3],[-50,-21,29.8],[-49.5,-21,44.4],[-49,-21,73.5],[-48.5,-21,103.3],[-48,-21,229.5],[-47.5,-21,36],[-47,-21,55.7],[-46.5,-21,37],[-46,-21,47.2],[-45.5,-21,60.9],[-45,-21,25.8],[-44.5,-21,41.1],[-44,-21,74],[-43.5,-21,36.1],[-43,-21,87.8],[-42.5,-21,64.2],[-42,-21,57.4],[-41.5,-21,26.3],[-41,-21,96.2],[16.5,-21,1.4],[26,-21,2.2],[26.5,-21,2.8],[27,-21,6.8],[27.5,-21,20],[28,-21,14.5],[28.5,-21,13.8],[29,-21,13.2],[29.5,-21,13],[30,-21,11.2],[30.5,-21,10.2],[31,-21,11.5],[31.5,-21,13.5],[32,-21,19.3],[32.5,-21,6],[33,-21,6.5],[33.5,-21,6],[34,-21,6.2],[34.5,-21,9.4],[35,-21,11.9],[43,-21,10.8],[43.5,-21,5.5],[44,-21,7.2],[44.5,-21,4.7],[45,-21,3.1],[45.5,-21,2.2],[46,-21,6.6],[46.5,-21,39.7],[47,-21,97.2],[47.5,-21,35.5],[48,-21,41.2],[55,-21,283.1],[55.5,-21,283.1],[148.5,-21,1.9],[149,-21,50.7],[149.5,-21,4.8],[164.5,-21,6.5],[165,-21,6.5],[165.5,-21,6.5],[166,-21,6.5],[167,-21,9.2],[167.5,-21,11.4],[168,-21,11.4],[-158,-21.5,17.2],[-70.5,-21.5,5.9],[-70,-21.5,2.3],[-69,-21.5,6.4],[-68.5,-21.5,2.8],[-66.5,-21.5,2.5],[-66,-21.5,9],[-65.5,-21.5,8.4],[-65,-21.5,30.8],[-64.5,-21.5,8.5],[-64,-21.5,6],[-63.5,-21.5,6.2],[-63,-21.5,6],[-57,-21.5,4.4],[-56.5,-21.5,6.3],[-56,-21.5,3],[-55.5,-21.5,4.2],[-55,-21.5,5.8],[-54.5,-21.5,4.1],[-54,-21.5,4.5],[-53.5,-21.5,6],[-53,-21.5,4.4],[-52.5,-21.5,9.7],[-52,-21.5,29.6],[-51.5,-21.5,29],[-51,-21.5,47.2],[-50.5,-21.5,26.6],[-50,-21.5,43.9],[-49.5,-21.5,20.7],[-49,-21.5,41.5],[-48.5,-21.5,106.8],[-48,-21.5,48],[-47.5,-21.5,59.8],[-47,-21.5,110.4],[-46.5,-21.5,40],[-46,-21.5,43.5],[-45.5,-21.5,76.8],[-45,-21.5,20.6],[-44.5,-21.5,13.4],[-44,-21.5,39.7],[-43.5,-21.5,160],[-43,-21.5,41.3],[-42.5,-21.5,38.4],[-42,-21.5,22.7],[-41.5,-21.5,157.7],[-41,-21.5,43.2],[16,-21.5,1.1],[16.5,-21.5,2.6],[26,-21.5,2.5],[26.5,-21.5,2.7],[27,-21.5,4.3],[27.5,-21.5,7.4],[28,-21.5,8.4],[28.5,-21.5,9.6],[29,-21.5,10.6],[29.5,-21.5,8.3],[30,-21.5,8.5],[30.5,-21.5,9.7],[31,-21.5,12.2],[31.5,-21.5,12.2],[32,-21.5,2.6],[32.5,-21.5,2.4],[33,-21.5,3.5],[33.5,-21.5,3.1],[34,-21.5,5.6],[34.5,-21.5,10.2],[35,-21.5,17.8],[35.5,-21.5,36.7],[43,-21.5,20.5],[43.5,-21.5,18.1],[44,-21.5,4.6],[44.5,-21.5,5.3],[45,-21.5,6.3],[45.5,-21.5,3.2],[46,-21.5,9.3],[46.5,-21.5,66.7],[47,-21.5,115.3],[47.5,-21.5,38.5],[48,-21.5,54.4],[149,-21.5,3],[150.5,-21.5,2.3],[165,-21.5,6.5],[165.5,-21.5,6.5],[166,-21.5,6.5],[166.5,-21.5,6.5],[167.5,-21.5,11.4],[168,-21.5,11.4],[-176.5,-22,264.6],[-151.5,-22,62.7],[-70.5,-22,5.9],[-70,-22,2.3],[-69.5,-22,2.3],[-69,-22,9.8],[-68.5,-22,9.7],[-68,-22,1],[-66,-22,5.8],[-65.5,-22,5.7],[-65,-22,6.1],[-64.5,-22,9.4],[-64,-22,8.7],[-63.5,-22,6.7],[-63,-22,1.7],[-61,-22,2.9],[-60.5,-22,2.3],[-60,-22,3.2],[-59.5,-22,1.2],[-58,-22,4.8],[-57.5,-22,1.7],[-57,-22,4.8],[-56.5,-22,4.4],[-56,-22,12.5],[-55.5,-22,14.6],[-55,-22,62.7],[-54.5,-22,13.4],[-54,-22,8.9],[-53.5,-22,6],[-53,-22,9],[-52.5,-22,13.3],[-52,-22,23.9],[-51.5,-22,92.7],[-51,-22,24.7],[-50.5,-22,32.4],[-50,-22,86.1],[-49.5,-22,122.3],[-49,-22,79.1],[-48.5,-22,44.2],[-48,-22,121.5],[-47.5,-22,146.8],[-47,-22,107.8],[-46.5,-22,43.5],[-46,-22,73.5],[-45.5,-22,73.2],[-45,-22,39],[-44.5,-22,94],[-44,-22,62.8],[-43.5,-22,129.8],[-43,-22,117.6],[-42.5,-22,39.1],[-42,-22,91],[-41.5,-22,24.2],[-41,-22,51.3],[16,-22,1.1],[16.5,-22,2.5],[17,-22,15],[25,-22,1.6],[25.5,-22,2.7],[26,-22,2.7],[26.5,-22,2.9],[27,-22,6],[27.5,-22,6.8],[28,-22,6.7],[28.5,-22,6.4],[29,-22,4.2],[29.5,-22,4.1],[30,-22,12.9],[30.5,-22,10.2],[31,-22,9.7],[31.5,-22,4.9],[32,-22,3.1],[32.5,-22,1.3],[33,-22,1.1],[33.5,-22,2.9],[34,-22,4.2],[34.5,-22,14.1],[35,-22,26.4],[35.5,-22,36.9],[43,-22,10],[43.5,-22,11.6],[44,-22,7.7],[44.5,-22,7.4],[45,-22,4.6],[45.5,-22,4.1],[46,-22,13.5],[46.5,-22,20.6],[47,-22,26.2],[47.5,-22,79.1],[48,-22,198.8],[149.5,-22,1.3],[150,-22,2.3],[150.5,-22,2.3],[166,-22,107.6],[166.5,-22,6.5],[167,-22,6.5],[-153,-22.5,64.2],[-151.5,-22.5,62.7],[-70.5,-22.5,2.6],[-69.5,-22.5,1.8],[-69,-22.5,8.3],[-68.5,-22.5,2.1],[-66,-22.5,2.1],[-65.5,-22.5,3.1],[-65,-22.5,2.6],[-64.5,-22.5,9.6],[-64,-22.5,8.8],[-63.5,-22.5,6.7],[-63,-22.5,1],[-62.5,-22.5,1.5],[-60.5,-22.5,2.3],[-60,-22.5,2],[-58,-22.5,5.5],[-57.5,-22.5,7.3],[-57,-22.5,6.4],[-56.5,-22.5,11.9],[-56,-22.5,16.4],[-55.5,-22.5,6.4],[-55,-22.5,8.1],[-54.5,-22.5,6.4],[-54,-22.5,6.1],[-53.5,-22.5,14.3],[-53,-22.5,32.2],[-52.5,-22.5,26.3],[-52,-22.5,21.5],[-51.5,-22.5,31],[-51,-22.5,27.6],[-50.5,-22.5,52.8],[-50,-22.5,51.2],[-49.5,-22.5,16.9],[-49,-22.5,58.3],[-48.5,-22.5,42.7],[-48,-22.5,157.1],[-47.5,-22.5,660.5],[-47,-22.5,200.2],[-46.5,-22.5,54.1],[-46,-22.5,62],[-45.5,-22.5,136.9],[-45,-22.5,49.3],[-44.5,-22.5,138.8],[-44,-22.5,1116.4],[-43.5,-22.5,2894.7],[-43,-22.5,281.4],[-42.5,-22.5,152],[-42,-22.5,299.5],[14,-22.5,141.1],[14.5,-22.5,20.7],[16.5,-22.5,7.7],[17,-22.5,54.8],[18,-22.5,1.4],[18.5,-22.5,2.3],[25,-22.5,1.6],[25.5,-22.5,3.9],[26,-22.5,4.5],[26.5,-22.5,5.8],[27,-22.5,6.7],[27.5,-22.5,6.8],[28,-22.5,3.9],[28.5,-22.5,12.3],[29,-22.5,4.4],[29.5,-22.5,8.6],[30,-22.5,112.9],[30.5,-22.5,95.6],[31.5,-22.5,1.2],[32,-22.5,2.8],[32.5,-22.5,1.9],[33,-22.5,1.1],[33.5,-22.5,2.3],[34,-22.5,3.1],[34.5,-22.5,9.1],[35,-22.5,14.2],[35.5,-22.5,11.4],[43,-22.5,25],[43.5,-22.5,23.1],[44,-22.5,14],[44.5,-22.5,5.6],[45,-22.5,4.5],[45.5,-22.5,7.4],[46,-22.5,7.9],[46.5,-22.5,9.9],[47,-22.5,27.8],[47.5,-22.5,68.5],[149.5,-22.5,2.2],[150,-22.5,2.3],[150.5,-22.5,2.3],[167,-22.5,11.2],[167.5,-22.5,11.2],[-150,-23,53.5],[-149.5,-23,53.5],[-135.5,-23,35.6],[-135,-23,35.6],[-71,-23,5.1],[-70.5,-23,6.4],[-69,-23,1.1],[-66.5,-23,1.2],[-66,-23,3.6],[-65.5,-23,4.7],[-65,-23,9.7],[-64.5,-23,10.2],[-64,-23,9.3],[-63.5,-23,5],[-63,-23,1],[-62.5,-23,2.2],[-62,-23,1.1],[-60,-23,1.2],[-58,-23,2.2],[-57.5,-23,15.8],[-57,-23,17.9],[-56.5,-23,11.6],[-56,-23,7.6],[-55.5,-23,8.6],[-55,-23,6.1],[-54.5,-23,7.8],[-54,-23,12.1],[-53.5,-23,19],[-53,-23,21.6],[-52.5,-23,71.3],[-52,-23,135.6],[-51.5,-23,239.3],[-51,-23,47.5],[-50.5,-23,53.3],[-50,-23,52],[-49.5,-23,34.1],[-49,-23,31.6],[-48.5,-23,28.1],[-48,-23,145.9],[-47.5,-23,323.7],[-47,-23,1218],[-46.5,-23,721.8],[-46,-23,258.6],[-45.5,-23,78.6],[-45,-23,33.5],[-44.5,-23,159.4],[-44,-23,2796.8],[-43.5,-23,4951.2],[16.5,-23,1.2],[17,-23,7.6],[18.5,-23,1.2],[25,-23,7.5],[25.5,-23,12.6],[26,-23,8.9],[26.5,-23,7.7],[27,-23,5.7],[27.5,-23,7.8],[28,-23,9.9],[28.5,-23,29.6],[29,-23,34.1],[29.5,-23,55],[30,-23,141.1],[30.5,-23,101.9],[32,-23,1.4],[32.5,-23,2],[33,-23,1.5],[33.5,-23,1.7],[34,-23,2.9],[34.5,-23,9.6],[35,-23,68.9],[35.5,-23,75.6],[43,-23,24.3],[43.5,-23,71.8],[44,-23,14.2],[44.5,-23,7.9],[45,-23,5.5],[45.5,-23,8.3],[46,-23,11.5],[46.5,-23,7],[47,-23,31.8],[47.5,-23,68.8],[150,-23,9.1],[150.5,-23,30.6],[-148,-23.5,56.4],[-71,-23.5,10.6],[-70.5,-23.5,10.6],[-70,-23.5,7.4],[-69.5,-23.5,6.2],[-69,-23.5,1],[-66,-23.5,7.6],[-65.5,-23.5,20.2],[-65,-23.5,21.3],[-64.5,-23.5,7],[-64,-23.5,10.5],[-63.5,-23.5,2.2],[-63,-23.5,1],[-62.5,-23.5,2.4],[-62,-23.5,1.6],[-60.5,-23.5,1.2],[-60,-23.5,1.3],[-59.5,-23.5,1.1],[-57.5,-23.5,7.3],[-57,-23.5,8.7],[-56.5,-23.5,12.7],[-56,-23.5,5],[-55.5,-23.5,7.9],[-55,-23.5,7.9],[-54.5,-23.5,15.2],[-54,-23.5,18.3],[-53.5,-23.5,44.8],[-53,-23.5,35.8],[-52.5,-23.5,31],[-52,-23.5,52.8],[-51.5,-23.5,53.2],[-51,-23.5,15.8],[-50.5,-23.5,24.4],[-50,-23.5,29.8],[-49.5,-23.5,24.5],[-49,-23.5,24.6],[-48.5,-23.5,42.2],[-48,-23.5,84.8],[-47.5,-23.5,156.5],[-47,-23.5,3535.7],[-46.5,-23.5,1790.3],[-46,-23.5,67.3],[-45.5,-23.5,115.3],[23,-23.5,1.3],[23.5,-23.5,1.4],[24,-23.5,1.4],[24.5,-23.5,1.4],[25,-23.5,10.6],[25.5,-23.5,17.5],[26,-23.5,8.8],[26.5,-23.5,8],[27,-23.5,1.9],[27.5,-23.5,7],[28,-23.5,6.9],[28.5,-23.5,57.9],[29,-23.5,112.5],[29.5,-23.5,80],[30,-23.5,115.3],[30.5,-23.5,35.9],[31,-23.5,36.4],[31.5,-23.5,1.7],[32,-23.5,3.8],[32.5,-23.5,5.1],[33,-23.5,3.1],[33.5,-23.5,2.8],[34,-23.5,4.1],[34.5,-23.5,11.9],[35,-23.5,119.7],[35.5,-23.5,245.3],[43.5,-23.5,21.7],[44,-23.5,19.9],[44.5,-23.5,25.5],[45,-23.5,13.9],[45.5,-23.5,12.2],[46,-23.5,10.7],[46.5,-23.5,8.7],[47,-23.5,21.8],[47.5,-23.5,47.7],[133.5,-23.5,10.3],[147.5,-23.5,1.2],[148,-23.5,1],[150,-23.5,1.8],[151,-23.5,22.6],[151.5,-23.5,1.2],[152,-23.5,1.1],[-128.5,-24,1.7],[-71,-24,10.1],[-70.5,-24,10.6],[-70,-24,10.6],[-69.5,-24,10.6],[-69,-24,10.4],[-68.5,-24,4.3],[-66.5,-24,1.8],[-66,-24,32.2],[-65.5,-24,78.3],[-65,-24,29.5],[-64.5,-24,4.1],[-64,-24,4.9],[-63.5,-24,1.7],[-63,-24,1.1],[-62.5,-24,2.1],[-62,-24,1.6],[-61,-24,1.3],[-60.5,-24,2.4],[-60,-24,2.1],[-59.5,-24,1.4],[-59,-24,1.3],[-58.5,-24,1.3],[-58,-24,1.3],[-57.5,-24,4.1],[-57,-24,24.4],[-56.5,-24,20.6],[-56,-24,12.2],[-55.5,-24,10],[-55,-24,9.3],[-54.5,-24,26.4],[-54,-24,29.1],[-53.5,-24,30.6],[-53,-24,22.6],[-52.5,-24,38.8],[-52,-24,32.6],[-51.5,-24,15.8],[-51,-24,23.7],[-50.5,-24,19.5],[-50,-24,19.6],[-49.5,-24,28.4],[-49,-24,32.7],[-48.5,-24,18.7],[-48,-24,25.1],[-47.5,-24,31.2],[-47,-24,189.6],[-46.5,-24,2310.3],[17,-24,1.4],[17.5,-24,1.2],[23,-24,4.5],[23.5,-24,3.8],[24,-24,2.6],[24.5,-24,1.5],[25,-24,4.8],[25.5,-24,15.5],[26,-24,8.6],[26.5,-24,5.3],[27,-24,1.7],[27.5,-24,3],[28,-24,7],[28.5,-24,47.5],[29,-24,45.5],[29.5,-24,75.6],[30,-24,69.1],[30.5,-24,17.5],[31,-24,1.3],[32,-24,3.7],[32.5,-24,21.8],[33,-24,14.4],[33.5,-24,9.2],[34,-24,11],[34.5,-24,23.8],[35,-24,79.7],[35.5,-24,59.6],[43.5,-24,10.5],[44,-24,11.4],[44.5,-24,20],[45,-24,20.7],[45.5,-24,16.2],[46,-24,8.1],[46.5,-24,12.7],[47,-24,16.5],[151,-24,2.6],[151.5,-24,1.2],[152,-24,1.2],[-70.5,-24.5,1.5],[-70,-24.5,2],[-69.5,-24.5,5.7],[-69,-24.5,10.1],[-66.5,-24.5,1.9],[-66,-24.5,22.2],[-65.5,-24.5,125.4],[-65,-24.5,15.6],[-64.5,-24.5,2.3],[-64,-24.5,2.3],[-63.5,-24.5,2],[-63,-24.5,1.4],[-62.5,-24.5,2.2],[-62,-24.5,2.3],[-61.5,-24.5,1.9],[-61,-24.5,2.4],[-60.5,-24.5,2.5],[-60,-24.5,2.5],[-59.5,-24.5,2.4],[-59,-24.5,2.7],[-58.5,-24.5,2.1],[-58,-24.5,3.7],[-57.5,-24.5,6.3],[-57,-24.5,12.6],[-56.5,-24.5,34.3],[-56,-24.5,19.6],[-55.5,-24.5,13.8],[-55,-24.5,13.3],[-54.5,-24.5,39],[-54,-24.5,56.8],[-53.5,-24.5,57.6],[-53,-24.5,17.3],[-52.5,-24.5,16.2],[-52,-24.5,19.7],[-51.5,-24.5,12.8],[-51,-24.5,11.7],[-50.5,-24.5,22.6],[-50,-24.5,19.6],[-49.5,-24.5,10.8],[-49,-24.5,8.1],[-48.5,-24.5,20.8],[-48,-24.5,31.7],[-47.5,-24.5,14.3],[17.5,-24.5,1.6],[23,-24.5,3.7],[23.5,-24.5,4],[24,-24.5,4.8],[24.5,-24.5,4.8],[25,-24.5,4.3],[25.5,-24.5,53.7],[26,-24.5,14.8],[26.5,-24.5,5.2],[27,-24.5,22.7],[27.5,-24.5,4.5],[28,-24.5,27.5],[28.5,-24.5,19],[29,-24.5,29.5],[29.5,-24.5,116.3],[30,-24.5,45.1],[30.5,-24.5,26.1],[31,-24.5,172.3],[32,-24.5,2.7],[32.5,-24.5,33.5],[33,-24.5,94.3],[33.5,-24.5,122.5],[34,-24.5,52.9],[34.5,-24.5,69.7],[35,-24.5,67.9],[43.5,-24.5,14.5],[44,-24.5,12.7],[44.5,-24.5,17.3],[45,-24.5,23.9],[45.5,-24.5,16.2],[46,-24.5,23],[46.5,-24.5,27.4],[47,-24.5,53.2],[151.5,-24.5,1.7],[152,-24.5,37.5],[152.5,-24.5,6.1],[153,-24.5,19.3],[-69.5,-25,3.3],[-69,-25,7],[-66.5,-25,2.2],[-66,-25,7.2],[-65.5,-25,54.9],[-65,-25,5.4],[-64.5,-25,5.3],[-64,-25,2.3],[-63.5,-25,2],[-63,-25,1.7],[-62.5,-25,2],[-62,-25,2.3],[-61.5,-25,2.3],[-61,-25,2.4],[-60.5,-25,2.5],[-60,-25,2.5],[-59.5,-25,4.3],[-59,-25,6.2],[-58.5,-25,12.7],[-58,-25,459.5],[-57.5,-25,296.5],[-57,-25,32.5],[-56.5,-25,52.7],[-56,-25,40.3],[-55.5,-25,23.8],[-55,-25,110.2],[-54.5,-25,49.9],[-54,-25,27.1],[-53.5,-25,49],[-53,-25,18.4],[-52.5,-25,21.6],[-52,-25,41.2],[-51.5,-25,29.7],[-51,-25,31.8],[-50.5,-25,80.6],[-50,-25,52.3],[-49.5,-25,552.6],[-49,-25,35.4],[-48.5,-25,16.8],[-48,-25,12.4],[24,-25,2.6],[24.5,-25,4.3],[25,-25,5.8],[25.5,-25,62.5],[26,-25,16.9],[26.5,-25,30.7],[27,-25,54.3],[27.5,-25,64],[28,-25,233.6],[28.5,-25,127.9],[29,-25,87.6],[29.5,-25,35.5],[30,-25,12.5],[30.5,-25,20.9],[31,-25,128.4],[31.5,-25,5],[32,-25,9.8],[32.5,-25,61.4],[33,-25,55.2],[33.5,-25,246.1],[34,-25,82.6],[44,-25,16.9],[44.5,-25,12],[45,-25,18.2],[45.5,-25,40.2],[46,-25,62.7],[46.5,-25,62.1],[47,-25,199.4],[152,-25,4.9],[152.5,-25,17.3],[153,-25,19.9],[-70.5,-25.5,1.3],[-66.5,-25.5,1.3],[-66,-25.5,2.1],[-65.5,-25.5,3.3],[-65,-25.5,5.8],[-64.5,-25.5,4.9],[-64,-25.5,2.5],[-63.5,-25.5,2],[-63,-25.5,1.9],[-62.5,-25.5,1.9],[-62,-25.5,1.8],[-61.5,-25.5,2.1],[-61,-25.5,2.3],[-60.5,-25.5,3.1],[-60,-25.5,4.6],[-59.5,-25.5,7.6],[-59,-25.5,19.2],[-58.5,-25.5,29.1],[-58,-25.5,19.7],[-57.5,-25.5,66.2],[-57,-25.5,37.8],[-56.5,-25.5,66.1],[-56,-25.5,24.9],[-55.5,-25.5,19.5],[-55,-25.5,116.1],[-54.5,-25.5,64.6],[-54,-25.5,30.5],[-53.5,-25.5,38.9],[-53,-25.5,26.6],[-52.5,-25.5,18],[-52,-25.5,13.4],[-51.5,-25.5,10],[-51,-25.5,23.7],[-50.5,-25.5,21.1],[-50,-25.5,27.5],[-49.5,-25.5,343.7],[-49,-25.5,57.8],[-48.5,-25.5,124.4],[23.5,-25.5,3.9],[24,-25.5,1.4],[24.5,-25.5,9.3],[25,-25.5,23.8],[25.5,-25.5,94.1],[26,-25.5,7.9],[26.5,-25.5,12.2],[27,-25.5,102],[27.5,-25.5,91.7],[28,-25.5,590.3],[28.5,-25.5,32.5],[29,-25.5,109.4],[29.5,-25.5,13],[30,-25.5,8.2],[30.5,-25.5,17.6],[31,-25.5,57.8],[31.5,-25.5,109.5],[32,-25.5,160.7],[32.5,-25.5,631.9],[45,-25.5,17],[45.5,-25.5,24.2],[151.5,-25.5,1.2],[152,-25.5,1.5],[152.5,-25.5,6.9],[153,-25.5,15.7],[-71,-26,2.3],[-70.5,-26,1.9],[-70,-26,1],[-67,-26,1.8],[-66.5,-26,3.3],[-66,-26,6.2],[-65.5,-26,5.2],[-65,-26,7.1],[-64.5,-26,3],[-64,-26,2.2],[-63.5,-26,1.6],[-63,-26,1.6],[-62.5,-26,1.6],[-62,-26,1.6],[-61.5,-26,1.8],[-61,-26,5.2],[-60.5,-26,9.5],[-60,-26,8.1],[-59.5,-26,7.6],[-59,-26,13.1],[-58.5,-26,22.8],[-58,-26,3.2],[-57.5,-26,10.9],[-57,-26,16.2],[-56.5,-26,23.2],[-56,-26,17.8],[-55.5,-26,19.1],[-55,-26,25],[-54.5,-26,24.1],[-54,-26,24.2],[-53.5,-26,43.1],[-53,-26,44.9],[-52.5,-26,18.5],[-52,-26,10.2],[-51.5,-26,35.1],[-51,-26,19.1],[-50.5,-26,30.2],[-50,-26,40.5],[-49.5,-26,106.9],[-49,-26,166.7],[-48.5,-26,89.3],[14.5,-26,26.7],[18,-26,2.4],[23,-26,3],[23.5,-26,7.8],[24,-26,6.3],[24.5,-26,2.7],[25,-26,28],[25.5,-26,34.8],[26,-26,20.9],[26.5,-26,12.9],[27,-26,66.7],[27.5,-26,890.7],[28,-26,1140.2],[28.5,-26,42.8],[29,-26,48.5],[29.5,-26,24.3],[30,-26,12],[30.5,-26,58.2],[31,-26,70.3],[31.5,-26,44.1],[32,-26,161.4],[32.5,-26,133.2],[151,-26,1.5],[151.5,-26,3.1],[152,-26,2],[152.5,-26,14.2],[153,-26,72.9],[-71,-26.5,5.2],[-70.5,-26.5,3.6],[-70,-26.5,2.3],[-69.5,-26.5,3.4],[-69,-26.5,3.1],[-68.5,-26.5,1.3],[-67,-26.5,2.3],[-66.5,-26.5,4],[-66,-26.5,33.1],[-65.5,-26.5,284.9],[-65,-26.5,31],[-64.5,-26.5,2.8],[-64,-26.5,2.2],[-63.5,-26.5,1.5],[-63,-26.5,1.4],[-62.5,-26.5,1.4],[-62,-26.5,5.6],[-61.5,-26.5,8],[-61,-26.5,20.6],[-60.5,-26.5,30.5],[-60,-26.5,8.5],[-59.5,-26.5,8],[-59,-26.5,8.1],[-58.5,-26.5,14.6],[-58,-26.5,4.5],[-57.5,-26.5,10.8],[-57,-26.5,16.1],[-56.5,-26.5,16.5],[-56,-26.5,20.1],[-55.5,-26.5,37.8],[-55,-26.5,23.5],[-54.5,-26.5,14.5],[-54,-26.5,22.7],[-53.5,-26.5,41.8],[-53,-26.5,37.3],[-52.5,-26.5,31.7],[-52,-26.5,12.5],[-51.5,-26.5,22.8],[-51,-26.5,25.4],[-50.5,-26.5,13.9],[-50,-26.5,15.8],[-49.5,-26.5,138.2],[-49,-26.5,152.4],[15,-26.5,1.4],[18,-26.5,3.4],[20,-26.5,1.5],[22.5,-26.5,1.3],[23,-26.5,5.1],[23.5,-26.5,11.2],[24,-26.5,12.3],[24.5,-26.5,15.8],[25,-26.5,8.6],[25.5,-26.5,12.3],[26,-26.5,10.5],[26.5,-26.5,122.8],[27,-26.5,72.8],[27.5,-26.5,237.9],[28,-26.5,38],[28.5,-26.5,14.8],[29,-26.5,71.4],[29.5,-26.5,22.7],[30,-26.5,12.6],[30.5,-26.5,32.5],[31,-26.5,62.6],[31.5,-26.5,35.1],[32,-26.5,23.7],[32.5,-26.5,20.1],[148.5,-26.5,2.8],[151,-26.5,1.6],[151.5,-26.5,4.4],[152,-26.5,3.7],[152.5,-26.5,20.9],[153,-26.5,208.4],[-71,-27,6.4],[-70.5,-27,6.4],[-70,-27,6.4],[-69.5,-27,4.5],[-69,-27,2.9],[-68.5,-27,1.2],[-68,-27,1],[-67.5,-27,1.5],[-67,-27,2.3],[-66.5,-27,7.4],[-66,-27,58.1],[-65.5,-27,34.6],[-65,-27,25.1],[-64.5,-27,26.2],[-64,-27,5.1],[-63.5,-27,2.2],[-63,-27,1.7],[-62.5,-27,1.7],[-62,-27,3.7],[-61.5,-27,11.3],[-61,-27,12.7],[-60.5,-27,8.2],[-60,-27,4.2],[-59.5,-27,19.8],[-59,-27,65.3],[-58.5,-27,12],[-58,-27,6.1],[-57.5,-27,8.7],[-57,-27,12.5],[-56.5,-27,23.9],[-56,-27,88.6],[-55.5,-27,40.8],[-55,-27,26.7],[-54.5,-27,21.3],[-54,-27,36.5],[-53.5,-27,46.5],[-53,-27,74.8],[-52.5,-27,36.2],[-52,-27,47.9],[-51.5,-27,35.8],[-51,-27,29.6],[-50.5,-27,14.1],[-50,-27,53.7],[-49.5,-27,52.3],[-49,-27,155.1],[-48.5,-27,387.5],[15,-27,6.2],[22.5,-27,1.9],[23,-27,25.2],[23.5,-27,16.4],[24,-27,1.9],[24.5,-27,19.8],[25,-27,15.1],[25.5,-27,16.6],[26,-27,9.7],[26.5,-27,33.5],[27,-27,6.5],[27.5,-27,15.7],[28,-27,4.9],[28.5,-27,16.6],[29,-27,10.5],[29.5,-27,22.4],[30,-27,9.1],[30.5,-27,37.2],[31,-27,54.3],[31.5,-27,47.1],[32,-27,51.4],[32.5,-27,31],[151,-27,6.4],[151.5,-27,4.8],[152,-27,5.6],[152.5,-27,109],[153,-27,538.5],[153.5,-27,17.9],[-144.5,-27.5,12.2],[-71.5,-27.5,5.9],[-71,-27.5,6.4],[-70.5,-27.5,4.1],[-70,-27.5,2.5],[-69.5,-27.5,1.2],[-68,-27.5,1],[-67.5,-27.5,1.6],[-67,-27.5,2.6],[-66.5,-27.5,3.1],[-66,-27.5,19.2],[-65.5,-27.5,9.2],[-65,-27.5,35],[-64.5,-27.5,65],[-64,-27.5,13.1],[-63.5,-27.5,2.1],[-63,-27.5,1.7],[-62.5,-27.5,1.7],[-62,-27.5,3.5],[-61.5,-27.5,6.2],[-61,-27.5,13.8],[-60.5,-27.5,6.4],[-59.5,-27.5,85.6],[-59,-27.5,109],[-58.5,-27.5,6.9],[-58,-27.5,5.2],[-57.5,-27.5,3.7],[-57,-27.5,3.8],[-56.5,-27.5,5.1],[-56,-27.5,92.8],[-55.5,-27.5,35],[-55,-27.5,38.6],[-54.5,-27.5,51.5],[-54,-27.5,26.7],[-53.5,-27.5,26.9],[-53,-27.5,26],[-52.5,-27.5,54.4],[-52,-27.5,22.6],[-51.5,-27.5,11.2],[-51,-27.5,8.8],[-50.5,-27.5,26.3],[-50,-27.5,11.4],[-49.5,-27.5,10.6],[-49,-27.5,226.5],[-48.5,-27.5,672.8],[22.5,-27.5,5.5],[23,-27.5,3.2],[23.5,-27.5,1.2],[24,-27.5,3.6],[24.5,-27.5,59.4],[25,-27.5,12.7],[25.5,-27.5,14.7],[26,-27.5,15.1],[26.5,-27.5,103.8],[27,-27.5,39.3],[27.5,-27.5,10.1],[28,-27.5,14.1],[28.5,-27.5,8.3],[29,-27.5,3.6],[29.5,-27.5,23.9],[30,-27.5,134.7],[30.5,-27.5,40.5],[31,-27.5,27.7],[31.5,-27.5,54.9],[32,-27.5,31.4],[32.5,-27.5,18.2],[151,-27.5,1.6],[151.5,-27.5,37.8],[152,-27.5,10.6],[152.5,-27.5,105.9],[153,-27.5,315.8],[153.5,-27.5,17.9],[-71.5,-28,3.9],[-71,-28,5.3],[-70.5,-28,6.2],[-70,-28,1.5],[-68,-28,1],[-67.5,-28,1.5],[-67,-28,3.3],[-66.5,-28,2],[-66,-28,56.8],[-65.5,-28,4.3],[-65,-28,14.7],[-64.5,-28,21.4],[-64,-28,5.1],[-63.5,-28,3.5],[-63,-28,3.2],[-62.5,-28,3.2],[-62,-28,2.3],[-61.5,-28,1.7],[-61,-28,2.2],[-60.5,-28,2.5],[-60,-28,10.4],[-59.5,-28,15.5],[-59,-28,12.8],[-58.5,-28,6.5],[-58,-28,3.6],[-57.5,-28,3.3],[-57,-28,4.4],[-56.5,-28,7.4],[-56,-28,17.4],[-55.5,-28,14],[-55,-28,26.6],[-54.5,-28,41.5],[-54,-28,44.2],[-53.5,-28,20.3],[-53,-28,32.1],[-52.5,-28,81.1],[-52,-28,21.9],[-51.5,-28,9.5],[-51,-28,15],[-50.5,-28,36.6],[-50,-28,10.5],[-49.5,-28,54.8],[-49,-28,78.6],[16.5,-28,1],[21,-28,23.4],[21.5,-28,2.2],[23,-28,9.5],[23.5,-28,4.4],[24,-28,4.9],[24.5,-28,14.8],[25,-28,4.4],[25.5,-28,2.2],[26,-28,11.8],[26.5,-28,51.2],[27,-28,13.9],[27.5,-28,15.7],[28,-28,33],[28.5,-28,11.7],[29,-28,15.8],[29.5,-28,26.7],[30,-28,46.4],[30.5,-28,75.9],[31,-28,50.2],[31.5,-28,58.5],[32,-28,70.9],[113.5,-28,468.2],[151.5,-28,1.8],[152,-28,6.8],[152.5,-28,6],[153,-28,94.1],[153.5,-28,157],[-72,-28.5,1.8],[-71.5,-28.5,2.6],[-71,-28.5,6.1],[-70.5,-28.5,2.9],[-68,-28.5,1.1],[-67.5,-28.5,2.1],[-67,-28.5,5.9],[-66.5,-28.5,5.4],[-66,-28.5,12.9],[-65.5,-28.5,3],[-65,-28.5,5.9],[-64.5,-28.5,5.3],[-64,-28.5,4.1],[-63.5,-28.5,4.3],[-63,-28.5,4.8],[-62.5,-28.5,5.2],[-62,-28.5,2.8],[-61.5,-28.5,1.7],[-61,-28.5,2.4],[-60.5,-28.5,2.8],[-60,-28.5,11.9],[-59.5,-28.5,16],[-59,-28.5,11.3],[-58.5,-28.5,4.3],[-58,-28.5,3.9],[-57.5,-28.5,3.1],[-57,-28.5,2.7],[-56.5,-28.5,10.6],[-56,-28.5,16.4],[-55.5,-28.5,5.6],[-55,-28.5,6.8],[-54.5,-28.5,7.1],[-54,-28.5,29.3],[-53.5,-28.5,14.7],[-53,-28.5,23.5],[-52.5,-28.5,22.3],[-52,-28.5,38.8],[-51.5,-28.5,24.3],[-51,-28.5,11.1],[-50.5,-28.5,5.5],[-50,-28.5,30.2],[-49.5,-28.5,184.2],[-49,-28.5,150.1],[16,-28.5,11.7],[20,-28.5,2.5],[20.5,-28.5,11.6],[21,-28.5,7.4],[21.5,-28.5,3.4],[22,-28.5,2],[23,-28.5,2.1],[23.5,-28.5,2.4],[24,-28.5,2.7],[24.5,-28.5,75.7],[25,-28.5,3.6],[25.5,-28.5,2.9],[26,-28.5,7.5],[26.5,-28.5,4.6],[27,-28.5,13.2],[27.5,-28.5,39.7],[28,-28.5,64.9],[28.5,-28.5,144.5],[29,-28.5,43.3],[29.5,-28.5,74.6],[30,-28.5,62.6],[30.5,-28.5,59.2],[31,-28.5,69.2],[31.5,-28.5,169],[32,-28.5,123],[113.5,-28.5,468.2],[114,-28.5,468.2],[114.5,-28.5,10.7],[115,-28.5,1],[150,-28.5,2.5],[151.5,-28.5,3.2],[152,-28.5,1.2],[152.5,-28.5,3.7],[153,-28.5,34.7],[153.5,-28.5,63.4],[-72,-29,1.4],[-71.5,-29,1.4],[-71,-29,1.8],[-69,-29,1.1],[-68,-29,5.3],[-67.5,-29,6.1],[-67,-29,10.1],[-66.5,-29,12.4],[-66,-29,7],[-65.5,-29,3.4],[-65,-29,5.2],[-64.5,-29,3.3],[-64,-29,3.2],[-63.5,-29,2.9],[-63,-29,1.4],[-62.5,-29,2.1],[-62,-29,1.8],[-61.5,-29,1.7],[-61,-29,2.5],[-60.5,-29,3.6],[-60,-29,14.2],[-59.5,-29,17.8],[-59,-29,10.9],[-58.5,-29,4.4],[-58,-29,4.3],[-57.5,-29,6],[-57,-29,6.3],[-56.5,-29,13.8],[-56,-29,3],[-55.5,-29,9.5],[-55,-29,20.7],[-54.5,-29,5],[-54,-29,10.8],[-53.5,-29,22.4],[-53,-29,20.2],[-52.5,-29,38.1],[-52,-29,88.4],[-51.5,-29,199.1],[-51,-29,36.3],[-50.5,-29,8.3],[-50,-29,61.2],[-49.5,-29,78.5],[16.5,-29,7.5],[17.5,-29,2.9],[18.5,-29,1.1],[19,-29,2],[21,-29,1.9],[22,-29,1.2],[23.5,-29,4.5],[24.5,-29,11.3],[25,-29,5.3],[25.5,-29,2.4],[26,-29,139.2],[26.5,-29,95.1],[27,-29,22.2],[27.5,-29,108.6],[28,-29,92.5],[28.5,-29,41.3],[29,-29,15.5],[29.5,-29,47.5],[30,-29,21],[30.5,-29,82.6],[31,-29,166],[31.5,-29,136.9],[114.5,-29,1.9],[152.5,-29,1.6],[153,-29,9.1],[167.5,-29,46.4],[-71.5,-29.5,54.9],[-71,-29.5,32.7],[-70.5,-29.5,3.5],[-69,-29.5,1.4],[-68.5,-29.5,1.3],[-68,-29.5,1.8],[-67.5,-29.5,5.2],[-67,-29.5,10.3],[-66.5,-29.5,11.9],[-66,-29.5,8.8],[-65.5,-29.5,3.6],[-65,-29.5,1.8],[-64.5,-29.5,1.6],[-64,-29.5,2.2],[-63.5,-29.5,2.6],[-63,-29.5,1.1],[-62.5,-29.5,1.6],[-62,-29.5,3],[-61.5,-29.5,3.7],[-61,-29.5,3.5],[-60.5,-29.5,2.8],[-60,-29.5,7.8],[-59.5,-29.5,12.9],[-59,-29.5,5.4],[-58.5,-29.5,5.5],[-58,-29.5,6.7],[-57.5,-29.5,23.8],[-57,-29.5,23.3],[-56.5,-29.5,9.3],[-56,-29.5,11.9],[-55.5,-29.5,5.4],[-55,-29.5,9.2],[-54.5,-29.5,11.8],[-54,-29.5,97.1],[-53.5,-29.5,21.8],[-53,-29.5,29.4],[-52.5,-29.5,80.6],[-52,-29.5,53],[-51.5,-29.5,642.8],[-51,-29.5,162.6],[-50.5,-29.5,60.3],[-50,-29.5,65.4],[17,-29.5,2.4],[17.5,-29.5,10.7],[22.5,-29.5,4.5],[23.5,-29.5,1.2],[24,-29.5,4.9],[24.5,-29.5,1.7],[25,-29.5,4],[25.5,-29.5,3.3],[26,-29.5,3],[26.5,-29.5,5],[27,-29.5,78],[27.5,-29.5,100.2],[28,-29.5,59.6],[28.5,-29.5,31.4],[29,-29.5,14.1],[29.5,-29.5,45.1],[30,-29.5,247.6],[30.5,-29.5,922.9],[31,-29.5,1017.7],[149.5,-29.5,1],[151,-29.5,4.1],[151.5,-29.5,3.4],[152.5,-29.5,7.9],[153,-29.5,6.5],[-72,-30,53.9],[-71.5,-30,54.9],[-71,-30,9.9],[-70.5,-30,4],[-70,-30,1.1],[-69,-30,1.5],[-68.5,-30,1.5],[-67,-30,1.7],[-66.5,-30,3.1],[-66,-30,2.8],[-65.5,-30,9.6],[-65,-30,6.3],[-64.5,-30,2.9],[-64,-30,1.7],[-63.5,-30,1.8],[-63,-30,1.7],[-62.5,-30,4],[-62,-30,4.6],[-61.5,-30,4.6],[-61,-30,5.8],[-60.5,-30,5.9],[-60,-30,5.7],[-59.5,-30,8.1],[-59,-30,4.6],[-58.5,-30,8.8],[-58,-30,11.8],[-57.5,-30,9.9],[-57,-30,8.5],[-56.5,-30,6.5],[-56,-30,6.6],[-55.5,-30,11.1],[-55,-30,7],[-54.5,-30,17.1],[-54,-30,15.2],[-53.5,-30,5.9],[-53,-30,28.5],[-52.5,-30,8.5],[-52,-30,37.2],[-51.5,-30,552.6],[-51,-30,26.1],[-50.5,-30,30.4],[17,-30,1],[17.5,-30,1.6],[18,-30,1],[24,-30,1.4],[24.5,-30,2],[25,-30,1.9],[25.5,-30,4.3],[26.5,-30,5.5],[27,-30,27.4],[27.5,-30,55.8],[28,-30,42.7],[28.5,-30,51.9],[29,-30,10],[29.5,-30,65.3],[30,-30,87],[30.5,-30,232.6],[149,-30,1.2],[149.5,-30,1.2],[151,-30,1.5],[151.5,-30,3.1],[152,-30,1.3],[152.5,-30,14.1],[153,-30,47.4],[-72,-30.5,19.3],[-71.5,-30.5,15.9],[-71,-30.5,11.4],[-70.5,-30.5,3.6],[-69,-30.5,1.3],[-68.5,-30.5,2.4],[-68,-30.5,1.9],[-67.5,-30.5,1.2],[-67,-30.5,1.2],[-66.5,-30.5,2.1],[-66,-30.5,2.5],[-65.5,-30.5,7.5],[-65,-30.5,18.7],[-64.5,-30.5,14],[-64,-30.5,6.7],[-63.5,-30.5,5.4],[-63,-30.5,8],[-62.5,-30.5,12.8],[-62,-30.5,13.9],[-61.5,-30.5,13.7],[-61,-30.5,7.9],[-60.5,-30.5,5.7],[-60,-30.5,7],[-59.5,-30.5,8.4],[-59,-30.5,5.3],[-58.5,-30.5,17.4],[-58,-30.5,10],[-57.5,-30.5,7.2],[-57,-30.5,7],[-56.5,-30.5,5.9],[-56,-30.5,7.5],[-55.5,-30.5,27.6],[-55,-30.5,5.2],[-54.5,-30.5,1.7],[-54,-30.5,5.1],[-53.5,-30.5,8],[-53,-30.5,9.2],[-52.5,-30.5,10.8],[-52,-30.5,31.5],[-51.5,-30.5,4.5],[-51,-30.5,1.3],[-50.5,-30.5,3.1],[22,-30.5,2.2],[23,-30.5,1.5],[24,-30.5,9.9],[25,-30.5,6],[25.5,-30.5,5],[26,-30.5,2.5],[26.5,-30.5,11.3],[27,-30.5,23.6],[27.5,-30.5,20.1],[28,-30.5,25.8],[28.5,-30.5,58.5],[29,-30.5,83.3],[29.5,-30.5,98.6],[30,-30.5,154.2],[30.5,-30.5,245.1],[149,-30.5,1.1],[149.5,-30.5,1.5],[150,-30.5,2.1],[150.5,-30.5,1.9],[151,-30.5,2.2],[151.5,-30.5,7.6],[152,-30.5,3.5],[152.5,-30.5,10.6],[153,-30.5,8.7],[-72,-31,8.7],[-71.5,-31,6.8],[-71,-31,9],[-70.5,-31,1.2],[-69,-31,23],[-68.5,-31,21.6],[-68,-31,4.2],[-67.5,-31,2.4],[-67,-31,2.5],[-66.5,-31,1.9],[-66,-31,1.6],[-65.5,-31,2],[-65,-31,33],[-64.5,-31,485.6],[-64,-31,18.9],[-63.5,-31,10.8],[-63,-31,13.7],[-62.5,-31,14.3],[-62,-31,24.3],[-61.5,-31,18.4],[-61,-31,97.8],[-60.5,-31,13.4],[-60,-31,20.7],[-59.5,-31,11.4],[-59,-31,12.8],[-58.5,-31,19.3],[-58,-31,9.8],[-57.5,-31,9],[-57,-31,9],[-56.5,-31,8.4],[-56,-31,10.2],[-55.5,-31,9.1],[-55,-31,8.9],[-54.5,-31,39.5],[-54,-31,8.3],[-53.5,-31,5],[-53,-31,13.4],[-52.5,-31,20.7],[-52,-31,4],[-51.5,-31,2.2],[-51,-31,13.4],[19.5,-31,3.4],[20.5,-31,1.1],[23,-31,3],[23.5,-31,2],[24,-31,1.4],[24.5,-31,3.3],[25,-31,1.9],[25.5,-31,3],[26,-31,9.2],[26.5,-31,3],[27,-31,9.5],[27.5,-31,9.9],[28,-31,20],[28.5,-31,75.9],[29,-31,90.5],[29.5,-31,101.4],[30,-31,63.3],[115,-31,1.1],[115.5,-31,3.4],[116,-31,1.4],[149.5,-31,1.5],[150,-31,2.5],[150.5,-31,16.6],[151,-31,1.7],[152,-31,9.4],[152.5,-31,12.9],[153,-31,8.3],[159,-31,24.1],[-72,-31.5,7.8],[-71.5,-31.5,10.6],[-71,-31.5,8.3],[-70.5,-31.5,1.7],[-69.5,-31.5,1.1],[-69,-31.5,98.1],[-68.5,-31.5,56],[-68,-31.5,4.3],[-67.5,-31.5,4],[-67,-31.5,2.8],[-66.5,-31.5,1.6],[-66,-31.5,3.8],[-65.5,-31.5,12],[-65,-31.5,23.6],[-64.5,-31.5,88.3],[-64,-31.5,19.7],[-63.5,-31.5,18.9],[-63,-31.5,13.9],[-62.5,-31.5,14.2],[-62,-31.5,18.2],[-61.5,-31.5,16],[-61,-31.5,92.1],[-60.5,-31.5,71],[-60,-31.5,46.1],[-59.5,-31.5,18.9],[-59,-31.5,20],[-58.5,-31.5,18.3],[-58,-31.5,8.5],[-57.5,-31.5,8.7],[-57,-31.5,8.8],[-56.5,-31.5,7],[-56,-31.5,6.8],[-55.5,-31.5,9.1],[-55,-31.5,10.9],[-54.5,-31.5,4.2],[-54,-31.5,3.9],[-53.5,-31.5,6],[-53,-31.5,14],[-52.5,-31.5,130.6],[-52,-31.5,5.7],[-51.5,-31.5,3.9],[18,-31.5,12.1],[18.5,-31.5,11],[23.5,-31.5,1.9],[25,-31.5,6.5],[25.5,-31.5,1.7],[26.5,-31.5,51.6],[27,-31.5,42.7],[27.5,-31.5,58.9],[28,-31.5,71.9],[28.5,-31.5,157.7],[29,-31.5,108.8],[29.5,-31.5,102.3],[115,-31.5,366.1],[115.5,-31.5,447.1],[116,-31.5,38.6],[116.5,-31.5,4.4],[141,-31.5,8.3],[148.5,-31.5,2.9],[150,-31.5,1.1],[150.5,-31.5,1.6],[151,-31.5,1.9],[151.5,-31.5,3.3],[152,-31.5,11.7],[152.5,-31.5,14.5],[159,-31.5,24.1],[-72.5,-32,40.5],[-72,-32,20],[-71.5,-32,18.6],[-71,-32,12.7],[-70.5,-32,5.8],[-70,-32,5.4],[-69.5,-32,18.9],[-69,-32,12.1],[-68.5,-32,3.6],[-68,-32,3.4],[-67.5,-32,2.3],[-67,-32,1.7],[-66.5,-32,1.8],[-66,-32,3.3],[-65.5,-32,15.7],[-65,-32,11.2],[-64.5,-32,14.8],[-64,-32,21.6],[-63.5,-32,22.9],[-63,-32,12.3],[-62.5,-32,10.9],[-62,-32,14.4],[-61.5,-32,17.7],[-61,-32,18.4],[-60.5,-32,12.7],[-60,-32,9.5],[-59.5,-32,11.2],[-59,-32,19.2],[-58.5,-32,16.3],[-58,-32,8.4],[-57.5,-32,7.7],[-57,-32,7.7],[-56.5,-32,6.2],[-56,-32,5.7],[-55.5,-32,5.8],[-55,-32,6.5],[-54.5,-32,6.5],[-54,-32,7.1],[-53.5,-32,10.1],[-53,-32,7.2],[-52.5,-32,115.2],[-52,-32,59.1],[18,-32,8.5],[18.5,-32,5.6],[19,-32,1.4],[22.5,-32,12.1],[24,-32,3.1],[24.5,-32,13.3],[25.5,-32,13.6],[26,-32,6.3],[26.5,-32,24],[27,-32,10.8],[27.5,-32,44.1],[28,-32,101.5],[28.5,-32,78.9],[29,-32,131.9],[115,-32,366.1],[115.5,-32,323.9],[116,-32,44.4],[137.5,-32,1.8],[147.5,-32,1.3],[148,-32,3.2],[148.5,-32,9.5],[149,-32,2.2],[149.5,-32,2.4],[150,-32,1.4],[150.5,-32,4],[151,-32,3.7],[151.5,-32,4.7],[152,-32,9.2],[152.5,-32,10.1],[-72.5,-32.5,4.9],[-72,-32.5,885.9],[-71.5,-32.5,218.3],[-71,-32.5,56],[-70.5,-32.5,23.7],[-70,-32.5,20.1],[-69.5,-32.5,21.2],[-69,-32.5,259.4],[-68.5,-32.5,34.1],[-68,-32.5,4.3],[-67.5,-32.5,2],[-66.5,-32.5,1.3],[-66,-32.5,2],[-65.5,-32.5,6],[-65,-32.5,11.7],[-64.5,-32.5,12.8],[-64,-32.5,14.9],[-63.5,-32.5,20],[-63,-32.5,9.7],[-62.5,-32.5,10.8],[-62,-32.5,16.3],[-61.5,-32.5,27.8],[-61,-32.5,113.8],[-60.5,-32.5,5.2],[-60,-32.5,6.9],[-59.5,-32.5,9.7],[-59,-32.5,14.7],[-58.5,-32.5,14.8],[-58,-32.5,5.6],[-57.5,-32.5,5.4],[-57,-32.5,5.4],[-56.5,-32.5,5.5],[-56,-32.5,5.3],[-55.5,-32.5,6],[-55,-32.5,6.2],[-54.5,-32.5,6],[-54,-32.5,6],[-53.5,-32.5,7.5],[-53,-32.5,1.7],[-52.5,-32.5,1.1],[17.5,-32.5,62.1],[18,-32.5,16],[18.5,-32.5,9.8],[19,-32.5,6.3],[21.5,-32.5,1.6],[24.5,-32.5,2.3],[25,-32.5,2.2],[25.5,-32.5,9.9],[26,-32.5,9.2],[26.5,-32.5,42],[27,-32.5,114],[27.5,-32.5,146.4],[28,-32.5,43.1],[28.5,-32.5,48.1],[115.5,-32.5,25.4],[116,-32.5,2.8],[117,-32.5,2.6],[137,-32.5,1],[137.5,-32.5,9.6],[138.5,-32.5,1.2],[147.5,-32.5,2.4],[148,-32.5,2.7],[148.5,-32.5,3.2],[149,-32.5,2.7],[149.5,-32.5,2.5],[150,-32.5,2.5],[150.5,-32.5,5.4],[151,-32.5,20.9],[151.5,-32.5,133.2],[152,-32.5,19.7],[-72.5,-33,4.9],[-72,-33,339.8],[-71.5,-33,162.9],[-71,-33,1248.9],[-70.5,-33,688.7],[-70,-33,14.9],[-69.5,-33,14.4],[-69,-33,52],[-68.5,-33,23.8],[-68,-33,1.8],[-67.5,-33,4.5],[-67,-33,10.4],[-66.5,-33,8],[-66,-33,4.6],[-65.5,-33,9.1],[-65,-33,12.8],[-64.5,-33,12.7],[-64,-33,8],[-63.5,-33,10.3],[-63,-33,9.9],[-62.5,-33,11.7],[-62,-33,21.5],[-61.5,-33,36],[-61,-33,339.8],[-60.5,-33,75.6],[-60,-33,6.8],[-59.5,-33,7.9],[-59,-33,13.2],[-58.5,-33,9.4],[-58,-33,9.4],[-57.5,-33,6.9],[-57,-33,5.2],[-56.5,-33,5.5],[-56,-33,5.7],[-55.5,-33,6],[-55,-33,5.8],[-54.5,-33,5.8],[-54,-33,5.9],[-53.5,-33,10.5],[-53,-33,2.9],[17.5,-33,392.8],[18,-33,9.2],[18.5,-33,23.5],[19,-33,32.8],[19.5,-33,8.7],[20,-33,3],[20.5,-33,2],[21,-33,4.5],[22,-33,3.6],[22.5,-33,1.4],[23,-33,2.9],[24,-33,3.1],[25,-33,6.4],[25.5,-33,4.9],[26,-33,3.9],[26.5,-33,31],[27,-33,34.6],[27.5,-33,267.3],[115.5,-33,25.5],[116,-33,5],[137,-33,6.2],[137.5,-33,19.7],[138,-33,4.3],[147.5,-33,2.4],[148,-33,2.5],[148.5,-33,2.2],[149,-33,16.7],[149.5,-33,13.7],[150,-33,5.9],[150.5,-33,31.2],[151,-33,143],[151.5,-33,233],[-72,-33.5,45.3],[-71.5,-33.5,90],[-71,-33.5,242.1],[-70.5,-33.5,2.3],[-70,-33.5,8.1],[-69.5,-33.5,8.3],[-69,-33.5,7.7],[-68.5,-33.5,2.2],[-68,-33.5,1.8],[-67.5,-33.5,1.7],[-67,-33.5,10.6],[-66.5,-33.5,11.7],[-66,-33.5,7.6],[-65.5,-33.5,9.1],[-65,-33.5,12.8],[-64.5,-33.5,12.4],[-64,-33.5,6.5],[-63.5,-33.5,6.8],[-63,-33.5,9.2],[-62.5,-33.5,15],[-62,-33.5,16.3],[-61.5,-33.5,20.7],[-61,-33.5,29.4],[-60.5,-33.5,51.2],[-60,-33.5,29.7],[-59.5,-33.5,24.6],[-59,-33.5,10.7],[-58.5,-33.5,13.2],[-58,-33.5,11.9],[-57.5,-33.5,10.2],[-57,-33.5,7.9],[-56.5,-33.5,6.9],[-56,-33.5,6.6],[-55.5,-33.5,6.3],[-55,-33.5,6.6],[-54.5,-33.5,6.8],[-54,-33.5,7],[-53.5,-33.5,18.8],[18,-33.5,469.8],[18.5,-33.5,570.6],[19,-33.5,74.9],[19.5,-33.5,19.2],[20,-33.5,11.5],[20.5,-33.5,2.2],[21,-33.5,1.9],[21.5,-33.5,3.7],[22,-33.5,62.9],[22.5,-33.5,7.7],[23,-33.5,6.4],[23.5,-33.5,8.6],[24,-33.5,3.1],[24.5,-33.5,9.7],[25,-33.5,114.5],[25.5,-33.5,449.6],[26,-33.5,11.5],[26.5,-33.5,39.6],[27,-33.5,8.4],[114.5,-33.5,7.2],[115,-33.5,8.3],[115.5,-33.5,5.1],[116,-33.5,1.8],[117.5,-33.5,1.7],[137.5,-33.5,6.1],[138,-33.5,1.6],[138.5,-33.5,2.6],[147.5,-33.5,1.6],[148,-33.5,2.1],[148.5,-33.5,4],[149,-33.5,2.6],[149.5,-33.5,1.9],[150,-33.5,25.4],[150.5,-33.5,415.6],[151,-33.5,1504.7],[-72.5,-34,22.8],[-72,-34,15.1],[-71.5,-34,53],[-71,-34,124.7],[-70.5,-34,8.4],[-70,-34,2.9],[-69.5,-34,2.6],[-69,-34,3.8],[-68.5,-34,4.2],[-68,-34,4.2],[-67.5,-34,4.3],[-67,-34,8.3],[-66.5,-34,12.1],[-66,-34,8.1],[-65.5,-34,6.9],[-65,-34,4.5],[-64.5,-34,6.8],[-64,-34,4.1],[-63.5,-34,4.2],[-63,-34,8.5],[-62.5,-34,13.5],[-62,-34,14.1],[-61.5,-34,17.7],[-61,-34,18.3],[-60.5,-34,20.2],[-60,-34,20],[-59.5,-34,68.5],[-59,-34,528.4],[-58.5,-34,119],[-58,-34,19.6],[-57.5,-34,19.6],[-57,-34,19.5],[-56.5,-34,37.7],[-56,-34,52.9],[-55.5,-34,6.8],[-55,-34,19.9],[-54.5,-34,7.3],[-54,-34,6.8],[18,-34,677.8],[18.5,-34,982.9],[19,-34,40.5],[19.5,-34,8.8],[20,-34,7],[20.5,-34,6],[21,-34,11.1],[21.5,-34,5.3],[22,-34,193.9],[22.5,-34,60],[23,-34,158.3],[23.5,-34,3.4],[24,-34,8.4],[24.5,-34,53],[25,-34,41.1],[25.5,-34,98.5],[114.5,-34,3.7],[115,-34,2.8],[116,-34,2],[136,-34,1],[137,-34,1.8],[137.5,-34,3.2],[138,-34,3.5],[138.5,-34,4.8],[139,-34,2.6],[139.5,-34,1.3],[140,-34,3],[140.5,-34,7.6],[142,-34,17],[145.5,-34,4.4],[146,-34,6.4],[146.5,-34,1.3],[147,-34,1.5],[147.5,-34,2.7],[148,-34,3.8],[148.5,-34,1.9],[149,-34,1.3],[149.5,-34,1.5],[150,-34,12.2],[150.5,-34,168.6],[151,-34,599.1],[172,-34,3.1],[172.5,-34,3.1],[173,-34,3.1],[-72.5,-34.5,16.9],[-72,-34.5,16.6],[-71.5,-34.5,53.7],[-71,-34.5,40.1],[-70.5,-34.5,11.9],[-70,-34.5,4.7],[-69.5,-34.5,4.8],[-69,-34.5,5.6],[-68.5,-34.5,5.6],[-68,-34.5,4.7],[-67.5,-34.5,3.4],[-67,-34.5,4.5],[-66.5,-34.5,4.5],[-66,-34.5,3.1],[-65.5,-34.5,3],[-65,-34.5,2.7],[-64.5,-34.5,2.7],[-64,-34.5,2.8],[-63.5,-34.5,3.8],[-63,-34.5,4.1],[-62.5,-34.5,4.6],[-62,-34.5,7.1],[-61.5,-34.5,16.5],[-61,-34.5,23.6],[-60.5,-34.5,21.4],[-60,-34.5,22.6],[-59.5,-34.5,64],[-59,-34.5,1967.9],[-58.5,-34.5,3778.5],[-58,-34.5,505.4],[-57.5,-34.5,19.5],[-57,-34.5,19.5],[-56.5,-34.5,801.7],[-56,-34.5,103.8],[-55.5,-34.5,31.3],[-55,-34.5,27.7],[-54.5,-34.5,6.8],[-54,-34.5,6.8],[19,-34.5,33.5],[19.5,-34.5,2.7],[20,-34.5,21.7],[115.5,-34.5,1.6],[116,-34.5,1.6],[116.5,-34.5,1.5],[117,-34.5,1.5],[117.5,-34.5,2.6],[118,-34.5,2.7],[118.5,-34.5,3.1],[135.5,-34.5,8.5],[137,-34.5,1.3],[137.5,-34.5,2.6],[138,-34.5,179.8],[138.5,-34.5,321],[139,-34.5,4.9],[139.5,-34.5,1],[142.5,-34.5,2],[146,-34.5,4],[146.5,-34.5,3.2],[147,-34.5,3.9],[147.5,-34.5,3.3],[148,-34.5,2.8],[148.5,-34.5,2.6],[149,-34.5,1.4],[149.5,-34.5,10.4],[150,-34.5,13],[150.5,-34.5,74.6],[172.5,-34.5,3.1],[173,-34.5,4.2],[173.5,-34.5,6.5],[-73,-35,45],[-72.5,-35,33],[-72,-35,48.3],[-71.5,-35,90.8],[-71,-35,34.9],[-70.5,-35,5],[-69.5,-35,3.4],[-69,-35,4.6],[-68.5,-35,5.6],[-68,-35,4.8],[-67.5,-35,3.2],[-67,-35,3.1],[-65,-35,2.2],[-64.5,-35,5.8],[-64,-35,5.8],[-63.5,-35,4.4],[-63,-35,3.5],[-62.5,-35,4.4],[-62,-35,7.4],[-61.5,-35,9.6],[-61,-35,13.7],[-60.5,-35,11.3],[-60,-35,12.2],[-59.5,-35,14.5],[-59,-35,31.4],[-58.5,-35,97.1],[-58,-35,60.7],[-57.5,-35,7.5],[116,-35,1.6],[116.5,-35,1.9],[117,-35,2.5],[117.5,-35,40.9],[118,-35,3.1],[137.5,-35,3.6],[138,-35,81.4],[138.5,-35,111.6],[139,-35,8.5],[139.5,-35,1.4],[143,-35,1.4],[143.5,-35,4.8],[146.5,-35,2.8],[147,-35,9.9],[147.5,-35,8.4],[148,-35,2.7],[148.5,-35,1.9],[149,-35,145.8],[149.5,-35,1.2],[150,-35,14.4],[150.5,-35,16.2],[173,-35,8.6],[173.5,-35,8.8],[174,-35,11.4],[174.5,-35,9.9],[-73,-35.5,20.3],[-72.5,-35.5,20.4],[-72,-35.5,34.3],[-71.5,-35.5,28.1],[-71,-35.5,9],[-70.5,-35.5,3.3],[-68.5,-35.5,4.6],[-68,-35.5,5.5],[-67.5,-35.5,4.1],[-67,-35.5,2.7],[-65,-35.5,2.4],[-64.5,-35.5,2.8],[-64,-35.5,16.9],[-63.5,-35.5,7.4],[-63,-35.5,6.2],[-62.5,-35.5,6.7],[-62,-35.5,8.6],[-61.5,-35.5,9.1],[-61,-35.5,9.1],[-60.5,-35.5,6.6],[-60,-35.5,9.1],[-59.5,-35.5,8.2],[-59,-35.5,8.7],[-58.5,-35.5,7.9],[-58,-35.5,8.4],[-57.5,-35.5,6.8],[137.5,-35.5,1.1],[138,-35.5,5.9],[138.5,-35.5,18.4],[139,-35.5,1.6],[143,-35.5,1.5],[143.5,-35.5,3],[144,-35.5,2.2],[144.5,-35.5,3.5],[145,-35.5,4.2],[145.5,-35.5,4.3],[146,-35.5,3.3],[146.5,-35.5,4.1],[147,-35.5,2.3],[147.5,-35.5,1.7],[148,-35.5,2],[148.5,-35.5,1.8],[149,-35.5,2.5],[149.5,-35.5,4.3],[150,-35.5,11.6],[173,-35.5,4.7],[173.5,-35.5,6.5],[174,-35.5,26.6],[174.5,-35.5,9.9],[175,-35.5,17.2],[-73,-36,25.7],[-72.5,-36,41.6],[-72,-36,44.9],[-71.5,-36,19.6],[-71,-36,5.6],[-70.5,-36,1.8],[-65.5,-36,1.1],[-65,-36,2.4],[-64.5,-36,19.2],[-64,-36,5.4],[-63.5,-36,3.9],[-63,-36,7.2],[-62.5,-36,6.6],[-62,-36,6.7],[-61.5,-36,6.8],[-61,-36,6.2],[-60.5,-36,2.7],[-60,-36,4.5],[-59.5,-36,6.6],[-59,-36,3.6],[-58.5,-36,1.2],[-58,-36,7.9],[-57.5,-36,3.4],[-57,-36,26.4],[139,-36,1.5],[140.5,-36,1],[142,-36,1.5],[142.5,-36,1.5],[143,-36,1.4],[143.5,-36,1.4],[144,-36,2.5],[144.5,-36,10.6],[145,-36,22.8],[145.5,-36,5.8],[146,-36,10.7],[146.5,-36,33.5],[147,-36,3.9],[148,-36,1.4],[148.5,-36,3.2],[149,-36,2.3],[149.5,-36,6.4],[150,-36,8.7],[173.5,-36,5.6],[174,-36,7.3],[174.5,-36,15.5],[175,-36,16.4],[175.5,-36,17.1],[-74,-36.5,35.6],[-73.5,-36.5,957.4],[-73,-36.5,149.1],[-72.5,-36.5,39.8],[-72,-36.5,30.8],[-71.5,-36.5,7],[-71,-36.5,1.1],[-70.5,-36.5,2.9],[-65.5,-36.5,1.1],[-65,-36.5,1.8],[-64.5,-36.5,17.7],[-64,-36.5,5.7],[-63.5,-36.5,4.7],[-63,-36.5,4.4],[-62.5,-36.5,2.9],[-62,-36.5,4.5],[-61.5,-36.5,9.5],[-61,-36.5,13.8],[-60.5,-36.5,10.1],[-60,-36.5,9.8],[-59.5,-36.5,7.6],[-59,-36.5,3.2],[-58.5,-36.5,2.2],[-58,-36.5,5],[-57.5,-36.5,3.4],[-57,-36.5,28.9],[140.5,-36.5,2.9],[142,-36.5,6.8],[142.5,-36.5,2.4],[143,-36.5,1.8],[143.5,-36.5,2.4],[144,-36.5,34],[144.5,-36.5,3.7],[145,-36.5,4.3],[145.5,-36.5,5.8],[146,-36.5,3],[146.5,-36.5,3.5],[147,-36.5,2.4],[148,-36.5,1.5],[148.5,-36.5,2],[149,-36.5,1.6],[149.5,-36.5,4.9],[150,-36.5,4.9],[174,-36.5,27.5],[174.5,-36.5,682.8],[175,-36.5,14.8],[175.5,-36.5,8.3],[176,-36.5,8.3],[-74,-37,37.7],[-73.5,-37,61.4],[-73,-37,47.1],[-72.5,-37,70.5],[-72,-37,17.8],[-71.5,-37,5.3],[-71,-37,1],[-70.5,-37,2.6],[-70,-37,1.4],[-69.5,-37,1.1],[-66,-37,1.1],[-65.5,-37,1.2],[-65,-37,1.2],[-64.5,-37,1.7],[-64,-37,2.9],[-63.5,-37,2.9],[-63,-37,2.8],[-62.5,-37,4.6],[-62,-37,4.9],[-61.5,-37,3.7],[-61,-37,6.6],[-60.5,-37,8.7],[-60,-37,10.9],[-59.5,-37,21.7],[-59,-37,10.2],[-58.5,-37,3.7],[-58,-37,5],[-57.5,-37,12.2],[-57,-37,80.9],[-13,-37,2.1],[-12.5,-37,2.1],[139.5,-37,1.2],[140,-37,1.1],[140.5,-37,1.5],[141.5,-37,1.2],[142,-37,1.6],[142.5,-37,3.1],[143,-37,2.4],[143.5,-37,11.5],[144,-37,13],[144.5,-37,14.6],[145,-37,8.5],[145.5,-37,3.1],[146,-37,2.6],[146.5,-37,2.9],[147,-37,2.5],[149,-37,1.3],[149.5,-37,4.1],[150,-37,4.9],[174,-37,100.8],[174.5,-37,92.1],[175,-37,12.7],[175.5,-37,18.6],[176,-37,285.1],[-74,-37.5,46.6],[-73.5,-37.5,32],[-73,-37.5,31.1],[-72.5,-37.5,17],[-72,-37.5,7.2],[-71.5,-37.5,4],[-70.5,-37.5,1],[-70,-37.5,1.1],[-69.5,-37.5,1],[-69,-37.5,1.1],[-68.5,-37.5,8.5],[-68,-37.5,7.2],[-64.5,-37.5,1.5],[-64,-37.5,2],[-63.5,-37.5,2.6],[-63,-37.5,4.2],[-62.5,-37.5,5.9],[-62,-37.5,6.1],[-61.5,-37.5,3.4],[-61,-37.5,3.2],[-60.5,-37.5,3.5],[-60,-37.5,4.5],[-59.5,-37.5,15.4],[-59,-37.5,8.1],[-58.5,-37.5,13.4],[-58,-37.5,149.4],[-57.5,-37.5,11.9],[140,-37.5,5.8],[140.5,-37.5,13.6],[141,-37.5,1.6],[141.5,-37.5,2],[142,-37.5,5],[142.5,-37.5,2.1],[143,-37.5,3.3],[143.5,-37.5,34.4],[144,-37.5,9.8],[144.5,-37.5,507],[145,-37.5,729.2],[145.5,-37.5,18],[146,-37.5,3.6],[146.5,-37.5,2.9],[147,-37.5,1.9],[147.5,-37.5,10.9],[174.5,-37.5,6.4],[175,-37.5,69.3],[175.5,-37.5,15.8],[176,-37.5,72.1],[176.5,-37.5,21],[177,-37.5,87.6],[177.5,-37.5,1.2],[178,-37.5,1.4],[178.5,-37.5,1.3],[-74,-38,11],[-73.5,-38,12],[-73,-38,16.8],[-72.5,-38,25.4],[-72,-38,16.9],[-71.5,-38,4.1],[-71,-38,1.2],[-70.5,-38,1.2],[-69,-38,6.6],[-68.5,-38,10.1],[-68,-38,15.6],[-67.5,-38,8.8],[-63.5,-38,2.3],[-63,-38,2.8],[-62.5,-38,25.1],[-62,-38,10.1],[-61.5,-38,4.2],[-61,-38,5.8],[-60.5,-38,8.1],[-60,-38,4.4],[-59.5,-38,15.2],[-59,-38,7.4],[-58.5,-38,13.2],[-58,-38,217.7],[140.5,-38,2.6],[141,-38,2],[141.5,-38,9.6],[142,-38,11.1],[142.5,-38,10.3],[143,-38,4.2],[143.5,-38,8.9],[144,-38,101.5],[144.5,-38,107.1],[145,-38,278.2],[145.5,-38,19.5],[146,-38,25.7],[146.5,-38,11.3],[147,-38,13.5],[147.5,-38,14.7],[174.5,-38,1.7],[175,-38,11.6],[175.5,-38,9.2],[176,-38,23.8],[176.5,-38,10],[177,-38,4],[177.5,-38,1.1],[178,-38,1.8],[-74,-38.5,16],[-73.5,-38.5,18.7],[-73,-38.5,69.3],[-72.5,-38.5,86.8],[-72,-38.5,12.6],[-71.5,-38.5,3.6],[-71,-38.5,1.4],[-70.5,-38.5,2.8],[-70,-38.5,7.3],[-69.5,-38.5,33.7],[-69,-38.5,45.8],[-68.5,-38.5,32.3],[-68,-38.5,20],[-67.5,-38.5,20.1],[-67,-38.5,14.5],[-63.5,-38.5,2.1],[-63,-38.5,7.5],[-62.5,-38.5,89.2],[-62,-38.5,45.2],[-61.5,-38.5,5.4],[-61,-38.5,3.9],[-60.5,-38.5,9.9],[-60,-38.5,7.5],[-59.5,-38.5,15.1],[-59,-38.5,17],[-58.5,-38.5,3.7],[142.5,-38.5,5.7],[143,-38.5,3.4],[143.5,-38.5,2.7],[144,-38.5,6.7],[144.5,-38.5,123.8],[145,-38.5,37.8],[145.5,-38.5,13],[146,-38.5,4.9],[146.5,-38.5,3.1],[147,-38.5,3.1],[174,-38.5,11.8],[174.5,-38.5,1.2],[175,-38.5,3],[175.5,-38.5,5.6],[176,-38.5,8.5],[177.5,-38.5,6],[178,-38.5,70.8],[-73.5,-39,15.4],[-73,-39,21.2],[-72.5,-39,22.7],[-72,-39,12.3],[-71.5,-39,2.1],[-70.5,-39,2.8],[-70,-39,4],[-69.5,-39,10.2],[-69,-39,24.7],[-68.5,-39,1.1],[-68,-39,2.5],[-67.5,-39,5.4],[-67,-39,4.7],[-66.5,-39,1.6],[-66,-39,1.6],[-65.5,-39,1.3],[-63.5,-39,2.1],[-63,-39,2.6],[-62.5,-39,2.6],[-62,-39,7.4],[-61.5,-39,30.5],[146,-39,4.3],[173.5,-39,9.8],[174,-39,32.5],[174.5,-39,1.8],[175,-39,1.3],[175.5,-39,2.3],[176,-39,1.4],[176.5,-39,9.8],[177,-39,9.4],[177.5,-39,2.9],[-74,-39.5,7.1],[-73.5,-39.5,49.8],[-73,-39.5,18.7],[-72.5,-39.5,14.1],[-72,-39.5,9.6],[-71.5,-39.5,3.3],[-67.5,-39.5,1.3],[-67,-39.5,1.4],[-66.5,-39.5,1.4],[-66,-39.5,1.6],[-65.5,-39.5,1.3],[-63.5,-39.5,1.9],[-63,-39.5,2.1],[-62.5,-39.5,2.4],[143.5,-39.5,1.7],[144,-39.5,1.7],[173.5,-39.5,8.5],[174,-39.5,19.7],[174.5,-39.5,5.9],[175,-39.5,17.1],[175.5,-39.5,2.1],[176,-39.5,2.4],[176.5,-39.5,46.3],[177,-39.5,4.7],[-74,-40,13],[-73.5,-40,58.8],[-73,-40,30],[-72.5,-40,12],[-72,-40,7.8],[-71.5,-40,4.9],[-71,-40,3.2],[-66,-40,1.1],[-65.5,-40,1.4],[-64.5,-40,1.2],[-64,-40,1.5],[-63.5,-40,2],[-63,-40,2.1],[-62.5,-40,2.1],[143.5,-40,1.7],[144,-40,1.7],[144.5,-40,1.7],[175,-40,12.8],[175.5,-40,41.7],[176,-40,5.1],[176.5,-40,3.3],[-74,-40.5,16.6],[-73.5,-40.5,44.3],[-73,-40.5,11.9],[-72.5,-40.5,10.6],[-72,-40.5,5.2],[-71.5,-40.5,3],[-71,-40.5,1.3],[-66,-40.5,1.1],[-65.5,-40.5,1.8],[-65,-40.5,2.8],[-64.5,-40.5,5.7],[-64,-40.5,5.7],[-63.5,-40.5,4.4],[-63,-40.5,2.5],[-62.5,-40.5,2.1],[144.5,-40.5,1.7],[145,-40.5,1.7],[145.5,-40.5,37.3],[146.5,-40.5,1.8],[147,-40.5,2.2],[147.5,-40.5,2.3],[148,-40.5,1.9],[172,-40.5,1.5],[172.5,-40.5,2.9],[173,-40.5,11.1],[173.5,-40.5,1.5],[174,-40.5,1.5],[174.5,-40.5,179.6],[175,-40.5,33.7],[175.5,-40.5,10.7],[176,-40.5,1.6],[-74,-41,9.7],[-73.5,-41,27.1],[-73,-41,53],[-72.5,-41,12.6],[-72,-41,17.7],[-71.5,-41,12],[-66,-41,1.1],[-65.5,-41,1.8],[-64.5,-41,5.7],[-64,-41,5.7],[-63.5,-41,5.7],[-63,-41,5.1],[144.5,-41,1.7],[145,-41,1.3],[145.5,-41,12.8],[146,-41,30.6],[146.5,-41,13.8],[147,-41,31.5],[147.5,-41,2.1],[148,-41,1.7],[172.5,-41,5.8],[173,-41,39.8],[173.5,-41,6.1],[174,-41,7.1],[174.5,-41,371],[175,-41,20.8],[175.5,-41,4.2],[176,-41,2.1],[-74.5,-41.5,28.6],[-74,-41.5,22.9],[-73.5,-41.5,47.7],[-73,-41.5,34.3],[-72.5,-41.5,5.1],[-72,-41.5,14.8],[-71.5,-41.5,12.5],[-65.5,-41.5,1.8],[144.5,-41.5,1.4],[145.5,-41.5,1.1],[146,-41.5,2.5],[146.5,-41.5,1.6],[147,-41.5,5.4],[147.5,-41.5,1.2],[148,-41.5,1.6],[171,-41.5,5.3],[171.5,-41.5,2.5],[172.5,-41.5,1],[173,-41.5,2.5],[173.5,-41.5,10.7],[175,-41.5,1.6],[175.5,-41.5,1.6],[-74.5,-42,18.1],[-74,-42,20.9],[-73.5,-42,18.2],[-73,-42,1.8],[-72.5,-42,2.5],[-72,-42,1.2],[-71.5,-42,1.1],[-71,-42,1.1],[-70.5,-42,1.1],[-70,-42,1.1],[-66,-42,4.3],[-65.5,-42,4.6],[-65,-42,4.6],[-64.5,-42,4.6],[-64,-42,4.6],[147,-42,1.2],[147.5,-42,1.5],[148,-42,1.6],[171,-42,11.5],[171.5,-42,1.1],[173.5,-42,1.7],[174,-42,1.8],[-74.5,-42.5,12.8],[-74,-42.5,15.3],[-73.5,-42.5,31.7],[-72.5,-42.5,1.9],[-72,-42.5,4],[-71.5,-42.5,2.1],[-71,-42.5,1.6],[-66,-42.5,3.2],[-65.5,-42.5,11.2],[-65,-42.5,19.6],[-64.5,-42.5,6.5],[-64,-42.5,4.6],[147,-42.5,77.7],[147.5,-42.5,10.4],[148,-42.5,1.6],[170.5,-42.5,7.5],[171,-42.5,1.4],[171.5,-42.5,1.1],[173,-42.5,1.4],[173.5,-42.5,1.8],[-74.5,-43,7.7],[-74,-43,7.7],[-73.5,-43,1.9],[-72.5,-43,1.2],[-72,-43,3.4],[-71.5,-43,4.2],[-71,-43,1.5],[-65.5,-43,24.7],[-65,-43,28.6],[-64.5,-43,28.6],[146,-43,2.2],[146.5,-43,2.4],[147,-43,17.5],[147.5,-43,4.8],[148,-43,3.5],[171,-43,1],[172,-43,9.3],[172.5,-43,77.5],[173,-43,1.9],[-75,-43.5,7.7],[-74.5,-43.5,2.5],[-74,-43.5,2.6],[-65.5,-43.5,9.4],[146,-43.5,2.4],[146.5,-43.5,2.4],[147,-43.5,5.2],[170.5,-43.5,1.3],[171,-43.5,1.5],[171.5,-43.5,8.8],[172,-43.5,17.1],[172.5,-43.5,207.8],[173,-43.5,4],[-74,-44,1.1],[170.5,-44,1.1],[171,-44,22.9],[171.5,-44,1.6],[-72.5,-44.5,1.5],[-68.5,-44.5,4.9],[-68,-44.5,6.5],[-67.5,-44.5,5.4],[168.5,-44.5,1.9],[169,-44.5,1.1],[170.5,-44.5,1.5],[171,-44.5,6.6],[-72.5,-45,2.3],[-72,-45,5.8],[-71.5,-45,1.2],[-68.5,-45,7.7],[-68,-45,10.3],[-67.5,-45,10.1],[-67,-45,8.2],[-66.5,-45,2.9],[168.5,-45,4.9],[169,-45,3.7],[170,-45,1.3],[170.5,-45,8.8],[171,-45,32.8],[-73,-45.5,2.8],[-72.5,-45.5,5.7],[-72,-45.5,3.7],[-68.5,-45.5,7.7],[-68,-45.5,10.2],[-67.5,-45.5,10.3],[168,-45.5,1.7],[168.5,-45.5,1.1],[169,-45.5,1.6],[169.5,-45.5,1.4],[170,-45.5,31.8],[170.5,-45.5,80],[-72,-46,1.5],[-69.5,-46,1.2],[-69,-46,1.2],[-68.5,-46,1.2],[-68,-46,1.2],[-67.5,-46,1.2],[167.5,-46,2.4],[168,-46,21],[168.5,-46,7.6],[169,-46,1.8],[169.5,-46,5.4],[170,-46,10.5],[-69.5,-46.5,1.2],[-69,-46.5,1.2],[-68.5,-46.5,1.2],[-68,-46.5,1.2],[-67.5,-46.5,1.2],[-67,-46.5,1.2],[168,-46.5,58],[168.5,-46.5,3.9],[169,-46.5,1.5],[169.5,-46.5,1.1],[-69.5,-47,1.2],[-69,-47,1.2],[-68.5,-47,1.2],[-68,-47,1.2],[-67.5,-47,1.2],[-67,-47,1.2],[-66.5,-47,1.2],[-66,-47,1.2],[-69.5,-47.5,1.2],[-69,-47.5,1.2],[-68.5,-47.5,1.2],[-68,-47.5,1.2],[-67.5,-47.5,1.2],[-67,-47.5,1.2],[-66.5,-47.5,1.2],[-66,-47.5,1.2],[-69.5,-48,1],[-69,-48,1],[-67,-48,1.2],[-66.5,-48,1.2],[-66,-48,1.2],[-75,-48.5,1.2],[-74.5,-48.5,1],[-76,-49,1.8],[-75.5,-49,1.8],[-75,-49,1.8],[-74.5,-49,1.8],[-74,-49,1.8],[-76,-49.5,1.8],[-75.5,-49.5,1.8],[-75,-49.5,1.8],[-74.5,-49.5,1.8],[-74,-49.5,1.8],[-75.5,-50,1.8],[-75,-50,1.8],[-74.5,-50,1.8],[-74,-50,1.8],[-76,-50.5,1.8],[-75.5,-50.5,1.8],[-75,-50.5,1.8],[-74.5,-50.5,1.8],[-74,-50.5,1.8],[-72.5,-50.5,1],[-72,-50.5,1.8],[-71.5,-50.5,1.7],[-71,-50.5,1.6],[-70.5,-50.5,1.6],[-70,-50.5,1.5],[-69.5,-50.5,1.4],[-75.5,-51,1.8],[-75,-51,1.8],[-74.5,-51,1.8],[-74,-51,1.8],[-72.5,-51,1.9],[-72,-51,2.8],[-71.5,-51,2.8],[-71,-51,2.8],[-70.5,-51,2.8],[-70,-51,2.8],[-69.5,-51,2.8],[-69,-51,2.8],[-75.5,-51.5,1.8],[-75,-51.5,1.8],[-74.5,-51.5,1.8],[-74,-51.5,1.8],[-73.5,-51.5,1.8],[-73,-51.5,1.5],[-72.5,-51.5,2.2],[-72,-51.5,2.8],[-71.5,-51.5,2.8],[-71,-51.5,2.8],[-70.5,-51.5,2.8],[-70,-51.5,2.8],[-69.5,-51.5,2.8],[-69,-51.5,2.8],[-75.5,-52,1.8],[-75,-52,1.8],[-74.5,-52,1.8],[-74,-52,1.8],[-73.5,-52,1.8],[-73,-52,1.8],[-72.5,-52,1.8],[-72,-52,1.8],[-71.5,-52,1.8],[-71,-52,1.8],[-70.5,-52,1.8],[-70,-52,2],[-69.5,-52,2.4],[-69,-52,2.7],[-68.5,-52,2.7],[-75,-52.5,1.8],[-74.5,-52.5,1.8],[-74,-52.5,1.8],[-73.5,-52.5,1.8],[-73,-52.5,1.8],[-72.5,-52.5,1.8],[-72,-52.5,1.8],[-71.5,-52.5,1.8],[-71,-52.5,1.8],[-70.5,-52.5,1.1],[-68.5,-52.5,4.7],[-74.5,-53,1.8],[-74,-53,1.8],[-73.5,-53,1.8],[-73,-53,1.8],[-72.5,-53,1.8],[-72,-53,1.8],[-71.5,-53,1.8],[-71,-53,1.8],[-69,-53,1.5],[-68.5,-53,4.7],[-74,-53.5,1.8],[-73.5,-53.5,1.8],[-73,-53.5,1.8],[-72.5,-53.5,1.8],[-72,-53.5,1.8],[-71.5,-53.5,1.8],[-71,-53.5,1.8],[-69,-53.5,1.5],[-68.5,-53.5,4.7],[-68,-53.5,4.7],[-67.5,-53.5,4.7],[-73.5,-54,1.8],[-73,-54,1.8],[-72.5,-54,1.8],[-72,-54,1.5],[-71.5,-54,1.5],[-69,-54,1.2],[-68.5,-54,4.7],[-68,-54,4.7],[-67.5,-54,4.7],[-67,-54,4.7],[-66.5,-54,4.7],[-73.5,-54.5,1.8],[-69,-54.5,1],[-68.5,-54.5,5],[-68,-54.5,5.3],[-67.5,-54.5,5.2],[-67,-54.5,5.3],[-66.5,-54.5,5.3],[-66,-54.5,5.3],[-65.5,-54.5,5.3],[-65,-54.5,5.3],[-64.5,-54.5,5.3],[-64,-54.5,5.3],[-67,-55,5.3],[-66.5,-55,5.3]]")}}]);
//# sourceMappingURL=earth.5787ad38.js.map